ok 2 days to the end of epoch 164. But we'll relay your explanation to hackathon judges
Ah yes, I see the logs now. I wrote the code, but that was before we had the logging facility in native programs
we're calling Program Stake11111111111111111111111111111111111111. instr. `merge`. The checks are inside that solana base program
ok so we've to wait until the end of epoch 165
What methods are you using to check mergability?
This is the field, https://github.com/solana-labs/solana/blob/master/programs/stake/src/stake_state.rs#L470
No. Rewards are paid out on epoch boundaries
It looks like `33FQwAUomJxozTnrzeiDxYNJffWZec72fsGQi9wmda9V` was only activated last epoch (164).  Once rewards are paid out at the end of 165 they should be in sync
this is testnet. do we need to call something on the validators? so they distribute rewards?
we're finishing a project for the hackathon, so we don't have the option to wait an epoch
can we observe that value somehow? do we need to do something? the accounts are more than 2 epochs old
<@!731429096013168642> there is an `observed_credits` field in the stake state that is used for accounting (which rewards have been paid out).  This value must be in sync to prevent burning or inflating rewards.  It should be synchronized on the next epoch boundary
these are the accounts: https://explorer.solana.com/address/DG3xG1TktaRXik8KgXZXBCUipdZb6s7cYoWHUme6FRZK?cluster=testnet & https://explorer.solana.com/address/33FQwAUomJxozTnrzeiDxYNJffWZec72fsGQi9wmda9V?cluster=testnet . We're trying to merge the 1st into the 2nd
what does **Unable to merge due to credits observed mismatch** means and how to solve it?
This is the error, and we can't figure what it means. Is there anyone from the core dev team that can shed some light here?
`Program log: merges stake_info into stake_pool_info
    Program Stake11111111111111111111111111111111111111 invoke [2]
    Checking if destination stake is mergeable
    Checking if source stake is mergeable
    Merging stake accounts
    Unable to merge due to credits observed mismatch
`
we've a deep technical problem trying to **merge** 2 stake-accounts
does exist a TypeScript library providing API of wallet provider? as sol-wallet-adapter only provides  javascript interface, so it's insufficient.
solved it.
thx <@!501570363566587905> !
i dont have signers
how i set signer account if i dont have account instance (sign i login wallet with the adapter) ?
Devnet endpoint is almost dead
Hard to tell by just reading the code above, but the problem is likely that your transaction is malformed in some way. Check all your inputs are defined and that all the signers are set on the transaction.
thanks !
`
private async sendTx(txParam: TransactionInstruction[] | Transaction[], extraSigners?: Account[]) {
    const connection: Connection = this.walletService.con;
    // sol-wallet-adapter
    const wallet = this.walletService.walletController;
    try {
      const { blockhash } = await connection.getRecentBlockhash('max');
      let transaction: Transaction = new Transaction({ feePayer: wallet.publicKey, recentBlockhash: blockhash }).add(...txParam);
      //LMT: add extra signers (fix create-token-account problem)
      if (extraSigners) transaction.partialSign(...extraSigners);
      //LMT: check null signatures
      for (let i = 0; i < transaction.signatures.length; i++) {
        if (!transaction.signatures[i].signature) {
          throw Error(`missing signature for ${transaction.signatures[i].publicKey.toString()}. Check .isSigner=true in tx accounts`)
        }
      }
      transaction = await wallet.signTransaction(transaction);
      this.popoverController.dismiss()
      const rawTransaction = transaction.serialize({ requireAllSignatures: false });
      const txid = await connection.sendRawTransaction(rawTransaction);
      this.toastMessageService.msg.next({ message: 'transaction submitted', segmentClass: 'toastInfo' });
      const confirmTx = await connection.confirmTransaction(txid, 'max');
      this.toastMessageService.msg.next({ message: 'transaction approved', segmentClass: 'toastInfo' });
      console.log(confirmTx, txid)
      this.walletService.currentWalletSubject.next(wallet.publicKey)
    } catch (error) {
      console.error(error);
      this.toastMessageService.msg.next({ message: 'transaction failed', segmentClass: 'toastError' });
    }
  }
`
“`
async delegate(stakeAccount: Account) {
    const connection: Connection = this.walletService.con;
    const authorized = this.walletService.walletController;
    const flipChanceValidator = Math.floor(Math.random() * Math.floor(2));

    let delegation = StakeProgram.delegate({
      stakePubkey: stakeAccount.publicKey,
      authorizedPubkey: authorized.publicKey,
      votePubkey: this.walletService.VALIDATORS_VOTE_ACCOUNTS[flipChanceValidator],
    });

    this.sendTx([delegation]);
  }
“`
i am assuming this is because i dont sign my account as signer
but i dont have account instance since i login a wallet with the sol-wallet-adapter, which return only publickey
i am trying to use sol-wallet-adapter to sign StakeProgram.delegate tx.
but its fail on
What's your question?
Use the `solana-keygen grind` command. Looks like there's some guides online, e.g., https://smith-mcf.medium.com/solana-vanity-address-using-gpus-5a68ad94d1d4.
guys,  i am having issue with sign a delegate tx with sol-wallet-adapter.
does any 1 have exp with it?
otherwise i won't see my logs? okay thank you i will try ❤️
Make sure to pass in the address when using `solana logs <your-program-address>`.
I'd recommend reading https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses, if you haven't already.
Thank you, but what's the logic behind using a derived address? I mean, is it safe? And why can't I sign It with the program itself?
Use a program derived address.
Nope not currently. https://github.com/solana-labs/solana/issues/15559
Can I increase the 200000 gas limit when running solana-test-validator?
How to self sign a invoke_signed transaction inside a program? I just want to sign It with the program itself
Yo guys I'd like to mint a token, I found everything i needed in the docs and various github repos (thx btw 🙂 ) and I found in the token registry that there are spl address like this one :
 ```json
  {
    "tokenSymbol": "MAPS",
    "mintAddress": "MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb",
}
```
How could I mint a token with the symbol in the prefix like above pls ? I'm using spl-token and solana-cli, thx
Hey guys I'm currently debugging the Hello World example and try to view the log messages of the rust programm. When I run "solana log" or "solana-test-validator --log" (before that I also did the EXPORT RUST_LOG) I don't get any logs from the msg! function in the console. I already used the search function bud nothing helps. Did i missed something?
thanks jon
Thanks I'll study about wrapping so
this way, the user can `approve` your program / program address to take X amount of SOL, knowing that the program won't be able to take more than that
your best option is to wrap the SOL account in an SPL token account and then use the `approve` instruction
i can hard code the fee onto the webapp but the user would just be 'trusting' me, and that's not the idea behind blockchains
Yes but, doesn't this mechanism show the payed fee to the user only after the transaction succeeded? I want the user to get a fully transaparent knowledge of what he is going to pay
<@!633016166838829066> From a similar question from <@!491788881822220313> 
Is there a way that I can get an wallet holder to pay me lamports for each execution of my program?
yeah you can have them create a temporary funded account which is assigned to your program. Then you can drain lamports as a fee
For example: a program that creates an account with 'abcd' stored in the data and I want to get payed 1 SOL in my private wallet for that operation
Is there a way inside a program to ask for X sol in order to complete the transaction? Like asking for a fee for using the program, in a way that the fee is fully transparent so the user can choose whether the fee is ok for him or not before accepting. I don't want the code of course, but the logic behind showing a user an 'hardcoded' fee that is inside the program, like a 'simulate transaction' that tells the cost of the transaction + the fee i'm asking
Greetings all... I've a n00b question: Is there a way to determine program lamport costs to execute various instructions? I'm also new to Rust so I'm sure I've overdone things to compensate for lack of finesse...
that's certainly one way of doing it -- thanks for the suggestion!
There definitely is, but I'm not sure how to get data about it... there's `solana genesis-hash` which gives the first hash of the chain, but i'm not sure what to do with it. maybe <@!466984915376799748> or someone else can help more?
You could try by creating a github repo dedicated to bounties and jobs no?
awesome, i think we're still figuring out the best way to do it to avoid spamming, so watch this space 🙂
I didn't ask on the hackaton because I know it is ending today, and because the project is going to be a long-term one, I think that a jobs channel could be a very great idea
I didn't realize that. Thanks!
You're allowed to do transfers to self, and now that you're mentioning it, I wonder if serum is using it for a particular reason.  best to ask about that in their discord to be totally sure though
you can try the <#805977964822134835> , but it might be a bit late for that considering the deadline is today 😕 we're thinking about creating a jobs channel which might be a better resource.  what do you think?
If a program owns an account, it can directly deduct / credit lamports without using the transfer instruction, see https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/processor.rs#L564 -- as long as the total number of lamports doesn't change (and maybe some other conditions that i'm not remembering) you can do anything
But even a program can't transfer lamports from an account with data because it would have to invoke the transfer instruction, correct? If I want to keep the data around for a while, I'd like to put more lamports on it to make it rent-exempt. But when I decide I don't need it anymore, I want to get the lamports back. There doesn't seem to be a way to do it. And there doesn't seem to be a way to delete the account either.
Is there a genesis state for Solana network? Any initial balances for addresses ?
Finally i found a TX where from!=to but it took some efforts from me. Generally it is not normal that almost all transfers to self. Is it a bug or feature?
Best place to find and build a team for a project?
Typically, the model is to have your program contain a "CloseAccount" instruction which refunds the lamports in a data account, as done in spl-token.  The system program doesn't allow this, and to be honest I'm not sure why
i parsed several block in random , they have many system.transfer and all are between same accs
Are all of the transactions serum-related? it might have to do with a part of their implementation that I'm not familiar with
I seeing this in all transactions in explorer in RPC... say https://explorer.solana.com/tx/2quTaDxvAZ4m4w7eG4LNkHgGswf8i4jArMmnDHQfmd4J75r6CxDzXg2mGLKH7JswwLFmCgUWbPPZj64xAtDAvxMd. I have not found ANY transaction which does between different accounts
Hello. It seems that transfer from an account with data is not allowed:
`solana_runtime::system_instruction_processor] Transfer: `from` must not carry data`
Why is that? Does this mean that any lamports transferred to an account with data are lost forever?
That seems a bit strange, where are you seeing this?  transfers are usually meant for different accounts
What do you mean by pausable exactly?  Once a program is deployed, it can be called at any time.  If you wanted to stop it from executing instructions, you have a couple of options:
* create a "global state" account that must be passed in to all instructions which can give an `executable` status
* use the upgradable loader, and just upload a version of the program that does nothing on the `processor` function
Why all system transfer events have same source and destination... this is transfer, right? Why it does transfer to the same account?
I run the followin SolGSN git code:

https://github.com/princesinha19/solgsn

But, I got the following error whenever I run the command "npm run build":

error: failed to run `rustc` to learn about target-specific information
I don't think there is a single blockchain implementing a 'sleep' functionality during a transaction, but I'm pretty sure that depending on the result you want there is a workaround, if you want to explain what you want to build
Is there any way to make smart contract pausable in solana?
Thanks mate!
haha get some sleep, good luck wrapping up your project!
A problem for tomorrow... 15hrs of bashing away at this project today LOL
yeah
Guessing one of my inputs for swap still isn't quite right
nice, you'll probably want to check out the swap code to see what accounts are used in the transfer
One step closer.
`Program log: Instruction: Swap
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [3]
    Program log: Instruction: Transfer
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 3595 of 161266 compute units
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [3]
    Program log: Instruction: MintTo
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 3012 of 123272 compute units
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [3]
    Program log: Instruction: Transfer
    Program log: Error: InvalidAccountData`
looks like log messages consume a LOT
wow ok
of the total 200k
yeah it's related. That line indicates that there were only 37k compute units remaining when the swap program was started
is that the function that would log these kinds of messages ` Program SwaPpA9LAaLfeLi3a68M4DjnLqgtticKg6CnyNwgAC8 consumed 37887 of 37887 compute units`
but the idea is that solana programs should be pretty optimized to be as fast as possible
`sol_log_compute_units` is your friend here
possible that the swap program is using a fair amount too
yeah, well string formatting uses quite a bit surprisingly and you have quite a bit
little worried if it struggles with that small of a function..
https://pastebin.com/XkM5mXFM
still wouldn't think that would consume so much
Ok yeh got a bunch of those left in there from the debugging earlier
yes they do
Do `msg` calls count?
I'm also surprised you're hitting it
you can use it before and after calls
yes, as discussed a little earlier, there is a max compute limit per instruction (and it includes invoked instructions). I recommend using https://docs.rs/solana-program/1.5.11/solana_program/log/fn.sol_log_compute_units.html to figure out what's using all the instructions
my program instruction isn't very complex so I'm a little confused
Except I hit this error for first time:  `Program failed to complete: exceeded maximum number of instructions allowed (37887) at instruction #4954`
<@!466984915376799748> I almost got it working
Thanks!
Also the error log message `<ADDRESS> writable privilege escalated` makes more sense - I'll know what to look for next time I hit that
Nah you actually did help! Logging all the accounts and going back through and checking few things did the trick.
sweet, sorry didn't help much but happy you're unblocked
we should have more benchmarks to show what 200k compute units looks like, agreed. It tends to be heavy math or inefficient data handling
At least account/signer issue is sorted. Now I prob just got some b0rked input values
Getting closer! `Error: Given pool token amount results in zero trading tokens`
yeah it will be more limiting but the reasoning is that we want high throughput and since fees are still fixed not matter how much compute you use, we have to have a limit to prevent abuse
what is the reasoning for that? seems more limiting with that change? curious if anyone has done some kind of benchmark to show what 200k compute units equates to in code.
so you can split your logic into multiple instructions
can't be adjusted for your program, it's a runtime setting
it's limited per instruction.. it should be limited per transaction but isn't yet
or in total
that's limited / transaction ?
Hi I am wondering is it common for the program to use  all 200,000 compute unit? And is there anyway to increase it?
🙂
a new error is always good!
one step forward one step back haha
yeaaah `Instruction references an unknown account 75oSKgHQT5fVj9B3wPxmJpmeCWCFU4FiJMB38HRKpbdg`
fyi the errors here will be a lot clearer in v1.6
it's just the program id's that aren't required
hope so too! if didn't pass all account info's yet, you will hit a missing account error
🙏  it will work now..
🙄 losing my mind
ahh, I missed that too.
I wasn't getting STEP_PROGRAM_ID so the entire list in the program was shifted by 1
Ah
Looks like something is mixed up. authority_info and swap_source_info are flipped I think
https://pastebin.com/gvugsBtk
I'll add msg logs for all the accounts being passed in and rerun it
https://github.com/solana-labs/solana-program-library/blob/833ea9324d129b340b873f636d795daf85acc61f/token-swap/program/src/instruction.rs#L551
so I'm a little confused what's going on
but the thing is, swap shouldn't require the authority to be writable
ok
yeah
That `writable` isn't set on the account or?
it means the account was passed as read-only but you tried to use it as writable
What does that indicate usually?
`75oSKgHQT5fVj9B3wPxmJpmeCWCFU4FiJMB38HRKpbdg's writable privilege escalated`
https://docs.rs/solana-program/1.5.11/solana_program/pubkey/struct.Pubkey.html#method.log
maybe add some logging for the public keys you're using to double check
but idk, this doesn't really line up with the code you shared
that indicates to me that it's not failing on `swap`
That is the mint authority for the pool token iirc
ah well that's helpful, which account is `75oSKgHQT5fVj9B3wPxmJpmeCWCFU4FiJMB38HRKpbdg`
That's all the info it spat out
`75oSKgHQT5fVj9B3wPxmJpmeCWCFU4FiJMB38HRKpbdg's writable privilege escalated
Program 4yHM7vzQ1kWqeCstzEnjkPZGwrBS4EstrPs2Ekpfj4m3 consumed 13542 of 200000 compute units
Program 4yHM7vzQ1kWqeCstzEnjkPZGwrBS4EstrPs2Ekpfj4m3 failed: Cross-program invocation with unauthorized signer or writable account`
hmm yeah I would be expecting you to hit `Instruction references an unknown account`
haha
try adding the other account infos for now, I'm going to check the runtime if it would return `Cross-program invocation with unauthorized signer or writable account` if not present
sledgehammer time
I'm going to add all the accounts to the invoke and try that now
lol I think I'm retracing your steps
hehe yeah I looked over the Swap instruction comments so many times trying to see what I could have missed 🤣
3. `[writable]` token_(A|B) SOURCE Account, amount is transferable by user transfer authority,
that authority doesn't need to be a signer
ah nope 😅
it corresponds to this:
```
        let authority_info = next_account_info(account_info_iter)?;
```
believe this should be a signer
I think this actually might be the real issue you're hitting:
```
        { pubkey: mintAuthority, isSigner: false, isWritable: false },
```
they don't all have to be signers, but should be passed to the invoke function if I'm not mistaken
Interesting. All of them need to be signers? It's confusing to know what is required because in other invoke calls, I didn't need to pass every account
They are more or less the same thing. program_token_account = TOKEN_ACCOUNT_PDA (from client side)
another thing, you will need to pass *all* account infos here:
```
        msg!("Calling the token swap program");
        invoke_signed(
            &swap_ix,
            &[
                deployer.clone(),
                program_token_account.clone()
            ],
            &[&signer_seeds]
        )?;
```
<@!447814520224743424> what's the difference between your `pda_account` and `program_token_account`?
nope, that's not it
because you use it as the authority and the source token account and the source token account needs to be writable
I think it might be due to not setting this key as writable:
```
        { pubkey: ourAccount.publicKey, isSigner: true, isWritable: false },
```
I'm hitting the `Cross-program invocation with unauthorized signer or writable account` error and I'm lost on what I'm missing
And this is the client code calling it: https://pastebin.com/n9gEjPxY
Hey <@!466984915376799748> here is the program instruction: https://pastebin.com/nDC5Qifi
I don't know what you are trying to do but for development i used localnet, so you can build things with ease.
The fact that https://api.mainnet-beta.solana.com/ is unstable should not be involved in a design
the node need to be queried
I don't know how you can reduce requests here, you essentially don't have the data locally
This has been discussed before, spin up your own node can resolve the problems.
my problem is that I want to resolve the different token addresses of the owner address locally instead of getting these addresses through rpc calls.
this will cause a lot of rpc calls
i currently use "https://api.mainnet-beta.solana.com"
this node is very unstable, sometimes normal, and sometimes various errors occur, so I want to reduce unnecessary rpc requests.
So your queston is not "how to find tokens account of mint Y for owner X?".
Your question is, "given a block, how to extract this exact address?" What block are we talking about? Are you inside the block that created this token account?
so if you parse the transactions in the block, this will cause a lot of rpc requests.
yes, so if you requirement is exactly this sentence, do connection.getTokenAccountsByOwner(new PublicKey("22WLjexFrKaBkAjn3XES8gYGhR4r9oXXaPwPzSCySoj5"), {
mint: { new PublicKey("SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt") } })
i am not very clear about the meaning of this passage.
my purpose is to get the token "Serum" address of "9qYxzPhR7p9V6eBaq5YwPxv9TKrNmyuzUX77K19DMZdu" through the owner address "22WLjexFrKaBkAjn3XES8gYGhR4r9oXXaPwPzSCySoj5"
So you don't want all the token account addresses for a specific owner. Your code example is to get the associated token address for a specific mint
because I want to traverse the transactions in the block and parse them, 
passing rpc "getTokenAccountsByOwner" will cause a lot of additional requests
you should see the address above
Why don't you call https://solana-labs.github.io/solana-web3.js/class/src/connection.js~Connection.html#instance-method-getTokenAccountsByOwner
and you filter by the serum mint?
This might just be a token account that isn't the associated token account
Ah we already discussed this a while ago
What do you get instead?
i follow this document "https://spl.solana.com/associated-token-account",
unable to generate the desired address.
how can I find its "Serum" address "9qYxzPhR7p9V6eBaq5YwPxv9TKrNmyuzUX77K19DMZdu" through the owner address "22WLjexFrKaBkAjn3XES8gYGhR4r9oXXaPwPzSCySoj5"?
Ahhh that makes sense. I was able to download the binary from the account data
Passing program ID as account seemed to get around that issue now I'm hitting `Cross-program invocation with unauthorized signer or writable account` 🤔
<@555204910321369099> `solana program dump` only works with upgradeable programs, which that one is not.  I'll add support for dumping non-upgradeable programs
This is how I'm calling approve:
`let approve_ix = spl_token::instruction::approve(
            &token_program.key,
            &program_token_account.key,
            &token_swap_program.key,
            &program_id,
            &[],
            1,
        ).unwrap();`
Do I need to pass it's own program ID as an account?
I'm trying to use `spl_token::instruction::approve` within my program to approve transfer of tokens from an account it owns, but hitting an issue `Instruction references an unknown account <PROGRAM ID HERE>`
<@!419334293949644801> - hey <@!267610913773715456> would be a good person from the Solana side to chat with first
Hi, apologies in advance for reaching out through the dev channel. I'm part of the Bridge Mutual team and we're looking to build on Solana. Normally we'd ask a mutual connection to make an intro but we figured it would take too long to figure out who knows someone on the Solana core team and then wait for them to intro. Could someone on the <@&494585383116341259> please tell me who to connect with via Telegram or Discord to discuss working together? Thank you in advance. 🙂
Hello, when deploying to the test net I get the following error ```Deploying program failed: Error processing Instruction 1: custom program error: 0x1
``` I was wondering how I could go about debugging this?
though a toy example in comparison
too bad because the wallet portion of dapps-scaffold works fine and connects to the devnet and displays it. Perhaps if you want a working wallet example that one might help you instead <@!731429096013168642>
Thanks! yes, that one works for me and tests pass. I guess https://github.com/solana-labs/dapp-scaffold is just broken currently sadly but I can continue from here instead
the docs are in a PR: https://github.com/solana-labs/solana-program-library/pull/1277
that program has integration tests, and they do work with `cargo test-bpf`
yep. Here: https://github.com/solana-labs/solana-program-library/tree/master/stake-pool
<@!731429096013168642> the one in solana-program-library I assume? Hm, ill try maybe the dapps-scaffold one is just broken
Hello, is devnet down?
is the sol-wallet-adapter example updated? this is what I get on a new installation
I've successfully used `cargo test-bpf` to do integration tests. we've started from the SPL-stake-pool codebase
I have rust, cargo everything working. I can work with e.g. the hellowrold app (builds with rust and works), the command line solana tools etc. I can build the dapp-scaffold but get errors on cargo test - with regards to `librocksdb-sys v6.11.4`. 
Is everything in the cargo etc build process for dapp-scaffold there? Or are they not usable yet and I'm wasting my time trying to figure out what's wrong on my machine? Because the restbuild successfully, and it does say it compiles successfully librocksdb at the start
ok, I guess this is https://github.com/project-serum/sol-wallet-adapter/blob/master/example/src/App.js
I need to create a token-account from a webapp, and sign the tx with sollet.io wallet
is there an example of a simple web app integrated with sollet.io  ?
I managed to resolve this.

One of the issues was caused by bad data. I was able to debug the rest of the issues when I got the bad data fixed
guys, does any 1 here sign a create stakeaccount tx with sol-wallet-adapter plugin?
Let's go to <#694949720644124762>
Can you help me set it up? I haven't done anything regards it
CLI is the only way I know for a fact supports it
Hmm, odd that they didn't settle them out to native SOL
Don't know what to do now.
I didn't want them wrapped, I just bought SOL/USD on bonfida and settling funds it gave me wrapped SOL
AFAIK most webui's transparently wrap/unwrap SOL when they need it in SPL Token form
Where did you wrap them?
the one on sol-wallet-adapter is broken
is there a working example of making a tx with sol-wallet-adapter and web3.js?
Is there any way to set up a faucet for an SPL on devnet? Have a mint that test users will need a balance of in order to interact with our product
ah sorry got no SOL on mainnet
mainnet
which network? test or dev?
Can someone please send a negligible amount of SOL token on this address - FCUoM3N513fs5FDQRkrh7BMgHYz9z4Z4jQDvB2EzJiaK ?? I'm testing my code which sends funds from my address to another.
Huh, thanks anyway.
Not aware of a UI online sorry
is it possible to do somewhere online? with out cli
You can use the spl-token cli and do `spl-token unwrap <TOKEN ACCOUNT>`
Where can I unwrapp SOL ?
https://github.com/VishalVikramSingh/solana/blob/main/test.js
please see this, I'm trying to send funds from my account to another using this
getting this error
wallet.signTransaction is not a function
<@794449743253995530> you can use the array of numbers in your keypair.json

new Account ([.....])
or should I just store pubkey as a u8:32 in my structs?
How can Borsh be used to handle Pubkey type?
Also I tried this, I get the error, "wallet.signTransaction is not a function".
Understood. But I need to import my already created account which I had created using "solana-keygen new --outfile ./my-keypair-1.json".

I have my mnemonic with me. How do I create an instance of 'Account' using my already existent seed?
(in terms of signers needed)
Is there any easy way of splitting up a transaction if it is too large?
You will need to transfer some tokens to the new address before you send from it to the destination address
Wallet is an instance of `Account`

You can create one with 

const wallet = new Account ();
https://github.com/project-serum/spl-token-wallet/blob/5ca3e3d90366be74383ec04aaa4cfbdb3ef77e22/src/utils/tokens/index.js#L102

Hi all, I'm stuck at line 102. I can't seem to find the initialization of the 'wallet' object param wrt @solana/web3.js. Please help. 

I'm trying to send SOL funds from one address to another. TIA
Hi, I can't find how to initialize 'wallet' object at line 77. What am I missing?
^^ if yes, I am getting a signature mismatch and I think the error will be in the logic below this.

If no, then, maybe I will need to get the seed from the vote_data_address and the voter_address
I want the person who initiate the vote to add voters who will be able to vote.

So, the vote_creator should not have access to voter's key.

Does it make sense to use 
`const voterDataAccountKey = await PublicKey.createWithSeed(voterAccount.publicKey, seed, sol.getProgramPublicKey())`

Where the `fromPublicKey` is the address of a voter (not the vote creator)?
And now, when I switched to

```
let createTransaction = new Transaction().add( SystemProgram.createAccountWithSeed({
            fromPubkey: userAccount.publicKey,       // payer
            lamports: rentExempt,                // funds to deposit on the new account
            space: 2,                        // space required in bytes

            basePubkey: voterAccount.publicKey,       // derive from... must be signer
            seed,                                   // derive from...
            programId: sol.getProgramPublicKey(),                 // derive from... and will be owner of account

            newAccountPubkey: voterDataAccountKey,
        }))
```
I get `Signature verification failed`
Yes. It does not.
<@!584061031702200340> - `fromPubkey: voterAccount.publicKey,       // payer`  <-- this account is probably not a system account with enough SOL when the `createAccountWithSeed` instruction executes


///////////////////////////////////////////////////////////////////////////////////////////////

Ah ok, Thanks <@!445425471027544095>
v2 adds the logging described at https://spl.solana.com/memo#logs, which can be used to monitor signers (using an RPC endpoint that you trust not to be lying to you)
Hi everyone, I just noticed "Memo Program v2" in explorer.solana.com , Couldn't find any docs on it...and there is no mentioning of it here in discord either..
What features does it bring as compared to v1?
Quick question. In Rust (using Solana SDK or SPL token library), what's the equivalent of the JS `connection.getTokenAccountsByOwner()` method?
And yes, everything stored on accounts
I am currently working on a NFT ecosystem, It's a bit complicated on Solana, but if you can ideate a good logic, on Solana is ways better cause of low feed and low data storage cost
I am not sure about the work being done on an NFT spec. Maybe some other people are better informed here ? Happy to chat whenever I know more (am still pretty much a Solana noob). <@!712675334176243746>
Oh I see, that's a big difference. Do you know if any work is being done on that front? It would be nice to stay informed in those discussions <@!306185268879425538>
Therefore Metadata will be stored in Accounts.
A big difference with Ethereum being that state is held in accounts, not in the program itself.
<@!712675334176243746> Afaik, there is no proper ERC-721 yet. There is something akin to ERC-20 though: SPL tokens.
So I guess my question is: Is there some sort of equivalents to ERC-721's in Solana yet?
Hi! I'm new to Solana and I was wondering looking for resource on how NFTs work in the network. I saw there is a brief guide on NFTs on the Token Program docs, but it didn't mention anything about metadata for the token...
is there anywhere i can see the size of active devs community? any specific number?
is sb here with ledger that wants to test my extension ?
OK, found the solution: --snapshot-interval-slots 1000  --accounts-hash-slots 1000
This is just a cache, or this db is needed to run a node? Can i limit the size used by it ?
what can i do around this? I have no more disk...
Hello! I have a problem today of running out of space on disk for node we use only for dev purposes. And. the main reason is the growth of accounts db:
i see you have wormhole bridge, are there any examples i could check that would work with eth and solana as a bridge for nft?
let's say I use xdai, which has superb tooling for eth, works with metamask etc as well etc. if i wanted to mint NFT on solana, how would that cross chain interoperability work?
Is there a difference between clusters? (aka: any advantages or anything?), or if there's a page telling the differences that you could link please and thank you
It worked! Thank you, I didn't realise this cluster thing.
here's a testnet transaction you can try confirming: https://explorer.solana.com/tx/24abYmeZDKnPazTYbdpHDxjPr7zUfY6kj91Y6zd65RcBNxaSBRQjzawXXnmJVi4YgV1ZKP95Td34SsBsjbx61y9k?cluster=testnet
no worries, all good now?
Excuse me lol I just started using it very recently and the documentation wasn't very helpful to me, I appreciate your help though
the `url` is http://testnet.solana.com:8899
are you using the correct cluster?
you said before that you're trying to get the transaction from the testnet, but this is a mainnet transaction
Here for example: https://explorer.solana.com/tx/4XKEbgAXZzxDkkEXudz4APrifwWLYHUfpRh3oPGdBoJbSsQRtez3ktiDSf1Ghc2H7MNybqAub4dck5a2vZrNZpTQ (a transaction I found from KIN's history), it says finalized.
When I use the signature in above's code, it returns:
```json
{
  "jsonrpc": "2.0",
  "result": null,
  "id": "97af33e0-15fe-46d1-9dc7-00e58b4c5375"
}
```
try getting a transaction that's already confirmed and see if that works
I believe it is, as written on Solana Explorer
maybe the transaction isn't ~~confirmed~~ finalized* yet?
correct
Hello, I'm using **solana-web3.js**, trying to get transaction info as in:
```ts
client = new Web3.Connection(url);
this.client.getConfirmedTransaction(hash);
``` Where `hash` is the transaction signature, and it is returning `null` from testnet, any idea what I'm doing wrong?
quick question first signer is always fee payer ?
thanks
Code's here, https://github.com/solana-labs/solana/blob/master/sdk/program/src/pubkey.rs#L158
guys specifically how an ATA address is created from account address and token mint address? SHA256 or sth? And is there possibility to create more than one USDT addresses from a root account?
thank you!
There are some tricks for that in some of the validator channels
It will be faster if you wait for a snapshot to complete before restarting
Yes
then restart my node right?
`solana-install init vX.Y.Z` to  upgrade
You can upgrade the release while it's running, then restart
is there build-in command? or I need to do it manually ( stop node => upgrade => start node)
Yes there will be some loss of voting rewards during that time
Not with zero downtime, but with minimal downtime
can i upgrade my validator solana version without downtime?
if the node is a stake-delegated node, the downtime cause any loss
https://github.com/solana-labs/solana/issues/15797
why the command `solana-install update` don't upgrade my solana version from 1.5.13 to 1.5.14
let me try this first
I don't think it should take that long to process a block.  Do you know what step is slow?
because sol's block's generation is very fast
but one issue is that , when I handle over one block , sol's mainet may have generate 3 new blocks
ok , I should store some index to provide the basic data
I think you'd want to store only the pertinent info on your backend and feed that to the clients.  Your RPC nodes will be overwhelmed otherwise
some blocks return 1.1M data from this api getConfirmedBlock, It may use some time to receive this data, . I am developing wallet , so I need to get all the transactions in one block, to see that if where is any transaction is our users transaction
It's all or nothing ATM.  Is ignoring the extra info not an option?
<@!585868308419444749>
the api getConfirmedBlock return too much data including the : reward information , what if I just need transaction data in the specific block ?
ok I see that , its the type field
Use the `jsonParsed` encoding.  Part of the information you're looking for is in the data field, which will need parsed first

how to judge  a transation is sol transfer, or just a vote action?
this data is from the api : getConfirmedTransaction
cc/ <@!224643918539653120> ☝️
The work was completed 2 months ago and it doesn't seem like anyone has looked at it
Has anyone tested this bounty? https://gitcoin.co/issue/DimensionDev/Maskbook/1722
Amazing group will buy more
wish I could send you a virtual beer that you could taste
heroes I tell you!
Heroes!
Thank you both
Ideally sollet wouldn't even show you the SPL Token addresses by default.  Still early days and compatibility teething pains unfortunately
I had way to many sol adresses saved created a new one with incorrect adress stupid...
Enough to seriously consider a "withdraw SOL" instruction for SPL Token...
ok ill give it a try now TY
It will.  I've helped about five people with the same issue
As you prefer 🙂 That should work as well
then send ray back To correct adress
Ok thanks ill send the ray back to FTX seems easier delete ray and Hopefully the sol shows up
Yes, I think this will work for you:
- Open a private browser window, and go to sollet.io to set up a new wallet
- Add Ray to the new wallet; you may need to send a little SOL to your new wallet to do this
- Transfer all the Ray from your current wallet to the new wallet
- In your current account, "Delete" your Ray token. <-- this should transfer your excess SOL back to your main wallet address
- Then you can re-add Ray to your current account and transfer the Ray back in
You should be able to send all of the RAY to another wallet.  Then sollet will show you a "delete" button on the RAY account. When you click it, the account will be delete from the chain and the SOL balance transfered to you main Sollet address.  You can then send the RAY back and the account will be recreated
Much thanks
Yep, got it. I'm trying the steps in sollet, j/s
that was the mistake
So I sent the Sol from FTX to Ray in my sollet.io
You don't need to send it back to FTX; you can send it to another account you control.
yes
Do you mean sollet.io?
It will show up in my main sol adress?
So you saying if I send my ray back to FTX
so i sent the sol to ray though?
I am using SOL wallet
Which wallet are you using? If you send your RAY to a different account, you should be able to close the account with the excess SOL and it will be refunded to your main wallet address.
https://explorer.solana.com/tx/5wgpwa58HBExWLcSUmAKjrYxiaT52VQDry2UnSggGSS4sxZvBumEGUw1xMynaszT2qEL2jAuvTEoggtjNkEzL2cH Copy of transaction
I  have the private key of the wallet address I have sent the funds to
As in restore sol  or something as the Sol tokens are there
I just cant get access
in the blockchain the tokens are in my wallet
I have accidently sent Sol to My RAY adress on the Sol wallet.
Thank you so much, <@!213083996689661953>. Great help
Yep!
If by "all these accounts" you mean the regular SOL accounts, yes exactly, you've got it!
Am I getting this correctly?
Got it! So the hierarchy is token accounts are owned by regular SOL accounts (so they can hold SOL + SPL Tokens via Token accounts). Now all these accounts are also owned, programmatically, by the System Program
Right, the account `JBpj7yp4Afvb71TmanVwJZXGeX4kqbGFvjCFCRo3EbTM` is programmatically owned by the System Program; it's an account that only holds SOL, and is probably someone's main wallet address
https://explorer.solana.com/address/JBpj7yp4Afvb71TmanVwJZXGeX4kqbGFvjCFCRo3EbTM like so
so this "owner" is once again "owned" by the System Program. Does that mean only that this is an SPL Token Account?
right
In this account's state is data that says it is of USDC token type (`'mint': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'`), and designates an owner that may make spl-token transfers from this account, if signed: `'owner': 'JBpj7yp4Afvb71TmanVwJZXGeX4kqbGFvjCFCRo3EbTM'`
```
{'account': {'data': {'parsed': {'info': {'isNative': False, 'mint': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v', 'owner': 'JBpj7yp4Afvb71TmanVwJZXGeX4kqbGFvjCFCRo3EbTM', 'state': 'initialized', 'tokenAmount': {'amount': '0', 'decimals': 6, 'uiAmount': 0.0, 'uiAmountString': '0'}}, 'type': 'account'}, 'program': 'spl-token', 'space': 165}, 'executable': False, 'lamports': 2039280, 'owner': 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA', 'rentEpoch': 158}, 'pubkey': '7n5FB3AyzLfS4rpeq6XRUYGBCs2gjBBUcuLse5nGC8PX'}
```
This account is an spl-token account, it is programmatically owned by the spl-token program, `TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA`, meaning only spl-token instructions may change its data.
Let's look at one of your examples:
Ah, perhaps the confusion is coming from overload on the term "owner"
Regular = owned by people
Let me see if I'm getting this right -- The owner being "System Program" does not mean that this is not a regular account?
You might find this documentation helpful: https://spl.solana.com/token#wallet-integration-guide
In most cases, the owner is a user's main wallet address, a System Account. Certainly token accounts created within sollet.io should be included
and does this response not include regular accounts(eg. like the ones from sollet.io)
why is that the case?
Oh! My mistake. Yes, the token-owner accounts will mostly be System accounts.
yep!
That looks fine. Oh, did you mean that the token-owner accounts (eg `JBpj7yp4Afvb71TmanVwJZXGeX4kqbGFvjCFCRo3EbTM`) are themselves System accounts?
https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
Sample response for the USDC token
https://pastebin.com/HuX67LYf
Hmm, doesn't sound right. Can you share your request/response?
All the accounts seemed to be owned by System Program. Is that right?
Yes, there is an example getting all accounts of a certain token by mint address via RPC: https://spl.solana.com/token#finding-all-token-accounts-for-a-specific-mint
can we get the balances of all accounts of a certain token using the mint address?
nice
<@!149990576572334080> fyi: https://github.com/solana-labs/solana/pull/15806
tests should be atomic
your previous tests may corrupt state
Why would you want to redeploy a contract/accounts between different tests, to reset state ?
so testing is done on one instance
for me only downside right now there is no easy way to redeploy contracts for tests
Hi all, I am interested in broader opinions about Anchor ? <@!149990576572334080> suggested it is definitely the way to go. Any cons ? (obvs maturity aside)
anyone?


///////////////////////////////////////////////////////////////////////////////////////////////

how do i mint token with 1 decimal?
Hi Solana developer, I am wondering if someone could take a look at this PR and let me know why the Github action is failing?

https://github.com/solana-labs/solana-program-library/pull/1444

It fails on Post Run actions/cache@v2 and Post Run actions/checkout@v2. Any idea? I spent almost my whole day trying to get the CI passing, it will be great if some one can take a look. Thanks!
Simple `top` and `kill pid` did the trick
<@!287924636493152257> Have had something similar happening albeit with a different error msg.  My issue was that a dev node kept running in the bg, despite my test crashing. Worth having a look maybe.
I've never run into the issue locally
Oh I missed that part. I will let one of the devs answer. I actually am not running my own node. I could only speculate <@!306185268879425538>
<@!345046176149536769> This is allegedly on a local rpc why would a local node be behind ?
but i believe it is recommended for you to run your own node
things have gotten better recently
if they are behind/overloaded/etc
sometimes the rpc servers may not be able to give you a blockhash
In general no, although I'm sure somebody could try to argue something.   The Associated Token Account standard was developed a couple months after early adopter wallets and others added initial SPL Token support so that's why some of the wallets currently display the token accounts instead of the user's primary address
Hi I am wondering what is the common cause of `Transaction simulation failed: Blockhash not found` ? I am trying to use Javascript to load a program into a local cluster by call `BpfLoader.load` but it keeps giving me error.
Well, let's see here https://github.com/project-serum/spl-token-wallet/issues/142
Oh the UI already gives a warning "Destination address mint does not match", but i guess that isn't enough
<@!445425471027544095> is there an acceptable use case for a regular user in which he would like to send SOL to a token account?
Yep, that would be nice for sure.
Well that can be fixed easily, also we can leave some settings to make it appear for advanced user. I like to think that sollet could be trivial then unfold through settings.
i wish sollet wasn’t so forthcoming with token addresses for example.  It’s a really big footgun for users
<@456226577798135808> - yes they should.   We’re actively trying to get all wallets that show the token account addresses to either stop, or bury them under a hard to find an advanced user area
<@!347689664855015424> I cannot talk in <#428295358100013069> but "Introducing ✨ https://www.solsaver.xyz/ ✨ If you send your SOL to a token account address instead of your main SOL account by accident, this app helps you get it back"
Should wallet prevent sending SOL to a token account address to start with?
which is fun
I have built a thing that has been able to upgrade itself
the last 20% of this has been very interesting
it's been very helpful
Thanks for the help guys, appreciate the rubber ducking here
ok, i'll give both of the ideas a whirl, both yours and Vine's, see what pans out
It's in the account infos iterator, you decide where
Somewhere, in the data structure, like in the header or account keys
So because they have signed this message, their pubkey is now in the message
Stuff their pubkey in the PDA and you can even resolve malicious config accounts
If they haven't signed that instruction, you don't issue their proxy instruction
So you make them sign _that_ instruction
i store for later
they give me a serialized message with one instruction in it
yeah
The caller issues you an instruction that signals you need to execute some other instruction in their stead, right?
Oh, I'm not sure I understand. Could you elaborate a little? I'm still new to the ecosystem. 🙂
I mean the instruction to your program
I'm planning to make the PDA a seed of (program-mint)
actually the PDA is the authority
Make them sign the execute instruction
Sure, idea is same
You could add the authority pubkey as a seed to the PDA
no need to check them all
Every PDA can only ever have one Config account, every PDA is only ever tied to one Program
hmm, just assume account[0] or something is that account
if it doesnt work then I know they didnt
if it "works" then I know they tried to screw me
so I can attemtp to initialize every single account they pass me as one of these Config accounts
it just occurred to me that then that account always exists
Only the program can write into the PDA account, so you can trust the data
I've created this Config account attached to the PDA
actually I've kind of already done that
yeah
you'd probably write the authority address into the PDA account in an "initialize" instruction, then check that the authority address signed a later instruction
arbitrary commands are fun
check their command account list, I mean
that's the problem I'm trying to solve here
i dont have that in memory at the time
but what I cant check is fi they are using some OTHER authority for some OTHER app
and I can certainly check their commands to make sure they arent using the authority I expect them to be using, that's easy
yeah I guess my thing is I've got these potentially very nefarious users here who can give me arbitrary commands
just like if passed in an ed25519 public key
gotcha...
yes
so the data is zero
it's just an address you derived, a math function
Yes, it's no different than if you passed in any account that doesn't exist yet
but it's not really an Account, right? it doesnt actually exist on the chain.
so it actually shows up as an AccountInfo
then you actually pass this in the rpc command up to the program
Uh, I mean, like this on the front end:
  const [authority] = await PublicKey.findProgramAddress(
    [PROGRAM_IDS.timelock.programAccountId.toBuffer()],
    PROGRAM_IDS.timelock.programId,
  );
SystemInstruction::CreateAccount requires the account being created sign, and in the case of a PDA, only the program can sign
"If you create a PDA" -- who is you here?  Only the program can create a PDA
The only thing different about a PDA is that only your account can sign for it
Whatever you put into it
If you create a PDA and shoot it up as an account argument in a command, what's the data in the AccountInfo exactly? Is it even a real account?
hmm, fun problem
right
It's your program's job to authenticate who get's to proxy its authority
It sounds like the answer is yes
if I just blindly accepted it and tried to do something that required an authority
If I didn't have some check in place for that variable, that is
Right...I guess, then a more generic question is: If a user passes up to me a PDA for my program that they built on the front end, has the user then "accessed" my program's authority in the action?
They _are_ forced off the ed25519 curve, but there's another derived address format that's not, so there's some rate at confusing those
PDAs are the output of SHA256. Can't really recover much  information from that
You're talking about a clear-cut case where I know a specific account is going to be a PDA, I'm talking about a generic case where I may have a nefarious actor passing me an array of accounts, one of which may be a PDA, so slightly different.
Sure, but what if I'm doing a pass-through, where the user is passing me an array of accounts that I'm passing through to an invoke_signed call, and I want to find out if one of those accounts is actually a PDA whose base is actually my program? Is there some way to introspect each key to ask if they were offset from my program_id?
(and then checking in the program that the derivation produces the same address)
You’d do this by requiring the caller to pass in the derivation seeds for the PDA
Is it possible from an AccountInfo to figure out if a key is a PDA or a normal key that has a public/private pairing? And if there is a way to figure out if it's a PDA, is there a way to figure out if it's a PDA for a particular program_id?
Always happy to give more detailed overview, maybe its time for another twitch if there is enough devs interested
I think for brand new project the best way to start is with: https://github.com/solana-labs/dapp-scaffold
thanks! yes, solana-labs/oyster-swap looks abandoned, OTOH solana-labs/oyster-lending looks active. <@!752722929397137452> do you have a few minutes to give us some orientation?. All of the oyster projects look like great projects. I want to know which one to use as reference/start-point for our own projects, and maybe get one page of terse documentation, just code organization and some tips?
There's some organization with all the projects at https://github.com/solana-labs?q=oyster&type=&language=&sort= -- but specifically for oyster-swap, the serum version is the more up-to-date one.  As for docs, I'll defer to <@!752722929397137452> since he's done the development on all of them 🙂
Hi <@!539801435571748868> ! are you maintaining oyster?
+1 to this. Where's the last oyster code base? at project-serum/oyster-swap or at solana-labs/oyster ?
is oyster a serum project? a solana team project? is there some documentation on the project? I can read the code but a few pages with code organization, objectives, etc can help a lot.
<@!396443839503532042> The deployment process breaks up the program into lots of smaller chunks to send over the wire, the loader reassembles them on the other side.  We don't have docs on the internal process but we do document the deployment cli interfaces here: https://docs.solana.com/cli/deploy-a-program
How can i access the prices of the LP tokens and my LP stake from my wallet in order to the math?
Hi, I've been playing around with some farming on solana and wanted to make a program to track my farming
and you need to add to chrome
```npm install
npm run build```
<@456226577798135808> https://github.com/Aurona-finance/aurona-extension
I can give it a go
Hello, when I deploy a program, I see hundred of transactions sent, what are these, where I can read about this process ?
Thanks! How did I miss that?! I guess I'm still getting used to Rust, crates and their documentation.
https://docs.rs/solana-client/1.5.14/solana_client/rpc_client/struct.RpcClient.html#method.get_token_accounts_by_owner


///////////////////////////////////////////////////////////////////////////////////////////////

are there any current projects that use the Wormhole SOL-ETH bridge?
point 2: If you need the balance for PDA that might have zero balance, call `banks_client.get_balance`. If you call `get_account` you'll get an error until some SOL is transferred.
Finally fixed!. if anyone has the same problem while cargo bpf-testing, a simple way to create a PDA account is to transfer some SOL to it. No need to call create_account (and I still don't know if that's possible)
do anyone has an example of how to sign `system_instruction::create_account_with_seed`?, I'm signing with payer and the error is : `panicked at 'Transaction::sign failed with error NotEnoughSigners'`
what's the code when you have a PDA, seed & bump ?
The broader question would be: How do I create a PDA account when setting up tests for cargo test-bpf ?
This is the fn to create an account when I have the key pair
`
pub async fn create_account(
    banks_client: &mut BanksClient,
    payer: &Keypair,
    recent_blockhash: &Hash,
    account: &Keypair,
    lamports: u64,
    owner: &Pubkey,
) -> Result<(), TransportError> { 
    
    let mut transaction = Transaction::new_with_payer(
        &[
            system_instruction::create_account(
                &payer.pubkey(),
                &account.pubkey(),
                lamports,
                0,
                owner
            ),
        ],
        Some(&payer.pubkey()),
    );
    transaction.sign(&[payer, account], *recent_blockhash);
    banks_client.process_transaction(transaction).await.unwrap();

    Ok(())
}
`
Question: I'm coding cargo test-bpf, this is the code to sign a create-account tx when I have the account keypair
`    transaction.sign(&[payer, account], *recent_blockhash);`
What's the code to sign a create-account when the account being created is a PDA ? ( I have seed & bump )
bump for this ^
`owner` inside the `acc` var is `9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin`
Not sure which account info you need. But I printed the value of `id` and it was `14ivtgssEBoBjuZJtSAPKYgpUK7DmnSwuPMqJoVTSgKJ`
Hmm weird. Seems to be intermittent and isn't happening now.
And yes I added caching of markets for all user accounts
Can you send me which account is it failing for you
Hmm
These errors pop up after wallet is connected for a few seconds. OrderBook layout mismatch I'm guessing
<@!752722929397137452> looks like there might be further issues and maybe related to the dex v3 changes
I'm still learning React. Are you able to explain what the issue was? It looks like main thing was maybe `precacheMarkets` not being called?
Excellent. Prices working now. Thanks!
I added to home page usage that should show $ amounts for SOL/SRM once you connect
Awesome appreciate the quick fix
issue resolved
Thanks!
provided i have the token mint ID and the token wallet address
is there a way to get the historical token balances in user accounts?
It might be related to dex v3
I will take a look
<@!752722929397137452> , any ideas?
Has anyone successfully used the `useUserBalance` hook in the dapp-scaffold to get the balance of tokens in USD? It always returns 0 for me. Possible bug in the scaffold querying serum??
Mango runs a serum dex on devnet with our own versions of standard spl tokens. Maybe someone in mango discord dev support canan help you
Is there any way with websockets to listen for new blocks? I'm looking at the json rpc docs and it looks like https://docs.solana.com/developing/clients/jsonrpc-api#slotsubscribe is the closest I can get?
https://docs.solana.com/terminology#slot
Interesting. Haven't played with that tool. What is a slot?
`solana-test-validator` has a couple flags that might help here in leu of using devnet:
* `--clone <ADDRESS>` - copies an account from mainnet-beta into your local test validator
* `--warp-slot` - instead of starting at slot 0, start the test validator at the current mainnet-beta slot
I'm trying to use the market context in the dapp scaffold to get USD price for tokens but I need to be able to create a custom market on serum first and then got stuck as they had no option to select devnet.
Thanks, yeah I asked there but they fair bit slower in responding so thought I'd try here too.
I don't think Serum has been deployed on devnet, but the Serum discord folks might have more to say
Anyone know how to use serum dex on devnet? I tried adding the devnet RPC but it fails
> How did you manage to keep this place sane and keep out spammers/anarchy?
It's a constant battle (but worth it) 🙂
Hey guys this is a great channel and I've gained a lot from it. We're setting up a similar thing in the mango discord. How did you manage to keep this place sane and keep out spammers/anarchy?
use --mint-decimals flag



///////////////////////////////////////////////////////////////////////////////////////////////

Afaik NFTs have no real Solana equivalent yet
<@!397190811239841802> https://medium.com/certus-one/introducing-the-wormhole-bridge-24911b7335f7
or is wormhole only for erc20?
can i transfer nft from solana  to ethereum and vice versa?
Generally, the intent in `create` and `split` functionality is to prevent 0-balance staking accounts. This might be an oversight in `withdraw`. I'll take a look, thx!
Thanks. Will explore further.
it's hard to say
or not enough balance to pay fees
transaction may be invalid in some way
<@!466984915376799748> Is there any reason for the code mentioned here : https://discord.com/channels/428295358100013066/517163444747894795/820964317868064768
To return an err ?
base58 encoded length may vary... but the raw bytes should always be 64 bytes
```
Welcome to Node.js v12.16.2.
Type ".help" for more information.
> const bs58 = require('bs58')
undefined
> bs58.decode('kJbsZ6zrbSZN1udvk4J2FSJagc5XZCP5WeLdYvErdTxgSB8n6UAHjAbVcAbYeT3wtjbbUaQmMk8DfGWXuzZJpcz').length
64
> bs58.decode('5DbeYDPktVJoFvdrsY4T3pFoYLuDubr49KgQzr5jVVLdwaeD9Ft8PAMo3CMnSfjcHuhvNXRcGfz1iTBv8iFThLE3').length
64
```
I am not sure how an error in my code would shorten a signature.
So I tried. Did not change anything. A weird thing I noticed is that the signature I am exhorted to check is one hex char shorter than the ones showing up in the devnet.
e.g error returns `Check signature kJbsZ6zrbSZN1udvk4J2FSJagc5XZCP5WeLdYvErdTxgSB8n6UAHjAbVcAbYeT3wtjbbUaQmMk8DfGWXuzZJpcz` > len = 87
Whereas the signature of the Tx sent to the program is:
`5DbeYDPktVJoFvdrsY4T3pFoYLuDubr49KgQzr5jVVLdwaeD9Ft8PAMo3CMnSfjcHuhvNXRcGfz1iTBv8iFThLE3` > len = 88
<@!539801435571748868> ah nah. That settings is what I need. I just double check with team in case. Thank u.
Unfortunately not -- once an account is owned by another program, it has full control over the data and the lamports, regardless of private keys / signatures.  Did you deploy your program using the upgradable loader? if so, you can add a new instruction for it
Hm, you're right, seems like I was probably wrong then.  Maybe <@!213083996689661953> will have an idea on minimums on staking accounts on creation and withdrawal, I think she did a lot of work around there
Hi team, If I didn't implement a kind of `closeAccount` function in my program, can I close an account with its private key?
Using RPC... is there any way to know that a closed account was initialised with token?
or i create nft on solana and bridge it to eth with wormhole?
like i create nft on eth and use wormhole to bridge it to solana and vice versa?
guys can i use wormhole for NFT as well?
if the design is to prevent a zero balance stakable account, I think maybe it should block in the instruction `delegateStake` not here.
and I create an account with `rent_exempt_reserve + 1`, I still can withdraw `1` from it.
the origin design can't prevent the situation completely as you saying.
otherwise, i'd recommend debugging this on localnet
Can you try using `TransferWithSeed` instead?  I'm not sure if that'll fix it, but it seems more appropriate for your usecase
Yes that worked, thank you!
If you're using web3, you can use https://github.com/solana-labs/solana/blob/master/web3.js/src/connection.js#L1903
Yes only the transfer instruction.
Hm, the mismatched signatures is a bit strange, and that transaction isn't showing in any network.  This makes me think there's some sort of network mismatch somewhere.  Is it only your transfer instruction that's failing? and not any of the others?
I see the function takes `publicKey` and optionally `commitment`
Great, thanks, could you tell me how to change the value of `encoding` in my request? I see it's set to base64 right, but, is there a way to specify the value from the functions I'm using?
Not sure what is happening there
I get the error: 
`Error: Transaction was not confirmed in 30.00 seconds. It is unknown if it succeeded or failed. Check signature 2KGhttQVdKFMoe2P9yAFUzfdkuoqWS39Z4M6PrBj1p4Efji13QsCoy2HLXCg9aVQg9fVuCh5936mRT4FwHDE7pPu using the Solana Explorer or CLI tools.`
Anyone can help with this ? I can deploy on devnet and now it seems the Tx signature does not match the Tx signatures I can see in the program calls.
C.f https://explorer.solana.com/address/HZBBEawLtZH5k4XBU5nWsWUhDqefs23cArBjdshE1KbV?cluster=devnet
Yep, you're probably better off using `jsonParsed` for the `encoding` on your request, since it's a Token account and is recognized by RPC.  That way you'll get something immediately usable.  Otherwise, you can parse the base64 using the `spl-token` package at https://www.npmjs.com/package/@solana/spl-token
There's been a lot of development around the sdk, so my info may be a bit out of date, but the workflow should be roughly the same.  You get the tools from https://docs.solana.com/cli/install-solana-cli-tools#use-solanas-install-tool then you can use `cargo build-bpf` to build your program and `cargo build-bpf --dump` to get an ELF dump.  I believe the sdk being used by the tools can be found at https://github.com/solana-labs/solana/tree/master/sdk/bpf.  If you want to strip it, the `strip.sh` script should work from `sdk/bpf/scripts/strip.sh`.  I just tried it locally with a small example, didn't seem to change anything though, so maybe something needs to be updated.
Hey, anyone can help me know how to get useful info out of this? Any function to decode this base64 string?
To follow up, is the current bpf-sdk meant to expose cargo-build-bpf somehow? What's the most recent solana program build workflow? I'm generally looking to account for all this in our build
Do you mean specifically that function?  We've got a utility at https://github.com/solana-labs/solana/blob/master/web3.js/src/connection.js#L1950 but I'm not sure if it'll give you everything you're looking for.  Some parts of the CLI might not be ported over to web3 yet unfortunately, sorry about that!  PRs are very welcome though 🙂
Yes, we use base58 in a lot of places to show the value of the pubkey, and more specifically it's a 256-bit value encoded as base58
We have general programming docs at https://docs.solana.com/developing/programming-model/overview, specific program documentation at https://spl.solana.com/, and the source code for those programs at https://github.com/solana-labs/solana-program-library -- I hope that'll give you enough!
Yep, if you use `solana program deploy` it'll be upgradable by default
If we do `<=` there, then at `self.lamports() == rent_exempt_reserve` , you'd have a zero "stakable" amount, which is useless.  Note that I'm not 100% sure about this, but I'm pretty sure that's the reason.
AFAIK, yes
Address of wrapped sol is `So11111111111111111111111111111111111111112` ?
Hi there, it seems the beta bpf-sdk got an update, **what's a good way to get an llvm-objcopy that understands Solana BPF binaries?** It used to be included and I'd like to be able to strip my Solana programs
I have also found `requestAirdrop` to be quite erratic. Sometimes it works, sometimes throwns an error too.

UPDATE:
So it appears couple things were wrong with my code.
• The Commits are wrong cf. https://solana-labs.github.io/solana-web3.js/typedef/index.html#static-typedef-Commitment
I got tricked by code completion in selecting the above, which has probably changed in the latest APIs.
This results in the Tx not confirmed error. Once this had been fixed I got an `Attempt to debit an account but found no record of a prior credit` error.
• I had make sure the Account was funded, i.e to airdrop the fee payer and sender.
• Finally, the PDA has the wrong programId. I had to access the programId using `program.programId` in Anchor.
Hi all, why is the following code throwing an error:
```
    const userAccount = new anchor.web3.Account();
    const seed = "contribution";

    const userDelegatedAccountPubkey = await anchor.web3.PublicKey.createWithSeed(
      userAccount.publicKey,
      seed,
      provider.wallet.publicKey
    );

    await provider.connection.requestAirdrop(userAccount.publicKey, 10);

    const amountToTransfer = 2;

    const tx = new anchor.web3.Transaction().add(
      anchor.web3.SystemProgram.transfer({
        fromPubkey: userAccount.publicKey,
        toPubkey: userDelegatedAccountPubkey,
        lamports: amountToTransfer,
      })
    );

    try {
      await anchor.web3
        .sendAndConfirmTransaction(provider.connection, tx, [userAccount], {
          preflightCommitment: "singleGossip",
          commitment: "singleGossip",
          skipPreflight: true,
        })
        .then((sign) => {
          if (sign != null) {
            console.log("Transaction successful : ", sign);
          } else {
            console.log("Transaction failed");
          }
        });
    } catch (e) {
      console.log(e);
      console.log(tx.signatures[0]);
    }
```
I get the casual `Transaction was not confirmed in 30.01 seconds` error, yet this test passes.  I have seen from searching in this thread that this is common for all people calling the `sendAndConfirmTransaction` method. Is this error to be expected even on local ? I would assume confirming a Tx locally would be near instant.
Why is https://github.com/solana-labs/solana/blob/8a3135d17bbc5ca901c0b401fdfbb453eb07a7d3/cli/src/stake.rs#L1690-L1742 not accessible through web3.js?
Stupid question: why SOL could not be mined instead of distributed in such a complicated rules?
Is sol's address base58 format?
I can't find at the  offical doc
hello , where is the sol's smart contract docs?
I guess this is it
https://docs.solana.com/cli/deploy-a-program#set-a-programs-upgrade-authority
where can I find information on how to use the new loader?
So, I am finally updating my code 😅
https://github.com/solana-labs/solana/blob/master/programs/stake/src/stake_state.rs#L900
why there is `rent_exempt_reserve < self.lamports()` not `rent_exempt_reserve <= self.lamports()`
Can't I create a stake account just holding the rent_exempt_reserve ?
I see, i will check the TX that caused this question later
The native balance will be a bit more to keep the account rent-exempt
There will be a wrapped SOL balance in the SPL Token account (native account's data), as well as a native SOL balance in the native account lamports field.
Or well... an SPL Token account is stored in the data field of a Solana native account that's assigned to the SPL Token program
No.  They're different types of accounts
I have not seen that
So account has separate balance for SOL and for SOL token?
Native SOL is transferred with the System Program's `Transfer` instruction.  Wrapped SOL uses the SPL Token program's `TransferChecked` instruction
I mean if account has SOL he can send token and vice versa... is it true?
I understand, but. i see that in transactions there is implicit conversion between balances of SOL and the token.
It's like ETH vs. wrapped ETH for ERC20
SOL is the native token, `So11111111111111111111111111111111111111112` is its wrapped SPL Token form
Why do I get an CustomError 0x2, when I try to create a XYZ token account on devnet?  0x2 seems to be invalid mint, but the token seem to exist in the explorer (Wrapped uni).
One more question: SOL and Solana token (  So11111111111111111111111111111111111111112 mint )... are they the same or not? I met transactions where they exchanged back and forth and was hard to distinguish them. Is it the same currency or differetn?
Thank you, <@!585868308419444749> this is what i was looking... it raises more questions, but for now it is what i need
mmm I'm not sure there's an easy way to view that.  The only place I know the accounts are specified is in the genesis code.  You might have to do a little digging past that. https://github.com/solana-labs/solana/blob/master/genesis/src/genesis_accounts.rs
yes. and how to get initial balances of them? Where SOL comes from?
Are you asking if there were accounts created at genesis?
https://docs.solana.com/developing/programming-model/accounts#rent
I have another question, may be you can answer... is there an initial genesis balances of Solana accounts?
Thank you , <@!585868308419444749> for the explanation. Where can i read about the rent status?
It looks like the pre-transfer balance on the destination account was below rent-exempt status.  So the account was charged rent during the transaction
No. I checked RPC, it all the same
I'm not sure how the javascript stuff handles balances, but this might just be floating point inaccuracies in the frontend
Why?
Receiver should then receive 81,908. But by. balances he received 81.907997561 SOL.
In total signer sent  81,908 + 0.000005 = 81.908005 SOL
Fee is 0.000005 SOL
Look.... transfer amount is 81,908 SOL
no
Right, I think it's because it's saying "change (sol)" . so the amount is fees + amount sent , the amount sent is the received amount
yes, he sent + fee. But receiver recieved less that transfer amount - that was a question
yeah thats why he has bigger value sent
and the amount is different
hmmm. no, transaction fee is paid by signer
transaction fee ?
Sender sent this amount, and reciever received less than that.... why?

I mean this does not sum up with the transfer amount ( 81,908 SOL ) :
5002560  Unmathed balances in https://explorer.solana.com/tx/5m8C2736fK61zY3VLNK1WBWGMNMMFieQbfgsxanLSGRgJjtL3s9QuQsW2m7B7wpxP8ywnG8LhwvAt778ofZGYimB
10029048  Unmathed balances in https://explorer.solana.com/tx/45cV1YMfcHiP6tn57bj9s5omV7JPbYqJBbdui9hvUc6ujcRHn9TeNvXYMDfxesQ9gR3w2iPPuyVsgAfYDaDtKkhp
I have a question related to balances match in transaction. Why the transfer is not equal to the balance change of the account in the following 2 transactions? I checked RPC, it shows the same mismatched numbers:


///////////////////////////////////////////////////////////////////////////////////////////////

~~Deserializing in this manner? `let CLOCK: Clock = bincode::deserialize(&SYSCLOCK_ACCOUNT.try_borrow_data().unwrap()).unwrap();`~~
Resolved, thanks!
maybe others have better examples, I could offer this for signing and sending a tx https://github.com/paul-schaaf/solsaver/blob/9e0d7bab8bcb63424f686d0ce39fcd6e8399c41d/src/App.vue#L216
do you have some thoughts ?
Oh ok!
I'm using that same snippet 🙂 It can be found in solana/hello-world too!
Had some problems as well. This cleared some questions.
<@!134384511772393482> You might be interested in this https://github.com/Synthetify/synthetify-solana/blob/c57aec107e8933c1aa93b8a968e138126369008b/tests/utils.js#L122
~~I can't for the life of me get `requestAirdrop` to work. It always fails with `UnhandledPromiseRejectionWarning: Error: airdrop to <pubkey> failed: Internal error` I'm connecting to devnet, with the following: ```url = 'http://devnet.solana.com';
const connection = new solanaWeb3.Connection(url);```
What could I be doing wrong?~~

turns out 
`solanaWeb3.Connection(url)` has to be `solanaWeb3.Connection(url, 'singleGossip')` for this to work. Why?
Your instruction will need to include the address of the clock sysvar. Details here: https://docs.solana.com/developing/runtime-facilities/sysvars#clock
<@!178068735054053376> hi Leo, our techie was wondering whether there's already a public UI for the wormhole? If not, maybe you could share at least very approximate ETA?
If I understood him correct, so far wormhole could be only deployed locally?

upd: sry, didn't notice there's separate channel for Wormhole. I guess you can tag me and answer there if it's more convenient
How do I get the current slot number for a program run?
Don't forget to check the dev-resources sub, it is a treasure trove of info.
Ok sweet thanks, will look into it. Good place to start at least. You saved me some time for sure
I am not so familiar with file storage on Solana, but I'd probably steer away from complex integrations. Afaik IPFS is reliable, proven and has good libs. It should be the easiest way to get started.
Oh, and thank you for the fast response :)
Ok so IPFS is the way to go then? Do you think there is a way to use The Graph indexers to further reduce the hash needed to store on-chain? I could possibly wait until integration for that part..
<@!320043943926562817> On any blockchain storage is expensive. You usually store as little data as possible on-chain, e.g you'd store the hash of a ipfs file instead. On Solana data is stored within accounts' data field (https://docs.rs/solana-program/1.5.14/solana_program/account_info/struct.AccountInfo.html)
Hello Solana community, how can I use file storage in Solana? Do I need to use IPFS of Filecoin? Or is there a built in file system? I want to create an SPL token that allows users to store svgs that other dapps or websites can use if they are holding my token. Thanks
And even if my Tx commitment is set to "finalized" I get some errors if I remove said Timeout.
Hi all, is there an effective way make sure an airdrop has been completed ? I am using a timeout so far, but it feels wrong.
accoding to jsonrpc api
can I get the transaction detail infomation from this signed string ?
this signed string
no , I mean that , I have signed an transaction to a signed string , can I turn this signed string to detail transaction?
You can use `jsonParsed` for the encoding as a parameter to `getConfirmedTransaction` -- https://docs.solana.com/developing/clients/jsonrpc-api#getconfirmedtransaction for more info.  is that what you're asking?
yep, the cap on transaction size is strict
Check the <#763249718339567626> channel for the Python SDK -- it only supports off-chain interactions at the moment though, so you'll have to write your program in Rust or C
if I got error  `encoded transaction too large`,  making the tx smaller is still the only solution now ?
There is a python effort, I am not sure what the progress is though. Search within this thread, there has been a recent mention of it.
how to decode the signed transaction to the json transaction? is there any jsonrpc api can do this work?
Hi,
I am interested in developing apps on Solana. I have a few ideas, but was wondering if the apps must be written in rust? Is there a way I could interact with Solana using python? Also who can I speak to about developing some ideas to develop the Solana chain?
i got it , thank you  trent
You want the `--decimals` argument to  the `create-token` subcommand
The `--mint-decimals` argument for the `mint` subcommand is for offline signing, to prevent needing to query the network
Mint decimals are set once at the creation of the mint
Those operations can't be done at the same time
mint tokens  and  set decimals 0
Are you trying to create a mint or mint tokens?
without  --sign-only  i got this
That's what is forcing `--blockhash ...` on you
Why are you passing `--sign-only` ?
still not  get it  ,  how can i  set decimals
https://docs.solana.com/offline-signing#signing-transactions-offline  See #2
--blockhash refers to what?
<@!755672802916433921> - check under "+ meta" for a fee field

how to get the tx fee according to the rpc api , I use "getConfirmedTransaction", but can not see the field indicate the fee spent
Perfect thanks.
i’ll ask our go engineer who worked on this to get in contact with you
I'm looking at https://github.com/portto/solana-go-sdk/blob/master/types/message.go and have a few questions.
<@!344503698895929365> You write the go sdk?
Anyone?
Those are all the same issue. It seems like your host has some TLS issue
sometime another error
“Does the URL in the error message open in a browser?”
yes, can open in browser
Ping isn't going to tell you whether you can hit them on https.  Does the URL in the error message open in a browser?  It should redirect to the repo page
ping github.com successfully
solana-cli 1.6.0 (src:4bcf976e; feat:906016431)
You can't access github?
Not so relevant with Solana, but really pain to me
Cloning into 'temp'...
2fatal: unable to access 'https://github.com/solana-labs/rust-bpf-sysroot.git/': Failed to connect to github.com port 443: Connection refused
+ return 1
+ popd
~/.local/share/solana/install/releases/1.6.0/solana-release/bin/sdk/bpf/dependencies
+ return 1
error: Cargo.lock file is missing from source dir
caused by: No such file or directory (os error 2)
note: run with `RUST_BACKTRACE=1` for a backtrace
have some problem with ’cargo build-bpf‘
there does not seem to be a simple way to do this
how does one calculate the volume of a certain swap pool?
Crates are yanked.
I'll probably yank the v1.6.0 crates later today so we can prevent more bustage in the meantime
<@!501570363566587905> - I think this is because the v1.5.14 version of solana-program is picking up the v1.6.0 version of solana-frozen-abi-macro.   I'm thinking about pinning the solana crate versions internally.  So the v1.5.15 version of solana-program would pin "solana-frozen-abi-maro to the same version, "=v1.5.15", and doing the same across all the solana crates.
hey everyone. do you have better example https://github.com/solana-labs/solana-web3.js/blob/master/examples/get-balance.js#L16 of how to getBalance, singTransaction, pushTransaction ?
ty
I'm on solana cli 1.5.13.
```
git clone git@github.com:project-serum/multisig.git
cd programs/multisig
cargo build-bpf
```

The build should pass. Then remove the `Cargo.lock` in the workspace root directory and rebuild. Should fail.
How can I repro what you were seeing here?
Given the recurring question about rewards here (or in general), i would say no. I use solflare and they don't have it.
Ah gotcha, I'm not sure if any of the other wallets show that already, in which case they might have some code that we can borrow
Understood, I am interested in bringing reward history to web wallets, but it looks like `StackActivationData` does not contain that info. So yes that would be a PR. https://solana-labs.github.io/solana-web3.js/typedef/index.html#static-typedef-StakeActivationData
`So11111111111111111111111111111111111111112`
what's the address of SOL ?
Pinning `solana-frozen-abi-macro` to `=1.5.14` seems to fix it. Looks like `1.6.0` is the breaking change.
I suspect a breaking change was made to `solana-program` or a dependency. I'm getting the following error when compiling locally. 

```
   Compiling solana-program v1.5.14
error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`
  --> /home/armaniferrante/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-1.5.14/src/instruction.rs:11:82
   |
11 | #[derive(Serialize, Deserialize, Debug, Error, PartialEq, Eq, Clone, AbiExample, AbiEnumVisitor)]
   |                                                                                  ^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `solana_frozen_abi::abi_digester::AbiDigester`
```


///////////////////////////////////////////////////////////////////////////////////////////////

Aha, I see. All the configs in the docs point to `~/validator-ledger`. I'll change my ledger dir so the assumptions work
1.6.0 assumes `${PWD}/ledger` if `-l` or `--ledger` aren't passed
That worked. So for some reason it didn't pick up the correct ledger directory. I'm building from source.
Also is `ledger/` the path to your ledger directory?  If not, try `solana-validator -l path/to/ledger exit`
Your devnet validator is running 1.6.0 as well?
Running `solana-validator exit` on my devnet validator produce the following error:
`Unable to get validator RPC address: Client error: ledger/admin.rpc does not exist`
Would that be because I'm the only one on v1.6.0?
```js
let owner = new Account(myaccount);
    let payer = new PublicKey(what should I put here ?); // spl-token account
    await market.placeOrder(connection, {
        owner,
        payer,
        side: 'buy', // 'buy' or 'sell'
        price: 1,
        size: 1,
        orderType: 'limit', // 'limit', 'ioc', 'postOnly'
    });```
do I have to create a token account when opening an order in the dex ?
```Unhandled Rejection (Error): failed to get token accounts owned by account 2NhuaNxZHus22bY8LB9C5t2tw7JxVAoRaEeetCYQ7G4s: Invalid param: could not find mint```
one stpe closer
Ha, it worked! Thanks for help <@!445425471027544095>  as always
I pulled this code here right from wormhole
seems pretty simple, right?
and it is tied to a specific Config - a set of constraints around how this program can be upgraded
so you can't say use a PDA to upgrade somebody else's program
so it is unique to the tuple
the PDA is a tuple of the timelock program account, the governance token mint, and the program itself
Very simple

and this
Yep here's my plan

...as if the program itself held the private key for the PDA
The program that owns the PDA gets to decide if it wants to sign any inner instructions with `invoke_signed()` using a PDA it owns entirely itself.   The caller or runtime has no say
yeah let me reproduce it real quick to make sure im not crazy
yeah that's what it hjought, this was my original setup
> the privilege escalation issue?
I don't understand what this is just yet
yes, there's no private key so it can't sign
ok, so how do I get around the privilege escalation issue?
ok so it should be in the list, but signer should be false
The PDA shouldn't be marked as a signer in the transaction
but the backend wont let you escalate privilege on something that's marked as signer false
the frontend wont let you serialize the txn until all signers have signed
I say "sign" because it's not really a signature, the runtime just fakes it
so therein lies the problem
Yes, only the program can "sign" with a pda
but you cant sign with a pda, it has no private key
it wants it to be a signer
I pass it up, and say signer false writer true
what happens is it sasys privilege escalation
yeah i tried that
>  since i cant pass it to invoke_signed in the accounts array since I dont have an account_info object for it, since all i have is the derived pda
The caller is required to derived the PDA as well, and include that address as an account input to your instruction.   Then you'll have the account_info struct that can be passed into `invoke_signed()`, along with the derivation seeds so `invoke_signed()` can verify that this is in fact your PDA
hmm...need to keep messing with it
if i dont, then it says it doesnt recognize the thing since i cant pass it to invoke_signed in the accounts array since I dont have an account_info object for it, since all i have is the derived pda
if i pass the pda account info up, it says i cant make it because its privilege escalation on that account since i cant make that thing a signer (obviously)
ok, so just a matter of figuring out the right semantics to get the program to do it then
yes, from the program itself
actually, i guess better question is - is it even possible to create an account with a pda as an address
An  SPL Token account serializes to 165 bytes, so...
```
$ solana rent 165
Rent per byte-year: 0.00000348 SOL
Rent per epoch: 0.000005583 SOL
Rent-exempt minimum: 0.00203928 SOL
```
It is enforced by the program
how i know that this is a rent-exempt ?
This neglects to mention the rent-exempt reserve balance (native SOL) which does not contribute to the wrapped SOL balance
Oh... no wrapping is occurring in that transaction
It may just not be clear WRT native vs SPL Token tokens
https://spl.solana.com/token#wrapping-sol
Please link me to this doc
so it is not true?
resulting in a token balance equal to the SOL balance
I read from your doc: "InitializeAccount sets the balance of the initialized Account to the SOL balance of the Solana account being initialized, resulting in a token balance equal to the SOL balan"
After that instruction HpR has a 2039280 SOL balance and a 0 wrapped SOL balance
So how much it has at that point?
Since Hpr is an ephemeral account, you don't see this balance change on the TX because it debited and credited the same account
This is not true. That SOL (native) balance is the  rent exempt reserve balance for the native account.  It does not contribute to the wrapped SOL balance
get COnfirmed Block > tx > account > balances
Which RPC method are you referring to here?
I do not mean the fee... the sum of balance of Solana token for this TX is -7.208822069
That's shown higher up
Yes, what's not shown (in pretty colors) is the fee to the block producer
In other words for currency sum of all balance changes must be zero
I mean any currency .... if somebody spends it, somebody else will get it. With sol token it is not the case, thats it
Let me reread above.  I'm not sure I understand the problem
I mean not the fee... i mean if i treat Solana token as currency, that will cause issues
I'm not sure I understand.  This would look the same as a normal SOL transfer where the recipient pays the fee
I understand this model, but it causes some side effects. For example, even if SOL sum of balances will be 0, the sum of token balances will not be zero for all accounts. And tis is hard to check and verify
yes, i take that. into account. Thank you <@!585868308419444749> a lot, you saved me lot of time!
I think what you're missing is the HdG also paid the fee. Two signatures, 10k lamports
Yes, it matches the balances... but it looks like SOL token actually behaves quite. differently from other wrapped tokens, right?
4) HdG сloses HpR and it results in unwrapping SOL . It sends 7208822069+2039280 SOL to Hdg
Hey all, have a question. I need to create an account owned by my program that has an address that is a PDA in my rust program that is called from the front-end in an rpc call. If I do a create account call without including the PDA's address in the arguments passed up from the front end to the backend program, then I get "Instruction references an unknown account". If I do it WITH the account in the account list, then I have to make that account a signer, which I can't do because it's a PDA and PDAs dont jhave private keys with which to sign the transaction. What's the solution here?
3) QQw sends 7208822069 tokens to HpR. This results in his balance reduces both in SOL and in token on 7208822069. HpR balance adds up 7208822069 SOL _and_ tokens
2) HpR initalized. Now it has 2039280 lamports _and_ 2039280 tokens
1) HpR created, pass 2039280 their. So it has 2039280 lamports
Thanks! <@!213083996689661953> ... can we just iterate that i correctly understand that transaction:
SOL is wrapped by calling the spl-token InitializeAccount instruction on an account containing some SOL, using the "native mint" `So11111111111111111111111111111111111111112`
Thanks for the feedback! We'd love to make the documentation about wrapped SOL more clear: https://spl.solana.com/token#wrapping-sol
By the way, how SOL is wrapped into ?
The second point completely blown my mind. In Ethereum you have ETH and you have WETH, and they never summed up
Thank <@!213083996689661953> that explains almost everything. However for novice it is completely unclear several facts, that: 1) Solana token is different from any other SPL token, even in simple operation of Close Account 2) That RPC returns balance, summing up SOL balance _and_ Solana token balance together
Hi there! It's not that `QQwk5LEJcLWyrv5EgFrejvR124hUDfgvKdq4rdgqRaz` has double the tokens (SOL + wrapped SOL), is that wrapped SOL *represents* the SOL in the account. On close account, the wrapped SOL is unwrapped and withdrawn to the recipient. In most cases, wrapped SOL is treated the same as any other SPL token. But instead of Mint and Burn operations, it has wrapping/unwrapping, since the underlying SOL itself is not created or destroyed. Does that help at all?
It does not make sense for me, however...
Can it be the case that balances takes SOL together with token? That would explain this
It appears the difference is the transaction fee, I will let someone who understands the account model better explain
But in balance change i really see it changed balance, and token balance AS WELL...  i will go mad with your account model
Also... in my. understanding account QQwk5LEJcLWyrv5EgFrejvR124hUDfgvKdq4rdgqRaz can not operate SOL, as it has mint currency Solana
yes, but then why QQwk5LEJcLWyrv5EgFrejvR124hUDfgvKdq4rdgqRaz has -7.208822069 SOL _and_ -7.208822069 Solana ?
you also closed an account which sends the rent back to the owner
looks like a transaction fee
what is the difference?
The balances of transaction is not summed up to 0 and that it very hard to check why the balances where change
No, RPC returns the same data
treating sol/wsol as the same
<@!546486384622305307> I guess that is the way the explorer shows changes to the balance of  accounts
looked over that, thank u ^^
<@!649011903326060555>  https://docs.solana.com/developing/clients/jsonrpc-api#accountsubscribe
Hey guys, got a quick question about running a program what would be the best aproach to trigger an event everytime one of my nft's get send

-Check every block to see if one of my nfts got send
-Other ways?

Thanks in advance
What actually happens inside the CloseAccount?
Hello! Why in this TX https://explorer.solana.com/tx/44raikK5EvgZw4dXpTnBXoR4zh6CNpA6LW6CCEr764GrSTfYfHUFkFKYwc8AqHtjLPJtozeAcPRsEF9aMt5XAqpX the balances do not match transfers? It appears that QQwk5LEJcLWyrv5EgFrejvR124hUDfgvKdq4rdgqRaz ihas minus balance change on SOL and on wrapped SOL. Why?
Is there any way of testing staking on the devnet by creating a staking account through solana-web3-js?
ohhh i see
I think the difference is that when `--bpf-program` is used, the program is currently added as a non-upgradable program so that's why it looks different on devnet
Thanks, I'll check again what I was missing when i get to it
<@!333700673117880324> - in a dev environment you'd probably run `solana-test-validator`, which configures a simple test environment to develop in and does not require a monster machine.    When it comes time to do integration testing, you could switch over to devnet.solana.com or even testnet.solana.com.
You shouldn't need to run mainnet caliber hardware for app dev
Dev would probably want to keep at least one epoch's worth of TXs.  An arb bot you could probably even turn that back more
Well i came from ethereum, pardon me if i sound clueless
Why do you think that?
Right. And that's what most typical devs would need to test build or even run arb bots?
A fully synced node is where we missed each other I think.  To me, a full synced node means a node that is operating nominally while in sync with the rest of the network
Ok but for dev use, you dont have to store everything from genesis block right? And that's the 500gb <@!445425471027544095> 's referring to?
That'd be more like... 8TB I think
Recharge that "wow"
yea
By fully synced, you mean history since block 0?
cant imagine the barrier to entry in future for dev as the network grows
wow already?
Maybe 500GB or so
Whats the current disk size used on a fully synced node?
The hardware requirements to run node for internal use is kinda daunting.
Something something beta 🙂
Why so?
Well you don't _need_ to, but we don't really encourage running open RPC on a staked validator
So basically to run a full node to interact with solana, I will need to run a validator node and exclude myself from the staking and voting?
A full node is basically a validator that's not voting.  Running a validator for RPC-only use guide is here, https://docs.solana.com/integrations/exchange.  More details on running a validator in general, here. https://docs.solana.com/running-validator
CLI guide is here. https://docs.solana.com/cli
Hi! Welcome!
Hey guys, I'm new here. I'm trying to understand what is the geth cli equivalent in solana? What are the hardware requirements to maintain a full node equivalent in solana?
that looks right to me
Yes.  Runtime deposits rewards directly
sending staking reward seems not via any transfer transactions but editing the account balance directly, am i right
The queried slot was the first in epoch 157, the result is the rewards slot
You can't predict it, but you can query it
```
$ curl https://api.mainnet-beta.solana.com -X POST -H "Content-Type: application/json" -d '
  {"jsonrpc": "2.0","id":1,"method":"getConfirmedBlocksWithLimit","params":[68256000,1]}
'
{"jsonrpc":"2.0","result":[68256004],"id":1}
```
afaik, not every slot produce block. 
could I perfect predict the next slot which sending the stake reward?
I think it would be ( 432000 * epoch ) + N which N is a positive number
Compared to a program i uploaded to devnet
What I used `solana-test-validator -r --bpf-program 72MgRTDhBWRveLLJn7D1uz21D4bW76PJd6q1oFGVxbmK program.so`
What i see
Was this a fresh ledger?  Add the`—reset` flag to solana-test-validator to be sure.  The new bpf program is only picked up if it’s a new ledger
I did that just now and it doesn't show as a program account in the explorer (http://127.0.0.1:8899)
you pick it
<address>
That is the sentence i don't understand, what would be the program id? test-validator is the keypair config of the cli?
It's stored in the genesis config for the test-validator, so it's immediately available from block 0
the rewards for the last mainnet-beta epoch were distributed in the first block of the current epoch, you can see them here: https://explorer.solana.com/block/69120000/rewards
or by running `solana block 69120000`
Where is the program going to with `solana-test-validator --bpf-program address xyz.so`
?
does the stake reward of last epoch (N - 1) send to the stake account in next epoch (N) begin ?
and is there any example of receiving staking reward tx on explorer can share with me
huh,interesting
The `--bpf-program` arg is wonderful.
`solana-test-validator` is the way!
thanks,its taken me a while but finally making the jump <@!501570363566587905>
I removed all mine and don't seem to have any problems.
is it safe to remove the old docker images if you are using the new solana-cli-tools ?
That won't help in this case, you need to increase your open file limit
<@!445425471027544095> I did not run "solana-sys-tuner", before I start the node
Hard to read your screenshot though, text is better
Did you follow all the steps in that section?
so I just need to run solana-sys-tuner before I start the node ?
https://docs.solana.com/running-validator/validator-start#linux
whats this problem?
however, it's possible that due to favorable price slippage, the token B received > token A left, which means closing the account would be an error
token B is in the temp account i would like to close, and the amount swapped is calculated s/t token A left should = token B gained
the context: i am swapping some amount of token A for token B via a token swap, and burning an amount min(token A left, token B received).
a follow up question: is it possible to transfer all the tokens from one account to another w/o knowing the amount in the account?
i see - yeah that should be equivalent
Initialize will fail.  You could create the account and close it in the same TX though
Is it possible to make a spl token account with `lamports: 0`? (ie i want a temp token account that's only available for a single tx)
Is there any chance someone adds solana in here ? https://iancoleman.io/bip39/
ok, yea, that doesn't have the code. it's borsh without borsh.
Might want to move your issues to the correct repo https://github.com/near/borsh-rs.
the guys surname tho
Yeaaah not ideal. Might be other more active alternatives. Might be worth a look over this article: https://blog.logrocket.com/rust-serialization-whats-ready-for-production-today/
a lot of those open issues going back apr 2020 don't even have a reply on them... idk man, when i see that, i think the guy got a job at IBM or something.
Borsh not being further developed?
yea, you got lucky... it doesn't look like it's being developed tbh.
Ah, wasn't aware it had this limitation. I used 32 byte fixed-size in my case so didn't hit any issue.
https://github.com/near/borsh/issues/114
Not sure what you mean. What schema?
fixed is fine... but the schema only supports some sizes, right.
That is what I did. I only did fix-size strings but I suppose for dynamic you would need to maybe use the first byte or two to define the string length.
ya. we need to get there. full decouple from the real work
That's what marketing names are for!
The right thing to do is to bump the major version probably, so 1.6 becomes 2.0.  But the problem is that'll cause everybody non-technical to go "OMG Solana 2.0 just shipped".  And then the poor scammers that want you to download solana-2.0.exe need to update their scam 😆
Awesome thanks for the tip.
<@!501570363566587905> - hey I think if you update your anchor dep to "=1.5.15" then things won't fall apart when 1.6.1 ships like they did with 1.6.0.   Internally the 1.5.15 crates all pin to "=1.5.15" so the 1.6 crates shouldn't be picked up like the would with the current "1.5.11" dependency that you have.   

There's a section in https://github.com/solana-labs/solana/releases/tag/v1.5.15 for how to prepare for 1.6 as well.   I'm making these changes in SPL right now via https://github.com/solana-labs/solana-program-library/pull/1456
is there a better way to do that?
I wanted to change borsh to do strings as byte arrays -- maybe that's not so clever anyway
ok, i must have broke it somehow.
<@!311962918511968256> - I tried to reproduce that build issue by starting with the tip of the SPL repository and making these changes.  But it worked 😩 
```
$ git diff Cargo.toml
diff --git a/feature-proposal/program/Cargo.toml b/feature-proposal/program/Cargo.toml
index 1fda472..2caeda2 100644
--- a/feature-proposal/program/Cargo.toml
+++ b/feature-proposal/program/Cargo.toml
@@ -12,8 +12,10 @@ no-entrypoint = []
 test-bpf = []
 
 [dependencies]
-borsh = "0.7.1"
-borsh-derive = "0.8.1"
+borsh = { version = "0.8.2", path = "/Users/mvines/ws/borsh-rs/borsh" }
+borsh-derive = { version = "0.8.2", path = "/Users/mvines/ws/borsh-rs/borsh-derive" }
+#borsh = "0.8.2"
+#borsh-derive = "0.8.2"
 solana-program = "1.5.11"
 spl-token = { version = "3.1", path = "../../token/program", features = ["no-entrypoint"] }
```
Ah, excellent. It didn't exist during hackathon so I had to go the wrapper route.
oh, in 1.5.10
We added those traits into solana-sdk in a recent 1.5 patch release actually, to avoid this
I use the custom type for serializing/deserializing with borsh
Believe I hit this problem too. There is no trait and Rust doesn't allow extending existing interfaces. I solved it by making my own wrapper type:
```
// Wrapper for Pubkey for use with Borsh
pub type PubkeyData = [u8; 32];
```
https://www.npmjs.com/package/@solana/web3.js
what are devs supposed to do if they want to write projects in js?
transpiling seems to create strange problems
should we try to refactor the ts into js by hand?
Not sure if that exists <@!131093691283668992>
can someone comment on this please
You might need a local `solana-program` that also points at your local borsch
Are there two versions of the derive proc macro due to the local crate redirect?
```[dependencies]
borsh = { version = "0.8.2", path = "/Users/mrsmith/BORSH/borsh/borsh-rs/borsh" }
#borsh-derive = { version = "0.8.2", path = "/Users/mrsmith/BORSH/borsh/borsh-rs/borsh-derive" }
#borsh = "0.8.2"
borsh-derive = "0.8.2"
solana-program = "1.5.11"
#solana-program = { version = "1.5.11", path = "/Users/mrsmith/TMP/solana" }
spl-token = { version = "3.1", path = "../../token/program", features = ["no-entrypoint"] }
``` this also don't compile, same output
I'm confused by what "the problem" is?
the traits that make it work with borsh
so where is that pubkey thing defined then?
right - then it works
yeah, uncomment the `borsh =` and `borsh-derive =` lines
i have local - it's wrong?
Oh, I see.  The borsh traits come from `borsh-derive`, which you've removed 🙂
changed this as commented ```[dependencies]
borsh = { version = "0.8.2", path = "/Users/mrsmith/BORSH/borsh/borsh-rs/borsh" }
borsh-derive = { version = "0.8.2", path = "/Users/mrsmith/BORSH/borsh/borsh-rs/borsh-derive" }
#borsh = "0.8.2"
#borsh-derive = "0.8.2"
solana-program = "1.5.11"
#solana-program = { version = "1.5.11", path = "/Users/mrsmith/TMP/solana" }
spl-token = { version = "3.1", path = "../../token/program", features = ["no-entrypoint"] }
```

This might be due to a solana crate version mismatch, that I'm trying to resolve in 1.5.15 with extra dependency version pinning.  Do you have a way I can see the full output, or reproduce what you're seeing so I can confirm?
is there a pure JS version of the hello world example? we're having trouble making the typescript example work with our node js project. compiling the ts into js doesn't work very well either
I replaced a dependency (borsh) in Cargo.toml with a local version from github and it broke. (no changes)
what does this mean?```61 | #[derive(Clone, Debug, BorshSerialize, BorshDeserialize, BorshSchema, PartialEq)]
   |                                                          ^^^^^^^^^^^ the trait `BorshSchema` is not implemented for `Pubkey```


///////////////////////////////////////////////////////////////////////////////////////////////

😉
Yup, that matches the behavior, despite being annoying, gotta appreciate how easy off by one errors are to fix 🙂
it's being set to a data account
so that's the bug!
I am botching it somewhere in the pipeline
indeed, looks like Token is not set to actual token
the two hardestt hings in computer science: naming things, caching, and off by one errors
i am thinking i messed up some arguments...
this whole little thing was working a bit ago..
that's the question im about to answer - you made me suspicious...print statements incoming 😉
Should be :-), are you calling SPL token's `Instruction::transfer` helper function?  What `token_progam_id` are you passing?
hmm so definitely different from what i tried
yeah, run `solana-test-validator` with the cli installed to start it.  Should be really easy to use, and aim RPC at from your front-end
well it's spl token transfer, so it would be the token program, right?
<@!440990411591254037> That error is coming from the cross-program invocation verification code.  The runtime is looking at the instruction being invoked and seeing that the account associated with the program id is not executable.  Do you know what program id the instruction is referencing?
If I can't get this working, I 'll jump down that rabbit hole again, but i spent a few days trying to get it to run programs appropriately before jumping to devnet, i think it might have just been my macbook can't handle the pressure of running it + my typescript transpiler + chrome
that's where you compile solana and run it locally, right
I remember I tried to run that originally when I first setup a couple months ago and I couldnt deploy programs to it, it didn't run them properly
That some kind of vm validator that runs on your laptop?
What is that?
Any chance you can repro locally with a `solana-test-validator`?  I did upgrade devnet to 1.5.15 yesterday but I can't imagine this could cause the problem you're seeing
such a strange error
but I figured I'd ask real quick to see if some change went out, being it's devnet and all
All this was working fine before my last little refactoring run, so Im thinking maybe I am somehow screwing up the list of account order or something
which is super weird
https://explorer.solana.com/tx/3cMxSMkH8Nz4ukyiimEZiPJDtzjLaZV1NxCwnWGCUUa2vHXXDVSXvSgYtJmuTwKs8VSy6Crr8ybb4w7Z8mA3HhCo?cluster=devnet
it's trying to say the program's PDA is not executible as an error
Sounds like you're passing the wrong account info for program id
just a token transfer between two accounts
yeah
<@!440990411591254037> via CPI?
i'll keep looking
hmm ok i must be doing soemthign wrong
and it was working before
which is weird, because im not sure why i would care that it was executible
<@!440990411591254037> - i don't think so
Hi, has anyone had any luck using the web-sys console from the rust wasm code running in solana-test-validator? If so, is there a reference example?
in devnet
Getting an error that the destination account is not executible
Did someone recently make a change to spl_token_transfer?
Thanks a lot for your consult so far. I'll try out that now
<@!445425471027544095> <@!585868308419444749>
But that depends on your dApp.  If holes in the transaction history are ok, then that makes your node operations much easier to manage
if you want a continuous history, you must always use `--no-snapshot-fetch` after your node is started.   If you later fetch a snapshot on restart, your node will not have history for the part of the chain that your node skipped
Add `--enable-rpc-transaction-history`, and if you care about transaction logs, add `--enable-cpi-and-log-storage` as well
How to know when to use --no-snapshot-fetch is it any CLI or something to be sure that we need it?
you don't need those three
Can we add more flags to chosen?
--restricted-repair-only-mode \
--gossip-pull-validator PUBKEY \ - What to set here? Don't see it in solana-validator --help?
--repair-validator PUBKEY  - What to set here?
History is not so deep
The defaults `--limit-ledger-size` isn't even a full epoch's worth of history at present AFAIK
Ok, but _how much_ history?  Are you tracking the things you need to know about in real time and collating them in your own database or directly querying the node each time?
Pls suggest some config of the own node that you know?
We need to have an own node that we can reliably get tx history, get tx confirmation, send txs for token transfer. That's all
And yes, our public RPC is a best-effort service for the community.  We always recommend that projects building on Solana run their own
You may want more  than the default `--limit-ledger-size` value you.  But I can't really offer any advice based on my current understanding of the product
Ok, you probably want those extra indexes enabled that Michael linked above. `spl-token-mint` and `spl-token-owner`
yes we recommended projects run their own RPC nodes if they want availability guarantees
The dApp is running on production --> thus URGENT
<@!445425471027544095> <@!585868308419444749> 
I have built a dApp for deposit/withdraw KIN as tokens on Solana.
Everything works so well until the recent time when we find that the public mainnet endpoint of Solana is very unstable!! Even down time
That's why, we must now deploy an own node for transactions
For example, if you want to improve the performance of some RPC calls, consider adding account indexes: https://docs.solana.com/running-validator/validator-start#account-indexing
Also you may not want `--private-rpc` if this will a public node.  
But yes, please more details.   I appreciate its URGENT but we need full context to help effectively
Ok... but what are you building?  There are other features you'll need to enable for optimal access to certain data and you may want more ledger history than the default parameters.  I cannot make recommendations without more information though
I've tagged anyone I have discussed with. Sorry for that as it is URGENT
> Can we add more flags to chosen?
I don't think you need any of these flags
The current mainnet endpoint of Solana is very unstable and thus force us to have to self deploy own node
You don't need to tag everybody
What's the intended usage of this validator?
<@!439209823201132558> <@!445425471027544095> <@!585868308419444749> 

URGENT question regarding own deployment of the validator node

We have started solana by this command

#!/bin/bash
/usr/local/share/solana/install/releases/1.5.14/solana-release/bin/solana-validator \
  --no-voting \
  --enable-rpc-transaction-history \
  --no-untrusted-rpc \
  --private-rpc \
  --halt-on-trusted-validators-accounts-hash-mismatch \
  --rpc-bind-address 127.0.0.1 \
  --rpc-port 8899 \
  --wal-recovery-mode skip_any_corrupted_record \
  --expected-genesis-hash 5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d \
  --entrypoint entrypoint.mainnet-beta.solana.com:8001 \
  --entrypoint entrypoint2.mainnet-beta.solana.com:8001 \
  --entrypoint entrypoint3.mainnet-beta.solana.com:8001 \
  --entrypoint entrypoint4.mainnet-beta.solana.com:8001 \
  --entrypoint entrypoint5.mainnet-beta.solana.com:8001 \
  --trusted-validator 7Np41oeYqPefeNQEHSv1UDhYrehxin3NStELsSKCT4K2 \
  --trusted-validator GdnSyH3YtwcxFvQrVVJMm1JhTS4QVX7MFsX56uJLUfiZ \
  --trusted-validator DE1bawNcRJB9rVm3buyMVfr8mBEoyyu73NBovf2oXJsJ \
  --trusted-validator CakcnaRDHka2gXyfbEd2d3xsvkJkqsLw2akB3zsN1D2S \
  --ledger /home/sol/ledger \
  --limit-ledger-size \
  --log /home/sol/log/solana-validator-mainnet.log

Please consult if we did it right?

Can we add more flags to chosen?
--restricted-repair-only-mode \
--gossip-pull-validator PUBKEY \ - What to set here? Don't see it in solana-validator --help?
--repair-validator PUBKEY  - What to set here?
What exactly do this options? We have read their docs and didn't find info.

How to know when to use --no-snapshot-fetch 
is it any CLI or something to be sure that we need it?
on top that, it seems it's not possible to pass a filter in the .js implementation... I receive like 1mB of data
I would say I need to use `connection.getProgramAccounts()`  and passing the staking program address but not sure
hello guys ! Im looking to fetch stake data for a given wallet using solana/web3.js. Can someone help me find my way ?
found docs there https://solana-labs.github.io/solana-web3.js/
still no answer ?
Your safest bet is to use https://docs.solana.com/developing/clients/jsonrpc-api#getminimumbalanceforrentexemption with the account's data size and compare it against the lamports stored in the account.  We don't show that in the explorer at the moment
Thank! I have one more question that is there any way to check an account is exempt or not except call is_exempt? like through solana explorer or something?
This is a great question, I don't see any information about it in the docs and the code isn't clear on this.  I'll let someone else answer
In our experience, it's usually OK
Yeah, an associated token account is what you'll want to use for interoperability between wallets.  The associated token account is a normal token account, but it has a deterministic address based on the user's main SOL account.  This way, you only need someone's main SOL account to send any token to them.  You can read up more about it at https://spl.solana.com/associated-token-account
It depends on the use case for the second account -- derived addresses will likely be what you want to use though: https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses
Is that a critical error? Or just a warning that is acceptable for a Solana program.
Hey team, I met this error `Error: Function _ZN4main9processor9Processor7process17h061627f987c2b899E Stack offset of -4256 exceeded max offset of -4096 by 160 bytes, please minimize large stack variables` when build the program
Hi, I am new to Solana development and I am trying to build a wallet. I want to ask that is there any use case that I should let user generate a normal token account instead of an associated token account? For my understanding the associated token account is unique and hence superior than a nomal token account?
agree. I found that there is no such construct in the new created stake account. I can do the loop (delegate stake => deactivate => delegate stake ... )
does updating vote account commission activate immediately for the oncoming epoch?
I have Keypair and created account for it. I want to create second account. I want to be able knowing Pubkey of first account, find second account. One way to do it - store second account Pubkey in first account. But may be it is possible given first account Keypair to derive second account Keypair? I have read about derived addresses, but still not get if and how these applicable.
Not currently possible, I agree that's a little annoying sometimes
is there any ways to cancel deactivate stake in the same epoch? or i can only wait for next epoch
not the first thing i'll do while learning rust 😄
yeah looks like there's a bunch of dependencies that need an upgrade 😕
just starting with rust, but it looks like ring requires a newer cc version, which doesn't have the same features as the current (num_cpus and jobserver are missing)
trouble building solana on mac m1, hitting the bug described here that's fixed in recent ring versions:
https://github.com/briansmith/ring/issues/1063 (that's a dependency in at least programs/bpf)
Either restart your SSH session or log out/in
Yeah you have to close all sessions for that one to apply
ok
CUDA can be used for signature verification.  It's optional right now
try logging out and back in again, or in the worse case reboot.  Sometimes the setting doesn't get applied until you log back in
[2021-03-17T09:25:30.251032636Z WARN  solana_core::validator] CUDA is disabled whats this use for ?
seems ok
<@!755672802916433921> , hey I think your `nofiles` limit isn't setup right yet
```
sudo bash -c "cat >/etc/security/limits.d/90-solana-nofiles.conf <<EOF
# Increase process file descriptor count limit
* - nofile 700000
EOF"
```
whats the problem?
thread 'main' panicked at 'Failed to open ledger database: UnableToSetOpenFileDescriptorLimit', core/src/validator.rs:986:6
stack backtrace:
   0: rust_begin_unwind
             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/std/src/panicking.rs:495:5
   1: core::panicking::panic_fmt
             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/panicking.rs:92:14
   2: core::option::expect_none_failed
             at /rustc/e1884a8e3c3e813aada8254edfa120e85bf5ffca/library/core/src/option.rs:1268:5
   3: solana_core::validator::Validator::new
   4: solana_validator::main
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
[2021-03-17T09:25:30.275774971Z ERROR solana_metrics::metrics] datapoint: panic program="validator" thread="main" one=1i message="panicked at 'Failed to open ledger database: UnableToSetOpenFileDescriptorLimit', core/src/validator.rs:986:6" location="core/src/validator.rs:986:6"
still have this error after I run solana-sys-tuner and add params
Roger roger.
<@!501570363566587905> - I just pulled the trigger on v1.6.1 and will be publishing crates.  I'll be testing some things here but please LMK if this 🍄 s something again for you
ok cool i will be there shortly...have to deal with a home situation but be back in a bit
https://discord.gg/Pm4J6AaX
hey how do i get to the serum discord? do you know the server? i dont
i dont know that one
Hey let's chat over in the serum discord.
started happening all of a sudden
no matter what i do, whenwver I do wallet.signTransaction I get white popup and a wallet disconnect error
wallet suddenly disconnecting?
anybody else suddenly havign issues with sollet?
The program could refund the fee though
I see, thx!
No.  The fee-payer's balance is checked on account load
is it possible to use a temporary system account (0 lamports) as a fee payer which gets credited with needed lamports inside the transaction itself?
<@746139548966322347> - it can’t.  Only system accounts can be fee payers
hi
can a program derived address (account with lamports) be a fee payer for a transaction?
sg, the docs will be updated to use `-l ledger` soon, to avoid this footgun


///////////////////////////////////////////////////////////////////////////////////////////////

Probably should be in the docs though!
It's in the code at https://github.com/solana-labs/solana/blob/939c6547524502f1eaacfc06cadd8220e2bfad83/sdk/src/packet.rs#L13
I think it should be in here but it's not: https://docs.solana.com/developing/programming-model/transactions
Hey guys I'm having a hard time finding the transaction size limit in the docs. Can anyone point me to it?
<@!378841176742297601> If you want to deploy to the non-upgradeable loader (currently BPF loader 2) use `solana deploy` instead of `solana program deploy`.
How do you embed data within a NFT?
👏
Thanks for anyone just read this and intended to help me
Oh nevermind I think I found out the problem.
I call a function to the program and then this error occurs `Program failed to complete: Access violation in stack frame 1 at address 0x200001b38 of size 8 by instruction #1029`. I don't know this error has any connection to my previous compile error. Can team help me?
<@!539801435571748868> thank you 🙂
gotcha, thanks
it's supposed to be 400ms, but it's been a bit higher -- you can check it out at https://explorer.solana.com/
approximately how long is a slot
Hi there!  That's the account for one of the Bonfida programs, which was likely deployed using the `solana program deploy` command.  Since it is owned by `BPF Loader 2`, it means that it's not upgradeable, so you would need to pass the `--final` flag as well
Hi.
How to create BPF Loader 2 program ID?

ex. bonfida account: https://explorer.solana.com/address/WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6
aka supporting evm and eth tooling(truffle)?
interesting. is it going to be something like moonbeam for polkadot?
doing nothing fancy just using this code ```await market.placeOrder(connection, {
        owner,
        payer,
        side: 'buy', // 'buy' or 'sell'
        price: 1,
        size: 1,
        orderType: 'limit', // 'limit', 'ioc', 'postOnly'
    });```
weird, getting an error that says I have no token accounts with that mint when trying to open an order in serum dex
Does anyone know why or how to resolve?
And the solana version is `solana-cli 1.5.15 (src:9bd37739; feat:3699701358)`
The config is `RPC URL: https://solana-api.projectserum.com 
WebSocket URL: wss://solana-api.projectserum.com/ (computed)`
Hi, we got error to deploy our program over mainnet `Error: Data writes to account failed: request or response body error: error reading a body from connection: unexpected EOF during chunk size line`
Yep, if there's ever a need to do this it's certainly possible
btw, I ask this just out of my curious
I think maybe it can limit the commission effective time, like T+2 will activate the changes.
Adding a limit on the number of times the commission could change, perhaps once an epoch, is doable. I'm not sure it's really needed though. Anybody reputable wouldn't be reputable for long if they did this
Yeah that's technically possible. That can be dealt with socially though. The stakers on that node would observe something strange is going with their lack of rewards, dig around a little and figure it out, and tell all their friends about the cheater
would it will make any protections for staker ? if I stake on a malicious validator, it attract me by a good commission, like 5%, then the validator change commission to 100% at the end of current epoch. It seems that I will get nothing in next epoch and I need to wait for the cool down period to get my stake back.
<@!547526572135940096> - are you using rust 1.50 (latest stable)?   Not sure that's the cause here, but just sanity checking.    spl-token-cli did successfully build on Windows in our automation earlier today, so the cli should build on windows in theory
Hey I am trying to install the spl-token-cli but running into this issue. Any recommendations?
```$ cargo install spl-token-cli```
```error: failed to run custom build command for `blake3 v0.3.7` ...cargo-installgnZGEL\\release\\build\\blake3-39db178ec8a0eaf9\\out\\c/blake3_sse2_x86-64_windows_msvc.o" "-c" "c/blake3_sse2_x86-64_windows_msvc.asm" with args "ml64.exe" did not execute successfully ```
Thanks you so much! It looks like I don't need to worry about rent when using associated token account.
Yes, https://github.com/solana-labs/solana-program-library/blob/master/associated-token-account/program/src/processor.rs#L51-L56
I create this associate token account through associate token program, it looks like I didn't set the data size in parameter, so it should be setr by the  associate token program?
But in this case you've already created the account, so you must have passed some value in a previous instruction with the data size
`data.len()`
To call getminimumbalanceforrentexemption RPC, I need the account data length which I can get by call getAccountInfo RPC. 
Below are my account data and the document said "The rent calculation includes account metadata (address, owner, lamports, etc) in the size of an account." but I don't know how to do the calculation to know my account data size. Would you please give me some advice?
{"jsonrpc":"2.0","result":{"context":{"slot":68494806},"value":{"data":["PEuVtWk/uYiLGMkCGRaBRPw5TA9mluTAs2pV+Ux11jGJvl3hZp4i+hbNGTqywCtMwwTKdtACio+HKa02KgRAcAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","base64"],"executable":false,"lamports":2039280,"owner":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA","rentEpoch":171}},"id":1}
I wonder how solana would perform on validium
wow, I miss the docs. thank you.
A little algebra will get you the vote portion
https://solana.com/staking#estimaterewards for stake
I think it maybe depends on the total staking and the credit but there is no detail docs
is there any formula about the voting reward and the staking reward ?
it's immediate <@!788215642070581289>
does it ?
We should've up SPL in the method names
Let us check this out.
I'm confused, can you please provide more context
No, I am talking about SPL token like USDC, Fida etc. API.
<@!384453991364427776> - Are you referring to this? https://docs.solana.com/developing/clients/jsonrpc-api#gettokenaccountbalance
SPL token balance API is not on document https://docs.solana.com/developing/clients/jsonrpc-api
Not AFAIK
okay thanks. Do I need a token account with that token to open orders in serum dex ?
https://projectserum.com/srm-faq
getting an error saying I don't have an account with that mint for some reason
anyone know what's MegaSerum ? MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L
I am using 25% capacity right now so will let you know when i need more capacity 😆
<@!149990576572334080> No tuning schedule, we've been adjusting it as needed so far
<@!440990411591254037> Very interesting, I don't think I have enough info to recreate what you are seeing but if you can create a test case that does...  🙇
Lovely any estimates that i can follow ?
<@!149990576572334080> Yup, it does change over time and already has, we will be constantly tuning it
I wonder if amount of compute units in transaction will change over network development ? Seems like it would be great to increase it over time since hardware will get better or at least offer to pay for more compute units.
`Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 3: custom program error: 0x1`
I am getting this issue when using `solongwallet`, though it works well in `sollet.io`.
Is anyone aware of this issue?
I know someone is working on a solidity transpiler but it's going to be slower than rust programs
I'm aware you can make nft tokens, but ones with associated metadata?
Nft* token with *attributes*
Any plans/eta to support solidity?
Is there documentation on nft spl tokens, or is that currently possible?
and it worked before
want to get end to end working though
gonna comment that one line out and come back to it later...it's a weird little mystery

So this will kill it
but neither mutate it
both use the same token_program_account_info variable
both are important
one is asserting that the token you're using is the token program the timelock account expects, the other is asserting you have permission to do an operation on this particular timelock by tossing your sig token back and forth between the timelock's validation account and your own
very funny behavior
but if you remove it, then this works
when assert_token_program_is_correct is called ANYWHERE in the same calling function as assert_is_permissioned, above OR below
To say that token_program_account_info and timelock_mint_authority_info are the same thing

Causes this:

basically doing this:
i havent seen anything like it, but it's no off-by-one error, that's for sure
like...the stack always messes up the pointers to these variables if i use that if statement
its some weird kind of runtime issue
the actual code that calls this function uses different variables
which is otherwise unrelated, it doesnt
if I remove this if statement which is elsewhere in the action
the "Hid" in position 4 overwrites in the last
Args F3JE6L5mVoXtdm9z4wTqcPXCYtURaR77L2cWJir8EyvG HxvD3NRdQx6VPBnrqL4zoCro1vgL88gZmcz2Lig9qMDp 7gpEhacptrYD7iyRb1tCyZvwct59rrYeTpnv9Wy9jkcr HRhDDJgy6vRbG1aghzVNU8DtJ4sJBBRcwhVrxQ3n1RRe HiDVKkYMS76JfKNBrS1GQAhTPkhJ3cXcMRVCmpKgXr7A DSbGXNcuWFgsCDNUy4Rk9DmYZXHGswAY9sFXGLv1wrJH HiDVKkYMS76JfKNBrS1GQAhTPkhJ3cXcMRVCmpKgXr7A
so if I do this if statement that changes no data structures above or below this code, then one of my arguments in this function overwrites the token info
nah turns out it is a very interesting runtime bug it looks like


///////////////////////////////////////////////////////////////////////////////////////////////

Hi Everyone, have few questions:

 1. I noticed that `nonce` in Nonce account changes when the status of transaction(that includes the `nonce`) changes from `Processed` to `Confirmed` (Even if number of confirmations are still at 0).
What would happen to the `nonce` in the case when transaction doesn't get confirmed (in case of rollback)
 Would the nonce change back to the old nonce in that case??

 2. regarding rent exempt fees..
    Lets say rent exempt fees is 20 SOL, and an account has 21 SOLs in it. What would happen to the account balance after 2 years? Would the account have 1 SOL left in it?? 
    Would those 20 SOLs ever be auto deducted as rent, or does it become rent free forever??
    
 3. Lets say, Account didn't have enough balance to pay rent and validators purged the account from their memory. What would happen to the transactions submitted in the  past by that account?.. Would the transactions data(e.g. Memo data) stay in the ledger forever even  if  account is purged? Would the public still be able to access the past transactions using the account address??

 4. What is the minimum account space required for a nonce account? 128?
since its not open source i decided to build competition
I used it, its good
😆
hey When will I know the result
Hi team. I have 2 questions. Why doesn't SPLT support symbol? How can I map an address SPLT to its symbol?
Greetings: Am I able to use openssl in my BPF program?
Good point, I'm adding it to the README and docs now
But the GitHub search doesn't see the release notes, so I couldn't find that information.
<@!539801435571748868> Thanks, that helps a lot!
This was poorly documented, so I added some info at https://github.com/solana-labs/solana-program-library/releases/tag/token-swap-v2.0.0 but I can add some more info on the README as well
What is the `SWAP_PROGRAM_OWNER_FEE_ADDRESS`  value for token-swap in devnet? When creating an token-swap, I get the error `The input account owner is not the program address` for fee account. I use the `SwaPpA9LAaLfeLi3a68M4DjnLqgtticKg6CnyNwgAC8` as a fee account owner.
Hi, solved the problem. Thanks for the help!!!
This is the updated code if anyone needs it. It is meant to send SOL funds from one's address to other. 
https://github.com/VishalVikramSingh/solana/blob/main/test.js
i think this is only extension for solana right now and without firefox support
Anyone used Solong extension ? opinions ?
these things here https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js are not documented here https://solana-labs.github.io/solana-web3.js/ because they are considered a separate thing?
Npm install @solana/spl-token
You can use spl-token library to make It easier
Can somebody link me an example of token transfer using solana web3.js ? 🙂
Hi all ! 
I am trying run a solana-validator node as  ethereum full node which only get data
I know when i start a validator , it will download newest snapshot again and after it will synchronize data
But when i run it , I can't query block info , v..v  from localhost
This is my query 

root<@!750257486975467582>na:~# solana block-height -u http://127.0.0.1:8899/
61612414
root<@!750257486975467582>na:~# solana block 61611395  -u http://127.0.0.1:8899/
Error: RPC request error: Failed to deserialize RPC error response: {"code":-32004,"message":"Block not available for slot 61611395"} [missing field data]

Please help me how i can query from my local node and how i can synchronize data from block 1 as ETH full node

I run with command 

solana-validator --ledger ~/validator-ledger   --rpc-port 8899   --entrypoint entrypoint.mainnet-beta.solana.com:8001     --entrypoint entrypoint2.mainnet-beta.solana.com:8001     --entrypoint entrypoint3.mainnet-beta.solana.com:8001     --entrypoint entrypoint4.mainnet-beta.solana.com:8001     --entrypoint entrypoint5.mainnet-beta.solana.com:8001     --expected-genesis-hash 5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d  --wal-recovery-mode absolute_consistency --limit-ledger-size --log ~/solana-validator.log
log file: /root/solana-validator.log
Oh okok that's easier than I thought
The PDA seed is public, it’s fully visible from any transaction that uses it.  Instead the standard authority pattern is to store the user’s primary wallet address in the PDA account data.  Then the program can check that the user’s primary address signed the transaction when it wants to determine if the user authorized a program instruction
If I understand correctly, with PDA if I want several users to have their own PDA each, I should save the seed in the client local storage and their public key is also stored as raw data in the PDA, so that's the way he can 'authenticate' and modify tha PDA data
Thanks for the help!
Ok cool will take a look
Yep, main reason to use a PDA over createWithSeed is when the program needs to sign instructions with the account
Also `createWithSeed` is convenient (I also find it a little easier than PDA, since there's no bump seed, depending on your use case).
A PDA derived with the user’s wallet address seems pretty nice.  No need to do any expensive account searching or local storage at the client level.  Derive the address and either it’s there or not.
Is PDA really the best way?
How is an app suppose to keep track of the different accounts associated with a user for your program?
locally as a hack, yes I think that'll do it.  To plumb it properly though `solana-test-validator` as a command-line argument will take a bit more effort
If I want to up the gas limit for solana-test-validator do I change the sdk code here https://github.com/solana-labs/solana/blob/02432a548fa940bd589c88a621952ef66d53145b/sdk/src/process_instruction.rs#L132
<@530831445955051553> usually someone from the community picks it up
Alright fair enough
By default I think we don't log program `msg!()` statements to the validator log anymore, as the validator log is for node operators and not for app developers.   `solana logs` is a nice way to view app `msg!()` logs as they stream by
It seems as though my msg! statement is not logging to the validator log when I call my program loaded into solana-test-validator. Am I missing something? Thanks.
<@530831445955051553> gitcoin grants are great
If you can introduce any of them to me that would be a helpful next step
Ok will take a look. Are there any software development contractor teams that are familiar with the Solana Ecosystem? For example, we have a few teams that are really familiar with ICON development that usually take on contract work from outside teams
Bridges nearly always follow something like https://docs.solana.com/integrations/exchange
There are tons of docs on https://docs.solana.com/
Move is not the vm on Mainnet
Once I have some specific developers I can work with I'd like to share our functional specification and detailed docs. Let me know if you guys have other suggested next steps
<@!439210198142550016> moving our conversation over here and maybe others can help me get started.

I would like to speak with somebody about integrating Solana into ICON's interoperability solution, BTP.

Without going into too much detail, we have a trustless, decentralized and secure bridging technology (can bridge any time of data) that will be live around July of this year and hoping for testnet integrations with other chains sometime in May. I'm hoping to add Solana to the list, but first need to understand more about your technical architecture, specifically, Move VM and your consensus mechanism. This integration will take little to no resources from your team outside of answering questions as we develop. 

Ideally we'd like to contract a developer group familiar with Solana technology, but we have our own resources that can do research and implementation if necessary. As a next step I'm hoping to speak with developers familiar with Move VM so we can share our specification and begin discussing what needs to be done
lol i thought it was a bot
oops! Ignore that Scott!
Hey, thanks!
<@530831445955051553> hi
I'm noticing a lot of such transactions. Serum dex seems to be better though
<@!445425471027544095> are you noticing that transactions take a long time to approve or timeout entirely?
I would literally pay you guys a coffe everyday, thank you very much
Ohh okok the last sentence was the info I was looking for, already read the doc thanks
The associated token account program is a pretty simple example of how to create a token using a program derived address, https://github.com/solana-labs/solana-program-library/blob/master/associated-token-account/program/src/processor.rs
This can only be done within the program itself, not through Javascript, since only the program can *sign* a program derived address
Is token.createAccount(programPublicKey) creating a program derived address of the program? If no, how could I create a program derived address which is also a spl token wallet? If yes, how to specify the seed?
Well, how to get the USDC accounts from users?
No, I don't.
do you know roughly is it around 50% or 10% or 1%?
depends on the current network conditions, with the amount of forking that's been happening on mainnet-beta over the weekend, pretty high.  Not sure an exact %.  Waiting for "confirmed" (previously known as "singleGossip") is much better
Can I see account info changed after invoking another program with this account as argument? For example run account creation and write data into that account immediately after system instruction returns
What's the probability of a transaction with confirmationStatus == "processed" going unconfirmed?
<@!555204910321369099> Support for dumping non-upgradeable programs added here: https://github.com/solana-labs/solana/pull/15598


///////////////////////////////////////////////////////////////////////////////////////////////

Is it possible to decode transaction inner instructions to readable format using solana web3?
i was in project serum spl-token-wallet and it didn't have that bit
thank you !
oh, I think it is! https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js#L1067
It might not be yet, not sure
is that not in the web package?
https://spl.solana.com/token#burning
i am trying to find that in the documentation
It's already supported, `spl-token burn ...`
$ solana-install init v1.5.16
are there any thoughts on giving a user the ability to burn tokens for splv2
Can anyone tell me how to update solana on Ubuntu? (also using wsl, coincidentally)
I do everything on windows with WSL, no problem for Solana tinkering so far
<@!445425471027544095> this is me
how do i use https://ipfs.io/ and solana, is there any docs?
(ie. disable trading between pools of the swap)
once a swap is up, i assume there's no way to disable it?
https://lld.llvm.org/windows_support.html
have you tried LLD, it is the linker with clang on windows
hey all, trying out the mint functions through CLI to play with NFTs and am failing cargo install spl-token-cli

looks like "link.exe" is missing. im on windows, how can i fix this?
When trying to bring up localnet on my Mac M1 machine using `❯ npm run localnet:up`, I am encountering some issues.

I installed Docker using the [Apple Silicon Tech Preview](https://docs.docker.com/docker-for-mac/apple-m1/), and when I run, [this is my output](https://pastebin.com/hkK141iZ).

Has anyone found success running a localnet on Apple M1 chipset?
how would i add a pinata CID to a NFT in solana?
Not many windows users here, if you can jump to Linux or macos you’ll probably get much better support
yes it is cargo 1.50.0 and spl-token-cli v 2.0.9 is getting installed
Lmk what else I can try, want to get started building on solana
The account addresses (32 bytes) that are referenced in a transaction do count towards the total over-the-wire transaction size limit
Accounts count toward transaction size, right?


///////////////////////////////////////////////////////////////////////////////////////////////

So far as I know it's the expected behavior.  It's an implementation detail users don't need to really know about.  I'm not surprised they don't draw attention to it
Ok, thanks, but is it correct behavior? I'll ask their team, but just want to know, never saw a note or warning about this.
Again this is a better question for the Serum devs, but I believe that account stores the order description
Yeah, thank you, I'm aware of Serum fees, but I have an interesting situation, that I would like to share and maybe resolve with you:
Some order-placement requests have only a 0.00001 SOL fee, but some of them require additionally create an account for open orders like this
https://explorer.solana.com/address/9TeSKv2K9Kw3eoeF5fEAck28YG8RAQaQC2rq65dANFUG

This operation costs 0.023 SOL approximately, can you please explain why I need to do this for trading for each pair?
Rent isn't really a "charge" because it can be fully recovered upon closing an account
Those should be the only _native protocol_ charges though
AFAIK the contract charges maker/taker fees for instance, but I know nothing about that
You'd have to talk to Serum people to know for sure
Can you please confirm that it's all? <@!585868308419444749>
Ok, any other types of rent/fees I need in the trading process to pay?
Only the first one is fees.  The second is rent
And then try to predict how long on average it's going to take to produce mvines?
Hey guys, can someone please help me to understand which fees I'm paying for Solana when I'm trading on Project Serum (or any other DEX)?
As I know, I need:
 - 0.00001 SOL for trade
 - 0.002039 for token creation in my wallet

Can someone please confirm that these are the final fees and I'm not missing something?
mvines did you do a progression of keygen with 'm' then 'mv' then 'mvi' etc
Yeah I was just punning to the "fast, large, cheap" memory trilemma 😉
Anyway thank you for your help, it is invaluable to me as I learn more about this stuff
Like I can be 'fast enough' and 'secure enough' and 'cute enough' for my needs all at the same time ...
I think you are really just choosing to exclude the extremeties of the space
Not to be argumentative, but to clarify, you are choosing three points on three distinct intervals ...
🙂
Fast, secure, cute.  Choose two
Just making sure I understand, thanks
Sure
Whereas not using a passphrase is gimping in the real world space where anyone who can find your paper wallet has your key
Yeah but that's gimping in a totally different space and with a computable risk factor no?
Could this be benfords law?
You're already gimping security by grinding a prefix though 🤷‍♂️
Correct
But then you couldn't use a passphrase right?
Oh I see
I'm saying it'd be faster to never generate the the wordlist at all untill you find a match, but the spec requires this
Am I understanding this correctly?
But you can't because their algorithm requires that all of the characters of the words be used in sum total to generate the keys even though they don't all provide entropy?
I think?
Still nothing after months of 64 load average.   That `m` prefix is really rough..
So you are saying that it would be faster if you could build a table in memory mapping words to their corresponding entropy bits and then build your key from those bits?
It makes it faster to resolve the words on something like a HW wallet
I see thx
The four chars always distinct thing is just for UX
Or maybe I don't know what I am talking about
There's a direct mapping from each 11 bits of entropy to a word in the table with is fully free for the first N-1 words, the last word has some bits fixed because they need to match the checksum
I guess that would mean 16 available bits of entropy, and then some kind of redundancy which brings it down to 11?
I got confused with their word table that has first 4 characters always distinct
Oh I see
Each word represents 11 bits of entropy, IIRC
Am I misunderstanding?
So they only use the first 8 bits of entropy from each word but then use the whole word for KDF?
Yeah
Oh they do?
Yeah, kinda lame that they run the KDF on the seed phrase string, not the entropy
What would be a quick pointer for doing performance analysis of rust programs?
Nope same issue has always existed.  It's probably just more noticeable due  to all of the mnemonic chicanery
making it much less palatable
Also the mnemonic search is about 1/10 the speed of non-mnemonic
Thank you for that,  thought that maybe I was finding something unusual
Ask <@!445425471027544095> about grinding `mvines*` pubkeys 🙂
I see
Err, actually the private key, but there's a point multiply which commutes the bias IIRC
The top few bits of a pubkey are non-uniform
100 keys using non-mnemonic with prefix '2' take .12 seconds
The bias is in ed25519
100 keys using non-mnemonic with prefix '1' take 1.3 seconds
This difference appears to extend to using the normal, non-mnemonic based search also
3.8 seconds to find 10 keys prefixed with '2'
Timings show 35.4 seconds to find 10 keys prefixed with '1'
(although testing with a passphrase I am finding little difference)
(by the way I am using an empty passphrase for testing)
Unless there is some bias in BIP39 against certain keys?
I am surprised because I would expect the specific prefix to not be related to the time it takes to find a match
What I find is that if you search for public keys with a prefix if '1' using this technique, it is significantly slower than searching for any prefix of '2' through '9'
Where I am allowing finding public keys with a match whose seed is a mnemonic and passphrase
I've noticed something unexpected with the change I made to solana-keygen grind
ftx.us
Can probably withdraw usd as usdc spl token on there, at least it's possible on ftx.com
Ftx.us?
for the USA
Does anyone here know which service or exchange we can use for people to buy crypto with ach or cc and convert that money into an spl token or usdc?
How to fix it if a code change is required to reflect the correct liquidity. Even the values on https://solanabeach.io/markets don't seem line up. So trying to understand why its being reported so differently across platforms.
Sorry if this isn't totally helpful
https://twitter.com/ProjectSerum/status/1371293441439633413
Or maybe it could also be the V2 thing
Oh
https://twitter.com/ProjectSerum/status/1372850143846797318
There was a bunch of tweets from serum about it
What are you trying to debug?
How recent was that? Is there more info I can read to try debug this?
Possibly linked to the wUSDT to USDT change recently
Does anyone know why the liquidity figures are so different between https://swap.bonfida.com/#/info and https://swap.projectserum.com/#/info ? I thought they are using the same Swap program and pools and should be identical.
If I want to create a farming and determine the reward rate, do I need to fill it out when creating a Program ID?
Do you have a sample for farming?
has anyone worked on integrating w/the solflare wallet? we're trying to connect to a solflare wallet, but the pop up just comes up and then disappears
Ok, got it, thanks for your answer.
Correct: https://github.com/solana-labs/solana/issues/15187
It looks like there is no ping-pong to let client to know the connection is alive or not.
I have an estimate of total solana accounts
https://solanabeach.io/supply

265423 according to this site but I want to pull the data myself
Hey all ! Been having fun with solana now looking to pull some analytics -) anyone know of a good way to get unique addresses  / total accounts ?
yeah, i have seem the code, but how to know the connect is alive?
I'll file an issue about adding account support
There is a pubsub-client: https://github.com/solana-labs/solana/blob/master/client/src/pubsub_client.rs
Looks like the api only supports logs, slots, and signatures atm, though. Perhaps the code is still useful to you?
I need use wss in rust.
Hi, is there any api in `solana-client` to sub-unsub some accounts?
If someone has DMA you're screwed anyway
Not sure if there is a security concern with keeping the passphrase in memory during the entire possibly long grind process?
got it, will do so in future, thank you
Yeah, this ^ 😛
You can just force push your way to victory 🙂
Nbd either way, but we typically just update the originals.
OK I am not sure if I should have updated my original pull request or made a new one but I was embarrassed by my mistake so blew away the original pull request and made a new one 🙂
np! We should probably duplicate that info on the contributing page. `cargo fmt` should get you past those first CI issues.
Oh I see, sorry I didn't see that part of the readme 🙂
That's awesome! I'll add the tag to run our CI checks/tests on it.
As far as style, we hew to rustfmt, so if you've installed it as per our readme, just run `cargo fmt` to fix issues.
Also since Rust is so new to me I am not sure if I have violated any stylistic rules.  Please advise 🙂
https://github.com/solana-labs/solana/pull/16107
I have submitted a pull request, but I have no idea if I have omitted any steps that I should have taken first.
Hi, I'm new to a lot of process here.  I haven't done a lot of github workflows, am new to Rust, and new to the Solana code base.
Rent is only taken every epoch. Have you figured out what lowest possible account balance is for an account? Is it possible to have an account with 0 balance that just disappears as soon as the next epoch rolls around
great, I will give it a try. Thank you !
https://github.com/project-serum/serum-ts/blob/master/packages/stake-ui/src/utils/lockup.ts#L32
thanks, good idea. How can I programmatically read the logs on the client side ? (maybe you know some code example)
You could use a `msg!` and read the logs on the client side by simulating the transaction.


///////////////////////////////////////////////////////////////////////////////////////////////

Is solana EVM compatible meaning smart contracts from ethereum can be easily ported on it?
Of course.  You can check out this branch: https://github.com/moshthepitt/solana-payment-processor/tree/testsacc and run `cargo test-bpf`.  This here is where the action is: https://github.com/moshthepitt/solana-payment-processor/blob/testsacc/src/processor.rs#L76

Thanks for taking a look.
Makes sense thanks
If an instruction fails after modifying account state, that account will be dirty for any subsequent instructions in the transaction
What type of exploits?
<@!149990576572334080> Any error that occurs during a cross-program invocation (either within the runtime or from the called program) will result in an aborted and failed transaction
Correct.   We did this intentionally to avoid exploits
is there way to handle errors from cross program invocations  
```let result = token::transfer(cpi_ctx, amount);```
 so it will not break code execution ?
Hey guys I have some code I've transpiled from solidity to rust. Anyone have any idea how long and how easy it is to deploy on solana?
program-test is more restrictive then then the solana runtime where you can pass then in any order (and can pass more than are required)
the program test framework iirc requires the accounts be passed in the order they are listed in the `Instruction`
It's packed with the CLI tools. https://docs.solana.com/cli/install-solana-cli-tools
now that's a rollercoaster
oh it's yanked
nvm, got it on crates.io 🙂
Hey, what's the best way to obtain `cargo build-bpf`?
Can you try updating web3 to a newer version? Old versions of web3 are unfortunately don't like it when new parameters are added to json responses. I believe that has been fixed on later versions. Maybe try 1.1.1?
<@!801445539245719552> maybe you could post a sample project that has the issue you're experiencing?
Thread: https://twitter.com/iamnomad/status/1375474034855530499?s=21
I copied your exact code and it runs fine for me 🤔
Method Connection::getTokenAccountBalance() returns error like below ("@solana/web3.js": "^0.90.4")
Although we see its balance on devnet:
https://explorer.solana.com/address/73Qp2RDAgzkKNbLvFYqrc2HNT5n6FKqkipP9Ef6XYGhK?cluster=devnet

"{\"type\":\"{jsonrpc,id,error} | {jsonrpc,id,error,result}\",\"value\":{\"jsonrpc\":\"2.0\",\"result\":{\"context\":{\"slot\":45397354},\"value\":{\"amount\":\"2842\",\"decimals\":2,\"uiAmount\":28.42,\"uiAmountString\":\"28.42\"}},\"id\":\"79b3acb9-6438-4754-9d00-4fba873eea88\"},\"path\":[],\"branch\":[{\"jsonrpc\":\"2.0\",\"result\":{\"context\":{\"slot\":45397354},\"value\":{\"amount\":\"2842\",\"decimals\":2,\"uiAmount\":28.42,\"uiAmountString\":\"28.42\"}},\"id\":\"79b3acb9-6438-4754-9d00-4fba873eea88\"}],\"failures\":[{\"value\":{\"jsonrpc\":\"2.0\",\"result\":{\"context\":{\"slot\":45397354},\"value\":{\"amount\":\"2842\",\"decimals\":2,\"uiAmount\":28.42,\"uiAmountString\":\"28.42\"}},\"id\":\"79b3acb9-6438-4754-9d00-4fba873eea88\"},\"branch\":[{\"jsonrpc\":\"2.0\",\"result\":{\"context\":{\"slot\":45397354},\"value\":{\"amount\":\"2842\",\"decimals\":2,\"uiAmount\":28.42,\"uiAmountString\":\"28.42\"}},\"id\":\"79b3acb9-6438-4754-9d00-4fba873eea88\"}],\"path\":[],\"type\":\"{jsonrpc,id,error} | {jsonrpc,id,error,result}\"}]}"
Hi, how can I get the deployed program source code and understand how to interact with it on solana explorer? Like I can read contract and know it's ABI on etherscan.
Thanks for taking a look.  Really appreciate it.
This seems strange, I'm going to repro this evening and get back to you on this
Thanks, this is what I have now (removed some println statements):

```
    let address_with_seed =
        Pubkey::create_with_seed(signer_info.key, "payment-processor", program_id)?;
    assert_eq!(*merchant_seeded_info.key, address_with_seed);
    let create_account_ix = system_instruction::create_account_with_seed(
        signer_info.key, // ==> D4Y1cheDSqvYhKx1sNi8LyZ1y2J4do7vdUhec28t3nyT
        merchant_seeded_info.key, // ==> FZ1fDWzjfiS8hkEpPLndQwb7A63vwERcawoDEz3PD6ig
        signer_info.key,
        "payment-processor",
        Rent::default().minimum_balance(MerchantAccount::LEN),
        MerchantAccount::LEN.try_into().unwrap(),
        program_id,
    );
    msg!("Creating merchant account onchain...");
    invoke(
        &create_account_ix,
        &[
            signer_info.clone(),
            merchant_seeded_info.clone(),
            signer_info.clone(),
            system_sysvar_info.clone(),
        ],
    )?;
```

Which gets me the same address mismatch error:

```
[2021-03-26T10:16:54.887282207Z DEBUG solana_runtime::message_processor] Create: address D4Y1cheDSqvYhKx1sNi8LyZ1y2J4do7vdUhec28t3nyT does not match derived address FZ1fDWzjfiS8hkEpPLndQwb7A63vwERcawoDEz3PD6ig
[2021-03-26T10:16:54.887460318Z DEBUG solana_runtime::message_processor] Program 11111111111111111111111111111111 failed: custom program error: 0x5

```

This looks like it compares `signer_info` with `merchant_seeded_info`.  Where am I going wrong to trip it up this way?
Can you try logging the public keys of `signer_info` and `merchant_seeded_info` in your program code to make sure they match what you expect? You can call `merchant_seeded_info.key.log()` I believe
You're still doing the following, right?
```rust
let create_account_ix = system_instruction::create_account_with_seed(
    signer_info.key,
    merchant_seeded_info.key,
    signer_info.key,
    "payment-processor",
    Rent::default().minimum_balance(MerchantAccount::LEN),
    MerchantAccount::LEN.try_into().unwrap(),
    program_id
);
```
I'm not sure, I must be missing something obvious but can't figure out why this is happening
Ok so it complains that the address does not match the derived address.  Any ideas on a work-around for that?
> What should the order of the accounts be in the invoke statement?
Order shouldn't matter
Oh! I didn't realize you were passing your program, it should be the system program
Some further testing gets me mixed results.  I feel like it might be something I am doing wrong
rather than a bug.  (Not discounting your opinion, which I appreciate a lot, but just thinking out loud with the desire of not wanting you/others to hunt for a bug that may not exist because I am making a mistake of sorts)

For context, this is how I create the seeded pubkey:

```
Pubkey::create_with_seed(
    signer_info.key,
    "payment-processor",
    program_id
).unwrap();
```

If I change the invoke to look like this:

```
invoke(
    &create_account_ix,
    &[
        signer_info.clone(),
        signer_info.clone(),
        merchant_seeded_info.clone(),
        program_info.clone(),
    ],
)?;
```

I get:

```
thread 'solana-bank-forks-client' panicked at 'assertion failed: `(left == right)`
  left: `2`,
 right: `3`: Missing or not enough accounts passed to invoke', /home/mosh/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-test-1.6.1/src/lib.rs:269:9
```

And like this:

```
invoke(
    &create_account_ix,
    &[
        signer_info.clone(),
        signer_info.clone(),
        merchant_seeded_info.clone(),
        system_sysvar_info.clone(),
    ],
)?;
```

I get:

```
Create: address DF1qVfpYMB476BNEoGWNmZ8owqiwVpJgApRrA4aTBNQQ does not match derived address 3ihQLPi7cfViqwbBQ5rTqjyuLL2tBUN3U2HYbAAa2zGc
```

In this case DF1qVfpYMB476BNEoGWNmZ8owqiwVpJgApRrA4aTBNQQ == signer_info and 3ihQLPi7cfViqwbBQ5rTqjyuLL2tBUN3U2HYbAAa2zGc == merchant_seeded_info

I am using solana v1.6.1

So some questions:

1. What should the order of the accounts be in the invoke statement?
2. Should I use the program that was used to create the seeded address, or the system program?
That's correct, I was just confirming. I think there's a bug in the program-test framework that requires the number of instruction accounts to match the number of account info's passed to invoke. In your case, `signer_info` is used twice so you only pass it once to invoke. That *should* be fine, but it looks like it isn't handled well. You could try getting around it for now by passing another copy of `signer_info` to `invoke` I think. In the meantime, I'll work on a fix
I am testing locally with `cargo test-bpf` - what should I use?
<@!801445539245719552> that might be a bug. Are you testing with the program-test framework?
Trying to call system_instruction::create_account_with_seed in an on chain program.  So far I have this:

```
let create_account_ix = system_instruction::create_account_with_seed(
    signer_info.key,
    merchant_seeded_info.key,
    signer_info.key,
    "payment-processor",
    Rent::default().minimum_balance(MerchantAccount::LEN),
    MerchantAccount::LEN.try_into().unwrap(),
    program_id
);
msg!("Creating merchant account onchain...");
invoke(
    &create_account_ix,
    &[
        signer_info.clone(),
        merchant_seeded_info.clone(),
        program_info.clone(),
    ],
)?;
```

This isn't working and fails with "Instruction accounts mismatch.  Instruction contains 3 accounts, with 3".

How should the invoke/invoke_signed be structured?  What am I missing?

Thank you for your help!
Has anyone built recurring payments on Solana yet?
<@!248066053161222144> <@!345046176149536769> thank you both. It looks like Circle.com, USDC does exactly what I need.
Gotya, thanks


///////////////////////////////////////////////////////////////////////////////////////////////

Is transaction size limit defined for one atomic transaction or all bundled transactions ?
Where do you get the solana-test-validator command ? Didn't got it by installing solana
But you can interact with it like a public one...
```
$ npm run start

> helloworld@0.0.1 start
> ts-node src/client/main.ts

Let's say hello to a Solana account...
Connection to cluster established: http://localhost:8899 { 'feature-set': 169108138, 'solana-core': '1.5.13' }
Using account EHV29dfvAbafgZh9u34asg9nhtaXGPSfSyDfzXJkwqyp containing 0.26325072 Sol to pay for fees
Program already loaded to account E9qvi8QYHvV2R7nxhq9NySMtVJBx1e42fouj6GTWsqQ1
Saying hello to 3rDJnewbU5XVVgA4Da4CFJYjQUpsVN9ttgwzG47WLE15
3rDJnewbU5XVVgA4Da4CFJYjQUpsVN9ttgwzG47WLE15 has been greeted 2 times
Success

$ solana-keygen new --no-passphrase -so test-wallet.json
Wrote new keypair to test-wallet.json

$ solana -k ./test-wallet.json address
C7hpTZEgPa6YYsZLdwmxyBhGDm45bbXREANCsowgF9Ti

$ solana -k ./test-wallet.json -u http://127.0.0.1:8899 balance
0 SOL

$ solana -k ./test-wallet.json -u http://127.0.0.1:8899 airdrop 10
Requesting airdrop of 10 SOL from 127.0.0.1:9900
10 SOL

$ solana -k ./test-wallet.json -u http://127.0.0.1:8899 balance
10 SOL

$ solana-keygen new --no-passphrase -so test-recipient.json
Wrote new keypair to test-recipient.json

$ solana -k ./test-recipient.json address
5Z9GN5VXJzVE2M8Pcwd4oqBw9hgtJFFdH8j9wWQcVR1B

$ solana -k ./test-recipient.json balance
0 SOL

$ solana -k ./test-wallet.json -u http://127.0.0.1:8899 transfer test-recipient.json 5
Signature: icbLKMUtCgbWm3gSiXGc7oiED3MvxhgwvAZcnykkd6efEzcfHMZcPSMSQvT4LuscyU8aCEBB4pfT2n7T2KyJMGr

$ solana -k ./test-wallet.json -u http://127.0.0.1:8899 balance
4.999995 SOL

$ solana -k ./test-wallet.json -u http://127.0.0.1:8899 balance test-recipient.json
5 SOL
```
So that `solana-test-validator --log` command is your local cluster, not one of the public ones
usually when i follow some readme file i run into some problem
well doing that was easy
thought it was real sol
It's just as easy to make a new one though
ah its just a demo
You _could_ reuse the demo keypairs
are any of these the private key
ok makes sense
The idea is to give the minimal example and not cluttering things up with superfluous stuff
does it give me a private key to the solana
thanks!
welp
Nope just some boring text 🙃
thanks
thought there was a web app front end i had to view
fuck me
fcu kem
oh
Launch what?  It's just a CLI example
in the README
i dont see anything in the documentation
so how would i lunch it
Our RPC servers speaks JSONRPC, not HTTP
yes
It looks like you're trying to connect to an RPC server with your browser
thanks
ok
<@456226577798135808> This is probably a better venue for your question in <#428295358100013069>
<@!539456467086868521> Thank you sir will send you a DM
You can DM me. We provide development, testing and auditing services across a variety of chains.
alright, will do that, thx for your time !
Just look at any web3 call from serum or any other solana project from the hackathons
It's "server less" in a loose sense
you still need a domain name and a centralized server to generate a page that would talk to solana via the web3 library, am i wrong ?
if yes, what url should i call to send instruction to solana ?
I have an idea I want to build on Solana however have no dev or coding experience is there a place I can meet devs to talk about the idea with ?
<@267610913773715456> down! Sent the invite :)
Man UI looks slick AF - throw something on my calendar would be cool to chat https://calendly.com/dominic-solana
looks really nice
<https://solana-labs.github.io/solana-web3.js/>
you just use the web3 library to send instructions directly to solana
solana dapps can be purely front end for sure
Both the Solana and Serum packages are well coded though, with typescript pretty easy to read. Obviously done by some experienced devs... The `oyster-swap` example on the other end... So many providers using Context (awful for re-render performance) and some rather nasty long files... So many headaches and redbulls later...
I wish lol, had to read their packages' code directly and reverse-engineer it all
Do you have any documentation about this ?
I'm able to get the list of solana tokens, and serum markets using the `@project-serum/serum` and `@solana/spl-token-registry` packages
Nope, you can call the web3 apis directly from the front-end from my understanding
The web3 apis is called via a page sent by a centralized server isn't it ?
I imagine at some point though once The Graph is integrated with Solana could also just create a subgraph and get exactly the data I need, but websites only tend to use 1 cpu thread when these days there are plenty... And bandwidth for json data isn't exactly a bottleneck either lol
Just need to call the web3 apis directly and do a lot of number crunching in the browser... Luckily you can use webworkers and crunch all the numbers on a separate cpu thread so that it doesn't block animations / interactions at all for the users
That's a really cool project
How do you handle front end with 0 backend on solana ? 😮
Applied for a grant with Solana, I'm hoping they gimme some money to work on this full-time
Started last week from scratch, hoping to make a swap dapp that uses multiple protocols under the hood... 

Serum (orderbooks) 
Harmony (pools) 
1inch (api) 

... So that regular users can swap any number of coins for any number of other coins, using any number of connected wallets, or help rebalance their portfolios in one-click 🙂
But also I want my dapp to be 100% decentralized, ie: use Arweave instead of AWS... Purely connect with Solana/Serum/The Graph endpoints from the front-end, so that people can enjoy a 100% uptime DAO 🙂
My goal is to create a dapp that is very simple for people while doing all of the complex routing behind the scenes with explainers for each step that it is automating for them
The purpose is that I would like to send my users a beautiful email after they've made a transaction on the dapp I'm working on basketswap(dot)io (not sure if I'm allowed to shill my own dapp or not)
Nice!
What's the purpose of emails / texts for your dapp?
Google jabber, it was a messaging dapp that won the first solana hackathon
Is there a way to send emails or texts in a fully decentralized way yet? I don't want my dapp to have a backend at all...
sorry am very new to javascript and node
hey guys how do i use the web3 library to getAccountInfo?
just bumping this if anyone has a suggestion, i'm sure it is an extremely n00b question 😅
> Keeping accounts alive on Solana incurs a storage cost called rent because the cluster must actively maintain the data to process any future transactions on it. This is different from Bitcoin and Ethereum, where storing accounts doesn't incur any costs.
it doesn't
Maybe I'm missing the target audience.  How does "solana contracts stuff" differ from development?
but anyway, i hope i haven't been rude or anything. thanks for engaging in hearty discussion
all i can say is that i have a couple of friends trying to learn solana contracts stuff, and of all the links i've sent to them, none of them have been from the official docs
Maybe we do need an "advanced user" section though
Those are _development_ docs though
but you are the strongest rationalist on the solana team
i love you trent
docs are different than development
ALso, if you don't have CLI setup, I dunno how you're getting any development done 😉
if someone is deploying something then they will have already gone through steps 1 and 2 i listed above
mmh, so if i understand correctly:
- if im not rent exempt, i loose some SOL periodicaly
- if i am rent exempt, i pay nothing (just put some SOL and can get them back)
In case of rent exempt, my data still take some place on some server, rent exempt is 100% free or im missing something ?
in no way am i suggesting people actually use this at runtime
If I wanted a rent-exempt account and used that rule of thumb, I could miss and get my account reaped by runtime
But that rule of thumb is going to fail you getting the actual value you want.  So would likely be poor lore to communicate
i use it a lot
it's a nice easy basis to do back of the envelope calculations with
that's why i said 0.007 sol for 1kb is just a rule of thumb
1. requires setting up all of the command line stuff
2. still is kind of hard to interpret since you need to know in advance how many bytes exactly
How is this not less thinking?
```
$ solana rent 42
Rent per byte-year: 0.00000348 SOL
Rent per epoch: 0.000003239 SOL
Rent-exempt minimum: 0.0011832 SOL
```
like me!
and people who are lazy and don't want to think
docs are for noobs
i disagree
no
It should probably just be, "Use `solana rent ...`" 🙂
that's easy enough to remember, and 1kb ends up being a lot of data since everything is stored as unsigned ints
but the rule of thumb is 0.007 sol for 1kb
also the rent exempt docs stuff have lots of really complicated maths
But yeah, the rent-exempt page is missing the fact that those SOL are recoverable
Ah, good to know
You're referring to a specific case of _rent-exemption_.  If an account is actually subject to rent, and rent is charged, that isn't coming back to you
Seeing "Storing Data between Transactions" would have been clearer to me 👌
nor was it as clear as it could have been to a noob who's just scanning the docs
btw on the same page on "rent" section, there isn't this information
but i don't think it would have solved the problem
yes
If you'd seen the word "data" everywhere you saw "state" though, probably would've saved some time?
for example, a serum dex open orders account, which stores data like: who owns the account, which market it's for
considering how important it is to the overall solana programming stuff, it could be made much clearer
or different examples of the kinds of data people store
just to show what the anatomy of an account looks like, with some fake "data" in there
could add a simple diagram
"State" may be more specific than what people are looking for on average
Maybe we just need to `s/state/data` there
but this wasn't immediately obvious that this is what i was looking for
like there was a section on "storing state between transactions"
it took me a while to find the part of the docs related to data storage
We'd love to improve the docs, any suggestions?
<https://docs.solana.com/developing/programming-model/accounts#storing-state-between-transactions>
you're right that the docs aren't clear about data storage stuff
it's all good
(sorry im new to all of this, this project is awesome)
do you have doc about data associated with an account ? I didn't found something on it
I want them to be tradable separately
thanks, i'll have a read
why not use the data associated with the accounts to store the list of items? That way you just initialise 1 account with like 1,000 bytes or something for 0.007 sol
Those are attributes, https://doc.rust-lang.org/reference/attributes.html
```rust
#[derive(PartialEq, Eq, Debug, Clone, Serialize, Deserialize)]
#[cfg_attr(test, derive(Arbitrary))]
#[cfg_attr(test, proptest(no_params))]
#[cfg_attr(feature = "fuzz", derive(arbitrary::Arbitrary))]
pub struct InitializeMarketInstruction {
```
[] these things
identity-service_1  | (node:42) UnhandledPromiseRejectionWarning: TypeError: naclLowLevel.gf is not a function
identity-service_1  |     at Object.<anonymous> (/usr/src/app/node_modules/@solana/web3.js/lib/index.cjs.js:222:24)
identity-service_1  |     at Module._compile (internal/modules/cjs/loader.js:778:30)
identity-service_1  |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)
identity-service_1  |     at Module.load (internal/modules/cjs/loader.js:653:32)
identity-service_1  |     at tryModuleLoad (internal/modules/cjs/loader.js:593:12)
hi there! so i am trying to include various versions of solana/web3.js into an existing project and i'm hitting this error on both 0.92.1 and 1.1.1 (latest) - is there some other variable to consider here? I do have a separate example project where both of these work fine so i'm a bit confused on what is different here
Another question, I would like to create characters with unique characteristics, not sure if creating an NFT for each one is the best option, moreover an NFT would not contain the information that makes this character unique (strength/defense/skin...) if you have ideas on how to deal with this I'd love to hear them
Hello !
I would like to create an inventory system on Solana for a game, each account being linked to a SOL wallet
The best way to have different items in the inventory is to create a token per item? I understood that to add an associated token to an account it was necessary to pay 0.002 SOL, so if my inventory contains 100 different objects, each account creation will cost 0.2 SOL ?
Not necessarily crazy as a solution, do you see something better?
You mean triangle brackets?
Different people seem to use different random collections of things in the square brackets. Sometimes across more than one lines
One thing that confuses me about reading some rust program code, what are square brackets before the functions and structs for?
Thank you for the suggestion
This is a good issue I think because it will give me an opportunity to learn more about programs on the Solana network
Good thing I was about to support ignoring memo instructions on ledger 🙂
No thank you 🙂
Got it, I'll take a look at that one next.  Thank you.
I've wanted https://github.com/solana-labs/solana/issues/10831 for a while, and is pretty close to your recent keygen work.  At the most basic,  `solana transfer <address> 42 --memo "hi"`, and supporting the staking operations would be awesome too.   `solana deactivate-stake <address> --memo "so long, thanks for all the fish"`
Would https://github.com/solana-labs/solana/issues/15215 be a good choice?
If there are suggestions, please let me know 🙂
I am now trawling the issues looking for something else to pick up
Hi, I think I am done with my first pull request to the solana project
solana has it's own exec environment but you can use Solang to compile Solidity contract into bpf compatible package


///////////////////////////////////////////////////////////////////////////////////////////////

Hi, what is the best way to de/serialize HashMap<K,V> (K could be PubKey and V arbitrary data structure (maybe another nested collection)) ?
This structure can grow and be quite big (several MB). Same thing as `mapping` in Solidity. 
I want to keep it in the account data. I'm not a Rust hacker, I have seen some options on the web but looking for a opinion 
from somebody that did similar thing on Solana already and can share experience. Can I use serde and bincode crate ?
ty kind sir.
Here are the getProgramAccounts filters to use for this fo this, expressed in Rust: https://github.com/solana-labs/solana/blob/433f1ead1ce53f31c9c9b233c4c15fdab8e87260/cli/src/cluster_query.rs#L1628-L1644
`solana stakes <vote_account_address>` will do this for you.  
This command is implemented over the getProgramAccounts JSON RPC, which is a more generic API for fetching accounts that match certain patterns (such as all the stake accounts delegated to a vote account)
<@445425471027544095>
is it offered somewhere? i don't see in the docs where its at....
using the jsonrpc api?
How can I get individual delegations for a validator?
i.e. how do i label my program + its instructions?
question: how are the address labels and instruction labels set in the explorers?
msg! only prints out if the program completes successfully?
The bpf pipeline likes to inline functions, so it's a little hard to reason about stack usage sometimes. You may want to add `#[inline(never)]` attributes to your functions to get a better idea of what's happening (at the expense of some compute unit savings that inlining provides)
Hey! You can add it after `rent_sysvar_info` in the account_infos list. The `ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL` program needs to be passed into your instruction as well
Hey guys.

I'm trying to invoke an instruction to create an associated token account, something like this:

```
msg!("Creating merchant token account on chain...");
let create_order_token_acc_ix = spl_associated_token_account::create_associated_token_account(
    signer_info.key,
    order_info.key,
    mint_info.key,
);
invoke(
    &create_order_token_acc_ix,
    &[
        signer_info.clone(),
        seller_token_info.clone(),
        order_info.clone(),
        mint_info.clone(),
        system_program_info.clone(), // TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
        token_program_info.clone(), // TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
        rent_sysvar_info.clone(), // SysvarRent111111111111111111111111111111111
    ],
)?;
```

The error that I am getting looks something like this:

```
DEBUG solana_runtime::message_processor] Unknown program ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL
failed: An account required by the instruction is missing
```

What am I doing wrong? Where do I need to put `ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL`?  Thank you for your help 🙏
Yes its stack limit you need to split data into smaller chunks
if it was done differently it would work tho, right?
because that happens on the stack?
Serialization/deserialization
too big for what?
oh yea thats way too big
it's like 11000 bytes
no i mean the one u use that hits limit
The biggest you can make? 10MB I think.
BTW Can you tell me size of biggest data account i guess its like 8k
I guess the BPF stack is 4096 bytes and the serializing happens there somehow... I can see where it's happening, gonna play with things until it works... hopefully
I hit that when i serialize big chunk of data
🤔
the index in the array with the sharp pointer
obviously something is "too big" (over 4096) but what's going on, where is the limit and what is it?
bpf error in solana_program_test mock bpf machine```Stack offset of -5264 exceeded max offset of -4096 by 1168 bytes, please minimize large stack variables``` any clues?
i am pretty sure there are some licensing issues that prevent apple from doing that
plusses and minuses
but ease of use for most stuff is way up there so
feels like they begrudgingly support it
def
yeah I wish Apple would take their unix heritage a little more seriously
oh intersting
Although you can't run a mainnet-beta validator on macOS, the kernel literally crashes from all the mmaps 🤦
I find that mac os x is *almost* there but there are enough annoying differences in the way it almost but not quite is purely unix-y
I do light dev on Mac OS X but all my 'real work' on a Linux workstation
thx
Oh that's interesting to know
Yep, macOS works great.  It's my primary env
is posix and all ...
Given that it
In that case I would guess that OS X is already there?
It would be nice to support Windows, especially for dev work.   It's mostly there, the validator compiles but dies on some socket stuff that's Windows specific.   Somebody motivated could probably fix it in a day or two.
Just kidding, the more the merrier, right?
Being able to use a Linux command line is probably a nice entry barrier to keep the riff-raff out 🙂
I dunno, do you really want to invite the level of tech support you will incur if you enable running validators on Windows(tm)?
It's technically possible for sure.  There's some long standing minor bugs/missing features that prevent this from actually working at the moment.  We're just waiting for somebody to care about Windows enough to do the dev work to make this a reality.
If so do people actually do that?!?
Is it possible to run a validator on Microsoft(tm) Windows?
Thanks, added a note that Windows is not supported. https://github.com/solana-labs/example-helloworld/commit/6e8a2c751cb7b51fb99b45113ff0f1bdf69c220f
I will see what i can do
This should really be written somewhere on the doc, solana-test-validator is required to run the hello world example so for now and with the actual doc, im not able to run the most basic example available..
<@!239813934360690690> - hey I see a couple problems:
1. Because you're on windows, you need to run this to tell git to checkout symlinks properly: https://github.com/solana-labs/solana/blob/aabe186e3fa7da2f0b2aba0a0a655a7ee9c89e71/ci/publish-tarball.sh#L49-L57, this is why your build is failing
2. `solana-test-validator` is not available on native Windows.   You can use WSL though
2 hours im on it
No joke, why the latest build isn't building ?



///////////////////////////////////////////////////////////////////////////////////////////////

I found this library in SPL but I don't think it's quite what I'm looking for since it looks like a wrapper around U256: https://github.com/solana-labs/solana-program-library/blob/master/libraries/math/src/precise_number.rs
I'm currently using this library: https://crates.io/crates/fixed/0.5.7
Guys what's the preferred way to do U64F64 math on chain in an optimized way?
Nice 👍
I'm looking at WalletConnect 2.0.0-alpha next... I want MathWallet and TrustWallet I think are the two best ones... Will allow to connect multiple wallets if possible so you don't need to copy/paste addresses when swapping between wallets
Thanks! Just pushed the animations you saw in the video to basketswap.io... Started working on it last week, but time to get back to my day job for the rest of the day... Should be hitting 60fps on mobile browsers (besides a couple frames initially onMount for now)... It I get a grant or raise funding for a few more devs, should be quick to create an app in React-Native if the app stores allow it
Is the spl-math library the preferred way to do U64F64 fixed points in Solana?
1. Only the System program can create new accounts and assign them to programs. In this case, the System program is used to create the Payee account and assign its owner to *your* program id
2. Yes, only the System program can transfer lamports *from* a native wallet account (Only the program which owns an account can debit its lamports)
3. Unnecessary. Your program can credit lamports to any account, you don't need to create a special payment account for this
4. Correct
<@!147971603156828160> <@!149990576572334080> we just released `@solana/web3.js` version `1.2.2` and `@solana/spl-token` version `0.1.2` which should resolve the `Buffer` incompatibility issue. Let me know if it's still causing problems, thanks!
Hi, I created a token, but I can't set its name, logo and website. Where it can be done?
So, some additional questions assuming the user already had a wallet account, they would:
1. Create a new **Payee** account with *our program? System?*
2. Use the *System?* program to transfer lamports from their original wallet to the new **Payee** account
3. *Use the System/Our program to create our **Payment** account?*
4. Client uses our program to do what we do, and we would deduct lamports from the Payee (source) to the Payment account (destination) using the `try_borrow_mut_lamports() function`
for sure i can but i still think this should be native so we dont increase transaction fee
can't you just build that into the program?
Your UI and demo is kick-a**.
Kudos 

What do you suggest will this be able to work it out on mobile browser?
In desktop web browser, which solana wallet should be preferable on ease of connect basis ? I'm going to use SPL token and buying will also be there.
BTW did Solana explored possibility of sending part of the network fee to smartcontract owner/admin ? It would definitely help with sustaining programs like oracles.
yep, all gone. Is this standard ? ie just blatt the directory and start again ?
one easy way to find out I guess
ie running using start-test-validator
Hi, I've been running a validator for a few days (awesome btw) and have noticed my rocksdb directory is huge. What happens if I delete this directory ? If I have some compiled/deployed programs will I have to deploy again ? basically not 100% sure what this directory is, but I'm assuming its the transaction history in someform
I'm trying to create an associated token account for an account owned by my program.  Will `create_associated_token_account` only work for accounts owned by the System program?
No worries, this is the right place for questions. That error means that a program tried to modify an account's data that it doesn't own (account.owner != program_id). Some more docs here that describe the account model: https://docs.solana.com/developing/programming-model/accounts#ownership-and-assignment-to-programs
I think I spoke too soon, I'm now getting this:

```
panicked at 'assertion failed: `Err(TransactionError(InstructionError(0, ExternalAccountDataModified)))` does not match `Ok(())`
```

Any idea on what may be wrong?  Puzzled about the "external account" bit - what does that usually mean?

Sorry about the never-ending questions 😕
ok ,I see that
When you install the Solana tools, we bundle in a command line tool for running a test validator called `solana-test-validator`. We've moved away from the docker solution
32GB won't be enough, the requirements for a non-voting node (rpc node) is very similar to a full voting validator node. The latest requirements are listed here: https://docs.solana.com/running-validator/validator-reqs, we recommend a machine with at least 128GB of RAM
oh! yeah that makes sense. Here are all the programs that are included by default in the program test framework: https://github.com/solana-labs/solana/blob/master/program-test/src/programs.rs
Thanks, it turns out that I was doing this, and should NOT have been doing it:

```
        program_test.add_program(
            "spl_associated_token_account",
            spl_associated_token_account::id(),
            processor!(spl_associated_token_account::processor::process_instruction),
        );
```
In this case, as long as your program is the owner of the client account, it can directly decrement that account's lamports with something like: `source_account_info.lamports.borrow_mut() = 0` and then increment your fee collector account by the corresponding amount
It means that you're testing your program in the native program test environment. Try running with `cargo bpf-test` to run your program in the BPF VM environment
Do you know if this error is expected from trying to test the `create_associated_token_account` instruction?

```
thread 'solana-bank-forks-client' panicked at 'Account data resizing not supported yet: 0 -> 165. Consider making this test conditional on `#[cfg(feature = "test-bpf")]`', /home/mosh/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-program-test-1.6.1/src/lib.rs:
```
+ <@748249199606497502> : The BPF tooling will soon print the rust version used to compile programs FYI: https://github.com/solana-labs/solana/pull/16181
Hi, did you see the docs here? https://spl.solana.com/token#example-creating-your-own-fungible-token
Thanks, this worked great!
It should print for failures as well I believe, are you not seeing logs for failed transactions?
It's currently a manual process, it would be great to start using a common IDL spec to automatically do this labeling. I've just created an issue to track this: https://github.com/solana-labs/solana/issues/16180
Thanks for bringing this up, I just ran into this as well. The web3 library needs to be fixed and released first and then I will push a new version of the spl-token package to pick up the fix
I am going to build a solana rpc node, and my machine is 32G ram , when I run the node at :

solana-validator \
    --trusted-validator 7Np41oeYqPefeNQEHSv1UDhYrehxin3NStELsSKCT4K2 \
    --trusted-validator GdnSyH3YtwcxFvQrVVJMm1JhTS4QVX7MFsX56uJLUfiZ \
    --trusted-validator DE1bawNcRJB9rVm3buyMVfr8mBEoyyu73NBovf2oXJsJ \
    --trusted-validator CakcnaRDHka2gXyfbEd2d3xsvkJkqsLw2akB3zsN1D2S \
    --ledger /data/sol/data \
    --rpc-port 8899 \
    --private-rpc \
    --dynamic-port-range 8000-8010 \
    --entrypoint entrypoint.mainnet-beta.solana.com:8001 \
    --entrypoint entrypoint2.mainnet-beta.solana.com:8001 \
    --entrypoint entrypoint3.mainnet-beta.solana.com:8001 \
    --entrypoint entrypoint4.mainnet-beta.solana.com:8001 \
    --entrypoint entrypoint5.mainnet-beta.solana.com:8001 \
    --expected-genesis-hash 5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d \
    --wal-recovery-mode skip_any_corrupted_record \
    --no-voting \
    --enable-rpc-transaction-history \
    --limit-ledger-size \
    --no-poh-speed-test \
    --no-untrusted-rpc
Its ok at the beginning and I can get the node data , but when time pass , the solana service got oom kill by linux, is there any method to decrease the need of solana RAM , since I just need rpc node ,not validator node.
I think the 1.5.x toolchain uses 1.43 and the 1.6.x toolchain uses 1.50.
Hi. Does anyone know a good reference for developing and deploying an SPL token? I find the documentation quite hard to understand..
Hi, working with <@!491788881822220313> on this one... So, our program instructions should, at a minimum, work with the Client Account (with funded SOL/Lamport) and as we perform the instruction transaction we would transfer Lamports from the Client account to one we setup as our fee collection account? Is there a specific instruction for the transfer of lamports?
for one data structure it;s doable but I'm exploring how in solana you can handle more advanced data structures and was looking for an out of the box solution without writing own serializers and own data access patterns.
is it so hard tho? all data is just bytes, right? write the bytes a certain way, read them back the same way.
The ideal pattern if you have a substantial number of users who have associated data, is for each user to map to an on-chain account... i understand that might not be your particular use case.
Not sure but I think you have to many accounts in the array passed to the `invoke` you should pass the one used in the instruction plus `token program` account. Correct me if I'm wrong but token program and system program should not have the sane address as it looks like in the code you attached
Yes, I my question was about ser/deserialization in pogram. Thanks for hint I will look at borsh examples than. As for writing serializers by hand, that would be last resort - definitely too  crazy :).  The issue with stack overflow on BPF was that only with instructions or also with data inside the account ? how did you solved it ?
How can I know the rust version the bpf compiler uses?
Thanks so far, I'll report back here when stuck 😁 🤓
I love the fact that I can spin up a Solana instance in a Docker container.  Looks like I'll be starting to write some Rust in the process, always nice to learn something new
Thanks a lot <@!311962918511968256> - this seems like a great resource for me to start experimenting.
obviously you have thought about this a bit... and while you could use a layer 1 native token like Sol, probably you want to write your own token... probably this is the best tutorial for the token/escrow combo on solana... https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/
yea, i get you. escrow is pretty common in the legacy world, and i think crypto too.
Not sure if I'm using the right terms here, or missing something essential, but this is what I had in mind 🙂
Yeah, I guess 🙂 . In essence: `if you do this for me, I'm happy to pay you X`, and then with a smart contract that holds the funds from the sender and releases it to the receiver when both parties agree it's delivered
Basically stackexchange with bounties? It needs to be done... any smart contract platform can do that. 🙂
Hey all - moving question here from <#488758828330909706> 

I'm playing with the idea of building a platform where a developer can post bounties of GitHub issues, getting them fixed in exchange for Crypto (like Gitcoin) and I'd love to have a contract on Solana for managing the escrow. At this moment I'm still more or less playing with the idea, and I'd basically like to understand what I should build in my platform to interact with this smart contract

Happy to receive any tips/tricks/resources that might be useful in this scenario. I'm a seasoned dev but pretty new to developing smart contracts, so anything you think might helpful let me know 🙂
tried updating solana web3 package to its latest version but still running into this error
i am passing in a Pubkey for the program id
Running into the following when trying to create a token mint:
```
Uncaught (in promise) TypeError: Blob.encode[programId] requires (length 32) Buffer as src
    at Blob.encode (Layout.js:2330)
    at Structure.encode (Layout.js:1272)
    at encodeData (instruction.js:26)
    at Function.createAccount (system-program.js:649)
    at Function.createMint (token.js:405)
    at async createMint (createMint.ts:18)
```
maybe you could write yourself - or is that too crazy?
there is a 10MB limit on an accout afaik - as you are using just one
but i have today found with brosh, it caused the BPF problems with the stack, specifically the instruction de/serializing.
You can see examples in the solana program library
A lot of people use borsh.
You are talking about in a program? ppl have said bincode is expensive in terms of compute.


///////////////////////////////////////////////////////////////////////////////////////////////

In regards to creating nfts on solana but storing data on arweave
Does anyone know the best way to connect arweave data to solana. Or is creating a program with hardcoded values the way to go?
Thanks <@539801435571748868> , will take a look!
Ohh thank you !!
wss://testnet.solana.com/
For example? Could you give me one?
these are all public
hm, unless the nodes are really bogged down, they should be accepting subscriptions.  what have you tried?
Thank you <@!539801435571748868> Still can't find any public ws, I guess there are not. I would need to run a node for that
On-chain, this isn't possible, but off-chain you can use the WS endpoints: https://docs.solana.com/developing/clients/jsonrpc-api#subscription-websocket
I would like to subscribe to smart contracts events, similar to ethereum? Any guide on this?
https://docs.solana.com/developing/clients/jsonrpc-api#rpc-pubsub-websocket-endpoint they also have websocket listeners
Those aren't websockets (WS)...
hi
Not really unfortunately, we don't publish js docs for the package, and even the comments on https://github.com/solana-labs/solana-program-library/blob/master/token-swap/js/client/token-swap.js need to be updated too. That's on me for the most part, sorry!  The best option for now is to follow along the tests at https://github.com/solana-labs/solana-program-library/blob/master/token-swap/js/cli/token-swap-test.js
Yep, depending on the network you want to connect to, you have options: https://docs.solana.com/cluster/rpc-endpoints
You can dump the ELF file and check against that: https://docs.solana.com/developing/deployed-programs/developing-rust#elf-dump
<@!513973089017790464> you can try out the latest `@solana/spl-token` release v0.1.1 to get new helper methods for handling associated token accounts for users. First, create a token object `new Token(...)` for a token and then call `getOrCreateAssociatedAccountInfo`
I've only found some functions in the codebase but nothing that documents them well
Hey, are there any decent js/ts docs available for the swap functionalities?
Is there any public WS of Solana where I could connect?
Hi, running `solana-test-validator` I get an error that I am exceeding  max instructions and at the tail of the message there is a `at instruction #53929`.
Question: Is there a way I can reference that instruction number back to my program source?
Even more impactful than Serum?
<@!584061031702200340> <@!466984915376799748>
Hi all, I need help with converting/adjusting this code to send Serum(SRM) funds from one address to other. 
https://github.com/VishalVikramSingh/solana/blob/main/test.js
Please help.
thanks
The client/wallet would currently need to construct a custom transaction for this.  One can’t add some kind of hook to execute whenever a normal system transfer occurs to/from a specific account
Is it possible to have a "programmable account"?  What I mean is, an account that auto-performs a programmed action when you transfer funds to it?  Or is there a way to achieve this using a program?
😦
some rpc servers may be under heavy load. It is a good idea to catch this error and recheck to see if the transaction was confirmed
so it becomes really difficult to check if it worked or not
it always ends up hitting the 30s timeout
is it just me or is `sendAndConfirmTransaction` really unreliable
yeah clocks moving backwards are bad
no time traveling is a good thing
okay got it
https://docs.solana.com/implemented-proposals/bank-timestamp-correction
The clock sysvar controls stake account unlocks as well, so there's plenty of motivation to fix this
Is it usually during releases?
How often do drift adjustments happen?
and the drift is yet another bug that needs to be fixed, hopefully indirectly by speeding up slots, that'll also fix the slow epochs.
the goal of the sysvar is to have a value that closely represents wall clock at a given instant
40 slots is always 40 slots though 😉
yikes
so you kinda can go wrong with an offset 😬
oh
yeah
eh, does that mean 50 seconds from now can be 40 seconds from now?
The clock sysvar can speed up/slow down based on the drift adjustment, just something to keep in mind
but you can't go wrong with an offset
testnet/devnet/mainnet have different drifts
fwiw i would use an offset from current time
Depends on the use case I think, generally that seems ok.
Ok, so i should ignore that for a program design. I should not query current timestamp then get a delta of some kind so that what the user wants is what would happen
<@456226577798135808> - the goal of the timestamp is to be as close to real time as possible.  You can see the drift on the explorer right now, which is a side-effect of the slower slots that we're seeing on mainnet-beta.   But once this is resolved, the drift should be minimal
I have read what was said here about solana_program::sysvar:🕰️ unix_timestamp, so how would someone go about making a time based program logic?
It doesn't have to be correct. Just i don't want user to expect it to happen at some point then thing happen at a very different time, what is the drift we should expect?
how to check the if the USDC accounts is in the user's wallet?
You'll have better luck using `find_program_address`.   There's some useful information about this process around here: https://github.com/solana-labs/solana/blob/0f6f6080f30dcb969eac17c682baa7d6127e210e/sdk/program/src/pubkey.rs#L146-L149
Is this normal? Or is there a way creating a seed that always work?
On 4 out of 10 'create_program_address' I got an error 'Provided seed do not result in a valid address'
thx
yep
Can i use Address (Program Derived Address) for storing data(alloc some space) and signing transaction at same time?
this is webpack 4 i only use ts-loader so its confusing for me that i can't make it work -.-
i hate webpack -.-
<@!466984915376799748> i ended up bumping webpack from 3->5 but still something with web3 package is not right ```in ./node_modules/@solana/web3.js/lib/index.browser.esm.js 11808:8-16
export 'assert' (imported as 'assert$3') was not found in 'superstruct' (possible exports: StructError, Types, isStruct, struct, superstruct)
 @ ./src/store/sagas/solana/wallet.ts 8:18-44
 @ ./src/store/sagas/solana/index.ts 6:17-36
 @ ./src/store/sagas/index.ts 8:33-52
 @ ./src/store/index.ts 11:32-50
 @ ./src/pages/popup.tsx 31:16-35```
Odds are you're going to burn through compute budget no matter what doing that kind of op in program.  What sized BigInt do you need?  I think there are some utils for u128.  May need to request a syscall instead though
Want to use a BigInt that we don't get flunked in gas when calculating prime and exponents
No.  What are you trying to do?
Am I able to use openssl in my BPF program?
maybe i should bump webpack
still no help honestly first time i see webpack problem with node_modules
defaults covers 99.5% of global browser usage
we use:
```
  "browserslist": [
    "defaults",
    "not IE 11",
    "maintained node versions"
  ],
```
maybe is good to build web3 to like es2015 ?
es2018 I believe should work, that's when object spread syntax support was added
<@!466984915376799748> tips? current .babelrc ```{
  "plugins": ["transform-runtime", "transform-async-to-generator"],
  "presets": ["es2015", "react", "stage-0"]
}
```
Thanks <@!585868308419444749>
nice, and you're using webpack? You probably have to adjust the babel presets
sooo browser i guess ?
i am building extension
are you running on the browser or node.js?
but dont know how to solve it for node_modules
i guess this is webpack problem
i dont get it why i always have problems with solana/web3 ```ERROR in ./node_modules/@solana/web3.js/lib/index.browser.esm.js
Module parse failed: Unexpected token (5087:28)
You may need an appropriate loader to handle this file type.
|     this.instructions.forEach(instruction => {
|       instruction.keys.forEach(accountMeta => {
|         accountMetas.push({ ...accountMeta
|         });
|       });
 @ ./src/store/sagas/solana/wallet.ts 8:18-44
 @ ./src/store/sagas/solana/index.ts
 @ ./src/store/sagas/index.ts
 @ ./src/store/index.ts
 @ ./src/pages/popup.tsx
 @ multi ./src/pages/popup.tsx```
1) There's nothing special to nonces here.  Any transaction that doesn't reach finalization is as if it never occurred
2) Rent-exempt accounts are never charged rent. In their case, the "reward" comes from locking up tokens.  The full rent-exempt amount can be withdrawn when the account is closed
3) Current account state (or non-existence of) has no affect on historical transaction activity.  Historical transaction activity is only dependent on how much historical ledger the node being queried retains.
4) It looks like the nonce account state is 72 bytes.  The size getter is the recommended way to query this though, https://github.com/solana-labs/solana/blob/master/sdk/program/src/nonce/state/current.rs#L25


///////////////////////////////////////////////////////////////////////////////////////////////

Thank you!
How can I integrate with a wallet?
Ok. Simple but it works.
Yep, you buy bytes and do with them what you like 🙂
Thank you.
Or flat bit space.
Aaah, so it's basically just flat octets space. Got it.
Hello world's account state is just a `u32`. https://github.com/solana-labs/example-helloworld/blob/master/src/program-rust/src/lib.rs#L20-L45
I couldn't find any place in the docs where it would mention that kind of data storage.
Or an integer?
Can I store a string in an account?
If you haven't already been through the helloworld example, that would also probably be a good crash course. https://github.com/solana-labs/example-helloworld
Thanks
Ah yes. I read it. But I read it too fast. I stopped at the first command line 😄
You should probably read the on-chain programs docs at the very least https://docs.solana.com/developing/on-chain-programs/overview
You need to `cargo build-bpf` not `cargo build`.  On chain programs need to target eBPF not the build host architecture
In my cargo.toml, I have :
```
[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]
```
I encounter the following error :
`Error: ELF error: ELF error: Incompatible ELF: wrong machine`
However, when I am trying to deploy with `solana deploy target/debug/libsolana_hello.so`
What I've done so far :
- Create a solana account
- Write a simple smart contract
- Build with `cargo build` without any error
I'm running into some trouble while trying to deploy my first program
Hey ! 🙂
The only way to run something on chain is through transactions, but you could have an unprivileged "turn the crank" transaction that performs *more* compute every time it's executed
thanks
yeah, figured that was probably the case. Wasnt sure if it was only for transactions, or whether it could do something in the background (i had wanted my program to run on chain and send transactions to the serum dex)
there is a compute limit to be aware of, eventually "doing something" will hit it
hey check out https://github.com/solana-labs/token-list
any help much appreciated
if I write a program to run on solana, and say it is for a reasonable chunk of its time "doing something" (say consuming a serum orderbook" is that a bad idea ?
Hi, possibly a dumb question, but would rather ask than go down an obvious dead end!
hey all, new to developing on Solana. I just started going through the Token Program docs [https://spl.solana.com/token] and my question is:

How does one associate a message (e.g. a link) with a (non-fungible) token?
`Error: Function _ZN112_$LT$solana_program..instruction..InstructionError$u20$as$u20$solana_frozen_abi..abi_example..AbiEnumVisitor$GT$13visit_for_abi17h9b0bbbecb2b32a3aE Stack offset of -6552 exceeded max offset of -4096 b
y 2456 bytes, please minimize large stack variables`
I've just upgraded my solana crate to 1.6.2 and noticed a new excess stack error sourcing from `solana_program`
Is conversion possible only for ERC-20 Token owners?
Do you have any related documentation?
Hi, I created a token yesterday, but I can't set logo, symbol and site to it. How this can be done? Should I have to contact someone? <@!445425471027544095>
This bug existed for about a month before being fixed at slot 46915769 on mainnet. The inner instructions were duplicated for each instruction in a transaction
getParsedProgramAccounts for Serum dex v3 gets 27000+ accounts, filtering them true will take some time.
all the official ones are in here: https://github.com/project-serum/serum-ts/blob/b6799603bc2260607d7e0b22c740803f97fad14a/packages/serum/src/markets.json
You can get all the account owner by the serum v3 program and check if it's a market.
You need to convert erc-20 to spl token first
Isn't there a github source for staking application?
What steps do I need to do to add erc20 tokens to dex?
Is there a way to get all Serum Dex v3 market addresses?
Like that other guys said, just don't have large 'objects', break into small parts.
For this TX https://explorer.solana.com/tx/2FnZZqt7Q74YMdwugwu4WuCgXx3NTqdMDDePJjw4UzGdFqf4YtXGWgWUVxsZCBNif2W2uByETZNWrXY2SbxaLpmE  RPC returns 10 internal instructions of token transfer. For each of 5 external instructions it returns 2 identical internal instructions. However, from the logic and balance changes there should be only one pair ( swap tokens). Why?
I found that if you are trying to create an associated token account for a "system account" that is owned by a custom program, then the associated token account instructions would fail, with the error being that a program tried to modify a program it does not own.  I ended up "fixing" it by running the same instructions performed by the associated token account program in my own program, like this https://github.com/solpayments/solana-payment-processor/blob/master/src/processor.rs#L206

It seems that this succeeds because the commands are being run by the program that owns the account.  Thanks for the continued help in my understanding of how solana programming works. 

Also, if what ^^ I am saying is obviously wrong, please let me know.
What would cause `Transaction simulation failed: Error processing Instruction 0: custom program error: 0x1000501` when calling a placeOrderv3 instruction on Serum?
I did not find an example of using solana-js to transfer SOL
<@!585868308419444749> Can you provide a demo of js version transfer?
You only need a nonce account if your signing process is very long.  Usually you can just query a recent blockhash from the cluster with `getRecentBlockhash` or `getFeeCalculator`
Hello admin, I have a problem when creating a transaction using solana-js:

When initiating a transaction, I need to createNonceAccount first. Is this operation required for every transfer, or does it only need to be done once for each account?
makes sense, thanks
I'd say neither of those things is outside the realm of possibility.
so hypothetically speaking that could mean that some functionality available to writing programs in rust may not be available in C? Would this also mean that someone programs written in C could potentially not work due to unknown bugs?
So far as C support goes... we try to keep it up to date, but in reality most projects choose Rust so that's where the majority of the dev resources go
"Here's some random PR I'm fixing merge conflicts in.  You're welcome!"
lol i was like uhh okay.... thank you!
Sorry bad paste 😅
https://github.com/solana-labs/example-helloworld#start-local-solana-cluster
???
also lets say someone writes a program in Rust and I want to integrate with it using a programm written in C, how would I be able to generate the typedefs/header files of that rust program in C?
also is there documentation about the `<solana_sdk.h>` header file anywhere?
also what kind of support will the team be giving to the C portions of Solana? Reading about development on Solana and it looks like I can use C to write programs. However reading through the existing example programs, it seems like a very small amount of them are written in C
also is there documentation about runnign a local testnet for development purposes?
hello go-ethereum has something called "simulated backend" that allows you to basically deploy an in-memory blockchain to work with. Does something similar exist with Solana?
Thanks, sounds good
better you use the faucet, sometimes I sleep
is hard to send me 1 sol at my address? if no prefer that ty <@!445425471027544095>
ok, will try
Windows works too: `solana.exe -ut airdrop 1`
lol I didn't mean to flex there 😉
great, Im at windows not linux at moment 😉
or for testnet:
```
$ solana -ut airdrop 1
Requesting airdrop of 1 SOL from 216.24.140.155:9900
60021705.004581951 SOL
```
literally run the command I gave you
Sorry it's not clear what the problem is. mvines just gave you the command
```
$ solana -ud airdrop 1
Requesting airdrop of 1 SOL from 34.82.57.86:9900
162.033455196 SOL
```
all I need is 1 sol or so on test/dev net
I spent hours to find some without sucess or why would I ask <@!585868308419444749> ?
`solana airdrop` hits the faucet
any faucet or someone can send me... 🤔
good, but how to get it? <@!445425471027544095>
`solana airdrop 1` will do it, for both devnet and testnet
where can I get some SOL on test/devnet to be able to make some work/tests?


///////////////////////////////////////////////////////////////////////////////////////////////

Hello, I'm sorry ) I'm trying to use https://solible.com/ but, I have a small issue with ```You need to mint the token you want to list. It needs to be a token with 0 decimals. You can mint tokens here SPL Token Creator. ``` Error is ```failed to send transaction: Transaction simulation failed: Attempt to debit an account but found no record of a prior credit.``` if I correctly understand. to fix this error you should have at least few 0.0001 sol on your account , is it correct ?
I was actually going to ask the same thing. I haven’t tried the mainnet one yet, is it the same behaviour?
The JSON-RPC websocket on devnet seems to time out very quickly. Isn't it the purpose of websockets to stay open pretty much indefinitely?
Is there a good tutorial for simply adding a memo to a NFT?
Hi guys.  For some reason the following fails with `Err(TransactionError(InstructionError(0, InvalidInstructionData)))`

```
let (pda, pda_nonce) = Pubkey::find_program_address(&[PDA_SEED], &program_id);
if pda_info.key != &pda {
    return Err(ProgramError::InvalidSeeds);
}
invoke_signed(
    &spl_token::instruction::transfer(
        token_program_info.key,
        order_payment_token_info.key, // source
        merchant_token_info.key,  // destination
        &pda,  // authority/owner
        &[&pda],
        1,
    )
    .unwrap(),
    &[
        token_program_info.clone(),
        pda_info.clone(),
        order_payment_token_info.clone(),
        merchant_token_info.clone(),
    ],
    &[&[&PDA_SEED, &[pda_nonce]]],
)?;
```

Been looking at it for a while with little success.  What am I missing?

Alternatively, does anyone have an example of how to transfer tokens from an account whose authority
is a program derived address?

Thanks for the help.
Ok seriously I am on the brink of the breakthrough lol. Almost there.
When you pass an account to a program, and when the program_id == account, the account is unlocked with read_write by default ?
And if I want to write to the caller account, I just need to identify the account with is_signer = true
In the hello repository, src/client
What Typescript client ? solana-web3 ?
The Typescript client does all of that.
When I read the Hello World contract in rust, I do not see anything that looks like account creation, so I guess it is all done via the cli
Thanks starry. The part I don't get is how do I create accounts with owner == program_id.
Is the account creation supposed to be done by the program itself or do I create account via the solana CLI and then give ownership of the account to the program ?
Hi <@!152089247254315008>, welcome! Program state is stored in accounts which are *owned* by your program. So what you can do is create accounts with owner == program_id and then pass those accounts when calling your program. Your program is allowed to modify the data in accounts which it owns (owner == program_id)
There's a lot that needs to be done. I've already downgraded the complexity of my application considerably. 😆
I updated the docs a bit here: https://solana-labs.github.io/solana-web3.js/modules.html#createaccountparams. It would be great to have some help writing up examples as well, we use https://typedoc.org/
I still have trouble understanding the relationship between program and accounts. I have read the documentation about accounts many time.
So basically, an account is owned by a program.
I have an account `8dn9JpvTiwg59q8VkgCDRFHzoiVerDtLBgQKY9gF1NoV` where the owner is `System Program` by default.
Now I am deploying a program, and I want this program to be able to store some global state.
When I deploy the program (`DmjC6fC79ywy7QfgyfjneMHp5rJgh8VWRGfSjqqPPkTz`), I understand it is an account and a program at the same time and that account == program_id.
How do I store data on the program account ? Do I need to call the program with the program account in e.g accounts[0] ?
Also, does my account `8dn9JpvTiwg59q8VkgCDRFHzoiVerDtLBgQKY9gF1NoV` has any kind of special right on `DmjC6fC79ywy7QfgyfjneMHp5rJgh8VWRGfSjqqPPkTz` ?
No problem, should be fixed in v1.2.5!
you might be interested in checking out this tool https://github.com/japaric/cargo-call-stack     I haven’t used it, but it seems it might help with identifying the call chain that leads to stack size to become over the limit
https://docs.solana.com/terminology#lamport
How many decimals can a SOL amount have?
nevermind; I was just fooled. The problem still exists
Now I should be able to fix it, thanks
I found the offending function in my code by commenting out each function one by one
apparently it is our function
```Error: Function <solana_program::instruction::InstructionError as solana_frozen_abi::abi_example::AbiEnumVisitor>::visit_for_abi Stack offset of -6424 exceeded max offset of -4096 by 2328 bytes, please minimize large stack variables
```
unfortunately when the function is compiled the compiler also doesn’t have the information where it might be called from
It looks like it's coming from another package. And my issue is I can't tell which of my functions is calling that package
in the meantime can you use rustfilt to demangle the function name? I believe the name of the function is still correct as printed by the compiler
yes, I improved the error message to print the file name and line number where the function is defined. O think the update will be available in SDK released with Solana 1.6.2
Any updates on this? I'd really like to be able to use solana 1.6.1 because it uses rustc 1.50 which is required for a math package I want. 

It would be helpful to just understand this error message a little better so I can go fix the appropriate function.

```
Error: Function _ZN112_$LT$solana_program..instruction..InstructionError$u20$as$u20$solana_frozen_abi..abi_example..AbiEnumVisitor$GT$13visit_for_abi17h93ed8f8e33ac7b21E Stack offset of -6424 exceeded max offset of -4096 by 2328 bytes, please minimize large stack variables
```
Why on this TX https://explorer.solana.com/tx/37tc9JeG6xBVJmGv1iGP2GAjgc2zaKK1EZeomExWFebqJJBo25ezBUreTcVJonLnaLpcsscHEregSE7evf6ouSD the balance of brkLHMdveYjzgaK3a4FbofAGhj3QJRAUyNxLJqKsKXs was not reduced on amount for create account?
https://docs.solana.com/developing/clients/jsonrpc-api#accountsubscribe
🤔
On the CLI, I can use "solana transaction-history" to see a list of txns. But how can I get more info on a specific txn?
Ah bril ! Thanks 🙂
Alternatively, for a more barebones approach, what API could I use to monitor incoming payments in an account?
I'd like to have a web interface that interacts with a program and lets the user sign the txn
Where can I find information on interfacing with a wallet like Bonfida or SolFlare?
unfortunately not :/
And there is no way to detect to which instruction these internals actually should attributed?
Oh thanks, did not note that
This bug existed for about a month before being fixed at slot 46915769 on mainnet. The inner instructions were duplicated for each instruction in a transaction
I already responded above
There are many such examples, can somebody comment on that?
"owned by the program account" means that the greet account's owner program is set to the hello world program's address
Payer account is a system account that pays for tx fees
Ha, yeah the source is a nice companion. I recommend reviewing these docs as well https://docs.solana.com/developing/programming-model/accounts
I tried to look up the docs for SystemProgram.createAccount's parameters, but couldn't find any. Is it "use the source, Luke" here?
What am I missing here?
In the client code, it looks like "payerAccount" is the owner (fromPubkey)
In the "Hello world" tutorial, the smart contract has the invariant "greeted account must be owned by program account" which makes sense. But in the client program, I cannot figure out where it creates this ownership. Any hints?
Interesting, I only got it in .profile and .zprofile.
`.zshrc`
Where though?
I think i got something like this ```export PATH="/home/bless/.local/share/solana/install/active_release/bin:$PATH"``` ZSH folks
I would suggest to add these lines to .bashrc and .zshrc instead.
I've noticed another small issue. Then Solana binaries installer adds PATH entries to .profile and .zprofile. However, these files are not being executed in interactive sessions.
Yeah... maybe we need a quiet mode for running `cargo-build-bpf` via scripts
I see now why I got confused by the output: mv dist/program/solana_bpf_helloworld.so dist/program/helloworld.so
I think one of those npm scripts does the deploy for you if it's not already done
"npm run start" output looks good now. Thanks for the hints.
I am also noticing that the instructions don't mention any deploy command. Is that an omission?
This seems to work: solana program deploy /home/sky/example-helloworld/dist/program/helloworld.so
[sky@wintermute ~/example-helloworld]% find . -iname \*.so                                                                                 10:10
./dist/program/helloworld.so
./src/program-rust/target/release/deps/libborsh_derive-005c42ad044198a9.so
./src/program-rust/target/release/deps/libsolana_sdk_macro-b6c89e2c8974222c.so
./src/program-rust/target/release/deps/libnum_derive-5f0cfe0e9a0f5f1f.so
./src/program-rust/target/release/deps/libthiserror_impl-d03df6cb50554302.so
./src/program-rust/target/release/deps/libsolana_frozen_abi_macro-7801ca8de81a72e6.so
./src/program-rust/target/release/deps/libserde_derive-b83025937912162c.so
./src/program-rust/target/release/deps/librustversion-dab1149d7adb0f93.so
./src/program-rust/target/bpfel-unknown-unknown/release/solana_bpf_helloworld.so
./src/program-rust/target/bpfel-unknown-unknown/release/deps/solana_bpf_helloworld.so
Build looks okay, but no .so came out.
[sky@wintermute ~/example-helloworld]% npm run build:program-rust                                                                          10:10

> helloworld@0.0.1 build:program-rust
> cargo build-bpf --manifest-path=./src/program-rust/Cargo.toml --bpf-out-dir=dist/program && mv dist/program/solana_bpf_helloworld.so dist/program/helloworld.so && npm run clean:store

BPF SDK: /home/sky/.local/share/solana/install/releases/1.6.2/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: cargo +bpf build --target bpfel-unknown-unknown --release
    Finished release [optimized] target(s) in 0.16s
Running: /home/sky/.local/share/solana/install/releases/1.6.2/solana-release/bin/sdk/bpf/scripts/strip.sh /home/sky/example-helloworld/src/program-rust/target/bpfel-unknown-unknown/release/solana_bpf_helloworld.so /home/sky/example-helloworld/dist/program/solana_bpf_helloworld.so

To deploy this program:
  $ solana program deploy /home/sky/example-helloworld/dist/program/solana_bpf_helloworld.so

> helloworld@0.0.1 clean:store
> rm -rf src/client/util/store/config.json

[sky@wintermute ~/example-helloworld]% solana program deploy /home/sky/example-helloworld/dist/program/solana_bpf_helloworld.so            10:10
Error: Unable to open program file: No such file or directory (os error 2)
[sky@wintermute ~/example-helloworld]% fd .so                                                                                              10:10
package-lock.json
package.json
tsconfig.json
[sky@wintermute ~/example-helloworld]%
Alright. Next hurdle.
Not sure why it didn't work with the Arch binaries...
Ok, looking good so far. I see it downloading solana-bpf-tools now.
Will do
It shouldn't be the version that 's a problem. Maybe some path thing
Yeah, usually the problem with Arch is that stuff is too new lol
Hey they aren't even that far  behind!
[sky@wintermute ~]% which solana                                                                                                            9:58
/bin/solana
[sky@wintermute ~]% solana --version                                                                                                        9:58
solana-cli 1.5.15 (src:9bd37739; feat:3699701358)
Can you install the release bins from Github and see if it fixes anything?
Maybe
Is that a problem?
I have solana CLI tools from archlinux
Cargo _should_ pick that up as a subcommand and allow you to run it like `cargo build-bpf`
The program is `cargo-build-bpf`, it should be installed alongside the rest of  the solana cli tools in `~/.local/share/solana/install/active_release/bin`
I've installed cargo-bpf but it looks like a different package.
Where is the build-bpf subcommand supposed to come from?
$PATH looks okay.
Have you restarted your terminal emulator since installing Rust and the solana cli tools?
this can be quite a bit simpler if you don't need your program owned token accounts to be at a derivable address (typically the address can be stored in some account state). So the process is just 1) create a new account owned by the token program with the correct size and balance in one instruction, and then 2) in your program, initialize the account as a token account with the authority being a "program derived account"
ArchLinux
Are you on windows?
Something else is missing.
I have those.
cool, https://github.com/solana-labs/example-helloworld#quick-start does say "Install Solana v1.5.8 or later from https://docs.solana.com/cli/install-solana-cli-tools"
should be fixed after this PR, sorry for the breakage! https://github.com/solana-labs/solana/pull/16253
I think the instructions are missing some dependency steps. I'm figuring it out right now.
```
$ cargo-build-bpf --version
solana-cargo-build-bpf 1.6.2
```
The solana cli tools are probably not installed
Any idea what I'm missing?
[sky@wintermute ~/example-helloworld]% npm run build:program-rust                                                                           9:37

> helloworld@0.0.1 build:program-rust /home/sky/example-helloworld
> cargo build-bpf --manifest-path=./src/program-rust/Cargo.toml --bpf-out-dir=dist/program && mv dist/program/solana_bpf_helloworld.so dist/program/helloworld.so && npm run clean:store

error: no such subcommand: `build-bpf`
Haven't run into that, which version of web3.js are you using?
thanks
makes sense
`cargo fmt` and `cargo clippy` are worth it.  plus the compiler is your friend, not your enemy
spend a weekend with https://doc.rust-lang.org/book/ and you'll probably be good for 101 stuff.  plus coming from C, you'll probably fall in love with the language after you pull all your hair out due to the borrow checker and lifelines
how familiar with rust would you say one needs to be before they can write programs for solana?
oof.  yeah that'd be best 🙂 
You can write on-chain programs in C but we don't really have a client-side SDK for C right now, so you'd need to talk to the JSON RPC 2.0 API directly, and do a bunch of other stuff yourself
Once you learn Rust, writing C will be annoying, period! 🙂
annoying
geuss i would need to learn rust seems like writing programs in c will be...
thanks
interesting
This is the place where you could adapt the `ping` example command to invoke your program instead: https://github.com/mvines/solana-cli-template/blob/a3a6082aa51eac84c03fe023fb263b6771984fed/src/main.rs#L37-L40
Here's a rust cli template that does a bunch of boilerplate stuff: https://github.com/mvines/solana-cli-template
thanks
ok
Yes.  Give me a couple minutes.  I have a simple Rust cli template I can share, just want to ensure it's not busted
ah okay, so to interact with https://github.com/solana-labs/solana-program-library/blob/master/examples/c/src/transfer-lamports/transfer-lamports.c for example would require using rust/js to send the expected instructions?
There's no "send a generic transaction" feature in the cli right now, so you'll need to write a front-end in rust/js that sends the instructions that your program expects
is there anyway to invoke the executable from the cli?
but the problem is that `6oQx5CJ7K9jx9PVhpdpqHHDnZQhVGJ8fJgytLgpaMbqy` is an executable and you can't transfer to an executable
will that be `SolAccountInfo:Params::lamports` ? (that is to see how much value is being sent in the tx)
It's too sneaky, but do this to see the logs:
```
> RUST_LOG=solana=debug solana transfer --verbose 6oQx5CJ7K9jx9PVhpdpqHHDnZQhVGJ8fJgytLgpaMbqy 5
```
in addition, when im transferring to the program via `solana transfer <addr> <value>` how can i check in the program what the `value` is
question remains though how can i see the logs
as for why that error happeend it was because i was sending to the program id not the program address
also when interacting with a program from teh command line is there anyway i can output the logs?
i get the following error trying to interact with the `transfer-lamports` C program:
```
> solana transfer --verbose 6oQx5CJ7K9jx9PVhpdpqHHDnZQhVGJ8fJgytLgpaMbqy 5
RPC URL: https://devnet.solana.com
Default Signer Path: /home/solidity/.config/solana/id.json
Commitment: confirmed
Error: RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: instruction changed the balance of a executable account [2 log messages]
```
Sorry
Back when I was testing out on testnet and I wanted to get some stake so I could see what it was like to be a leader
I ran a script to airdrop once every 10 seconds for an hour or two
Heh the abuse maybe that was me
Wondering if anyone else have encountered this error before:
```..\node_modules\rpc-websockets\dist\lib\client.js:371
      this.socket.close(code || 1000, data);
                  ^

TypeError: Cannot read property 'close' of undefined
    at Client.close (..\node_modules\rpc-websockets\dist\lib\client.js:371:19)
    at Timeout._onTimeout (..\node_modules\@solana\web3.js\lib\index.cjs.js:4473:30)
    at listOnTimeout (internal/timers.js:554:17)
    at processTimers (internal/timers.js:497:7)```

Not sure what's exactly causing it; when I begin the connection in my app, 4/5 times it seems to happen within the first 10 minutes but 1/5 it seems to not happen at all.
10SOL/10min across all requests.  Max request 10SOL
any detail wrt that? is this a per wallet rate limit? (doesn't seem like it)
Nope.  Abuse got the rate limit tightened down is all
can't airdrop to my testnet sollet wallet
are airdrops on testnet broken?
OK if I ever get my solana-fu up to that level, I'll be sure to watch out for that 🙂
you can even do it by accident.  🙂  a small validator code change could cause divergent behaviour between nodes and  🍄
heh
but I never am ...
I just sometimes think, maybe I'm the one clever guy who figured something new out 🙂
sorry I just come up with these ideas as I think about Solana, and although I am pretty sure they must be covered ...
those bugs killed testnet for years
Very good
very aware 🙂
right
then all I have to do is just keep submitting those transactions and every validator is going to emit a new fork
because if a validator could be tricked into proposing transactions that would not validate
I am sure you guys are aware of how DOSable Solana would be if it ever allowed nondeterministic inputs to creep in
the only input a program receives is from transactions
ok that's what I wanted to understand
they literally cannot receive nondeterministic inputs from chainlink
because the modality of 'not achieving consensus but DOSable' is not good ...
do validators reject transactions which would receive nondeterministic inputs from chainlink
I know consensus doesn't work but
> whether chainlink could provide nondeterministic inputs 
It's impossible.  If a program can receive nondeterministic inputs then consensus doesn't work
that checks out
but you still need the same deterministic seed so
Looks like all it does is turn deterministic seeds into unpredictable (but still deterministic) values
I will read about it ...
Oh hey Chainlink has something called Chainlink VRF, verifiable random numbers
OK I'm going to assume that the solana devs already considered whether chainlink could provide nondeterministic inputs .... but just to feel extra good, can someone confirm that?
I think there is chainlink integration to get off chain data. I haven't used it myself
ehh
what's that?
you can maybe use the chainlink oracl
I just wanted to make sure that's not possible.  I realize that smarter minds than I have already probably dug into this and it's not possible.
Which would be very bad because it would be a way to DOS the network by creating tons of forks very easily
I'm trying to figure out if there is a way to get randomness into a program, which could then be used to create non-deterministic inputs that would succeed when being proposed by the leader, but fail when validated
Sorry I'm just thinking out loud
I guess that works because the second validator would always see the balance the same since it could not have changed
OK then I use that in my program with create_program_address to generate a random number of lamports to withdraw from the account
you can read any account in the system
So I guess it's also not possible to read a system account balance within a program?
Probably none, I think I got confused and thought the clock sysvar would be different for every validator, but I am realizing that they all just use the value at the time that the transaction was first run
where is the non-deterministic part?
it could be used, but it should be the same for every validator
That's what I don't quite understand.  I thought I was just told that the clock sysvar has the current slot?  Is that not a variable that can be used in programs?
If it could create it, but generally there is not a path to create it.
has no way to know that the block they are emitting is never going to be validatable by other valiators no?
OK but the validator that first emits the block
it can't. the outputs have to be deterministic.
If a validator replays a transaction and it includes instructions which call programs whose function is different each time, how does a validator verify this?
really what I want to know is, how do validators verify programs with nondeterministic inputs like this?
anyway, that's not why I brought all this up
then you wouldn't know which one would get which number
*if* many transactions were being used at the same time
I think actually it would be hard to predict the clockvar + lamports approach
returning to the random number thing
Sorry I got pulled away
I'll try that, thank you again.
yes
Like building from source?
Just can't use the release ones
You should be able to build bins without AVX2 support locally
Yea, sorry for disturbing you tho
But it's grey so I think it doesn't have
Who knows what the "s" on "extensions" means though
AVX and AVX2 aren't the same thing
Right?
Here says it doesn't has

Nothing like running Linux in Windows on Linux
Wait
Lemme see if I can reproduce
solana-cli 1.6.2 (src:03b21f2e; feat:2394153998)
Which version of the CLI tools are you using?
Not in Windows
In WSL
How did you check for AVX2 support?  In Windows or in WSL with `cat /proc/cpuinfo` ?
I doubt it'd help
I should reinstall Solana CLI?
Hmm
Thanks for the time
Yes it has
Let me check
Does your CPU have AVX2 support?
From Solana CLI, yes
With the release binaries from Github?
Hi, I am facing a problem when I try to run ```solana-test-validator --log```. To be more precise I am using WSL 1 and when I run that command I get: ```Illegal instruction (core dumped)```. Does someone know a fix to this?
But again, not particularly random
could just use the clock sysvar as a seed to a PRNG
oh then
The clock sysvar has the current slot
Do programs have access to the block height or something like that at the time they run?
I thought of that (predictable), is there any way to mix something unique to the transaction in?
Yes I agree
Was just thinking this might be a way around that?
All of the components and the algorithm are observable in advance, so the output is predictable
I assumed from the text about deterministic transactions that it is supposed to be hard to incorporate random numbers into programs
If you need something closer to "random looking" than "cryptographically random"
would this work?
I would have to top up the random number system account from time to time
decrease the number of lamports in the system account by a random amount (where the random amount comes from random data extracted from the pubkey)
Take the first n bytes of the generated pubkey as my random number
Use the number of lamports as the seed
I could: keep a system account with a number of lamports in it
If so, can this be used as a source of random numbers within a program?
If I am reading correctly, this can be called from within a Solana program?
Hi I have a question about "create_program_address".
Has anyone come across this error `Invalid params: invalid type: map, expected a string.` when using `getMultipleAccounts` in dapp-scaffold?
Anyway, thanks for responding. At least we know it's not on your end
Probably gone by morning. I'll just go to bed
It's loading now, but very slow. Feels like routing issues.
Haven't had problems for the three weeks I've been running it. Now the cluster command worked here
Or maybe there is a port conflict or sthg like a firewall ?
Everything else is working. I'm running a testnet validator
Any chance your internet connection is acting up?
for a few seconds, then it went away
I got "failed to connect to the Solana network"
Fine here as well
```
$ solana -ud cluster-version
1.5.16
```
This seems to work fine on devnet atm https://synthetify.io/
Now Solana explorer works again, but running commands in terminal are not producing a response
Getting the same for mainnet, but testnet is working fine
Solana is not answering queries, and I'm getting, "not found" in Solana Explorer
<@!242641884680421376> What makes you think so ? https://explorer.solana.com/?cluster=devnet
is devnet offline atm?
Oh btw please use https://spl.solana.com/associated-token-account i did not use it in my project
BTW, if I create an account from the public key of a program, it means that program is the owner? I'm trying to create a Vault for my program but not sure how to "architect" it
Thanks Trent !
Done 👍🏻
Tip jar is on twitter follow button
no extra fee for that, your instruction will just be terminated by the runtime if it consumes more than the max compute units
One last one (for the moment) as I consume from the `max_units` budget for my transaction, does that translate to lamport costs to my program somehow?
But I believe the code of Synthetify is helping me quite a lot 🙂
Yeah, I spent the whole day checking those examples. But couldn't figure it out how to create a Token Account by myself (yeah, I feel ashamed of myself, it should SO simple...)
This example is probably more what you're looking for https://github.com/project-serum/anchor/tree/master/examples/spl/token-proxy.
There's also a bunch of examples here https://project-serum.github.io/anchor/getting-started/introduction.html and here https://github.com/project-serum/anchor/tree/master/examples
I'll have a look 🙂
np
Thanks!
That's great!
TS/Rust
Fully anchor based even cross program invocation with Token Program
#autopromotion https://github.com/Synthetify/
New to solana development here (coming from solidity). I am starting with Anchor but I have some doubts about accounts and how to create them. Anyone has a link or something that might help on how to create Token Accounts (javascript or Rust, doesn't matter)
Sounds like you hit that level 😉
but still something that i need to consider
Honestly i did not explore that because that something that i will hit only if i expand system to certain level
Serum's event queues are like 1MB, but zero-copy
Can you restructure to use zero-copy instead?
Since even small improvement may result in different (often simpler) architecture of smartcontract
Maybe is worth start testing this stuff on some test network
Would love to see some profiling of these metrics and how network handles them
Also i think stack is right now biggest limitation since serialization of more than like 6kb is error
true but still some things are just super complicated just cuz we run out of juice
Eh.  We have to be careful with those.  It just encourages poorly performant code being deployed on chain
BTW when is next compute units increase would love to see 300k 😆
but even transactions are getting out of hand
thats what i am doing already ;D
I meant drive on-chain state with multiple _transactions_
Doh... I forgot this thing has builtin `sed`
spliting is fine in my case but would prefer solve this somehow
I already got multiple instruction problem is that they do not fit in one transaction
Drive on-chain state with multiple transactions :slight_smile:
Maybe compression is possible ?
Nice one account less
This'll help a ton in some cases:
https://github.com/solana-labs/solana/pull/16218
It's a little ways out from landing, but once it does it'll no longer be necessary to reference sysvar accounts in your instructions.
reduce *unique accounts*
or reduce the instruction size
You would be surprised .... 😃
😆
Reduce the number of accounts used in the transaction
Ah, yes. That's what I meant to say.
The NFT metadata will likely be associated with the Token mint account, so it doesn't matter who holds the NFT
Are there cool tricks to reduce transaction size ? ```Translating error AssertionError [ERR_ASSERTION]: Transaction too large: 1282 > 1232```
Not sure what you mean by that. Are you saying that the upcoming NFT metadata RFC will copy the data to the destination associated account upon transfer through the smart contract? Sorry, kind of lost track here.
Keep an eye on https://github.com/solana-labs/solana/issues/16207
We'll initially use an associated account, so it's not necessary to modify the SPL Token program to do this
ok thanks guys .. i'll try using the token account info
Hi all, I am having an odd error with a piece of my code:
```
      const userPoolAccount = new web3.Account();

      await poolProgram.rpc.createUserPoolAccount(wallet.publicKey, {
        accounts: {
          userPoolAccount: userPoolAccount.publicKey,
          rent: web3.SYSVAR_RENT_PUBKEY,
        },
        signers: [userPoolAccount],
        instructions: [await poolProgram.account.userPoolAccount.createInstruction(userPoolAccount)],
      });
```
This code works fine in a test, but not in a client. I get a `TypeError: publicKey.toBytes is not a function`.
Any idea what might cause this behaviour ?
So it will always be there, regardless of which account is the holder.
We should be able to store the metadata in the token account info I think.
There's a metadata convention that @b is working on defining for NFTs to bring some uniformity here.  But yes, for now metadata is either off-chain or via whatever convention you define
So it's freeform at this point, just like in the olden days of ETH.
From what I gather, Solana does not have a common standard for NFTs yet. The only marketplace, Solible, uses some convoluted stuff like metadata in Github and Serum pools for its format.
asking again in case my question was unclear:

can data be embedded within a token or transaction? I know that there is account storage. But what about the NFT use case for crypto art, where the hash of a piece of content is embedded within the NFT..
I guess this could be done by having some magic bytes in the account info?
Also, is there any way I can build NFT collections? I would need to identify which of my NFTs the user has in their wallet to display them in my dapp.
Can I use an oracle for random numbers?
Great... kudos
yes, it's based on the size of the account.  `solana rent --help` can be helpful, there's an JSON RPC API as well for this
Is the program charged for each accounts state space? If so, is there a calculation we can use to determine costs per account state?


///////////////////////////////////////////////////////////////////////////////////////////////

structs and implementation is the analogy to Java classes (generally)... One thing to understand is ownership and lifetime of objects as there is no GC per se in Rust
i.e. how much of the balance needs to be deducted from the transaction's `lamports` field for the tx to be successful
How would I go about calculating the fee required to transfer an account's full balance via the web3 library?
loving the quick blockchain btw. Was first involved in crypto in 2013, mining etc, but could never see it scaling properly until now. So glad to be getting back in
Some very familiar bid/ask stuff... but then lots of at the moment very abstract things... will wade through it I guess!
thanks guys. The rust programming language is one thing. I expect to have to relearn a lot of stuff I've forgotten. It was when I looked in some of the solana programs I realized theres a lot of boilerplate stuff going on that I need to understand. Even the JS for the dex looks a bit daunting.
But you can definitely focus more on the logic instead of worrying about semantic, if in js you don't know exactly what objects you are manipulating, you will not have problems with rust
For my experience as a c# php and js developer, It's a language not so immediate, It includes some of the biggest functionalities of all the main languages
Awesome, I would recommend learning Rust with "the book" first and then read through the serum dex source code (it's advanced)
https://doc.rust-lang.org/book/
https://github.com/project-serum/serum-dex/tree/master/dex/src
Should build it within the current constraints
Mostly familiar with orderbook and finance coding so am really pumped to start doing some decentralised limit order stuff
I'm a java dev, havent coded C for about 15 years.
however now I'm getting in to the code - the Rust api is confusing to me. How big is the learning curve here guys ?
Hi, got my local env running solana and got hello world working. Had to install linux. Windows too much of a pain.
Cause I don't really know in how much time Solana team expect to add those functionalities
In your opinion, should I build my project already thinking about that in the future accounts data will be able to be resizable? Or should I work with current functionalities and in the future update of the program thinking a way to adapt It to resizable accounts?
Yeah definitely, should all be composable
Is any of these features that will be added in the future going to work also for current programs? Cause for example time lock i don't know what itbis
currently you can't re-allocate accounts that are already used
it's just a current limitation of our runtime. Subject to change in the future
Why is that not reallocatable?
Ok so if the program grows by too much then that's the end
yeah you can set max-space. By default we set it to 2x the size of the first deployed program
Is that "allocate space" directly accessible from solana deploy?
yeah and the ecosystem to provide the tools to make it easy to show trustability
?
Synthesis is : It's up to the program creators to demonstrate their trustability
governance, time lock, program source code verification, etc
Not to say that this is all already built 🙂 we still have lots of features to build
no problem!
Well thank you so, very good explanation
And that's fully possible on solana
At the end of the day, as long as this is transparent, I don't see an issue with that. I would prefer to only lock value in programs that are verified, audited, and have a time lock on the upgrade authority
Well, you can do whatever you want in a program. The authority to redeploy a program is quite sensitive. It can be set to "none" to disable upgrades, it can be set to a multisig wallet, it can be set to a governance contract
Don't you think this is a solana breaker? I mean... This implies that that program creators have the possibility to fully exclude everybody from using the program whenever they feel to, this is actually a centralized logic
Sorry I've never used the swap functionality
Thank you. I've just understood that I tried to get data from a deprecated market. Could you also help me with getting current swap price from serum swap? Where can I find swap ui repository?
You can get locked out of the contract effectively if you can't produce a signature for a program derived address
Ah yeah, definitely
The 'completely remove' was an exaggeration of course, but still he could simply remove the functions where I can handle my derived accounts, so the data and tokens would still be there but lost as long as the program doesn't let me access It
The derived address will continue to work after upgrade as well, because the derived address is determined by the program id and that doesn't change between upgrades
Programs cannot be removed completely. Best you can do is change it to a no-op program
So if a program has a function that create a derived address where I am the virtual owner (cause only the program can sign for It if I am signer of transaction) and the owner of the program decide to update the program  or remove it completely, I am just losing access to that derived address
for (let bid of bids) 
      console.log(bid.<property>) 

Where property can be 
size, side, price,....
How can I get bids/asks data from Serum DEX? I've tried to use `let bids = await market.loadBids(connection);` but I don't understand how to get prices and amounts from received bids object.
Yes, that's the idea
If I allocate enough space, can I reload a program as many times as I want into the same account?
does anyone understand this situation.
Also I'm wondering is the decentralized bridge to exchange token between ETH and SOL works right now?
Great! I'll try it thank you!
we tried to build our own nodes, but the synchronization was super slow. 
is there a way to speed up the synchronization?
Otherwise we'll just have to wait until it's more clear, but it might be worth diving into nonetheless given the efficiency of transactions
Yeah I've noticed, the documentation for the ts sdk could use some work. Will look into the tests and stuff to see if I can work something out.
Good luck, Solana has a steep learning curve so I've heard (i'm not a developer myself).
I'm looking into possible integrations with other networks in the meantime, an SPL wrapper to start with for instance.
Awesome, will check it out!
Yes sir, we're launching our core product ecosystem (the initial lineup of products that we built the blockchain for) this month: https://compendia.org/blog/launch-month-mar-2021
absolutely. Hope you are having fun with the new brand. All going smooth?
That was a fun event for sure
OG!
And I'm just kidding oc, I was present at your launch in Amsterdam back a few years. Those were the days
Always exploring technologies for future co-integrations 😄 Our blockchain is built with ARK's typescript blockchain framework.
Good to see good old NEO people moving to Solana <@!135822290251153409> 👍
Please help on this...
Ideally you would end up with similar/identical objects so you can just reinject them in the same logic
Is there any plan to wrap the websocket notifications into similar object as solana/web3.js?
nvm there is serialize method 😆
but it does not work when i try to recreate `console.log(Transaction.from(btx.data))`
I need to serialize Transaction and then build it back i tried ```const stx = JSON.stringify(tx.serializeMessage())
    const btx = JSON.parse(stx)```


///////////////////////////////////////////////////////////////////////////////////////////////

oh and it works with chrome and firefox
Hopefully i will make it close to metamask i terms of flow
but its huge improvement over sollet
UI is dummy since i just started working on it
its injecting SolanaProvider wallet+connection
<@!367336087292477440> try https://github.com/NorbertBodziony/solana-extension
<@!618889766494273557> - no promos please
max transaction size is 1206 bytes apparently... https://github.com/solana-labs/solana/blob/6123d714891bce10b9dde869447835221e26b2ef/web3.js/src/transaction.js#L33
how you carve that up between data passed vs accounts is up to you afaik.
check this https://docs.solana.com/developing/programming-model/transactions
Which is literally a show stopper for our project.  It's very frustrating that there isn't a way to sign like metamask at this juncture.
and at different times I have seen the issue on Chromium as well
Yeah, I know on firefox depending on your options the popup defaults to the background. So different browsers behave differently.
Thanks <@345046176149536769> yeah the double pop up is unavoidable. We just have a UX issue that the second one stays in the background, but working with them to see why.
As for Metamask, it allows signature of plain text message (e.g "Please sign this message to prove ownership ") which is also better experience that a dummy tx
What are the limits on instruction data length and number of accounts?
also the sollet.io wallet could be updated to have an "allow list" of sites that you trust to autosign transactions
the popups will be unavoidable at this time
I think if you want the user to sign in with a dummy transaction and avoid double pop up you need to wait a few seconds until after they connect the wallet maybe
It has been a while since I have done it so I forget the site, but they also asked to sign a empty tx in metamask
so what is the difference?
ah, I've seen the same thing in metamask
<@345046176149536769> <@752722929397137452> we sign a dummy transaction to send proof of ownership to a backend service. It's a usual way to implement some login mechanism using crypto addresses. If Sollet offer better approach please let me know, thank you!
Yes, the first signer
Hello all. What are the rules for selecting who pays the transaction fee? Is it always just the first signer?
I'll check with my devs to see if we've tried signAllTransactions, thanks b.
And I agree with <@345046176149536769> why do you need dummy transaction?
You can avoid multiple pop ups with signAllTransactions
I don't think you are using it correctly
You don't need to sign a dummy transaction
Yes, but to use sollet with that requires signing a dummy transaction.  The UX is bad.  Are there any websites using that with any wallet in the Solana ecosystem that actually work well?
🤷
I had a talk with a good friend the other day, and they complained about how hard metamask was to use
Metamask allows for logins to websites because of its good signing functionality.
https://github.com/project-serum/sol-wallet-adapter
I need SOMETHING for signing that is.
I need it for signing though, not just for the wallet.  It functions well enough as a wallet.  I need it for signing.
https://swap.projectserum.com/#/?pair=SOL-USDC
most of the websites in the ecosystem are using sollet.io as a wallet choice
<@!345046176149536769> are there any websites successfully using sollet.io to login and have a good UX?  We tried but it requires a dummy transaction and there are issues with the double popups.
<@!367336087292477440> sollet.io
not that i know of
i mean like inside web3
bip39
What wallet is everyone using for signing?  We have an app where we need to use a wallet to sign in like metamask allows.  Sollet requires signing a dummy transaction and the resulting UX is terrible.  What is the best option out there?  Thanks.
Is there support in js library for generating memonic accounts ?
A (hopefully) quick question. Let's say I want to write some client code to connect to Solana accounts and send instructions. And let's say I want to write it in Rust. What's the current best crate+client to use? (I see `RpcClient` and `ThinClient` in the `solana_client` crate: https://docs.rs/solana-client/1.5.13/solana_client/all.html but I also see this https://docs.solana.com/proposals/rust-clients about the client in the `solana-sdk` crate.)
Where to store the data for a single NFT token?
Hi guys, how much time would it approximately take for a PR to get approved on the token's registry repo ?
And, is there a limit at some point ? if someone wanted to list like 90+ unique tokens in a week in 1 PR ? Thanks
Hi all, I need help with converting/adjusting this code to send Serum(SRM) funds from one address to other. 
https://github.com/VishalVikramSingh/solana/blob/main/test.js
Please help.
talk to you all later
alright, got to sleep
haha, i dont think I'll be paying that
Yeah that arbitrary CPI should be interesting.  RIP your audit bill <:trollface:552227154390286376>
once I get that working, it's very close
the rest is really bureaucracy
the arbitrary CPI is the cherry on top
woo
the front and the back
you should see these behemoth double PRs im building man
The app, not the people 🙃
Discord is the worst part of all of this!
i feel bad lol
man
i wonder how much faster i could've learned it
it's been a rough fun three months learning rust and solana, i hadnt tried using the discord though till tonight
Low latency chain with low latency support 🙂
that's a fact 🏅
you rock trent
thanks for help guys, responsiveness here is amazing
lol pitchfork time
cluster neutrality! 😉
One day the cluster probably should charge an extra fee when a writeable account is used, as you're potentially clogging up the pipes
The More You Know (c)
ah right because any txs that are read only can be operated on in ||
That makes your TXs more parallelizable
Another option would be to mark fewer accounts writable 😉
Probably easiest to just trace all of the accounts your instructions mark writable
That's a runtime post check.  I don't think there's any logging around this
actually take what i said above back - i think you can use authority when doing spl token accounts as owner 😉
I assume you're using explorer.solana.com ?
was also when spawning a new token account, actually, for my program
tryin to think what it was...i saw it a couple weeks ago
I've gotten that one before
ah yeah because of this "I got error instruction modified data of an account it does not own 
how can i get more detail, such like which accounts been modified"
actually I just wanna know how can i get more error detail about tx.
Is it the authority account, or is it some other account
Ok so question - when you're doing your spl token create account command - who is the owner account being passed in?
I'm not sure I know what your mean completely.
My tx main idea is that create a associated token account base on the program derived address.
In other words, the  program derived address is the authority of associated token account.
I assume your program (which is an executable account) also has an associated data account hat gets made with it that you use for owning accounts like this associated token account, right?
If you're making an spl token account, you want the "owner" to be either the user or the account you setup for your program, depending on who is going to be in charge of doing transactions with it. The program derived address can't actually "own" anything. It's only used as a form of authority.
you dont want the PDA to actually own the associated token account - is that whar you're doing?
My tx is creating associated token account for program derived address via invoke signed. Is this workable ?
I've tried it. The log message is same as I got from `simulateTransaction` api. 😢
Happy to help!  I'm about to go try to haggle the hour I just wasted back from rustc devs 🤞
you've probably saved me, oh, three or four hours here.
Thank you again trent!
I didn't see the return.
oh, yes! stupid me. I was actualyl just scrolling past this in the file!
I think this does what you want, https://github.com/solana-labs/solana/blob/master/sdk/program/src/message.rs#L398
I just don't know about it?
I could try to maybe reverse engineer the instruction object but the Message object seems a nice enough thing it might have an interface against which it can be used to invoke
trying to sort of do an arbitrary CPI on behalf of someone else type deal
Follow up question: Is there a way to take a Message and do an invoke_signed with it, given invoke_signed expects an uncompiled Instruction object?
yes, that works! Thank you!
let me give that a whirl, thanks!
<@!440990411591254037> `Message` derives  `Deserialize`, so you can `let message = bincode::deserialize::<Message>(&bytes)?;`
I've tried use the `simulateTransaction` to get the tx execution log, but there is no any suspicious logs.
Maybe I use the `solana logs` to try again. Thank you
Anybody have experience with deserializing a Message from a u8 array in Rust? I know if you have an array of numbers from message.serialize() in js land you can do Message.from() with it to get a message instance back but the equivalent Message::from() in rust-world only takes a Message struct, so it's not analogous. Looking for equivalent of the ::unpack() method that we use all over the place in solana-program-library. It looks like we're using the serde-rs library but when I try to use Message::deserialize with the byte array it doesn't seem to be acceptable so pretty sure I'm missing something here. Im sure it's something stupid.
Is there more context around the message? I've noticed sometimes the `solana logs` command or output will show the problematic address near it
I got error `instruction modified data of an account it does not own` 
how can i get more detail, such like which accounts been modified
and I noticed that when I transferred 1M tokens over to Solana, this account suddenly was minted 10M of the SPL tokens
I bridged an ERC-20 token to SPL
Hey guys, is this a special address?
https://explorer.solana.com/address/FBUKfg7Thx4WDM4ATehJe1xWzuGtMk1myXhRSvuSq19h
yep, at your discretion
Are smart contracts on solana 'upgradable'?
And thank you!
Main solana repo, please 🙂
im afraid I forgot, where do I make PRs for web3? the web3 repo or the main solana repo?
I see, thank you
`lamportsPerSignature` times the number of signatures your transaction has
hey the fee is associated with the recent blockhash you're using  when signing your transaction.
https://solana-labs.github.io/solana-web3.js/class/src/connection.js~Connection.html#instance-method-getRecentBlockhash

When you get a recent blockhash there's also a FeeCalculator object returned that you can use to compute the fee
Just following up on this if anyone has any suggestions.
got it thanks
<@!149990576572334080> The infrastructure changes to support realloc are still wip and we don't have a clear target for when we will be able to support it
<@!149990576572334080> this is the `deploy` option to set the max size of the upgradeable account: `--max-len`
got it BTW any info how things are going with dynamic changing of account size ?
The program account is overallocated to reserve space for future growth.  I believe there's a command-line option to control the size of the overallocation
How upgradable program get stored on chain if it size changes after upgrade ?


///////////////////////////////////////////////////////////////////////////////////////////////

okay fixed
still same error
use null
the error only happens after I add this intruction to the transaction ```// 6. Remove minting functionality
      transaction.add(
          Token.createSetAuthorityInstruction(
            programId,
            mint.publicKey,
            new PublicKey('11111111111111111111111111111111'),
            1,
            owner.publicKey,
            [],
        ),
      )```
okay tried using the system program public key with no use, still getting the same error ```Unhandled Rejection (TypeError): Cannot read property 'toString' of undefined
(anonymous function)
src/transaction.js:272
  269 | // Cull duplicate account metas
  270 | const uniqueMetas: AccountMeta[] = [];
  271 | accountMetas.forEach(accountMeta => {
> 272 |   const pubkeyString = accountMeta.pubkey.toString();
      | ^  273 |   const uniqueIndex = uniqueMetas.findIndex(x => {
  274 |     return x.pubkey.toString() === pubkeyString;
  275 |   });```
hmm okay will try that
`11111111111111111111111111111111` (system program) is a good value to use
or do I pass random address
is it possible to use null as public key to disable mint functionality ?
I will try ask in their discord
yeah
its sollet output right ?
idk i dont use sollet
okay so everything works now, is it normal to have unknown instruction ?
nvm fixed 🙂
I created a transaction -> tried to sign the transaction
``      let signed = await wallet.signTransaction(transaction)``
okay so did everything but I get this error ```js
Unhandled Rejection (Error): Transaction fee payer required
Transaction.compileMessage
src/transaction.js:236
  233 |   // Use implicit fee payer
  234 |   feePayer = this.signatures[0].publicKey;
  235 | } else {
> 236 |   throw new Error('Transaction fee payer required');
      | ^  237 | }
  238 | 
  239 | const programIds: string[] = [];```
os something like that
Transaction object got method signpartial
<@!208527206966755329> yes there is
okay so a better question would be is there a way to sign a transaction without sending it ?
Hello, I am trying to implement sollet sign transaction. I currently created a transaction but the problem is the transaction requires the payer account, is there a way to get the wallet account ?
Is there an article about why BPF vs something like the EVM?
Here is an example of how to define a reference to the external syscall symbols:
https://github.com/solana-labs/solana/blob/efcb58092eae4fff0f5f6baaceaf2ea5a8c4579f/sdk/program/src/pubkey.rs#L194
Our program is in Rust however; so I'm still unsure what to 'use' to use it
yes, I have it in there for those C/C++ folk
<@!814228493302497301> Yup, if you are calling from C/C++ you need to extern that the syscall symbol in your program
thanks trent!
which, I presume, is for C/C++ programs
I just found i need to add it to solana/sdk/bpf/c/inc
So, I've got syscalls.rs all wired up already... how can I access from my bpf program?
I did implement and test in syscalls already BTW
It does a mod_exp on BigNums...
What does your syscall do?
Cool, take a look here
https://github.com/solana-labs/solana/blob/c5371fdc85b6b5357d4da52e5450b4aab0d48257/programs/bpf_loader/src/syscalls.rs#L96
and here
https://github.com/solana-labs/solana/blob/c5371fdc85b6b5357d4da52e5450b4aab0d48257/programs/bpf_loader/src/syscalls.rs#L148
<@!453347985628200960> In the short term I would like to call it during solana-test-validate of our proof-of-concept program
Yes, the intent is to demonstrate first, but yes
into one of these https://github.com/solana-labs/solana/blob/master/sdk/program/src/clock.rs#L82
Then use this method to decode the `AccountInfo`. https://github.com/solana-labs/solana/blob/master/sdk/program/src/sysvar/mod.rs#L64
Load the account at this address https://github.com/solana-labs/solana/blob/master/sdk/program/src/sysvar/clock.rs
is that the current slot?
<@!814228493302497301> Syscalls are dynamically addable, is your long term goal to mainline it into Solana?
You want the clock sysvar
from a program
I've implemented a syscall under bpf_program and its unit tests succeed.  
Question: How do I wire it up so it is visible to a bpf program?
nvm fixed
any reason why this is happening ?
```js
Connection.sendEncodedTransaction
src/connection.js:3067
  3064 |       console.error(res.error.message, logTrace);
  3065 |     }
  3066 |   }
> 3067 |   throw new Error('failed to send transaction: ' + res.error.message);
       | ^  3068 | }
  3069 | assert(typeof res.result !== 'undefined');
  3070 | assert(res.result);


View compiled
async Connection.sendRawTransaction
src/connection.js:3028
  3025 |   options: ?SendOptions,
  3026 | ): Promise<TransactionSignature> {
  3027 |   const encodedTransaction = toBuffer(rawTransaction).toString('base64');
> 3028 |   const result = await this.sendEncodedTransaction(
       | ^  3029 |     encodedTransaction,
  3030 |     options,
  3031 |   );


View compiled
async Connection.sendTransaction
src/connection.js:3003
  3000 |   }
  3001 | 
  3002 |   const wireTransaction = transaction.serialize();
> 3003 |   return await this.sendRawTransaction(wireTransaction, options);
       | ^  3004 | }
  3005 | 
  3006 | 


View compiled
async sendAndConfirmTransaction
src/util/send-and-confirm-transaction.js:31
  28 |   preflightCommitment: options.preflightCommitment || options.commitment,
  29 | };
  30 | 
> 31 | const signature = await connection.sendTransaction(
     | ^  32 |   transaction,
  33 |   signers,
  34 |   sendOptions,
```
```Unhandled Rejection (Error): failed to send transaction: Transaction simulation failed: Error processing Instruction 3: custom program error: 0x0
```
Also, yes 🙂
From a program or client?
there an easy way in rust to get the current slot of the cluster
It depends which authority and on what account type (token account or mint). The Rust code for executing the instruction is here, https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/processor.rs#L338-L343
to change the authority
Which transaction?
the authority account or the owner of the mint
and who is obligated to sign the transaction ?
okay that makes sense
oh
You stop the mint function by setting the mint authority to a key that doesn't exist
It doesn't stop the mint function
can you link me with code that stops the mint function ? didn't find anything in js library
Otherwise we need four instructions that do the same thing
That's just for choosing which authority to set with the authorize instruction
these ones ?
```const AuthorityTypeCodes = {
  MintTokens: 0,
  FreezeAccount: 1,
  AccountOwner: 2,
  CloseAccount: 3,
};```
The authority stored in the mint just has the ability to set that bit in an account
Ohh
oh
Freeze prevents transfers
I will end up checking the explorer I guess
well I want to do it in js but that helps too
https://spl.solana.com/token#example-create-a-non-fungible-token
and how would I do to stop the mint functionality with the freezeAuthority account
Yes, an account or even a program
so that's the account of the one who can stop the mint, correct ?
It's exactly that
basically like disabling the mint functionality
Stops the possibility to generate other tokens
what does freezeAuthority do ? ( in the token program )
If you will need any special feature  let me know
Thanks <@!149990576572334080> -- we'll evaluate!


///////////////////////////////////////////////////////////////////////////////////////////////

Does anybody know why the following TXN to initialize buffer with bpf upgradeable loader isf ailing with InvalidInstructionData call? https://explorer.solana.com/tx/4wm9g7FZbq4AuoYCYQFZWm97PmRJsqFFGFVqPTWW3WHSjLS9ZQ5ECYqx2kMkdUwtCbsyoLqkSMcwiUYQQzH72ySt?cluster=devnet&customUrl=http%3A%2F%2Flocalhost%3A8899
<@!384453991364427776> docs are here. Never mind the "unstable" tag 😉  https://docs.solana.com/developing/clients/jsonrpc-api#gettokenaccountbalance
Thanks for the reply ! I'll make sure to follow updates on the subject if any 🙂 , otherwise personnally for now i'll use dummy tokens for quotes and stuff w/ serum on devnet
USDC has a faucet only on testnet right now (not devnet) at https://developers.circle.com/docs/usdc-on-testnet
Although I just tried it on testnet and it didn't work yet
is there a github repo for solong wallet ? I am trying to integrate solong
I've cloned and `cargo build` the latest from github
I want to setup my Cargo.toml to `cargo build-bpf` on my program... any insight into the steps? Up until now I've been building from the installed 1.5.10 with `solana-program = "1.5.10"` in my Cargo.toml (all worked fine).
`SystemProgram.transfer` will only have one signature I'm assuming (if sending from one account to another account)?
Hi guys Is there USDC or USDT on the devnet ?
But I am not exactly sure what could be the use case for that
It is almost like a generic "dump instruction data from instruction into provided account" program could exist, so you could do that from within outside a program
There is a sign all transactions without asking slider, but i guess not recommended
figured it out - dropped a pubkey on an ix somewhere
after a `wallet.signTransaction(transaction)` as the start
this is on devnet, and it seems to result from line 271 of `transaction.js`
has anyone run into this before?
I'm running into a `Cannot read property 'toString' of undefined` when trying to sign a tx with a wallet, using `@project-serum/sol-wallet-adapter`
yup, think i got a good idea going
Working on it..
hmm I think Im going to have ti implement a struct that has a Vec member and can pack...
Hello, I'm trying to edit the data in an AccountInfo object directly. Because the data in the account info object won't always be the same I can't easily map it to a struct and use Pack trait. When I tried doing try_borrow_mut_data() and then editing that, it built fine and even deployed fine, but on executing ANY instruction against the program it throws an Access violation error, which I guess kind of makes sense. I guess Im not allowed to directly access this data array. What's the kosher way to edit this array?
Hi, is there a way to use callbacks to get info  like end or start of an epoch? Or is the only way to run own server app to trigger such transactions supposed to be triggered by end of an epoch?
idk but hopefully my extension will have option for that ;D
Is there a way to make it so sollet.io popup doesnt need to ask for approval for every single thing
but thanks for confirming 🙂
it doesnt, i think im just going to have to do it via a smart contract myself
idk if that helps u
But yes u can bundle multiple small instructions into single transaction
You mean data account ? Those can be only modified by smarcontracts
there a way once a SystemAccount instruction is made (to create new account) to in the same transaction dump an array of bytes (in web3 js) into that account?

sneak peak to extension
okay thanks
Yes
okay everything works, just to make sure I am correct. Does this disable the mint functionality ?



///////////////////////////////////////////////////////////////////////////////////////////////

