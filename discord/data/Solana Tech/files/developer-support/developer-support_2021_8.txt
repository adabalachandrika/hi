I don't really understand the question.  There are public nodes, but they're rate limited and offer no SLA.  If you need higher rates or better SLA, you'll need to sort something out for your use case
thanks! Another question regarding that is, do the RPC endpoints belong to public Solana nodes? Or do I have to run my own node locally?
cool thanks
thanks
Finalized is the safe, lazy option
To use processed you really want to be confident in the RPC infrastructure you're using
Confirmed is generally safe in good network conditions and with robust retry logic
Yes
got it, i guess better to use full just to make sure
Worst case the TX goes into a forked block that get's dropped
What can go wrong?
Whats the caveats if I choose processed instead of max?
Yes i get that, so which option is a good pick?
`commitment` is a trade off left to the application
No.  That method is explicitly for SPL Token accounts.  You'll need to use `getProgramAccounts` targeting the stake program and with an appropriate filter
I just want to be sure tokens will be delivered
Hey guys! I'm not sure I understand `commitment` option. Which one is safe to use in a bulk token send? Default (which is max i think) is slow, ~10sec. processed is fast, ~1sec.
hello all, If i want to get all delegations and their rewards for a given validator key, would this method be the correct one to call? https://docs.solana.com/developing/clients/jsonrpc-api#gettokenaccountsbydelegate - RPC
No, there are restrictions to some degree.
`cargo build-bpf` will let you know if the lib passes muster or not
ok yes dev then it is: https://docs.solana.com/developing/programming-model/overview and I am a external tool dev so i am not the best to ask about the smart contracts. perhaps someone watching can offer additional advice to this gentleman
Yep. Good call
You can invoke functions (instructions) from any on-chain programs (smart contart called a program on Solana, and you can write it in Rust). There are Native programs (https://docs.solana.com/developing/runtime-facilities/programs), which have already deployed on cluster and which functions you can invoke from your own programs or js applications. Also there are a docs for these programs ( for example: https://docs.rs/solana-program/1.7.9/solana_program/index.html, https://docs.rs/spl-token/3.2.0/spl_token/index.html). 
I hope i helped you a little!
Can i import any libraries a want in a solana program ?
Can a smart contract issue new nft tokens or does it have to be manually trough cli?
Beginner question - Does the <@832686202074300446>/web3.js library essentially give you access to some commonly used/core Solana programs (Rust programs/smart contracts)? Meaning, for common programs like connecting to a wallet, sending/receiving tokens, etc., I don't have to code up my own Rust program, correct? I went through one tutorial building an Escrow program from scratch. Then I went through another tutorial where we didn't build any Rust program, but instead just used an existing Solana program via the solana/web3.js library.

Just trying to make sure I'm understanding all of this correctly. If my understanding is correct, is there a central list of these "ready-made" Solana programs that could be used for other projects? Thanks in advance for your help!
Isn't the larger issue that CreateAccount fails when the account has any lamports? Someone could block accounts from being created as an ATA by transferring a small amount of lamports there. (At least that's what I always assumed is the reason for splitting the instructions.)
It is fixed. the problem was with old node version.
Did you deploy the program first?
Is there a way to trigger a program when my address receives a transfer?
nevermind, just saw that keys can be 44 or 43 in length when to_string()
seems to happen if you invoke the method in a loop, specifically
running some tests... has anyone else noticed that Pubkey::new_unique() will different length test keys?
It fails to read they key pair at helloworld-keypair.json due to `TextEncoder is not defined.`
Can anyone please help me with this??
Hello I am trying to run the simple hello world program in Solana but got into below error:

```
Let's say hello to a Solana account...
Connection to cluster established: http://localhost:8899 { 'feature-set': 743297851, 'solana-core': '1.7.4' }
Using account Dp74ea9PCZYYpwh6ZAZnGhvSxU1oTRUv64FWBMivDWAR containing 0.00141872 SOL to pay for fees
Error: Failed to read program keypair at '/Users/pulu/projects/xxxxxxx/example-helloworld/dist/program/helloworld-keypair.json' due to error: TextEncoder is not defined. Program may need to be deployed with `solana program deploy dist/program/helloworld.so`
    at Object.<anonymous> (/Users/pulu/projects/xxxxxx/example-helloworld/src/client/hello_world.ts:153:11)
    at Generator.throw (<anonymous>)
    at rejected (/Users/pulu/projects/xxxxx/example-helloworld/src/client/hello_world.ts:27:65)
```
I've been trying to understand Solana's token model, and I can use the spltoken library to generate tokens, but I'm a little unsure what's going on under the hood.  For example, when you create a mint, a keypair is generated (https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js#L392).  This keypair includes the pk (account address) for the mint, as well as a secret key.  The secret key is used as a signing key in sendAndConfirmTransaction (https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js#L432).  But then it seems to be discarded.   Am I correct in thinking that this is the only place the mintAccount secret key is used?  Why is the mintAccount needed as a signer on this transaction?
Sorry if questions are stupid..im at very early stages of learning so its not clear to me :/
That part about where you split POH and verify it in parallel who does that? Leader itself or verifiers?
Guys is there always only one leader that creates POH? In whitepaper it mentions it can be horizontally scalable, but also that leader is responsible for it so im confused.

Also does POH ledger get cleared once the block is created or is counter preserved and who validates that POH? Is it sent to different verifiers to confirm POH?
as a matter of fact..even Rust doesnt do it..there is just a drop function that drops variables defined in that scope unless they are returned in scope..etc..
<@!368113048344592384> actually..rust manages all of it for you autoamtically
Is Rust the only/best way to write contracts? I see we have to do low level memory management
hello - just getting started on smart contracts here after the cardano fees seem a bit high for a free project
very weird
but when doing this ```let exp_0 = (6.020599913437957 as f64).exp();``` it works lol
when doing ``` let wow = 6.020599913437957 as f64;
let exp_0 = wow.exp();``` it leads to the error
Hi everyone! I am looking for a mentorship in Solana&Rust. Is this the best channel on the server to ask? Thanks!
is there no implementation on solana runtime?
getting ```ELF error: Unresolved symbol (exp)``` when using exp() with f64
I mean, can the program create the nft's so they "belong" to the program from start or would they need to be assigned to the program by a backend server in the game?
Hi, if one were to make a nft game with 1000 non-fungible tokens for example, would you create each token by cli like this https://spl.solana.com/token#example-create-a-non-fungible-token or is there some easier/quicker way?
thanks buddy :D
In order to send a tokens do I need to create SPL associated address for a destination wallet?
I assume its not possible to have a read-only function in solana programs similar to EVM? I basically have to duplicate code on the client side?


///////////////////////////////////////////////////////////////////////////////////////////////

let me try some more, thanks for the clarification re PDA
No. I only provide a way to implement event on Solana.
It sounds like you want to listen to events like transfer or mint?
if yes, unfortunately you can only get these information by parse tx's instructions.
I don't quite sure your situation. but the concept it that
you use `invoke_signed` when PDA need to be signed
and if there is no any PDA need to. you can complete your invoke by `invoke`
your situation is mess. 
The first error can cause by you don't pass enough signature or your some account can't be writable
and second error is you don't pass an correct program to execute (invoke)
I think you need to make it simple and step by step to debug with it.
https://githubmemory.com/repo/project-serum/spl-token-wallet/issues/331 is this a known issue ?
i think it is not like eth events.  ı want listen by  only programId .  it example paramter wants to tx.
sure. when you fetch your completed tx. the log message will also return.
https://docs.solana.com/developing/clients/jsonrpc-api#getconfirmedtransaction
https://docs.solana.com/developing/clients/jsonrpc-api#gettransaction
both of them return `logMessages`
I tried that but I'm getting one of these 2 errors:
`Cross-program invocation with unauthorized signer or writable account` or
`instruction expected an executable account`

from which I assumed I had to use `invoke_signed` instead of `invoke`.

For context, what I'm trying to do is run the flash loan instruction from the token lending program in SPL, here -> https://github.com/solana-labs/solana-program-library/blob/master/token-lending/program/src/processor.rs#L1521

I need to 1) invoke another program, which 2) will do stuff with the loan and then 3) repay it back. When repaying it back, it of course will have to sign the spl token transfer with some authority. Thus, I need to somehow get that authority into the invoked program.

How do I do that?
can ı  parse program log   on client  ?
not really. You can custom your message in `msg!` and parse program log to retrieve it.
If you don't need to sign a PDA, you can use `invoke()` directly.
I'm trying to run `invoke_signed()` where the signature needs to come from a passed in account, not a PDA.
a) is that even possible?
b) if so, how do I convert `AccountInfo` into `signers_seeds`?
hi ,  has solana program's  events    like ethereum smart contract ?
any idea why this error ? ```[2021-08-10T10:42:59.067026000Z ERROR solana_core::replay_stage] 
 No next leader found
```
Thanks
No
its working .. thanks for help ... if anyone need help to develop solana token wallet in Nodejs with JS or Typescript let me know would happy to give back to community
Hi all . i have set up  two validators on my local machine . i cloned https://github.com/solana-labs/solana-program-library to deploy the sample application . when i try to airdrop some tokens to fund the deployment the transaction times out ```solana airdrop 3 
Requesting airdrop of 3 SOL
⠤ [0/1] Finalizing transaction 2C2zN3xkE4MCU2JRPPd8ySWPsPeJmJZbcc4xbFekEeDtsbqbH77D7AutpWrVGV3bCC33yWhAFjWbbnnYhajKZRTe```.    The faucet has approved the transaction : ```Airdrop transaction requested...GetAirdrop { lamports: 3000000000, to: 5YnbxbpnRPRAgCnMsJv34PgTvwwg55fJJkJciCKim8Rw, blockhash: 28ithpuAgMVahEpjGVT7dWWKDNp1BReik7EvVQ2q597c }
[2021-08-10T12:57:52.766617000Z INFO  solana_faucet::faucet] Requesting airdrop of 3 SOL to 5YnbxbpnRPRAgCnMsJv34PgTvwwg55fJJkJciCKim8Rw
[2021-08-10T12:57:52.766667000Z INFO  solana_metrics::metrics] datapoint: faucet-airdrop request_amount=3000000000i address="5YnbxbpnRPRAgCnMsJv34PgTvwwg55fJJkJciCKim8Rw" new_total=3000000000i
[2021-08-10T12:57:52.766744000Z INFO  solana_faucet::faucet] Airdrop transaction granted
```.     Unable to deploy the sample and run it against my network. any ideas ?
hey how can I catch error on token transfer (from `@solana/spl-token`) when there is insufficient token amount:
```
try {
  token.transfer(..)
} catch(e) {
  console.log(e)
}
```
above doesnt catch it, the program would still error out with something like:
```
Transaction simulation failed: Error processing Instruction 0: custom program error: 0x1
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [1]
    Program log: Instruction: Transfer
    Program log: Error: insufficient funds
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 2661 of 200000 compute units
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA failed: custom program error: 0x1
failed transfer 9MEd5HwNHct4WE8RDDKDyJBbmnTe1G14XsXKyeRWn87o to 3Sk1eA6GF92ATac7vCFHiPdmerP7QJEhG5fYqAbva2fJ Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x1
```
Would anyone know why `~/.local/share/solana/install/releases/1.7.8/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust/bin/rustc` is missing from the installation after running `sh -c "$(curl -sSfL https://release.solana.com/v1.7.8/install)"` on `macOS 10.15.5`
okey let me check and make sure it working or not
I'm not quite sure is it runable. but the main idea is to replace mint object to yours
I think you can replace the createMint line like this
```
const mint = new SPLToken.Token(connection, SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID, SPLToken.TOKEN_PROGRAM_ID, fromWallet)
```
but i am not able to trasnfer this created token to user address
oh. you have already created it
this is token i created with command line using spl-token create-token
https://explorer.solana.com/address/3UaD6Nyoj2sMGYgjkq6BtK4cRS15fYNJquhKELVXynJE?cluster=devnet
and the token is the variable mint you declare
actually when you createMint. you create a new token.
your token? do you mean SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID ?
with this code
but how i can transfer my token which i created
yes that is working correctly with TOKEN_PROGRAM_ID ...
you need to replace your SPL_ASSOCATED_TOKEN.... to TOKEN_PROGRAM_ID in the createMint.
this is the snapshot of my code which i want to get success
support code
which is this one UnhandledPromiseRejectionWarning: Error: failed to send transaction: Transaction simulation failed: This program may not be used for executing instructions
but when i provide my token address as program id it throw error
thats it
this examples works correctly ... i only need to make sure this also works with my created token
and i need help in this example itself
this is the example is what i am following ..
https://github.com/solana-labs/solana-program-library/blob/master/token/js/examples/create_mint_and_transfer_tokens.js
i am already using this one
I think you need https://solana-labs.github.io/solana-web3.js/ too
yes. you can use this https://www.npmjs.com/package/@solana/spl-token
i am not able to get this completely
is there any implementation over JS, Tyepscript
I'm not sure I totally understand what you say.
but I take transfer instruction as an example.
https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/instruction.rs#L95
there are `from` , `to`, `signer`
you need to pass the same mint's token account to `from` and `to`
`singer` is the owner of `from`
and this instruction's program is token program
<@!788215642070581289> am i going right ?
from inside an *on-chain program*
no
so i have only make sure the receiver account is token associated account
do you need this https://docs.solana.com/developing/clients/jsonrpc-api
sure. you can refer to it
https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/processor.rs#L593
this is `close account` instrucion in token program.
is there a way to do HTTP requests from Solana on chain programs?
I don’t have any ready source. I can try to give some concept.
In token program, there are two kinds of account, `token-account` and `mint`
Your token belongs to `mint`
If you want to receive your token, you need to create a `token-account` for your mint.
Only the same mint of `token-account` can transfer each other.
On the other hand, if someone wants to receive your token, he also need to create a `token-account` for your mint
and all of those operation are instructions in token program
You can find instructions in token program from
https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/instruction.rs#L22
If you want to util it you can consider use 
https://www.npmjs.com/package/@solana/spl-token
For example, i created the account and it's owned by program that i deployed (this account https://explorer.solana.com/address/3AjUZ85n7wDECGo1ZNVLQoD57hTSVz6c39TuvKhYMy36?cluster=devnet) . How can i transfer these lamports back to account, which is owner of program?
can you provide me any resource where i can understand this or i can fulfill my req. ?
where i can do it or how i can correct it ?
you need to find some instructions in token program
if you want to interact with your token (like transfer or mint)
your token is also an account. we call it `mint`
I think you miss some point in solana's account model
this is my token programm id
const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new web3.PublicKey(
  '3UaD6Nyoj2sMGYgjkq6BtK4cRS15fYNJquhKELVXynJE', // token created using command line
);
yes
let me do an assumption. are you trying to pass your token as a program id to it ?
but not working with my own token
the transaction is working with splToken.TOKEN_PROGRAM_ID
working program id  PublicKey {
  _bn: <BN: 6ddf6e1d765a193d9cbe146ceeb79ac1cb485ed5f5b37913a8cf5857eff00a9>
} //   splToken.TOKEN_PROGRAM_ID
program id  PublicKey {
  _bn: <BN: 24c79acb3754925791f3961ddaecfbf10c0bdce4cca2e2ea1ad0e9130aaed29b>
} / i created by using token address
this is the program id
depends on your program. if you are saying system program, absolutely yes.
can anyone help me with this error ?
UnhandledPromiseRejectionWarning: Error: failed to send transaction: Transaction simulation failed: This program may not be used for executing instructions
Hi there! Am i correct in that if i create account and transfer to it lamports in the amount of rent-exempt minimum, that i can use this account as long as it necessary and i can transfer these lamports back when i won't be needing the account ?
Darn, yeah that make sense...will try it out. Thanks a lot.
so you need to pass the `spl_token::native_mint::id()` into your transaction before you send it. 
and in your instruction you can use `&mut account.iter();` and`next_account_info(account_info_iter)?;` to fetch your account
https://github.com/yihau/QF/blob/main/src/program/src/processor.rs#L134
it can help you
Thanks but spl_token::native_mint::id() is of type `PubKey` while the second parameter expects types of `AccountInfo`
guys do you use `connection.sendTransaction()`? With returned signature immediately i'm trying to get `connect.getTransaction(txSignature)` but is always null, any ideas how to do it? 😦
yes. you need to pass `&spl_token::native_mint::id()` to second parameter in invoke_signed.
I am trying to transfer sol from a user wallet that is initiating the transaction to a collection account (a pda). This user wallet is not owned by the program.

The current approach is to ask the program to create a token account, that is initialized by the token program, with `&spl_token::native_mint::id()` passed to the `mint_pubkey` parameter. The token account is initialized with lamports equal to rent exempt amount plus the amount that is intended to be transferred from the user wallet to the collection account (a pda).

I pass the create and initialize ix to a tx to be processed by the program. On chain, the program uses cpi invoke method to transfer authority from the token account to the collection account (a pda). Things seems to work ok until here.

I then attempt to `transfer_checked` the lamports in the token account now supposedly owned by the collection account (a pda). I get the following errors.

Instruction references an unknown account So11111111111111111111111111111111111111112

...failed: An account required by the instruction is missing

I am trying to understand what account might be missing. The program fails at `transfer_checked`, which I have pasted below.
```
let transfer_to_pool_ix = spl_token::instruction::transfer_checked(
            token_program_info.key,
            token_info.key,
            &spl_token::native_mint::id(),
            pda_info.key,
            pda_info.key,
            &[&pda_info.key],
            amount,
            spl_token::native_mint::DECIMALS,
        )?;

        let pda_signer_seeds: &[&[_]] = &[
            &signer_info.key.to_bytes(),
            &pool_info.key.to_bytes(),
            &spl_token::id().to_bytes(),
            POOL_SEED,
        ];

        invoke_signed(
            &transfer_to_pool_ix,
            &[
               token_info.clone(),
               pda_info.clone(),
               token_program_info.clone(),
            ],
            &[&pda_signer_seeds],
        )?;
```
sure. you can use `getSignatureStatus`
https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getSignatureStatus
js
when sending a transaction
is there a way to check if the tx is confirmed in solana ?
<https://2501babe.github.io/posts/solana101.html>
if you don't understand this much then you need to read more / practice more
the only difficult part is `owner` which you need to make sure is of type `Keypair` since it needs the private key in order to sign
```
  async transfer(
    source: PublicKey,
    destination: PublicKey,
    owner: any,
    multiSigners: Array<Signer>,
    amount: number | u64,
  ):
```
i'm not going to do the work for you!
hey
this is the token that i have created using spl-token cli
https://explorer.solana.com/address/3UaD6Nyoj2sMGYgjkq6BtK4cRS15fYNJquhKELVXynJE?cluster=devnet
where should i get these two values from my token
export const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(
  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
);

export const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(
  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',
);
it explains everything
you should read the code for the function that i sent you
i've given you exactly what you need
where should i define which token i am sending to other user
can you help me to understand this ... please i need your help
here's the async function that should do it i think
<https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js#L853-L868>
there is an SPL token program package with functions for this
i have a lot of time in this but not getting any output
can anyone please help me
but i want to know how it works with web3 javascript
i totally understand how it works in command line
address
and also allowing those user to send those token on their address to any other addres
now i want to make sure 1. i can transfer that created token to those user
i am also able to create the associcated account for different user
i have created a token on with spl-token
can anyone give me an example from web3 in javascript to transfer token from one to another account
Thank you , have a good day to you
Godspeed fellow traveller
I recommend discord searching for both of those acronyms, PDA and CPI
And you'll need a PDA so that you can sign these instructions inside the main transaction and execute them via CPI
You can `transfer` tokens from the token account or you can `mint` tokens from the mint account. You should check the SPL token program for the available functions
If you want to send tokens to a user from your program, then you'll need either a token account controlled by the program or a mint account controlled by the program
So you don't mean Solana staking
you know staking ? when people send their tokens to a smart contract, after which they get a little more money added to their account
What does it mean to write stake
I don't understand the question
hi , If I need to write staking, then I have to create an  token account for my program ?
`don't hassle us on discord`
`could take up to two weeks to merged`
lol, you're gonna get given out to
Hello guys. I'm a representative of Sypool Protocol. We have submitted the token application 13 days ago. When would you check it?

If I want to write stake, do I have to create an account to store my program tokens ?
Hey guys! Can you please tell what are the hardware requirements to run a Full Node(RPC node), which is not going to be a validator?
Guys I need a bit of help, I'm using `connection.send()` to broadcast tx and then immediately I'm using `connection.getTransaction(signature)` but is always null any idea how to get it? 😦
anyone know about Chainlink service on Solana and anyway to create customized oracle service?
Any tutorials on making smart contracts with something other than Rust (Java preferred )
need some help with using ledger with cli tool

`solana program set-upgrade-authority <addr> --upgrade-authority usb://ledger <addr>`

fails with 
```Waiting for your approval on Ledger hardware wallet usb://ledger/EsLAEeKA1dUJRiPpbTAm7r94KqGDAKe1ivH8PLAAuSxV
Error: Ledger operation not supported```

However, I'm able to do other ledger operations, e.g. `solana transfer <addr> 0 --keypair usb://ledger`

Has anyone successfully used a ledger with program authority?
I think you need program derived address to hold those SOL.
https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses
and send it when you need.
if you mean SOL faucet you can use https://docs.solana.com/cli/transfer-tokens#airdrop-some-tokens-to-get-started
if you mean SPL-Token faucet, you can use https://spl.solana.com/token#command-line-utility
thank you Chido 🙂
Hello all, does anyone know how you can take the currency SOL to the smart contract and then send it to the address, is it possible?
aha, that makes sense. But the idea of buffers being temporary is not reflected in the usage of accounts? as accounts can be used for data storage for a long time
Hi Guy!
 - I do the normal transaction use RPC_API "sendTransaction" in DevNet with "fromPublicKey" (existing account with balance = 1 sol) and "toPublicKey" (new account) and "amount = 500000 lamports" and "dataLength = 0". After then, I find that, toPublicKey's balance isn't equal 500000 lamports but 499954. I use RPC_API "getTransaction" with TxHash = "3Cud6fi86XuZp2ngcLX1Rgu7BaKKoP3f6Mh98RyGwABL1aLinGBhHwq4UN9iEv3AC3as2MWwvG1TniWEn3daYzCd", I find that "rewards": [{"commission": null, "lamports": -46, "postBalance": 499954, "pubkey": "HkY6rJCWZWYrCRa8932NVJAwW4wCry7co2BWtfgmvxtV", "rewardType": "Rent" }]. I think "lamports": -46 as rent due for new account. However, accordingly documentation of Solana, it should equal 2439 lamports (Rent per epoch). How to calculate rent due (46 lamports) for new account? Thanks!
How to add our platform token into Solana token list so I can get from this API: https://cdn.jsdelivr.net/gh/solana-labs/token-list@main/src/tokens/solana.tokenlist.json
is there a better devnet faucet then manually using the spl-token-ui? like one for lazy people like me lol
that isn't an explorer feature yet, but there has been work on anchor to make this easier: https://twitter.com/armaniferrante/status/1424704829134233603?s=20
I think it's fair to call them accounts because they also have a balance
I'm trying to find the code for a specific program id. Similar to the contract source code etherscan shows for an ethereum contracts.
and they are responsible for holding info that is needed for on-chain state transitions, sometimes just for a very short amount of time
I think it's meant to say that accounts just hold arbitrary data like a byte buffer would
Can someone explain to me the logic behind the statement: "accounts are buffers"? Read it here https://2501babe.github.io/posts/solana101.html
here https://github.com/solana-labs/example-helloworld
I think you can write a program to handle it.
Or if you send tx for all your users. you can compose two instructions into one tx to do it.
Hey Folks, I'm new to developing on Solana. Can someone help me find where I can see the source code for smart contracts on solana?
is there a key parameter to control custom token tax?

such ask : A wallet transfer 1000 token to B wallet. B wallet will only receive 950 token.  which is 5% tax.
Thank you so much
<@!445425471027544095> thanks! This is really helpful
Here's a minimal program template that includes unit and integration tests: https://github.com/mvines/solana-bpf-program-template
Hi Is there any program testing example? I looked at helloworld program but it is too simple, thanks!
Try `export RUST_LOG=solana=debug` and run the command again
Sure that works.  Just find any issue that you think is interesting and make a comment on it to let us know you're looking at it.  We'll generally assign issues to a user once they actively start on it
It's not currently possible, no
When I execute solana cli I got "Error: RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x6 [6 log messages]"
this messages
how can i see 6 log messages?
hi curious if this was the best board to make contributions to solana https://github.com/solana-labs/solana/milestone/15. Want to understand the priorities of the team.
What is the most default derivation path? m/44'/501'/0'/0' or m/44'/501'/0' ?
Is it possible to configure TestValidator to have faster block times so that tests written with it can run faster? If so, how?
Actually, the concurrency problem can be solved too. All I gotta do is let clients create the larger (new) account a bit ahead of time and publish its address on chain while there's still enough free space in the old account to write to and serve transactions normally. The memcpy is deferred until there's no more space in the old account but by that time all clients should've read the new account's (published) address and declared it as writable.
I see. Thanks for the explanation! Okay, my plan B is to have the client prepare a new account (allocate + assign to my program) to copy to. The drawback is that other clients that do the same concurrently will see their transactions fail.
On the plus-side I can then double the account size, which has lower amortized computational costs than increasing by 10kB each time.
No, I think you'll find that scheme does not work in a single instruction because System Allocate requires account data to be empty (zero-length) to succeed, which will not be possible if A's account-data has some length when passed into the program processor.
Account resizing is generally not supported currently, but there have been discussions about adding that functionality in the future.
The answer is that Metaplex Metadata accounts are PDA addresses with the seeds: ['metadata', metaplex_program_id, mint_id] for anyone else who has the same question.
A question to the core devs: I'd like to implement a reallocation scheme to grow accounts when they fill up. Does the following work, assuming A is an account my program owns and I'm doing all of this in a single instruction from my program:
1. Copy A's data to some temporary scratch account, call it S.
2. Zero-out A's data and write the SystemProgram's pubkey (111...) to A's owner field.
3. CPI to SystemProgram, calling Allocate on A, with 10kB more than its current size.
4. CPI to SystemProgram, calling Assign, setting the owner back to my program.
5. Copy the data back from S to A.
seems unlikely to me, I would add some logging in there to figure out what's happening
Wow, what a man, that's actually working !!
Thanks so much for your time, you are amazing !
Is there a chance that somehow the `sort` is not giving the same result every time?
```
let mut seed_key_vec = Vec::new();
seed_key_vec.push(token_a.mint.to_bytes());
seed_key_vec.push(token_b.mint.to_bytes());
seed_key_vec.sort();

let (pool_pda, pool_pda_seed_nonce) = Pubkey::find_program_address(
    &[
        &seed_key_vec[0][..32],
        &seed_key_vec[1][..32],
        &[swap_curve.curve_type as u8]
    ], program_id);

if *swap_info.key != pool_pda {
    return Err(SwapError::InvalidProgramAddress.into());
}
```
Perhaps the seeds I pass to `find_program_address` are not consistently generated 🤔
I actually just realised its not `createWithSeed` but when using PDA's
cool thanks
sure
can I pm you?
I'm off to lunch fyi
it can inspect transactions that are not able to be processed if you follow the instructions
hmm, can you share the transaction you're having problems with? We have an inspector here that you can use: http://explorer.solana.com/tx/inspector
using for that the --owner parameter
I do
yes
so if you look at your associated token account on the explorer, you should be able to see which account is the authority
each associated token account has an authority which must sign the transfer
yepp
an associated token account?
can someone help me here?
I'm getting a message like: "error: missing signature for supplied pubkey"
not quite sure what's wrong
trying to transfer some SPL tokens from an associated account
I got a question about associated accounts
hi guys, not sure if it's the right channel
this happens a lot when seeds are subtly different (which I'm sure you checked but just saying)
no shouldn't be possible, can you share more details
Seeing an intermittent issue where it looks like this is the case
You're the best!! Thanks for the fast and helpful support ❤️
try using `1.7.8` for now, there's a bug in `1.7.9`
Thank you! When I run `solana-test-validator` I get this error: ```thread 'main' panicked at 'called Result::unwrap() on an Err value: Os { code: 2, kind: NotFound, message: "No such file or directory" }', validator/src/bin/solana-test-validator.rs:294:71
note: run with RUST_BACKTRACE=1 environment variable to display a backtrace```
That means it's trying to connect to a local Solana node running on port 8899 and can't find it. If you want to run a local test node you can use `solana-test-validator`.
Does anyone know why that may be?
Hello... I'm very new to Solana and trying to learn. I cloned the example helloworld repo to try to learn and I am getting this error when I try to run "solana cluster-version": `Error: error sending request for url (http://localhost:8899/): error trying to connect: tcp connect error: Connection refused (os error 61)`
Is there any possibility that `createWithSeed` can be non-deterministic in the key it generates?
_Assign_ has enum index 1: https://github.com/solana-labs/solana/blob/6d11d5dd9f04735be5a2c7aa4a4e8517a4417b88/sdk/program/src/system_instruction.rs#L78
Apart from that the two CPIs are pretty similar. Well, _Assign_ takes a pubkey instead of an account size, obviously.
Note in your code where it says "Allocate instruction enum value": the field is set to "8" because Allocate is the ninth entry in this enum: https://github.com/solana-labs/solana/blob/6d11d5dd9f04735be5a2c7aa4a4e8517a4417b88/sdk/program/src/system_instruction.rs#L163
My guess is that you're writing to the account afterwards. But note that you've only called _allocate_. To be allowed to write to the account, you have to do a second CPI that calls _assign_, to assign it to your program. (And also transfer some rent to that account if you want the data to live longer.)
It looks like there are no JS bindings to the `token-metadata-program` yet, but is there some way to find the NFT metadata associated with a mint given the mint account without using a Rust client?


///////////////////////////////////////////////////////////////////////////////////////////////

However I do not see it in the documentation
I want to see the other options available like decimals.
the help with command spl-token is kind of broad. Is there more information on the spl-token create-token I can get? I tried $spl-token create-token --help but it gets an error
can just remove the whole `target` dir, run `cargo build-bpf`, and then redeloy again
<@!531826842202800138> <@!514629735339261993> https://www.notion.so/Metaplex-Developer-Guide-afefbc19841744c28587ab948a08cfac
I'm curious about this too. Some specific questions I have after seeing partial conversations on the topic:
- is there a standard for NFT metadata on Solana?
- And are people generally storing the media / heavy bits on IPFS?
- And pinning them in an IPFS cluster so they're never lost?
That is, a keypair is a keypair.
Depends on which part of the wallet you're talking about "creating."  Addresses do not designate a cluster, but account states are not consistent between them
How can i connect a nft to a image? I tried searching online but couldnt find any resources
If I made a wallet on devnet do I need to remake one on mainnet? I noticed that a wallet on mainnet works on devnet.
this is C
https://github.com/solana-labs/example-helloworld/tree/master/src/program-c
I think unit tests depends on which language you used.
If you are asking how to test your solana program, you can refer to here 
https://github.com/solana-labs/example-helloworld/blob/master/src/program-rust/tests/lib.rs#L14
Are there any tutorials on how to properly unit test on solana?
<@785084693023424542> this might be stupid but, is there any way to write contract in solana by others language (without rust)?
Thanks, i’ll check it out
<@!785084693023424542> thanks, i'll check this out
https://www.wormholebridge.com/#/  is probably your best bet and a start.
create new token. mint. assign ownership to account. program account can be minting authority. https://spl.solana.com/token
Where i can find Cross chain program (like spl to bsc) please?
can a program create a new token, mint and be the owner of it?
Does anyone have experience setting up a  private solana network.
<@!585868308419444749> OK I just sent u 250 tSOL to `4ETf86tK7b4W72f27kNLJLgRWi9UfJjgH4koHGUXMFtn` oh no was that a joke askin for donations on testnet-announcements Trent? oh no i just looked in blockchain xplorer and there is 2000000 <@!848243324762849311> in there
👍
awesome, you save my day, thanks <@!248066053161222144>
it just saves 32 bytes of space in the transaction
so you don't need to include it anymore in `accounts`
in the latest versions of anchor, sysvars are loaded on-chain
I notice that the IDL generated does not contain the Sysvar field, is that expected ?
sure, any more questions?
i see was just guessing that's the case. I'll go read more on Sysvar
<https://explorer.solana.com/address/SysvarRent111111111111111111111111111111111>
that's an account
i see. while we're on this topic, I would expect that accounts should only contains list of Account. However, a few example has other data types. For example,
#[derive(Accounts)]
pub struct Create<'info> {
    #[account(init)]
    pub counter: ProgramAccount<'info, Counter>,
    pub rent: Sysvar<'info, Rent>.  ==> THIS IS NOT ACCOUNT
}
and don't worry about the order they appear in the object
use the right name for the account in the `accounts` object
yes
so just to confirm, we should use name and the order doesn't matter right ?
ok I think I'll follow the happy path now. don't want to get to the deep end, ... yet
generally speaking though, you shouldn't do that
for the anchor js library
you should look at the underlying code
🤷‍♂️
yes, very positive
https://explorer.solana.com/tx/44Lu9E3yFfDVWm2JKpcd9XpP7V1F3Woem2Y6kcnJyyedfiUbP2pPJXYmr5wdZk9sbR3DVBYnaEsFfpNEYrV3dTdz?cluster=devnet
did you load the counter and see if it had incremented?
yes
did the function execute correctly?
it worked perfectly I tested it multiple time
also order doesn't matter, only the name
it should fail
Trying to understand how Anchor does Account serialization. I purposely changed the name of the the account on the client call and the program still serializes it correctly.

PROGRAM

#[derive(Accounts)]
pub struct Increment<'info> {
    #[account(signer)]
    pub authority: AccountInfo<'info>,
    #[account(mut, has_one = authority)]
    pub counter: ProgramAccount<'info, Counter>,
}


CLIENT
await program.rpc.increment(new anchor.BN(3), {
      accounts: {
        counter_XXXYYYZZZ : counterAccountPkey,  // PURPOSELY CHANGE THE name field here
        authority: provider.wallet.publicKey,
      },
    })

Does this mean Anchor doesn't care about the name and order matters ?
yes. that is a good point.
Which just means additional compute
The issue is that it means if you want to init a PDA you need to do it using 3 CPI calls instead of 1
But I just guess it. Maybe someone from Solana can give an more official answer!
In my option it is lucky if someone to give me some SOL to my ATA.
He don't have any auth to my account and I can save my SOL to init my ATA.  😆
Hello Team, I am trying to integrate Solana with a Polkadot Substrate based Chain. I cam across Solar bridge that connects Solana and Arweave and Wormhole that connects Solana and Ethereum. Is there any better alternatives. Looking forward to the guidance.
So you have to init accounts this way in order to prevent people from bricking other's ATAs
It kind of sucks because anyone can put lamports into any uninitialized account
Thanks
Oh nice
maybe here https://github.com/solana-labs/solana/blob/master/runtime/src/system_instruction_processor.rs#L150
The source for create account is another instruction but I can't find the source for that instruction
https://docs.rs/solana-program/1.7.9/src/solana_program/system_instruction.rs.html#329-337
Yeh, I was wondering whether the create account instruction fails if lamport aren't zero. But I wasn't able to find the source code to verify this
I'm not pretty sure but I guess it protects every ATA can be created successfully.
If some one transfer some SOL to your ATA, and the ata program call create_account directly. it will failed, because in create_account instruction. you can only create an account who's lamports equals 0.
<@!788215642070581289> do you have any idea why the associated token program makes adding lamports to the account optional, rather than just creating the account with a single `create_account` instruction? <https://github.com/solana-labs/solana-program-library/blob/master/associated-token-account/program/src/processor.rs#L58-L75>
Oh okay, Right so you put a static pubkey which is the owner
I think the main idea is you check specific public key(your owner) and its signature (you can use isSigner on chain) to ensure the instruction is called by owner's auth
Here is some example code/template that creates/initializes accounts: https://github.com/hashblock/solana-cli-program-template
You can ensure that the authority initializing is the one you want based on signer/accounts provided
Right, how do I limit the auth ?
I think you can write some instructions like `init` in your program, and after that change some part of the data of your account. 
if the account like a config or something which has a global state.
your can limit the auth in the init instruction.
``Everyone can create a same size account and assign its owner to your program`` How do I check if the data account is really the one I first created.
Yes I saw it, thank you, now there is a problem somewhere in the smart contract
yes. it is. it signs for 
`{ pubkey: aliceKeypair.publicKey, isSigner: true, isWritable: true },`

but you miss the second
`{ pubkey: stakingPubKey, isSigner: true, isWritable: true }`

in Solana. you can pass not only one signature to your tx. it depends on your instruction.
```const resStake = await sendAndConfirmTransaction(connection, new Transaction().add(stakeIx), [
    aliceKeypair,
  ])  ``` [aliceKeypair] Isn't that a signature?
If your instruction is correct, you make `stakingPubKey` as a signer.
I think you also need to pass the keypair into your `sendAndConfirmTransaction`.
I think you can try https://docs.solana.com/developing/clients/jsonrpc-api#accountsubscribe or you scan all blocks's instructions.
```const stakeIx = new TransactionInstruction({
    keys: [
      { pubkey: aliceKeypair.publicKey, isSigner: true, isWritable: true },
      { pubkey: stakingPubKey, isSigner: true, isWritable: true },
      { pubkey: aliceTokenPubkey, isSigner: false, isWritable: true },
      { pubkey: progrmaTokenPubKey, isSigner: false, isWritable: true },
      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },
    ],
    programId: programKeypair.publicKey,
    data: encodeStakeIx(50000000000),
  })

  const resStake = await sendAndConfirmTransaction(connection, new Transaction().add(stakeIx), [
    aliceKeypair,
  ])``` I did everything right, I think maybe the error is  ```export function encodeStakeIx(amount: number): Buffer {
  const schema = lo.struct([lo.nu64be("amount")])
  const b = Buffer.alloc(8)
  schema.encode({ amount}, b)
  return Buffer.from([StakeIxOrder.Stake, ...b])
}```
it could be a signature is missing or does not match, expected by the program, from the client transaction.
as long as you have the key/authority on the account, you can mint tokens to another account.  the spl-token lib can do this. https://spl.solana.com/token
I think your question mix too many concepts.
`What stops a user from creating a PDA for a program` => actually, if you want to create an account, you need the account’s signature. PDA only program can sign, so if other users want to create an account for your PDA, your program must call invoke_sign for it. (Except System Program)

`using that PDA` => PDA doesn’t equal to account owner is the same program. In the other hand. Your PDA can belong to Token Program, Stake Program … 

`create a data account with similar struct used in the program` => your concern is correct. Everyone can create a same size account and assign its owner to your program but only your program can modify the data. If your program don’t modify the malicious account’s data. It will be 0000000….. in it. So I think you can use some data to recognize is the account you expecing. (Like change the first byte to 1 as initialed)

Final, if you want to read account data in your program, like config or something. You must check the owner is your program and do some check if the account is you expecting
Signature verification failed : 
  I get in the client application
https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses

   // The runtime deterministically derives the key from the currently
    // executing program ID and the supplied keywords.
    // If the derived address matches a key marked as signed in the instruction
    // then that key is accepted as signed.
    invoke_signed(&instruction, accounts, &[&["escrow"]])
What stops a user from creating a PDA for a program and using that PDA to create a data account with similar struct used in the program => malicious use ?
Is there any code built preferably in `js` where I can mint tokens from specific account with the private key to another Pubkey? So similar to (https://github.com/paul-schaaf/spl-token-ui/blob/b7036486a0893fec0f906dc80ddaad6020112a37/src/solana/token/faucet.ts#L217) but using private keys instead for minter plus js not ts
Hey! This was super super helpful. Thank you for being so descriptive. 
I'll look deeper into the resources you shared.
how do i subscribe to events on the solana blockchain? like a deposit into a wallet?
1. scripting languages like javascript and python are generally easier to get started with, more popular, and easier to learn. they have lots of resources and great videos like you found on udemy. Rust is more like C++, and generally considered more advanced. Pick any of them and just continue learning. Stick to what your most interested in and prefer. That will keep you more interested, engaged, and more likely to stick with it. Learn about data structures & algorithms. Colt has a course on that to I believe. Once you learn data structures, and any of the major languages, dabble and branch if inclined.

You can easily get started with Solana samples using javascript and using the web3 api. Check out this very simple tutorial by figment.io: https://learn.figment.io/network-documentation/solana/solana-pathway

2. Building on Solana is very different in some ways, and familiar in others. Like languages, when you become familiar with blockchain architecture and technology, you can apply your knowledge to other blockchains, like languages.  Solana is an overall newer (years in making) fresher take on blockchain tech with very attractive features that also aims to solve the many issues of existing blockchains like Ethereum (transaction speed, cost, ability to scale, and on). Solana aims to solve these issues and build on other good principles.

You can use javascript and easily start interacting with Solana APIs with web3, or interact with the CLI (command line interface) without any coding knowledge and just following along https://docs.solana.com/cli/install-solana-cli-tools.  https://spl.solana.com/token. You can run commands and interact with solana. The best thing to do is just start using the
New to Solana. Is Rust for me? How is it different than Ethereum.
here is some multi-sig reference material: https://spl.solana.com/token#multisig-usage. and here is a multi-sig example with solana anchor framework (https://github.com/project-serum/anchor/tree/master/examples/multisig), that could be used with anchor or as reference for a non anchor version. but basically, when you pass in an array of signatures, signers, you need to check signature validity, and how many signers are required for valid transaction.
2) quite different in certain ways but similar in other ways...again, depends on what you are trying to do
1) depends on what u want to achieve
Hi everyone!
I have a question. I got down the crypto rabbit hole fairly recently. It was one talk from Andreas on YouTube and I couldn't and didn't want to stop myself. 

The promise behind crypto and the web 3 space is too compelling to not be a direct part of. There are already so many amazing projects and a great community being built around it.

I started learning programming a month ago. I started with the CS50 course to understand the fundamentals of computer science. I also got a course on Udemy on Javascript by Colt Steele to start to dabble with programming. 

I originally planned to dive into solidity asap. I got to know about solana only a couple of days ago, and it's been overwhelming to wrap my head around it but it is pretty exciting.

I have a couple of questions which someone here might be able to help me with. Please consider going through them.

1. Should a beginner to programming start learning Rust? Or should I stick to JS for now?

2. How is building on Solana different than building on Ethereum?

Thanks!
how do i subscribe to events on the solana blockchain? like a deposit into a wallet?
you can get things. if your referring to c++ getter/setter type thinking, you could check the hello world c program, https://github.com/solana-labs/example-helloworld/tree/master/src or the rust counterpart. the SPL - solana program library, has examples and links to get values as well. https://spl.solana.com/token#wallet-integration-guide otherwise the home git https://github.com/solana-labs has many repos with examples of how to create, set and get data. the record program is also a good example for get/set data. https://github.com/solana-labs/solana-program-library/tree/master/record/program
not working on which host? what is the issue? checklist. is the program deployed? is your connection pointing to the right cluster? which cluster is it on? what isnt working? what is your transaction? what is your error(s)? do you have RUST_LOG=solana=debug enabled?  is the account funded? Can you debug? [...]
<@!539305090188836865>  yes. this is a good start. It has Adding new token, and Query available tokens
Do you write geter functions for programs in Solana ?
Solana smart contracts working on localhost but not working on hosting. Please help me out.
Specifically look for the "Adding new token" heading. Describes what file you need to contribute to
Haven't been through the process, but did spot the registry here: https://github.com/solana-labs/token-list
Appears to boil down to submitting a PR; but not 100% sure
When we create a new token, how do we set the name and symbol of the token?
How do we get LP token address when creating LP pair in token swap?
need a multisig program to control the upgrade authority for the program.  I don't think such a program exists today in a form that's immediately usable though, but it's certainly possible to implement pretty easily
how can someone deploy a solana program using threshold signatures instead of a regular keypair file?  like if you wanted to have 2 of 3 people sign off to redeploy a program
Yeah, I'm adjusting to it too. Mainly a Go dev for the last decade or so
I am just new to rast and for me it is surprising after C++ sign ? at the end, I know what it means, but it is ridiculous
Plus the right use statements; eg:
```rust
use solana_program::{clock::Clock, sysvar::Sysvar};
```
I'm a total newb, but would expect it to be something like this:
```rust
    let clock = Clock::get()?;
    let _: i64 = clock.epoch_start_timestamp;
```
How to get the current time ? On the air it is simple block.timestemp , how is it done in Solana ?  these examples don't work ```_staking.time_stake = Clock.epoch_start_timestamp ; 
_staking.time_stake = Clock::EpochSchedule() ; ```
Na, I think it could just be removed in this case!
Or maybe there's some deeper interplay between the two. Also good to know the general role/expectation tho., thx!
hmm, heh yeah I guess we use Borsh there so the repr(C) probably is a copy-n-paste
🤔 -- I was assuming Borsh informed the binary layout, exclusively.
It just ensures a C layout for the enum, for easier parsing by languages other than Rust
Oddly enough, the rest makes sense; guess I'm becoming a Rustacean, lol.
Dumb rust question -- what's the benefit of  using `#[repr(C)]`? eg, here:

```rust
#[derive(Clone, Debug, PartialEq, BorshDeserialize, BorshSerialize, BorshSchema)]
#[repr(C)]
#[allow(clippy::large_enum_variant)]
pub enum GovernanceInstruction {
```
Oh, great idea! Will do
You might want to checkout the governance program at https://github.com/solana-labs/solana-program-library/tree/master/governance for ideas.
There's also the feature proposal program that is a little lighter-weight but similar: https://spl.solana.com/feature-proposal
Good to know. I'm just exploring the design space for building a little voting / proposal program. ie: Something like this:
- proposers have to lockup some TokenX to submit a proposal
- lock-up is returned if >33% of token holders vote

The "easy" work-around might be having voters register; then I can do % of registered voters instead of % of holders.
(all for a toy program; just learning Solana)
It would work fine, in the general sense.  
If you wanted to connect that solana node to mainnet, you would run out of RAM/compute quickly due to the mainnet account space and transactions
you can get the total token supply from a mint
Thank you. Out of curiosity, what would happen if I try to run a solana node on my macbook pro - 2ghz quad-core i5, 16 GB ram?
Makes sense; was hoping for a short-cut -- figured someone might need a mint that knows or something
Not really possible on-chain since you're program would need to potentially read thousands or millions of accounts to find them all
Looking at this makes me want to refine my problem. Any idea if there's an on-chain way to get a count of token holders?
perfect! ty!
Yeah, use the getProgramAccounts JSON RPC method to find all token accounts for a given mint: https://spl.solana.com/token#finding-all-token-accounts-for-a-specific-mint
This might help: https://docs.solana.com/developing/runtime-facilities/programs#secp256k1-program
any way to check signatures from ethereum users via program?  eg. theres support for libsec256k1, keccak or whatever
You can use RPC for this: https://docs.solana.com/cluster/rpc-endpoints#mainnet-beta
Is there any third party service provider that solana recommend if we just want to broadcast transactions, not participating in the validation process?
👋 -- question on the token program. Is it possible to "easily" tell how many wallets hold a non-zero balance of a given token?
Do api read requests with no storage requirements require rent?
If I were to build a flutter app that would be able to access solana - would the JSON RPC API be the best way to do that?
Na, a wallet wouldn't know to execute the custom program
would this model be compatible with wallets etc?
There's no light node unfortunately
Not directly via SPL Token.  Instead the typical model would be to have a custom program own the tokens as an intermediary between the sender and receiver, and perform additional actions as desired before/after affecting the actual transfer
You might checkout how explorer.solana.com computes the remaining epoch time using the RPC API: https://github.com/solana-labs/solana/blob/8549c19f1a3cf491bf8ec93ad5a0f2ee173b8d61/explorer/src/pages/ClusterStatsPage.tsx#L230-L233
Hello, are there different types of nodes other than the validators? I want to run a node that is able to receive and broadcast transactions, but not participating in validating. The hardware requirements for being a validator is too high.
How can I get remaining time before next epoch using solana web3.js (or RPC API)?
is there any way to add extra functionality to the spl-token transfer instruction for a particular token? I know the actual instruction source can't be changed, but is there some way to get it to call some other program?
hmm, I don't think so.  The Rust client is actually in the process of switching over to use `lastValidBlockHeight` via
https://github.com/solana-labs/solana/pull/19163, so it's just web3.js that needs similar treatment
Is there already a ticket submitted for this?
Cheers!
That Explorer link uses: https://docs.solana.com/developing/clients/jsonrpc-api#gettokenlargestaccounts . It will return the top 20.
hello guys, I just started to study about Solana and try to develop my own d-app on it. I am confused about transferring data to the accounts on verifiers. As I know, we need to send data in form of instructions inside the transactions to the verifiers. However, the maximum size for transactions is  1232 Bytes which is too small!! so, how should I transfer my data to store on accounts in verifiers? How other apps are doing this? I feel that I am confused or misunderstood something. I greatly appreciate any help.
Please DM me or tag me here. Greatly appreciate it!
Does anyone know you if there’s an easy way to figure out who the top addresses (>40m) are? From this link for example:

https://explorer.solana.com/address/2nseuS3gcqKsQhKBJ1vZRHCavzGsiFfCvgWoZ8TEnAfT/largest
Hey guys I got a quick question on the solana explorer can someone help me?
Try the clock sysvar: https://docs.solana.com/developing/runtime-facilities/sysvars
I know Solana does not have HashMap data structure as a design pattern. Does that mean we should use PDAs (Program derived addresses) for each user or stake pool instead of making an array/vector of users or stake pools for data storage?
Hi may I know how a Rust program itself can get the current Unix timestamp, without any data from the frontend?
`Connection.confirmTransaction()` needs improvement.  Instead of being timer based, it should wait for the block height to pass the `lastValidBlockHeight` for that transaction's blockhash before declaring failure
What would cause this or how can the client side better handle this? Can the timeout be increased?
`Error: Transaction was not confirmed in 30.00 seconds. It is unknown if it succeeded or failed.`
Ohh...got it. Thanks🙂
It's just a Unix timestamp. that is, seconds since the Unix epoch
How to convert solana clock timestamp to normal time timestamp?
https://discord.com/channels/428295358100013066/517163444747894795/874469677466812446
I've used threads heavily in slack and it makes it so easy to search for topics and find people really digging into questions where they reach a consensus! Would be really cool and helpful to do it here as well 👏
looking for the log for this --- RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x2 [18 log messages]
Where is the log for the CLI?
This is my first time using the Discord threads feature. Next time, I'll read the instructions 😉
wow here we go ☀️
💡 totally unrelated to developer support but would it be possible to use threads when discussing various topics? the channel is a goldmine for answers to faqs so it would be nice if they were in threads instead of responses all over the place
Full list of current endpoints is here: https://docs.solana.com/cluster/rpc-endpoints
hmm - when did that change? it was working earlier
Wrong endpoint. Use https://api.devnet.solana.com
error sending request for url (https://devnet.solana.com/): error trying to connect: invalid certificate: CertExpired
I am getting a devnet error
Is devnet down?
Hello! Did u find anything related to this matter? Thanks!
I'm trying to get an estimate of Solana's cost of computing and storage in order to compare it to Ethereum, AWS, etc. I got the storage part figured out (thanks @mvines). But I'm still trying to estimate the compute cost, specifically the cost to add two numbers. On Ethereum there is an opcode for `ADD` with a gas cost so its easy to compute. I asked about this yesterday and was told that Solana does not charge by opcodes, but instead the fee is based on the number of signatures in the tx. But I'm not sure what this means really. How would you estimate the cost to add two numbers? Or to add two numbers 1 million times? Anyone have any rough idea? 🙏


///////////////////////////////////////////////////////////////////////////////////////////////

There are data length and memcmp filters
i am using `GetProgramAccountsAsync` to get all program data accounts owned by program id. is there a way i can query in a way that i can filter and only return specific program accounts for instance if (someproperty_in_program_account_value == "some value") and only get program accounts that have specific data?
continue to look at these spl docs to answer a lot of those questions. https://spl.solana.com/token, and yes.
Yes.
Does this feed token names and icons into the various wallets? https://github.com/solana-labs/token-list
I believe FTX Pay and Coinbase's on ramp APIs both support SOL now.  I haven't used either though
by the way <@!585868308419444749>  is there any fiat onramp on Solana network that you recommend ?
ok got it I have contacted Sendwyre for more details .. thanks
Awesome, thanks for the advice i will check that out
I think sendwyre would have to offer Solana support.  I'm not aware of any integration effort, but that doesn't mean one doesn't exist
I _think_ you just want to use `rand_chacha`, which is basically what I suggested with the stream cipher, but wrapped up like an RNG
Hi eveyrone , does Solana offer integration for Sendwyre fiat onramp ??
Yeah this is what i was trying to do actually, but my knowledge of rust is pretty limited...
Actually, you might be able to use `rand` crate with most of the features turned off
Several RNGs are just similarly abused stream ciphers though 😅
Not to my knowledge
any other project using that ?
thanks 🙂
i did not know about that, i will check that out
You might be able to use a stream cipher with the reveal as key?
Cool, we definitely need a VRF oracle
while waiting for the vrf u_u
which makes the contract non predictable by me nor the validator
what i'm pretty much doing is having a value decided by the validator + having the commited value act as a seed
Should be the `0` in that example's `createTransferInstruction` call
if there is no work around using this kind of methods i can do something else thats fine
I'm building a reveal scheme where the revealed value will be used as a seed
No. You probably don't want to do whatever you think you want to do
Yes. Also yes (but may be the same for a few consecutive slots)
is `Clock::get()?.unix_timestamp` guaranteed to be exactly the same for every transaction within a single slot? and is it guaranteed that it well never decrease from one slot to the next?
Migjt be a dumb one but, i was trying to send token via solana.js found this https://stackoverflow.com/questions/68236211/how-to-transfer-custom-token-by-solana-web3-js with chase reply, what i am missing is where i input my token amount to send
I want to store user profile data on database like profile pic, summary etc. As its not possible to store so much data on blockchain and want to use program for exchanging funds etc by connecting wallet. Is this a good idea to login them to their account using email id but after log in connect their for any transactions on blockchain?
oh no :
```
target is not supported, for more information see: https://docs.rs/getrandom/#unsupported-targets
   --> /home/tylo/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.3/src/lib.rs:224:9
    |
224 | /         compile_error!("target is not supported, for more information see: \
225 | |                         https://docs.rs/getrandom/#unsupported-targets");
    | |_________________________________________________________________________^
```
Is there any work around that ? i need seedable rand lib
Any suggestions on this type of web app ui/ux design which requires users email id to store there data on database and also require them to connect their wallet to transfer funds from their wallet to other users by calling deployed program on blockchain.
Is there an example of any dapp which stores data of users using mongodb database and use smart contracts for transferring spl token funds?
Hmm... That sounds a little tedious to maintain.  I was hoping we could get the compiler to fail on `use unsupported::module::paths`
is it possible to make any PubKey constant in a rasta program , if so, how ?
does anyone know if I can get the balance of the user's tokens using a smart contract ?
Hello, could I ask, at precisely what point does an unfunded (non-system-program) account get erased? 

If I make a CPI call to the owning program that uninitializes an account, by withdrawing lamports from it fully, does it get "erased" by the time I reenter the calling program? Where in the message processor does this occur?

In particular, I would like to know when the account gets reclaimed by the system program
Hi all , i am running a bootstrap validator and validator  on a local vm following the multi-node-demo scripts under the solana repo . I have another vm where i want to set up a validator and connect to the existing running nodes. for this i use : solana-gossip  rpc-url --timeout 180 --entrypoint '192.168.50.41:8001'  . However this validator fails to discover the two already running nodes. i am able to ping, tunnel from one vm to another so does not look like a network issue. Can anyone help ?
Hi all,

I am looking for a simple solution to get all my balances in my solana wallet and connected apps like solfarm, similar to apeboard or sonar.watch but unfortunately they dont offer an api.
I prefer to do this in python. Any hints? Thanks! 🙂
it's really confusing to get it from the code
Does anyone know the answer to this question, please?
I know, the question is how to get the right account and pass it in knowing that I have like 10k players
Can I permanently set some addresses? I can't find the type of data needed to do this
Maybe someone knows what standards tokens are in Solana, is there NFT ?
what am i missing?
i mean... we send trackingId, blockhash, programDataAccount etc and we receive program_id, accounts and instruction_data. How??
who translates the first message to what we receive in the program?
there's nothing in between, i don't get it
how does sending a message with these parameters: https://github.com/solana-labs/break/blob/master/client/src/providers/transactions/create.tsx#L128-L136 ends up with this parameters https://github.com/solana-labs/break/blob/master/program/src/lib.rs#L6-L9 ?
Is anyone familiar with the "Break" example from solana-labs?
You can use loops in program
Do you know if loops can be used in solana programs? Because in ethereum they try to get rid of loops because they increase the price per transaction, and also it's not certain that the loop will completely go through all elements
If I comment out the `clone_accounts` line, it works perfectly
Can someone help me understand why this piece of code doesn't work? I'm trying to clone on chain pyth accounts onto a `TestValidatorGenesis`, but I'm clearly doing something wrong.

```
    let pyth_product_pubkey = Pubkey::from_str(PYTH_BTC_USD_PRODUCT_KEY).unwrap();
    let pyth_price_pubkey = Pubkey::from_str(PYTH_BTC_USD_PRICE_KEY).unwrap();

    // start a validator

    let (test_validator, payer_keypair) = TestValidatorGenesis::default()
        .add_program(
            "target/deploy/instance_manager",
            instance_manager_program_id,
        )
        .add_program("target/deploy/parimutuel_protocol", parimutuel_program_id)
        .clone_accounts(vec![pyth_product_pubkey, pyth_price_pubkey], &RpcClient::new("http://localhost:8899".to_string()))
        .start(SocketAddrSpace::new(false));
    let (rpc_client, recent_blockhash, _fee_calculator) = test_validator.rpc_client()
```
You need to pass the accounts if you are calling using `invoke_signed`, otherwise, it will throw an error
Thank you so much, you're a genius.
omg
```let mut _staking = Staking::try_from_slice(&staking_info.data.borrow())?;```The account is created, but at this point, everything crashes
Max space for a seed is 32 bytes, you can't use 64 bytes
i need help ``` pub struct Staking {
    
    pub amount: u64,

    pub claim_amount: u64,

    pub time_stake: i64, 
} ``` i have struct , and i need create account with seed  ```const stakingSchema = lo.struct([lo.ns64("amount"),lo.ns64("claim_amount") ,  lo.ns64("time_stake")])


export function encodeStaking(amount: BN, claim_amount: BN , time_stake: BN): Buffer {
  const b = Buffer.alloc(8 + 8 + 8)
  stakingSchema.encode({ amount,claim_amount,time_stake }, b)
  return b
} 
   const data = encodeStaking(new BN(0),new BN(0),new BN(0))
    const lamports = await this.connection.getMinimumBalanceForRentExemption(data.length)
    const createAccountIx = SystemProgram.createAccountWithSeed({
      fromPubkey: this.carlaKeyPair.publicKey,
      basePubkey: this.carlaKeyPair.publicKey,
      seed: App.stakingSeed,
      newAccountPubkey: this.stakingPubKey,
      space: data.length,
      lamports: lamports,
      programId: this.programKeypair.publicKey,
    })
``` this is how I create with u32 was easier, but when I changed to u64 everything started to break down
My goal is to make sure the share a person has in my pool remains constant if a profit is made and that it changes whenever a deposit or withdrawal happens.
Hi all, quick pattern question. What is the recommended way to update all the accounts of a LP at once ?
Let me explain: I would need to recompute the pool share of my LPs whenever a withdrawal/deposit/profit is made.
How can I ensure that all the accounts state remain up to date ?
I tried to avoid doing this by recalculating the share of each LP whenever he/she makes an action, however it requires parsing all program transactions and would take quite a bit of time if one remains a passive participant for a couple months.
be aware that I have more than 1 winner
any advice here?
I'm at the end of a dice contract, which I need to send out the winning tokens to the winner; however, I only saved the winner pubkey and it looks like I have to supply winner account???
a silly question here, please advise
`let transfer_to_initializer_ix = spl_token::instruction::transfer(
                            token_program.key,
                            dice_master_vault.key,
                            // winner pubkey
                            &winner_pubkey,
                            &pda,
                            &[&pda],
                            moving_bet_state.unmatched_amount,
                        )?;
                        msg!("Calling the token program to transfer tokens to the taker...");
                        invoke_signed(
                            &transfer_to_initializer_ix,
                            &[
                                dice_master_vault.clone(),
                                // what to do now? I only have the winner pubkey, but looks like I have to supply winner account
                                winner_acount,
                                pda_account.clone(),
                                token_program.clone(),
                            ],
                            &[&[&b"escrow"[..], &[bump_seed]]],
                        )?;`
It's probably possible to annotate every unsupported library function with attributes that would trigger a compile-time error when such a function is used in code compiled for the BPF target. We don't do that in the rustc standard library. Instead platform-dependent functions have generic implementations that call target specific implementations, which in turn may call `panic!` because no reasonable implementation can exist for the target. Maybe in some cases we can make a syscall into the runtime instead of calling `panic!`.
is it possible to use loops in solana ? just in ethereum loops often do not work out a large amount , and waste a lot of gas
How do I find list of LP token address token-swap program created?  Which RPC code?
I want to make a program to which users can send funds to my program spl token vault controlled using PDA, and whenever someone transfers funds to my program vault by calling function of deployed program, I want to store the wallet public key and amount he sent in my mongodb database on a server.
Is it possible to get which accounts have credited what amount to my wallet using web3js?
some of the std functions are not disabled for BPF target in our customization of rustc and std library, but their BPF implementations call `panic!`. In particular, `SystemTime::now` BPF implementation does so.
There may be some requirements on claiming a toolchain as `std` .  <@!792782891196874792> can probably elaborate tomorrow
Which method calls are you making on those types?
Hrm.  Maybe _should_ is doing more heavy lifting in my previous claim 🤔
There's some code in  explorer.solana.com that does some of this, for the search bar at the top.  Explorer source is at https://github.com/solana-labs/solana/tree/master/explorer
they should be compile time restricted
Thank you, that was very helpful!!!
https://docs.solana.com/developing/on-chain-programs/developing-rust#restrictions
epoch_start_timestamp doesn't change, try using `unix_timestamp` instead perhaps
Hi guys. As someone who has never dipped their toes in anything related to blockchain development, how would you suggest I get started with Solana Development? I'm checking out the resources in sequence at the moment but my primary aim is to make Dapps w/ JS. I have no idea how that's done (though I will go through the resources so I'll get some idea), no idea about contracts (or even what their purpose is specifically). I can pickup rust, but what I want to ask is how wrap my head around blockchain development and technology in general, the idea of dapps. Tutorials that say let's make a contract with no visuals usually just go over my head at the moment. It hasn't 'clicked' in my brain yet.

Anything that relies on OS-level services is unsupported.  File system, networking, RNGs
```let clock = Clock::get()?;
        let curent_time: i64 = clock.epoch_start_timestamp;

        if _staking.time_stake + 60 >=  curent_time { 
            return Err(StakeError::ClaimTimeError.into()) ;  
        }```Hello all, I ran into this problem, as I entered in one of the functions of the time of its call, I waited 60ml second and called again, but the time is the same, what is wrong?
None of the time stuff is available in runtime.  If you need a wall clock timestamp, use the clock sysvar
Hi, 
  Given an id , I wanted to identify whether it is a block hash/ transaction id/ wallet pub key.
Is there some kindof API or regex to match it with the format.
Hi, DM me if you have questions about Triton | RPC Pool.
A couple that come to mind immediately are:
* https://rpcpool.com/
* https://www.quicknode.com/chains/sol
I think there's at least one or two others that I'm blanking on right now.
can you name a few?
<@!764989581124042766> - typically instead the program would record the slot that it executed in into an account that it can reference later
no
is there a way to determine the unix timestamp of any arbitrary previous slot from within a program?
nope but there are other RPC providers that can help
<@!445425471027544095> does solana foundation have paid node service that has no rate limit?
you should be able to override and or patch/specify multiple locations for cargo dependencies based on what your need is. building, targeting, local, deployed crate/registry.. you can specify a local path (used locally) and version used for deploy, where version is preferred/used as long as it is deployed. locally only you can retarget, or use dev-dependencies, build-dependencies, patch, paths, etc. https://doc.rust-lang.org/cargo/reference/overriding-dependencies.html
https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#multiple-locations
https://doc.rust-lang.org/cargo/reference/overriding-dependencies.html#the-patch-section.  change to target what you want when you want.
If you can find a way to accomplish this via normal `cargo build`, it'd be pretty easy to plumb it into `build-bpf` since it just wraps cargo
Not currently.  We need a fix for https://github.com/solana-labs/solana-program-library/issues/2248 first
Will the Web3 API enable me to recover the coins in the lowest level token account?
You can traverse up to the parent with 2 clicks
https://explorer.solana.com/address/4iexk4EATxvpC9emurrZKjXpgDYEMQpmy6vPzcTe9d5b
Easy to see here
I have a token account that is a child of a token account
Is there a way to make `cargo build-bpf`  prefer and require version dependencies over file paths, i.e., what cargo does when you publish? For example, https://github.com/solana-labs/solana-program-library/blob/master/governance/program/Cargo.toml#L23
https://github.com/solana-labs/token-list#adding-new-token
How can I update this github resource to add our own token? https://github.com/solana-labs/token-list/blob/2fdba975bff535224ab245f9bf28f19e317b75c9/src/tokens/solana.tokenlist.json#L1880
No.
Is the testnet down? Got RPC error.
Oh
yes
USDC is not an algorithmic stable coin
Is USDC just a token inherited the SPL token implementation?
Maybe I am wrong, the logic like MakerDao
Like what USDC does on Ethereum.
What I mean USDC is kind of pegging using the other collaterals.
Well, this is just a Token
There's a common SPL Token implementation for all tokens
Oh Thank you
It's right here: https://github.com/solana-labs/solana-program-library/tree/master/token/program
Is this not open sourced?
Hello. where can I see Solana USDC smart contract?
thanks - grinding away
It's handled by `solana-test-validator` here, https://github.com/solana-labs/solana/blob/9dfeee2993312accb61b3d48270671de2774eb81/validator/src/bin/solana-test-validator.rs#L560-L567
Chaining it there
Yeah I was thinking of adding it to `TestValidatorGenesis::default().start()`
Uhm... at what step?  This has to be done before the cluster is created.  The account is injected into genesis
Is there any way to do this programmatically ? I'm using `solana-sdk` on Rust
thanks for the help!!!
```$ solana-test-validator --help
solana-test-validator 1.7.8 (src:7aced9e7; feat:2045430982)
Test Validator

...

    -c, --clone <ADDRESS>...
            Copy an account from the cluster referenced by the --url argument the genesis configuration. If the ledger
            already exists then this parameter is silently ignored
```
`solana-keygen grind --help` is what you want
Is there any way to clone an on-chain account to a test validator?
yes
By "custom" you mean "vanity" ?
Well - thanks for answering all my questions - is there  a way to get a custom wallet or token address? Or do I just need to make billions of them until one has the right letter combination I want?
Right it cannot be changed without core validator modifications
https://docs.solana.com/developing/runtime-facilities/programs#system-program
OK so we cant change it I assume
That's the native program that controls creation, data allocation and assignment of accounts
I am trying to find a way to embed a message with the tokens I create - either in the token account or in the tokens themselves
OK - do you know what the system Program is? I have a default of 11111111111111111 in there
Correct.  It's only attached to the transaction, not stored in any account state
so the memo is related to the creation of the token - it is not visible or available in token transfers?
It just appends a memo instruction to the transaction with the given text. https://github.com/solana-labs/solana-program-library/tree/master/memo
what is the memo option when creating a token? spl-token create-token --memo
However, is there some ETA to expect this update? (e.g. 3 months, 6 months, 1 year)?
https://twitter.com/aeyakovenko/status/1424860611477860399?s=20
There is a tweet here by Anatoly on possible rent reduction (no promises)
Block indexing is what most wallets and exchanges have settled on
Also, What is the suggested or optimal method of bulk listening to user wallets via the SDK client? Our primary concerns always relate to uptime, reconnections, and ensuring no blocks are missed.
Awesome.
CLI is implemented from the Rust client.  The Rust client and JS client are both implemented from the JSONRPC API.  It's all more or less there, but we don't have anything specifically targeting integration with one or the other
There ais more api documentation here for JSON rpc api, Rust api, and web3 javascript api  https://docs.solana.com/developing/clients/jsonrpc-api
We are launching an Debit Card powered by Solana and we needed some questions answered:

We notice you provide documentation on an exchange integration at https://docs.solana.com/integrations/exchange which primarily utilizes the underlying core node CLI. Would you happen to also have any documentation or implementation guides pertinent to the same level of integration at the SDK level? Specifically, we'd be looking to create a core node wrapper class for interaction with a Solana core node via JSON RPC calls utilizing https://github.com/solana-labs/solana-web3.js. This is primarily for the purposes of speeding up internal development as well as ensuring we don't miss any potential or unforeseen security issues that may arise from rolling our own solution.
What is the suggested or optimal method of bulk listening to user wallets via the SDK client? Our primary concerns always relate to uptime, reconnections, and ensuring no blocks are missed.
Is there a particular third party core node managed provider you recommend (i.e. BlockDaemon)? We noticed BlockDaemon currently requires enterprise pricing for management of a Solana node.
Solana wallets implement fairly unique balance requirements called rent. Would the Solana Foundation be willing to cover the costs of  the ongoing user rent for each user generated wallet? Are there any other proposed mechanisms for exchanges to alleviate the issues/concerns with incurring rent for relatively dormant accounts? https://docs.solana.com/developing/programming-model/accounts<#718345984597426198>t
Should be doable.  Just need to create a token transfer transaction instead of native transfer
Did you get a response to this? Is there an open solana UE integration?
OK TY - I will see if I can fork it and make a token faucet
This is the faucet code.  Not sure if it's what you're referring to or not. https://github.com/solana-labs/solana/tree/master/faucet
Is there source code to the Devnet faucet available? I may setup a faucet for a mainnet token and fund it.  I looked in github but the faucet there appears to be something else
Nm - the error went away the last time I tried it - thanks anyway
Any recommendations on a low-storage set implementation? Want to be able to register public keys into the set, w/o having to store the entire key. Just want cardinality and accurate membership tests.
```
$ spl-token create-token --help
spl-token-create-token
Create a new token

USAGE:
    spl-token create-token [FLAGS] [OPTIONS] [--] [TOKEN_KEYPAIR]

FLAGS:
        --dump-transaction-message    Display the base64 encoded binary transaction message in sign-only mode
...
```
What's the error? I can't reproduce
It will create a token but then in digging I noticed you can pass it a --decimals parameter. So I wanted to see what other parameters can be passed to it
--help gives an error
That command should work.  Did you actually type the $?  That's probably the error if so


///////////////////////////////////////////////////////////////////////////////////////////////

thorn, check this out for NFTs: https://spl.solana.com/token#non-fungible-tokens, and then https://www.metaplex.com/
I'm almost certain someone has run into that issue before
<https://discord.gg/yG8myPRs>
You could try searching for your error message in the serum discord
Hi may I know how to make a Program Derived Account to store an array of structs? My Rust code can compile but Anchor doesn't run: " User defined types not provided"
https://stackoverflow.com/questions/68774356/solana-anchor-how-to-define-custom-types-for-accounts-having-array-of-structs. Thank you
devnet getConfirmedSignaturesForAddress2 is not behaving like usual. Please point me to the correct place to report this? edited: ill get to git then
Was anyone able to use anchor in web ?
bump, anyone know how the rentEpoch field is supposed to be used?
when your first created an account. you can assign owner directly.
or you can do it in these three separate steps: 
create an account for system program + allocated space + assign owner
How can I change the owner of an account I own? I want to assign one of my programs as the new owner
Hey, I'm a dev coming from solidity, is there an equivalent of erc721 for creating nfts on solana? I want to create a contract that allows users to mint random generative nfts, how would that sort of application work on solana?
Or instead, those token accounts shouldn't be created in the program, but instead in the UI and then calling the program with all specific accounts. I think that's how Raydium does it
I want to create an LP token account to a user depositing  in a pool. I first would like to check if user has an account for that LP token. So in `@solana/web3.js` there is the `SystemProgram.createAccount`  `Token.getAssociatedTokenAddress` and Is there anything similar in Rust? (I guess this (https://github.com/project-serum/serum-dex/blob/master/common/src/client/rpc.rs#L51) ?) Also how do I check if user has the token account?
you can create an account with some space you need and assign your car insurance program as owner. then in your program write an instruction to store those info in your account.
final you can run a transaction with the account you created.
Hello!

Since Solana programs don't store states, how can I achieve the following?

I want to create a car insurance program and store informations such as carId, carOwner, etc. 
Since the car insurance program won't be able to store information, how and where am I going to store that so everyone can access it (via programs or via web3) to check who owns which car.
glad raydium solved this lol
I think you can just get user's ATA (associated token address)
and provide them a way to merge like https://raydium.io/migrate/
if  they don't want to migrate, they just transfer their token to ATA.
I think normal user will not encounter problem
and someone just want to own 10 usdc accounts (like developer)
they will solve the problem by themself
not sure what the best practice is to handle users who have 10 usdc accounts tbh
i am wondering if the correct solution is to just merge and close all the duplicate accounts with a button if multiple accounts exist, but then there is the fear that they are using a different account to add money to it
I tried again with sufficient fee but still failed with the same error
i feel dumb thanks
you can use it to fetch E8r6... 's all usdc token account
I think you can use https://docs.solana.com/developing/clients/jsonrpc-api#gettokenaccountsbyowner
can i make a transaction that requests all 10 usdc from 3 accounts
like lets say they have 10 usdc across 3 accounts
si there a way to batch transactions from multiple token accounts?
ok but now I have to write logic in case they have multiple token accounts in order to see the correct amount of usdc?
In solana. Every token address is individual. and there is a column to store owner.
https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/state.rs#L90
so technically. you can create bunch of token accounts and assign the same owner to them
(this is on localnet btw so you wont be able to search for anything)
yeah
oh. you mean I have only one SOL address and I can own 10 USDC token account address ?
so instead of having just one account with all the tokens you have 10 accounts that are functionally from the same mint authrotiy each with their own number of tokens
im not. Im talking about allowing 10 different usdcs on a single wallet that all share the same mint authority
I think you are talking about https://spl.solana.com/token#multisig-usage
you can create a multisig account and make it only one signer sign (like 1/5 ) so you can auth the multisig account by any other 5 accounts
also what is the logic behind allowing a wallet to create multiple mints from the same mint authority
getProgramAccounts doesnt return anything when i mix the mint authority and authority togehter
is there a way to filter all tokens by a mint authority and by an authority
a tx has size limit (1232 byte) and you need to pack those information into it
```
signatre 64byte
account 32byte
your instruction ?? byte
```
so it depends on your tx's structure. I think 30 is very close the max
Maybe you did not have enough to cover the transaction fee
where should I report this?
devnet is having issue with RPC connection.getConfirmedSignaturesForAddress2, the "before" params is not respected
What's the maximum number of accounts you can give to a single transaction?
but I did not get the 2 SOL back even the deployment failed. I don't know how to recover with see phase
I tried to deploy token swap but failed. I can deploy the same contract on testnet and devnet no problem, here is the error:
Men You're really cool. 👍
in addition.  search 'getbalance' 'balance', 'gettoken' and 'tokenbalance'  in the solana docs, the solana source code, sdk, and spl (solana program library) you have been pointed to.  you can get balances from all over the place ->  rpc, cli, sdks, code, the program itself (backend), etc.  meet https://docs.solana.com/,  https://spl.solana.com/, and https://github.com/solana-labs. best friends. when searching, usually putting get in front of your search term, and or using token, or account, you can find the trail to almost anything pretty quick searching in those resources. and search the source code for usage examples. Other keywords,  'account' 'transfer' 'seed' 'instruction' 'sign' 'create' 'write' 'authorize' 'key' 'system_program' 'spl', 'mint', anything with underscores like system_program you can search for SystemProgram and vice versa system_program, or getbalance, get_balance, to find all related references. I think this fishing rod is good now.  👍 

if you want it from the program, in your case, try searching .lamports(). search the program library, spl source code. limit search to *.rs files inside src folder. call lamports from an account/key passed in. 'let lamps = source_account_info.lamports()' 

for other infor as chido mentioned unpack:
let mut source_account = Account::unpack(&source_account_info.data.borrow())?;
where -> source_account_info was an account passed into the program.
let source_account_info = next_account_info(account_info_iter)?;
you can use something like `your_account_info.data.borrow()` to get account's data and use some `unpack` function to parse it
Thanks, I'll look into it
https://docs.rs/spl-token/3.2.0/spl_token/state/struct.Account.html
this is rust source
you can unpack an account from contract and read its data
Is there a function for this?
you need to pass the account which you wanna know its balance and parse its data as a token account on the contract.
yes
oh you want to get the token balance from a smart contract.
Do you mean that I can make this request from a smart contract?
I’m not sure I understand your question completely
but this jsonrpc can call in everywhere.
It turns out that this should do the backend correctly?
you can take a look from here https://docs.solana.com/developing/clients/jsonrpc-api#gettokenaccountbalance
and actually you don't read the balance from a smart contract. you parse the account's data directly. In Solana, a smart contract only have logic. They don't hold any states. the state will store in an account.
Can I get the balance of tokens from a smart contract ?
2. a signature alone may not let you know what fields should be set to unless its in the comments or you read through the function logic and determine yourself what is required. When creating function comments it could be good practice to let people know what is expected from the accounts passed and other things. The only other way you might know is by looking at the function logic itself &or errors you receive back that may indicate something related to a signer/signature or modifying/writing to the account. 

in the case of a swap function you might guess you need to pass several token accounts, mints, authority, program, among other things, in the account/keys, if the user does not have the required token you may? have to create it, and send the user account as signer, but you will have to rely on reading the program logic, function comments, are examples explaining what is required and why.

generally if your doing any modification you might set writable true, and likely at least the current user as a signer/authorizer. isSigner to true, otherwise they can both be false. If either are required and are not marked you should get an error somewhere along the way and hopefully the comments/other help you figure this out.
1. by a signature alone, you may not know to create a new account. and generally, without looking at a programs comments/logic, you will not know whats required. kind of like passing an array or object to a function in general, how do you know what fields and properties you should pass and what they should be set to? It depends on the logic in the function.  

in the case you mentioned, allocate, if you are modifying, writeable likely needs to be set to true, and requires the signer to allocate more space, the pubkey.

You can try to figure this out by looking at the function, comments, and tracing the logic and or structs it uses. In the case of allocate, you see it is using &SystemInstruction::Allocate { space }, and if you look in pub enum SystemInstruction { you can look at the comments on the various definitions, and you notice Allocation:
///   0. `[WRITE, SIGNER]` New account
    Allocate {
        /// Number of bytes of memory to allocate
        space: u64,
    },

and below allocate you see, AllocateWithSeed : where the allocated account '0' needs isWritable = true. and the second '1' base account, to be isSigner = true. 
/// # Account references
    ///   0. `[WRITE]` Allocated account
    ///   1. `[SIGNER]` Base account
    AllocateWithSeed {


Ahha,  first parm 0 should be writable and signer = true.
Interacting with programs. signatures. fields. keys. accounts. iswritable is signer.
hmm I did a push and commit and it seemed to work but my pull request is getting a permissions error - who is allowed to request-pull?
You can do this, but it then requires the user to trust your centralized nodejs server. For all people know, you could be determining the numbers yourself
the concept I think it works but You will encounter some problems when you implement it. Maybe you need to take a look https://docs.solana.com/developing/programming-model/overview
oh thanks!
there is a function, `getTokenAccountBalance` you need to use it
the `getBalance` only return lamports (SOL).
Hey guys! `getBalance` doesn't work as expected. I'm trying to get balance of my token account:
```
connection.getBalance(new PublicKey("DJAgh9Z7xBRmZiHPdTQPJozTGsXQtweMsE2EFcE1bDp9"))
```
it returns 2039280 but should be much more: https://explorer.solana.com/address/DJAgh9Z7xBRmZiHPdTQPJozTGsXQtweMsE2EFcE1bDp9?cluster=devnet
Token balance (tokens)    974996.391263065
What am I doing wrong?
And would it work if I have an internal request id inside my contract that I increase each time I need a random number. And when I need one:
- I emit an event with request id and some metadata + increase the id
- a nodejs server listens to the events, generates a random number and calls the contract form a whitelisted address with (request Id, random number, metadata)
You can use either or both blockhashs and sysvar timestamps, however both are not secure and have vectors for attacks. Advised not to do so.
And is there any less secure way for generating them ? (It's for generative nfts so the implications of a lack of security on this point are not that great)
You will likely need to wait for VRF by Pyth or ChainLink. Random values can't be created within a program today because the replayability needs to be deterministic.
How do I generate a random value inside my smart contract?
When interacting with a program, a few questions:
1. How do you figure out when you need to create a new account with the program function signature?
2. When you are listing the accounts in your transaction to match the params in the function, how do you know what to set `isSigner` and `isWritable`?
Example:
`{pubkey: params.accountPubkey, isSigner: true, isWritable: true}`

Take in account `allocate`: `pub fn allocate(pubkey: &Pubkey, space: u64)`
How do I know given the signature that the pubKey needs to be `isSigner: true` and `isWritable: true`?
<@!445425471027544095> Thank you! you are right, I was wrong. I did not notice that. The `.so` file name did not match crate name. 👍
it might be called `solaris_poc.so`, so you'd use "solaris_poc" instead as the argument
Do you have a `solaris-poc.so` under the `target/` directory?  If not, then that's the mismatch and change "solaris-poc" to the actual name of your .so
I can share testing code here if you want <@!445425471027544095>
let mut test = ProgramTest::new(
        "solaris-poc",
        poc_program::id(),
        processor!(process_instruction),
    );
Your first argument to `ProgramTest::new()`, "xxx" is probably wrong.   That's my guess
<@!445425471027544095> Right! cargo build-bpf works! but cargo test-bpf does not. I was building deposit example of Solaris
The program filename that was produced by `cargo build-bpf` is probably not `xxx`
Hi, I am writing unit test program with solana_program_test. And stuck with this error: `Program file data not available for xxx (7xRJSH2mMk3Z31u8bFiasDL8o8PaaC49FQpGvr9ofHx)`
Can anybody solve the issue? thanks!
Hey there, I have been trying to connect to serum-vial websocket using the following docs on aws ec2, I'm not able to connect. The code just won't run and doesn't shoot any errors, I can connect to the ws on my own pc , I can also connect to other wss on EC2 but not this one, anyone has an idea about the issuehttps://github.com/tardis-dev/serum-vial
using `solana config set --url https://api.testnet.solana.com`
anyone else with the same issue?
`solana airdrop 1
Requesting airdrop of 1 SOL from 109.230.214.106:9900
Error: connection timed out`
Are there any examples?
hello, I have a question about the rentEpoch field in the RPC docs, if that's 0 does that indicate that i need to leave enough lamports for the rent?
But I want to store a global data. The car insurance program must store the data actually. But programs are stateless, so do I need to create an additional account to store that information and give it to the program account? Or let program account create an account to store the data?
hm, the oyster swap and serum dex example might be exactly what I'm looking for, I need to dig more into that
https://docs.solana.com/developing/programming-model/accounts - accounts do store state between transactions
Hello! First of all thank you a lot for answering questions here :).

I have a question regarding storing states. Please correct me if I make a mistake in my explanation of Solana system.

I read that Solana programs don't store states. So I have a car insurance program in my mind, how am I exactly going to store the car information? Will there be an account which stores whole information and is created (and controlled) by the Car insurance program? I would want to access the car information from outside of the program. Like who owns which car etc., and manipulate the information aswell. 

So my question is basically how to do basic operations like **storing/retrieving/manipulating**  information. I couldn't exactly find a example Solana program so I would be glad if someone can forward me to a place.
(of course the whole thing would run with some fees, so I'd sell token for 1.1 USDC and buy it back at 0.9 USDC for example)
it is more for a game, like players can purchase in-game tokens, trade them between themselves, and eventually sell back (it is more complex than that, though)
yeah, I'm not after AMM at all. But indeed, I do see the similarity once you pointed it out
Are you describing something other than an AMM?  'cause this just sound like an AMM
mint is creating new tokens, so it is definitely not 100% what I described above, although it would be acceptable for me that the operations I described above would change total token supply
I might be incorrectly using mint/burn names to describe the operations I have in my head. Generally I want something like 'user can exchange money (preferably wrapped USDC) for my token, keeping the total token supply unchanged' and reverse operation: 'when user does not want to hold my token anymore, my smart contract can get ownership of those tokens and release (possibly smaller amount) of USDC back to the user (again I'd prefer to not update global token supply)'
No.  The native mint is special as it cannot have a single authority and updating the supply would disallow multiple wrap/unwrap in a single block entry
am I right that the mint/burn is exactly what spl token wrap/unwrap does?
(I'm still at the phase of reading dev docs, so I'm not even sure if I'm using right terms here)
hi there.. so, a beginner question here. Lets suppose I'm developing a token and I want to sell it to users programmatically, as well as buy it back, in some cases. Ideally, I'd prefer to interact with some exchange, or at least deploy some contract like uniswap myself, if there is no better option. As far as I understanding, minting new tokens upon payment should be really easy to do (looks almost like hello world example). Is that correct? Is the reverse operation (burning token and giving money back to sender) trivial as well? Now, if users are trading my tokens somewhere, I'd also like to interact with the exchange e.g. to get average price over past 24h for my local business rules in smart contract. I do not need to be interacting with big exchanges, just 1 popular dex would be enough (and as I mentioned, at worst I can deploy my own dex). What would be the best approach for such dex interaction?
Great, sounds good
So we aren't _that_ bad at it
FWIW, I'm aware of an exchange that's still wrapping a v1.2 release 🙃
In practice it might happen, please yell when it does!
Yeah we try to adhere to that, but we're just a bunch of dumb humans, so 🤷‍♂️
sweet thanks
https://docs.solana.com/developing/backwards-compatibility
The goal is for breaking changes to only occur on major version number bumps (standard semver).
<@!445425471027544095> what is you guys' policy on new solana cli tools. Can a program that was working fine compiled with 1.6.18 break with 1.7.8?
Got it, Thanks 🙂
ok i can work with that when needed. thanks
What's the use of signing a message? can we get message signer from transaction hash using web3js or coding?
I see, you need to use ProgramTest 🙂
i'm guessing that's the problem. i need to use ProgramTest
i'm trying to add this to unit tests i have already implemented in my program. but I'm not using ProgramTest to test instructions. they're just regular rust unit tests where i call functions within my program
declare_id!() macro creates a `id()` function that you can call to get the id as a Pubkey type.  Sometimes that's useful

What's the use of just declaring a id?
But how can I use it, if I'm not storing it into a variable?
it's not working for me. do i need to use this async ProgramTest thing where i send instructions?
it's for declaring an id
I don't understand use of declare_id! any help please
both.  it'll display the total compute units consumed at the end of the unit test, but if you want more granularity then sprinkle `sol_log_compute_units()` around
when you say "There's logging that'll display the number of compute units consumed," do you mean there's a way to get it to log compute units without using sol_log_compute_units()? or calling that function is the logging you're referring to
What is a nonce account?
Ok thanks! guess I was looking at outdated documentation or something
cool thanks i'll try it out
yep
oh ok so i can do this with regular unit tests as long as i use cargo test-bpf
Try using the latest crate: https://docs.rs/spl-token/3.2.0/spl_token/state/struct.Mint.html
supply is a field
But here they do have a field for the supply https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/state.rs
I actually found that before I sent my original message here... but when I looked at the crate I didn't find any way to get the supply https://docs.rs/spl-token/1.0.7/spl_token/state/struct.Mint.html
Here's a template to help get you started: https://github.com/mvines/solana-bpf-program-template#build-and-test-the-program-compiled-for-bpf
Example solana-program-test based unit test at https://github.com/mvines/solana-bpf-program-template/blob/master/src/lib.rs#L31
oh that sounds cool. i'm not familiar with this program-test environment though. is there any documentation on this? typically i just use regular unit tests that i run with cargo or deploy a whole program to a test validator
yeah you can import it by using the spl_token crate.  Here's an example: https://github.com/solana-labs/solana-program-library/blob/22f283c33a3b62a9cfae159c4a45ee5f0ebb305f/feature-proposal/program/src/processor.rs#L120
Just asking because C support isnt up to par and ive been putting off trying to learn Rust haha
sorta, you can use the program-test environment to run BPF programs locally without deploying to a cluster.  There's logging that'll display the number of compute units consumed, and you can sprinkle `sol_log_compute_units()`  as desired in your program during testing to measure different blocks
Not sure
After looking through the code, it seems like I can pass the mint account for a token into my program as one of the accounts, then unpack it into a mint state where I can find specific information like the supply. To do this, would I have to copy the Mint code from state.rs into my program or is there a way to import this functionality using crates?
is there a tool to measure the compute units of arbitrary code snippets? something i can write unit tests around so i don't require deployment of an entire program?
there are .NET, Go, and Ruby SDKs, javascript and python, to interact with programs that currently exist and in development. programs currently supporting rust and c as well as a group working on using ethereum smart contracts that get translated to native solana. What other language would you like to see supported?
Thanks! Deleted my message because I’ve been going back and forth trying to figure out if I can accomplish my goal a different way but I’ll definitely check this out
spl has an example of token supply, spl-token supply. https://spl.solana.com/token and the code is in the SPL. https://github.com/solana-labs/solana-program-library
Does solana plan on supporting other programming langs to create programs?
Check out <#763249718339567626>
Great, Thanks. Could you please provide me some resource to test solana programs
Yes that’s right.  Lots of little accounts reduce data conflicts and allow more transactions to execute in parallel
<@!445425471027544095>  Thank You 🙂 If I want to store 100_00 users data on chain, storing all users data on one account is bad design as whenever I want to search for a user I have to iterate through whole array and it will give me out of compute limits error. So, it's better to generate a new account for each user to store data on chain and store generated public key of storage account on database server, right? Is it good design?
solana_program is the subset of solana_sdk that's available from within the BPF program envionment
What's the use of declare_id?
What's the difference between solana_program and solana_sdk, they both have different functions, but they also have same functions like clock, declare_id etc.
Is there any way to get a signer public key from a transaction signature using web3js?
<@!585868308419444749> Okay, got it. One last question, if you have some suggestions please give me. My web app is going to have borrowers and lenders. To each borrower, multiple lenders can lend some amount. To store this I'm thinking to generate a new storage account for each borrower on solana and whenever a lender send him some amount, his wallet signing key and amount he sent got stored on that account. I'm storing this data on chain because I can't find any way to get info about which accounts have credited what amount of tokens to my wallet using web3js that's why I'm storing this on chain
I’m trying to deploy a program upgrade to a buffer ‘`solana program write-buffer`’ on mainnet and it just keeps sending transactions and then retrying. Is there something wrong with the network at the moment? Should I just let it run until it eventually succeeds or should I stop it and try another time?
Sorry I can't advise on such things.  I only know about the Solana side.  AFAIK how any login is handled is totally up to you an irrelevant to Solana
Is there any similar dapp on solana, which uses hybrid login like this?
<@!585868308419444749> Thanks for reply. For my dapp I'm thinking to store user data using mongodb database, he can login using email id, password and surf the web app and whenever he wants to send some funds from his wallet, he can connect wallet and make the transaction. Is it fine? or I can make it more efficient/better
Totally up to you. They are irrelevant to the on chain program.
What are the best practices to allow user signup and login for a dapp on solana?


///////////////////////////////////////////////////////////////////////////////////////////////

Aiming for around three release branches out ATM, +/- fires
do you have some approx. time line for this new revision of computed fees?
yes, have some lag.
I think you missed my previous message?
i don't think massive adoption can be feasible with how current fees are computed
but I believe that a mid point can be reached
i understand your point and makes sense <@!585868308419444749>  don't get me wrong
We're aiming to make tx fees better representative of resource utilization.  This will reduce the fee of many common transactions, but make some more expensive.  "Because NGU" is a bad reason to change fees
whats the point of having a super fast blockchain if in order to store something in an account I have to pay 50$
i don't think that should be the point, with this reasoning the entry barriers are getting bigger for developers that want to contribute
Would you buy a smaller lock for your home if you got a significant raise at work?
More value on chain justifies higher cost of security
Hey again, Regarding fees, now that SOL price is increasing, does Solana team any plan in mind to keep account size creations cheap? I notices that in the Solana docs the fees can change, was wondering if the change is to keep the prices low even the token price is increasing.

many thanks ! 😄
kill another validator process which is still running
please provide the solution for this..
holy smokes thats it!!!!!!!!!! super thanks boss
https://docs.solana.com/developing/clients/jsonrpc-api#getsignaturesforaddress
and API has no transaction-history listing method
OK I see `solana transaction-history CzdT7ViUoALuB4yo5n3eRkHkFNVP3dVucVtHskpiAFVT` will do this with the CLI
but i see it can be done as explorer.solana.com has it
i looked in the API and see no way to do this
OK thanks and do you know the API call or how to get a list of all the transactions that a wallet Key has made?
Looks like rent was deducted because the resulting account balance was less than the rent-exempt minimum, https://docs.solana.com/developing/programming-model/accounts#rent
k no worries, have fun
Yes. I stopped short of the second step. Came back to it today. Thanks for the help, much appreciated.
yes thats what i meant so its 2 steps to get it back
Yup. I had unstaked a while ago but the tokens were just sitting there.
ok so that worked
u can never move staked SOL
Yes, was able to transfer using 
```
solana withdraw-stake --withdraw-authority ~/.config/solana/sol_wallet_01.json D3kvgpDWyApqdRnADLfgstvGKZHJY8XPNY2yKTdv5D1m 4JRXQjR3zy26FRqjadiiyjohYH5ySziPLCh8uHiFjZkG 0.5 \
      --fee-payer ~/.config/solana/sol_wallet_01.json
```
and its 2 steps to stake
its 2 steps i think
yes that is it, u must deactivate the stake first and then you can withdraw
I need to use the `withdraw-stake` command.
Ah i think I got it.
And then there's a bunch of stuff about 'withdraw authorities' ... I guess I'll keep digging.
And I forget how I set up the staking account in the first place.
I think my problem is, this account is a 'staking account' so it's not letting me move the SOL, for some reason.
then move the big SOL amount after u see it working
and test it first with only .01 SOL
in place of the pubkey i have there starting with 9zra...
Got it. Let me give it a try.
and you just need the public key of the wallet you want to send the funds to and put that in the command i have showed u above
you have to put the wallet that has the funds you want to send in ~/.config/solana/id.json
is that where you want to send the funds ?
ok and so what wallet do you have in ~/.config/solana/id.json
Yes, I have both
or do you have the 12 word recovery phrase?
do you have the id.json file for the wallet with the funds you want to send?
no the other one.
tell me where u have your funds that you want to send - is it in ~/.config/solana/id.json
use the wallet pubkey where u see 9zraC2Km48jwnaGrK9PfJ7TC85bHMopaKAvcPoQkWgss
`solana transfer -u mainnet --from ~/.config/solana/id.json 9zraC2Km48jwnaGrK9PfJ7TC85bHMopaKAvcPoQkWgss 0.00004 --allow-unfunded-recipient --fee-payer ~/.config/solana/id.json`
Hi all, wondering If I can get some support. 

I can't seem to find the correct sequence of commands to transfer the SOL in my local staking wallet to the 'normal' wallet. Any help is appreciated.
And I checked the sender balance and around .00005 sol was sent so it did deduct transaction fee from both sender and receiver even though i told it not to with the --fee-payer switch
I have a new question as I just sent .00004 SOL on mainnet to another wallet except the other wallet only got a total of 0.000037561 SOL sent to it, and I had the --fee-payer switch set to make the Sender Pay.
How to stop the validator?  After running  ps aux | grep solana . I am unable to stop the process using kill.
ok I see what issue was, that was my voting account pubkey on testnet and so it somehow must be registered as a voting key and cannot have funds sent to it? well as soon as i tried to send funds to another pubkey then it worked fine with solana transfer
Can you elaborate on what the cli looked like that resulted in this bad state, I'd like to fix up the cli so that it is not possible
you need to stop previous solana-test-validator.
you can use `ps aux | grep solana` to check is it still runing.
fow now you can only read those code on github if they open source.
I am trying to run a test-validator. This is coming 
solana-test-validator 
Error: Unable to lock test-ledger directory. Check if another validator is running
I am new to Solana. Please help me to resolve this
hey, I was just wondering, how can I get access to the smart contracts "source codes"?
in a similar way than when I click on "contract" on etherscan
Thanks I should have looked there first.
Appreciated, thanks for the help 😀
For me, I do it just for saving storage. Maybe someone has different idea.
Thank you Chido! Hoping I understand, manually implementing Pack can reduce storage but can be substituted with Borsh if storage is not a concern? Is there any points where you want to manually implement Pack to attain certain functionality or is it specifically for optimizing storage allocation?
<@!865653993307635732> just check the <#763249718339567626>
I am looking to get a start with writing Rust I am trying to find some resources for documentation using the solana_program or other apis.  Does anyone know where that can be found or good resources they have used?
Oh! Welcome. You just use borsh to serialize your account if you don't want to separate those bytes by yourself like this https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/state.rs#L38
BTW, hello world program switched to borsh serialize in Apr.
I'm a bit new here, sorry if I am confusing terms. More specifically I want to ask when do we want to use the "program_pack" and implement the traits ourselves? For example in PaulX's Escrow tutorial why does the program pack have to be implemented instead of what I assumed the Borsch was doing in hello world program?
I think it has been good.
```
❯ curl https://api.devnet.solana.com -X POST -H "Content-Type: application/json" -d '
  {
    "jsonrpc": "2.0",
    "id": 1,
    "method": "getHealth"
  }
'
{"jsonrpc":"2.0","result":"ok","id":1}
```
are you talking about serialize/deserialize account data on program? If yes, I think if someone who wants to save reduce some storage which account taken. Then will implement their serialization.
Which swap site do you have to go to to have a transaction with a swap instruction like this (https://solana.surf/transaction/MbSx5cSrpNTUtXDRTXRkQPaegBPi4idGupnujQMUcc8NBriPByaHUaRtmUEseUMkPCNtZAkckpP5hbAu7FpAt6h) ?
The solana spl-token program has a multisig, although I've been unable to successfully sign a tx on mainnet. Based on what I've seen, it's mostly used to control a token mint, I'm not sure anyone else is using it as a wallet, as there have several bugs that I'm not sure have been resolved yet.
is dev server having a issues?
In general, in what type of situations do we want to implement our own serialization instead of default?
thanks man
Is there someone available to assist in pushing this along? We've been trying to get this done for 2 weeks now.
Hey guys, I'm working with the Intersola team, an SPL based project, and we're looking to add our token name to the list, however we're not having much luck - https://github.com/solana-labs/token-list/pull/640/files
maybe this is what I'm looking for:
https://docs.solana.com/developing/clients/jsonrpc-api#programsubscribe
In our case, the URLs will include the network in the URL for devnet or testnet. If I am understanding the problem correctly, <@!491992078226817067> might want to maintain a list of approved RPC URLs in the backend application. Aliasing with 'mainnet', 'devnet', or 'testnet' will allow the backed to choose a default service. If the client passes a preferred URL, it will need to be on the pre-approved list. That will help close a possible attack vector. I hope that helps, let me know if I misunderstood something.
<@!585868308419444749> <@!809198824539160606> I followed the Bitrue issue, you know that you have exactly the same issue with one of your CLI command ? solana-tokens distribute-spl-tokens
Replace SOL addresses in recipient by ATA of each SOL addresses, means the solana-tokens will distribute to ATA but instead it creates new ATA under the recipient/ATA. 2 issues potential issues here :
1. Why did the CLI create an ATA if the recipient is already an ATA and why under the ATA and not the SOL address ?
2. A design issue ? Ownership SOL -> ATA -> ATA should be transmit meaning if a SOL address his owner of an ATA, if another ATA is created under this ATA then SOL address must have control of it ?
Hi I think it's not possible
Hi there. Can I change decimals of my spl-token ?
like if i want to trigger an off-chain action via an aws lambda or something
hi all, is there a way to get a data stream of actions taken within a solana program? i'm new to solana programming
Hey 👋🏽 

We’ve tried to update our logo however our GitHub pull request hasn’t yet been approved, in a little while. 

Req: https://github.com/solana-labs/token-list/pull/663

Can we get this sorted please? 😊
FYI. normal account is on ed25519 curve but PDA is out of the curve.
and both of them belong to solana's account.
program just like normal account. it will also follow the rule of rent.
https://docs.solana.com/developing/programming-model/accounts#rent
https://docs.solana.com/implemented-proposals/rent
`insufficient funds for spend (5.20992192 SOL) + fee (0.03271 SOL)`

5 SOL needed for mainnet <:PepePog:746135852542984214> smart contract deployment? Thought it would be cheaper. Any way to profile cost?
sure. I guess your wallet public key is base58 string. you can use base58 decode and put the result into`Pubkey::new_from_array` or `Pubkey::new` to get pubkey.
https://youtu.be/i6Ycr5nhjH8
<@248066053161222144>  is talking about this video
I am learning from this one : https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/
Hii

I want to put an admin public key in my program to ensure that certain functions can only work if called by admin

Whenever admin calls my program function I need to compare signer public key with the admin pubkey stored in program as a variable.

How can I store a public key as a variable in program? I have my wallet public key as string whom I want to make admin? Is it possible to convert string to public key in rust?
where?
Video?
did you watch the video i sent
there is no CLI for this?
sorry but you still have more work to do
I know, I want to know is that any command line utility to do that instead of doing it in RUST program.
pda is generated based on program id
This will tell you if your public key is on the curve. But it's possible you have a PDA which won't be the curve
https://solana-labs.github.io/solana-web3.js/classes/PublicKey.html#isOnCurve
I found create_program_address() and find_program_address() to generate and find PDA. I want to know if there is any SPL CLI to generate PDA based on  program_ID?
the address  meets generation rules
hey <@248066053161222144>  can i use this accounts for my project in which i wanted to implement a AMM with token-swap program, but with implementation of  a offset curve ? 
please reply if anyone can help
what's your definition of valid?
How to verify a solana address is vaild?
or that you haven't built the program
<https://discord.com/channels/428295358100013066/517163444747894795/756954302278271148>
you may not be connected to a cluster
<https://discord.com/channels/428295358100013066/842128118655221760/845345823944736788>
try searching parts of your error message
dyld: Symbol not found: ____chkstk_darwin
  Referenced from: /Users/atu/.rustup/toolchains/bpf/bin/cargo (which was built for Mac OS X 10.15)
  Expected in: /usr/lib/libSystem.B.dylib
what could be the reason
when I am trying to deploy `example-helloworld` 
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! helloworld@0.0.1 build:program-rust: `cargo build-bpf --manifest-path=./src/program-rust/Cargo.toml --bpf-out-dir=dist/program`
npm ERR! Exit status 1
My money is on the lack of SOL to deploy to devnet
most likely you don't have enough devnet sol to deploy
it seems like it could be a few different things causing it
you should try searching for `0x1` in discord search
I'm trying to deploy programs to the devnet but I get errors every time like this one `Error processing Instruction 1: custom program error: 0x1`. Deploying locally works, any solution?
as we keep saying, you really need to read more / do more research to understand what a PDA actually is. There is no single file or line of code to point you towards
Chido told me it is a web3 thing but I saw ppl do that in RUST. That is why I confused. I checked the SPL token swap program but I could not find place handle PDA. Could you kindly point the file for me? thanks
> Seems like there is more to the story
yes I think I will be simplifying it - just wanted to check if there was some API call I missed that would give me what I need. Thanks for the help.
gotchya.  not sure there is a way offhand, someone may know?  ..this might get some useful information that can help you determine which network. https://docs.solana.com/developing/clients/jsonrpc-api#getclusternodes. 

your trying to determine the network the rpc is pointing to. typically done through a request if nothing else. it is odd that neither the client or backend are going to know the intended target network for the RPC. it would seem the client should be aware, for liability as well. Something is unusual about that design. The client should be specifying/agreeing in someway to the intended network. The RPC schema, or call to you with RPC end point should in 'some way' specify the network so you can easily map to it ( testnet.my-whatever.etc. or at least a parameter, encrypted, header, or of some kind). A key should be used to validate the incoming request.

are you going to check the network for each and every call? seems like a lot of overhead. How else would you check without calling the network with some kind of request otherwise. Seems like there is more to the story 🙂
PDA is not a web3 thing, it's inside the rust functions. Check docs for Program derived address. In web3 we just use getProgramAddress
<@600035831528423484> is there any easy way to tell what cluster (mainnet, devnet, test net) a rpc url is hooked up to?
Plus web3 has no documentation.
No, PDA  is not listed.
can u connect to local wallet other way than just CLI command, can u use some RPC,json access as well ?<
I think you can found some code in <#763249718339567626>
Do you have sample code for that? I think this should be in token swap documentation. If I know how to do it, I would not ask you.
lets say you are using the client widget with your own dedicated url https://my-whatever-solana-rpc.com that points to mainnet. The widget makes a call to my backend, saying something like "execute instruction X on https://my-whatever-solana-rpc.com".

My backend doesn't know what this url points to , and has not heard of it before (nor has the client widget).

I don't really want my backend just calling that url, passed from the client side. So ideally my client widget would turn it into a canonical name, e.g. "mainnet-beta" and then instead pass "execute instruction X on mainnet-beta".

A niche requirement, granted.
I guess I dont understand then. you need to pass the url to connect to the cluster. and you can use any kind of method you want to store or map keys to from a backend..  just store the cluster keys on the back end and or hash it and pass?  not really sure what issues there would be.
No I mainly need to know whether it is mainnet, testnet etc. Basically the use case involves a client widget, that connects to solana, but also makes calls to a backend that should then connect to the same network. 

I could just pass the clusterUrl to the backend, but there are security problems with that.
oh gotchya, are your referring to what actual node(s) you might be connecting to in the cluster? pass the root url?
They will point to e.g. mainnet but will not match the official ones.
Hi. Like <@!248066053161222144> says. I think it involves too many concepts so it makes you feel unpleasant. I suggest you to do some MVP to get more experience.
- Create your mint and use `mint to` instruction
- Replace your mint's auth
- Use your token account to burn token
- Write a program, calculate its PDA and use invoke_signed with your PDA
- Replace mint’s auth with PDA and mint
- Create an token account for your PDA
- Burn token from your PDA's token account
I think if you can do all of those, and then you can do what you really want to do.
yeah I am thinking about non-standard ones. quicknode, rpcpool etc
the official clusters are here: https://docs.solana.com/cluster/rpc-endpoints
here is the code for the token-swap program: and cli: https://github.com/solana-labs/solana-program-library/tree/master/token-swap  search on 'burn' and 'mint' and 'test'  you will find how the tests perform the program execution, how to build your transactions, and how to perform the logic inside the functions and programs.
Hi all, if I have a clusterUrl, is there any way to know which solana cluster that connects to, other than the obvious ( = https://api.mainnet-beta.solana.com etc)? I am thinking about supporting custom dedicated rpc endpoints, e.g. .quicknode, rpcpool. 

Something along the lines of `new Connection(randomUrl).getCanonicalClusterName()`
This is using an outofdate version of anchor but it is using a PDA to sign a mint. It sounds like you need to play around more to get more experience first before trying something this advanced <https://youtu.be/i6Ycr5nhjH8>
transaction and account limitations: https://docs.solana.com/proposals/transactions-v2
passing 500 accounts in a single transaction? no. not right now. I believe upper current limit is reached around 35/40+, and proposed might get to 250+- based on data?  

What is the requirement and design here? Under most circumstances, frankly, I wouldn't recommend you do that (pay 500 different accounts in a single transaction). If anything in the transaction fails, or program,  or transfer, or execution of an instruction, what will you do? I would keep as much as possible off chain, and only the use the absolute necessary information, for each single transaction for program execution, compiled for bulk and then sent to the program in batches or individually.

When working with large sets, and transactions, you are almost always better off chunking or batching. If the model does not support it, then you create your own setup to batch, chunk, stream, or send individually yourself. Its better for error handling, logging, execution, avoiding SPOF, performance, and so on.

 There are generally creative ways to accomplish many things, with many technologies. If so inclined you could probably figure out a way to accomplish paying 100s or 1000s of people some way or another. Out of the box though, the current transaction limitations above apply, for size, speed and parallel execution.
<@!788215642070581289> Could you provide sample code how to do the following as you suggested. "assign program's PDA to the mint as a mint authority and if you want to burn some token, you need to create a token account for program and assign program's PDA to the token account as an owner" . I found Paul's tutorial doing this in RUST. I checked the SPL Token swap program but I could not find similar code. I need help.
That's about the extent of onboarding you will get beyond the available resources
They answer questions here sometimes
Do the Solana devs work with teams to onboard new projects who want to build on them? If so how do we contact them?
Coming from OOP and eth the idea of code and data being separate is so foreign to me, but its fun learning about solving problems differently in Solana
Hmm yea that would make more sense haha
I guess I dont fully understand PDA
Using like an onchain counter and PDA seeds
And keep track of them that way
You could break up every message into its own account
Accounts are blocks?
I cant be the first to think of this im sure there are good reasons why this isnt used
my thought was accounts could be blocks
you understand what a blockchain is correct?
Not sure what you mean, what's your definition of blocks
but blocks could be set to a fixed size, point is the number of blocks is what changes
Yea running the numbers now, comes out as too damn expensive lol
But maybe it's worth it for a DAO or something
It would be several thousand dollars per chat buffer
Because account sizes are fixed at initialization?
Would rent be too expensive for this to be implemented into a chat room program for example?
Been thinking about it more, for storing dynamically length sequential data why wouldn't a blockchain work?
Right now you could probably do 30 people at once in one transaction. But eventually you will be able to do 300 once they change the account layout format. But that won't be for a while
What nojob said, just pass the bytes you get to a decoder function in the SPL token library
The only operating oracle service I'm aware of is Pyth, but that's limited to market data AFAIK
I am guessing band protocol does, but not sure if they provide access to geolocation data on chain.
I think only defi data is available. What about real world data ? Could you suggest Oracle services in the solana ecosystem ?
Probably a better question for Chainlink devs
any answers to this ?
I want to rewrite `solang` examples for solana in Rust. But it seems to be going nowhere so far
Sources for `cli` show that `solana program deploy` does quite a bit of heavy lifting
Good day! Is there a function somewhere in Rust libraries to load .so to solana?
It seems like Solana ticks most of the boxes for what we need but there are a couple of things outstanding we need answers for. Constructing payments that have many receivers is a must. Each receiver would be a unique amount and ideally, this is done in a single request/payment.
ok I see now
ie https://discord.com/channels/428295358100013066/517163444747894795/877396580028809277
See above <@!753734569953591348>
if you have a question go ahead and ask it here, I cant promise myself or anyone else can help you but it cant hurt to ask
https://github.com/solana-labs/token-list/blob/main/src/tokens/solana.tokenlist.json
<@!125001847726538753> thanks ;D
Is it possible to construct a payment that would pay 500+ people in a single transaction with Solana?
yup!  Theres a git repo that looks like community maintains that has the meta data of every token so once you know the mint address you're good!
<@!753734569953591348> would you be able to help?
was about to say haha
Oh the answer is just above haha, thanks
How can I query information about a token?
For example its name or ticker?
Anyone...
Hello 👋 I have a few questions regarding possibilities with Solana for a project I'm involved with. Hoping this is the right place to have some questions answered.
this example shows
you can read the data with getAccountInfo but you have to be able to read it properly
https://github.com/solana-labs/example-helloworld/blob/master/src/client/hello_world.ts#L228
Reading data from Solana? Well is just data so yes..? but you have to know how to parse it so no.
Wouldn't all programs be interacted with the same way?
Not sure I dont know anything about Raydium
I'd rather stay within the Solana RPC tbh
<@!753734569953591348> as far as interacting with programs.  For example Raydium staking program.  Can I interact with the Solana RPC to see a wallets funds that are in the staking program?  Or do I have to use that platforms API endpoints?
thanks alot!  Seems i was able to parse it out although I had to decode that entire response manually.  I figured the library would do that for me.
Ok then, yup the mint pubkey is the first thing stored in the account data https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/state.rs#L86
Yup
i dont understand what you are trying to do here, are you trying to go from your token account to the token mint?
don't think you meant to quote me
Can I commit the code change by adding our own token?
Yup but needed a way to get the mint address to map it.  I'm using solana.py and looks like the response from get_token_accounts_by_owner doesn't decode by itself.  After decoding I was able to find the mint address to every token.
from what I understand token metadata isnt stored on-chain, token metadata is being stored here: https://github.com/solana-labs/token-list
Looks like the mint address is there...ok getting somewhere
Is that data stored in account.data[0]?
Just running some basic code in python.  Passing in wallet address, returning the token accounts by that address and then getting the balance of each.  Feel like I've hit a dead end here.
What would be the proper way to get token metadata from a pubkey?
Do you have an example code?
We can help indeed! What data would you need? (Woops hit reply on the wrong message, I'm from aleph.im)
How do I interact directly with a contract when it comes to minting of NFTs? Like instead of minting through a website, how would you do it directly through the contract itself? If anyone could answer this I'd appreciate it a ton, thanks 🙂
Thanks I'll check it out!
hey, so wallets many times work through the window.'something' object, in this case window.solana. From here you get/set the provider and connection. Manually, this is typically how you interact with objects like wallet. The actual connection, and the wallet are two different things. The wallet is itself, its own app that you interact with, and could be connected to an entirely different network. In the case of phantom, you can switch the network by going to settings (lower right), scrolling down, and clicking change network. In your app, the connection you establish, is up to you. You then use the combination of the connection (where your sending calls to), and provider, wallet (the wallet key, signer) to send and sign transactions as needed. here is the updated dappscaffold for an example implementation: https://github.com/solana-labs/dapp-scaffold . run it, change the network, use the faucet, grab some sol, see how it works. remember to change the wallet network in your actual wallet (phantom) to see reflected changes. (search: connection, endpoint, adapter), and here are the phantom docs: https://docs.phantom.app/integrating/establishing-a-connection.
Let me look at  `solana-keygen recover` ...
any luck with that?  otherwise the solana-keygen CLI command with 'new' 'recover' among other sub commands are available, but I do not believe? there is an easy way to import/export wallets with private keys and such atm. would be handy for devs at least.
but not too bad yeh weird name to search if you dont know it already
it's a bit annoying because you have to make seperate calls to get the txn details
legend!! can't believe i missed that
https://docs.solana.com/developing/clients/jsonrpc-api#getsignaturesforaddress
how can i get a list of sol transactions to and from a wallet? in the jsonrpc docs it looks like there's no call for this and i couldn't find any block explorer apis for this. surely you don't need to fetch all the blocks and scan them all for transactions? i think that would probably start to hit rpc rate limits
ok looked around and they have `AccountLayout` importable from `@solana/spl-token` so dont have to write own buffer just `AccountLayout.decode` <@!702264277326626878>
```
export const ACCOUNT_LAYOUT = BufferLayout.struct([
  BufferLayout.blob(32, 'mint'),
  BufferLayout.blob(32, 'owner'),
  BufferLayout.nu64('amount'),
  BufferLayout.blob(93),
]);
```
should do the trick then just call decode on the account data you loaded when grabbing multiple
not sure if they have built in util but buffer layout is not complicated
oh i see you want to grab multiple
i think this should work
```
token = new Token(needed info)
res = await token.getAccountInfo(userTokenAccountAddress);
res.amount
```
thanks
How can I set the network using the react wallet-adapter library? Is this not yet supported for Phantom? It looks like sollet supports it but I don't see any references to WalletAdapterNetwork for Phantom
Is there anyway to load an account .bin file onto the locahost network?
Thanks Don. Follow up q, given that this endpoint returns encoded data, is there a nice way in which to decode spl account data say. I assume I'd want to copy the buffer layout, or is there something in the spl-token lib that handles this?
Or I'm pretty sure there's a CLI command to do the same thing as well
There's a config file used the command line tool that you can edit to manually specify a particular key pair file to use
i was wondering, how do i find teams to work with?
hey guys
Maybe this tool https://www.spl-token-ui.com/#/account-editor can get me where I need to got for now... Not tried it out yet...
In other words, I do not have a Command Line Wallet set-up for the token I need to work with. Is it possible to bring and app generated wallet into the CLI ?
Like 30 or something
Is there anything similar to Multicall on Solana like there is EVM?  I haven't even began to look at the documentation on parsing information off chain but from the small research I did do it looks like everything is done via http calls.
And also a transaction is confirmed (MAX) after how many blocks?
Is there a way to query all transactions (transfers) of an address with the JSON-RPC api?
Okay, well the other option is that id.json isn't a System account on mainnet-beta. `solana account ~/.config/solana/id.json -um` might be informative.
I going to bed now and try some more tricks tomorrow with this as this is wierd as it worked fine in testnet. i also will try to run solanaj to try this same trany and see as i have solanaj runnin trany's on testnet already too
oh i just was talking to Brazil on the radio, but thanks for the fast get back to me, i just tried the same switch with `--fee-payer ~/.config/solana/id.json` right before i tried without that switch and got the exact same error. I also did the `solana transfer -help` and saw that the `--fee-payer` switch is not needed in my case as this just defaults to the same account as the account that is sending the funds anyway.
and `serum-dex` too:)
created some diagrams of `token-swap` and `token-lending` in case anyone finds helpful - https://github.com/ilmoi/solana-serum-program-viz
Then `solana program close` should work.  cc/ <@!453347985628200960>
I think you'll need to write a tool to issue this instruction. https://github.com/solana-labs/solana/blob/master/sdk/program/src/loader_upgradeable_instruction.rs#L17-L21
This is upgrade authority account
solana program deploy with wrong buffer arg
How did you get the account in this state?
or close command will work fine with empty data?
<@!585868308419444749> do i need call set-buffer-authority or write-buffer?
I think this is the case.  The data is all zeros
<@!323088295422853120> <https://github.com/solana-labs/solana/blob/545e037e38aa571bc4f8dc8cdddfb7fd34af04f9/docs/src/cli/deploy-a-program.md#closing-buffer-accounts-and-reclaiming-their-lamports>
may be it did not init properly
but in explorer icant see https://explorer.solana.com/address/7cHAVi5nXpdDnSJE6xQqkwFDVFY7bh1RTmJhUzKEu2Yb 

Buffer authority field
payer for fee
<@!585868308419444749> and overwrite keypair (signer) yes?
You should be able to `solana program close` it then
i'm having a look through the source to see if there's a way to retrieve sol from a program account by transferring it out
Hello developer-support team, my name is Conor Kolmer and I am currently part of the SolSurfer team. We are creating our own NFT Marketplace off of Solana. Here are the links to our landing page and marketplace. https://solsurfer.xyz/#/  https://app.solsurfer.xyz/ We were looking for someone to help audit our code, smart contract devs would be awesome! Lets talk more! kolmercm@gmail.com or 636-368-5415
SolSurfer
SolSurfer NFT Marketplace on Solana
SolSurfer - An Interchain NFT Marketplace built on Solana! Specifically we are looking for someone to audit our React Hooks which call the RPC endpoints. This is to check our flow before we deploy to the mainnet. We want to make sure we arent missing any important steps in the process of minting or transacting NFTs.
it's not owned by the system program
yes
Is that a buffer account?
i made a mistake and delegate account to upgradeable program
<@!785084693023424542> can not. because system program does not allow transfer sol
can you transfer out the lamports, so they are 0, and assign the .data to nothing on the account?
<@!585868308419444749> can i some how deallocate space and unassign account? want to revert this action

https://explorer.solana.com/tx/iEn67jzuY4CRgKzMjWKa3PsobeiPSx2s7zRWKjtnMf9JTCT3ub8mwUAea8gsLhzsuY4K4PWL9RCHbtQtC1cLytw
Hi all. Is anyone available to help me with authenticating via the cli w/ a private key? I'm unsure how to store and access a keypair so that I can run various commands. This key pair had been generated outside of the cli environment through a wallet service.
🍻
also, https://docs.solana.com/implemented-proposals/transaction-fees#calculating-fees
s**t, completely missed the first lines hahahah.... thanks 😄
did you see the calculation of rent docs portion? https://docs.solana.com/developing/programming-model/accounts#calculation-of-rent


///////////////////////////////////////////////////////////////////////////////////////////////

That sysvar is deprecated anyway
Yeah, you'd probably have to use `Message::new_with_compiled_instructions()` instead of `Message::new()`
Yeah that sounds right.  The SlotHashes sysvar has the same problem, here's an example I wrote for SlotHashes to demonstrate how to around it: https://github.com/mvines/solana-bpf-program-template/pull/4
I was thinking of that, but I don't think the current Rust/JS SDK would allow that so didn't want to suggest it.
You could also include an account in the transaction accounts list without referencing it in any instruction. The transaction should still show up in the account's history.
does anyone know how to code NFTs here that could assist me?
It seems that even `bincode::deserialize(&self.recent_blockhashes_account.data.borrow()[..RecentBlockhashes::size_of()])` exceeds compute limits. This is on devnet for reference
ah, I see.  yes a 0 lamport system transfer ought to do it
i guess i could have an additional instruction that just sends 1 lamport to the account in question?
similar to how in ethereum you can send a tx to someone with data
like, want to send a message "to" someone
but what if i want it to show up in someone's tx history?
In that case provide no accounts to the memo instruction
https://github.com/solana-labs/solana-program-library/blob/master/memo/program/src/processor.rs#L17

oh weird, so every account has to be a signer? I wanted to use this to send an onchain message to someone else
That's jus a lib.  Memo doesn't really make sense as a standalone CLI. Most `solana` and `spl-token` CLI commands that submit transactions should support `--memo` though.  Check their `--help`
Thanks. Solved
Thanks a lot
`MintTo` can only handle integers but what if you need to handle say 1337.42 you use `MintToChecked` with params: `amount=133742` and `decimal=2`
`MintToChecked` lets you express decimals using the `decimal` argument
https://docs.rs/spl-token/3.2.0/spl_token/instruction/fn.mint_to.html
https://docs.rs/spl-token/3.2.0/spl_token/instruction/fn.mint_to_checked.html

What is the difference between mint_to and mint_to_checked functions in spl-token program? There is an additional decimals attribute in mint_to_checked but I am not sure what it does

also found https://crates.io/crates/spl-memo but having issues installing
is there a cli tool for this? build doesn't seem to produce one in `target/debug`
use your distro's package manager to install it
It's telling you you need the development packages for openssl
Getting this error while downloading the source code. FYI - new to solana and rust.
https://github.com/solana-labs/solana-program-library/tree/master/memo
is there a good tool for sending a memo message along with a tx?
Thanks.
Extend - currently the only way is to simply add the additional accounts to the list for the instruction, subject to overall transaction size like you mentioned
Thanks for the reply. Since account mapping is still in 'proposal' state, is there a way atm that I could extend the number of accounts in parameter? Subject to transaction byte size I mean.
Awesome. I find it necessary and we definitely check nearly everything in the parameter accounts.
i do this with stuff like the `tokenProgram` where we verify that the program passed in the hardcoded pubkey of the `tokenProgram`
as mvines said can't hard code them, but you can hard code the accounts as requirements to be passed in, and double check inside the code that the account IDs of the hardcoded accounts are correct
No, you can't add hard coded accounts.  Only accounts that are provided explicitly to your instruction
<@456226577798135808> yo, sry bro but I wanted to be sure I got that clear, can you check dms?
Any obvious reason why `let blockhashes = RecentBlockhashes::from_account_info(account).unwrap();` would be eating all 200k compute units?
Is there any way I can progressively fetch accounts, or somehow fetch the difference?
A Rust contract programming related question:

Can I add new accounts in to solana_program::program::invoke that is not in the parameter of the containing function? 

Say I have a process_f1:
```
pub fn process_f1(
    program_id: &Pubkey,
    amount: u64,
    accounts: &[AccountInfo],
) -> ProgramResult {
    xxx
    invoke(
        &instruction,
        &[
            accounts.spl_token_program.clone(),
            accounts.source.clone(),
            SOME_HARD_CODED_ACCOUNT1,
            SOME_HARD_CODED_ACCOUNT2,
            accounts.source_owner.clone(),
        ],
    );?
```

Can I add hard-coded accounts in `invoke` function?
I created a grapql API by fetching and indexing my program's accounts
But currently, it just fetches all accounts at startup, and subscribes to changes
This works fine, but there seems to be no way to fetch program accounts in more than one API call, once there's thousands of accounts, I think this could end up being a problem
<@!453347985628200960> thx
After my changes you will be able to close and drain your ~~initialized~~ uninitialized buffer, only catch is that anyone else can too so you need to be quick 😉
The tx payer doesn't have to be part of the close instruction
Great! 

In my case i need to initialize buffer and close.

For close command can i pay fee from other address?
Interesting, I'll give it a try.  Btw, I'm working on adding the ability to reclaim lamports from `Unitialized` and `ProgramData` program accounts: https://github.com/solana-labs/solana/pull/19319
and as a result transaction confirmation stuck
Hi! I used for --buffer same json file as for --upgrade-authortiy
lol understood.
We do support C, we like Rust's safety and crate network 🙂
(I know it's too late to say this. Just trying to get some info lol)
I get it that writing rust has useful features for writing the validator. But for the BPF virtual machine? Rust seems to slow you down dramatically given how constrained we are with compute budget
LOL it's good to know. I'm still curious as to why you guys went with rust as the primary contract language rather than C.
holy cow
From what I've seen in the past when building with BPF for Rust, the linker is unable to do a very good job at garbage collection so some of the stdlib gets left in.  Also, Rust pulls in a lot of string and error handling code.  If you build with C you will find that is not the case and the `.text` section is much smaller.
Seems one BPF instruction takes up 8 bytes? But the translation ratio of 1LOC to (approximately) 10 BPF instructions is probably what surprises me...
is it just because BPF is not very efficient for binary representation?
We could look at the serum program as an example. I think the main contract is only ~3/4K LOC? yet  the `.text` section is 200KB in size.. what's going on there?
I'm looking at the one under  `target/deploy`. Okay I see there's probably no additional debug section in the ELF file, but the size of the `.text` section completely surprises me. Why is `.text` so large?
Now that solana address mapping is still in proposal phase, how do I handle a big transaction account list? I've search through and found that mapping mechanism but I'm not sure if it's available.
https://github.com/solana-labs/solana/issues/12232
wait so there is no way for me to verify the transaction I'm making with dapps?
When the program is built two versions of the ELF are created, one is the debug version with all synbols and the other is a stripped version.  You can find the debug version is located in `target/bpfel-unknown-unknown/release` and the stripped version is in `target/deploy`, You should be deploying with the stripped version.  Do you see additional things that could be stripped from the stripped version?
<@!750260892146597970>  Are getting your `*.so` (program) from `target/bpfel-unknown-unknown/release` or `target/deploy`?
`--release` seems to be an option for `cargo build` but not for `cargo build-bpf`
is this an actual option for `cargo build-bpf`?
I know that there has been discussions around this topic previously. Curious how the discussion goes.
Hi everyone, does anyone know if Solana will build a QR-code compatible protocol (similar with WalletConnect) to enable QR-code connection to desktop DApps? Our wallet currently enables users to connect to DApps via WalletConnect on desktop. However this option seems unavailable on the Solana platform. It only enable extension and USB wallets, which is quite inconvenient.
Of course, checking that the state allocation has the bytes to store the collection is a good thing todo! 🙂
The key is that the size of the serialized data is needed for serialize/deserialize: `hmap_len[..].copy_from_slice(&u32::to_le_bytes(chunk_len as u32));`
Last 4 lines could be using any collection type (except `HashMap`)
Here is snippet serializing `Vec<Vec<Vec<u8>>>`:
```rust
pub fn pack_tracking_state(
    is_initialized: bool,
    accumulator_data: &[u8],
    chunk_data: &[Vec<Vec<u8>>],
    dst: &mut [u8],
) {
    let dst = array_mut_ref![dst, 0, TRACKING_ACCOUNT_STATE_BYTES];
    let (is_initialized_dst, acclen, accumulator_dst, hmap_len, hmap_dst) = mut_array_refs![
        dst,
        INITIALIZED_BYTE,
        ACCUMULATOR_LEN_BYTES,
        ACCUMULATOR_BYTES,
        CHUNK_LEN_BYTES,
        CHUNK_BYTES
    ];

    is_initialized_dst[0] = is_initialized as u8;

    let acc_len = accumulator_data.len();
    acclen[..].copy_from_slice(&u32::to_le_bytes(acc_len as u32));
    accumulator_dst[0..acc_len].copy_from_slice(&accumulator_data);

    let chunk_ser = chunk_data.try_to_vec().unwrap();
    let chunk_len = chunk_ser.len();
    hmap_len[..].copy_from_slice(&u32::to_le_bytes(chunk_len as u32));
    hmap_dst[..chunk_len].copy_from_slice(&chunk_ser);
}
```
No difference using a vector.... serialize it to buffer... get the size... put the size into state and then copy size bytes into state
That's… a lot of boilerplate. Do you have any example with a vector, please? It should be easier to begin with 😁
Did you build with `--release` ?
Looking at the .so files built.. I kinda feel they're 10x larger than they need to be.
Or, more generally, what are the things we can do to achieve a sensible binary size?
is there a way to strip the built contract binary of debug symbols?
Here is one from the `solana-cli-program-template` that is a bit more optimized: https://github.com/hashblock/solana-cli-program-template/blob/main/shared/src/lib.rs
OK, the issue is that Borsh checks the length (typically included in the serialized data) against the size of the buffer to see that they match. Here is a contrived  example of both Serialize and Deserialize using a BTreeMap: 
https://gist.github.com/FrankC01/abae44f481c67988820fbb8c2c836c27

Basically it encodes the length of a serialized structure into the account state and then uses that to drive the buffer copy in, or conversely, deserializing out of the account state.
Hello, sure, thank you for your help! Here is the code, it's a small modification of the hello world example: https://gist.github.com/Boiethios/8467a5acf137516e732cba9efdaa9185
Hello, why some block rewards are negative in RPC? Say for block https://explorer.solana.com/block/92252989/rewards it is -1, not +1 as shown in explorer. For the other block 92350543 explorer does not show the reward, swhich is returned as negative number in RPC...
is there ready made solution for the red part ?

Hi there ,
I have few doubts in the wormhole in solana
1) How to add the Specific user token into la wormhole list
2)Is there a possibility to add the our own minted token in to the wormhole to create the bridge between ERC20 and our SPL token?
What is the code snippet where you are doing this? Can you put on Gist or paste here if not too large?
yes
Why is it done that way?
why though
Allocates a string for the error there, can't have a 'static lifetime
https://docs.rs/solana-sdk/1.7.10/src/solana_sdk/signer/keypair.rs.html#153
cant remember the last time i couldnt convert an error with anyhow
why is it not `Error + Send + Sync + 'static`
Because it calls `keypair_from_seed` and that can fail. It's boxed because Error is a trait and needs a compile time size
soooo why the `Box<dyn Error>`
https://docs.rs/solana-sdk/1.7.10/solana_sdk/signer/keypair/fn.keypair_from_seed_phrase_and_passphrase.html
I think those are LP Pools account but they are different from LP token. How do I configure LP pool and LP token and associate them with Token Swap Program PDA?
What are those pubkeys owned by SPL token swap program?
Where I can configure the AmH pool address ?
What is the relationship between LP pool program ID and LP token program ID?
Hello, how can I use a collection in an account (Rust)? I get a `BorshIoError("failed to write whole buffer")` each time I try to serialize it (tried with a hash set and a vector).
just remember this is a quick temp fix, not a real solution going forward. the others fixes/solutions should be available
thanks a lot. I change the zeroize version in Cargo.lock and it works
I know only first 21 words out of 24 from mnemonic, I need to bruteforce right mnemonic and find proper key by depriving every mnemonic
you can export private key from sollet. Click the account to unfold it. there is a export button in the right bottom.
you need to wait for the keypair created and pass it into spl-token create-token
`spl-token create-token --help` will tell you how to pass the keypair
I tried it and I still did not get what I want. What I did wrong?
thank you very much. I will try that 🙂
actually, could this help? https://docs.solana.com/wallet-guide/paper-wallet#hierarchical-derivation, otherwise. not sure. might be possible to modify it for your needs.
tbh full situation is that one of our DEX traders lost their key and all they have is first 21 words, so I'm trying to bruteforce last 3 words and help them to recover funds.
I already implemented bruteforce tool, it works pretty fast and iterates over all keys in 4h, but I realized that I need to apply deprivation like sollet io doing it, but there are no such stuff in keygen tool, so I'm trying to find what will work here and how I actually should do it
Any solution for this issue? https://stackoverflow.com/questions/68821496/solana-anchor-how-to-withdraw-tokens-from-program-account-to-user-account
there is a solana-keygen --help, and solana-kegen recover --help, and some other methods in the CLI. some command references in this section: https://docs.solana.com/wallet-guide/paper-wallet

can you not recover this in sollet.io?
hello, I'm trying to recover my key from mnemonic via rust
So mnemonic is bip39, after I get seed, what should I do with it? Convert to bip32 or bip44? What lib can I use to deprive my key properly?
I used sollet.io to create my key and have 24 words mnemonic rn, but how can I get private key from it?
`solana-keygen grind --help` can calculate the key you want
and use it to create your mint
how to create a SPL  token with start with the letter I want?
yes i knew that thanks mvines
The program account itself can't receive SOL.  Instead you could create an account that's owned by the program to hold SOL
anybody knows this currently am unable to send fund to program but just wondering if there is any way
if this is anchor, there are workarounds and resolutions. if you search their discord and the relevant github https://github.com/project-serum/anchor/pull/539/files. take not of the path and cargo.toml that is being modified 'lang'. if your unable to get it working for whatever reason, as a temp workaround to build, you can modify the cargo lock toml directly to zeroize 1.3 until you can get it working properly (search the entire anchor dir for a 1.2 or 1.3 zeroize ref and copy it for the lock file if need be).
many times errors like this indicate a mismatch between the version of the modules/libs/binaries built and being targeted and the ones you have installed and trying to run with.  can you run other examples with npm and cargo? did you follow the instructions for installation and setup in the hello world readme?   you could also look at the logs, try running with --verbose, try reinstallation, try retargeting, try deleting and reinstalling npm install your modules?  sometimes multiple installs to different home path or user directories, vs where you are running from, or targeted directories, can cause issues like this.  older mac version with npm seem to have this issue more often because of version deps/linking when built. i didnt not have an issue running this example.
yeah I upgraded to the latest version. I set zeroize = 1.3 in dependencies in Cargo.toml but it still fails. I just get started solana program today
hey guys just a quick question. Is there any way to store SOL token or any other token in program Id ?
youre prob gunna wanna provide more detail on what the error is and the context
Or should this not be the reason because of solana update or whatever, aka program should always be back compatible and not required to redeploy ?
Is it possible that my program doesn’t really work because of changes on solana, or just due to temporary devnet updated? What I’m trying to say I tried to run some simulation on my program that I made last change 1 month ago and out of sudden it’s throwing errors.
I'm not familiar with the hello world example there
<@!150787664553967616> I am hoping to get one more help from your end
I feel this is related to version issue. 
basically, this happens `npm run build:program-rust`  from`example-helloworld` of solana and wanted to make sure how can I resolve it
Thank you! I added you so I can dm 🙂
Definitely put it in a gist or on Github and link me to it, here or DM is fine
are we allowed to share code in the channel or should I dm it? <@!150787664553967616>
i gotta stop collapsing categories. i forgot about <#763249718339567626>
oh it works, thank you <@!150787664553967616>
there are some great tutorials in the <#763249718339567626> running through these should help you better understand the structure
I would recommend running through some of the other examples it should help you get familiar with the structure
base SPL directory?
<@!749815379198476299>
this is what I did
Try doing this
I still see this when I am trying to cargo build in `cli` folder

Yes, you'll just need to run it with the path, e.g. `./targets/debug/spl-token-lending ...`
yeah I looked at some other references and I think I updated it. Do you mind if I share the code I modified for this?
and will spl-token-lending will work on terminal?
Obligation parsing using the library should work, but `useUserObligation` may not because it's still expecting an older data structure for it
No worries. I was able to update a lot for borrow input and stuff. I'm just really stuck on getting the obligation xD
I think you can also run `cargo build --bins` from the base SPL directory, and the lending CLI binary will land in `./targets/debug` IIRC
Try running `cargo build` from that directory I think
I forked that one
correct
Did you try to build it from https://github.com/solana-labs/solana-program-library/tree/master/token-lending/cli ?
can you give me quick instruction?
For now, you should be able to use it from the source
great, thanks
I'll see what I can do 🙂
so I can get lending-cli working
oh will you release it now?
I found out earlier today that I uh forgot to release it 😅
I think crate.io is not supporting spl-token-lending-cli
https://github.com/solana-labs/solana-program-library/issues/2219
https://github.com/solana-labs/oyster/pull/75 is the tracking PR for that effort, but I've been focused on other things recently (updating it is a pretty big undertaking)
cargo install spl-token-lending-cli failed
aww man. any pointers of where I should start? I updated all the stuff to the library you sent. Now im just trying to figure out what is next xD. Seems deposit works lol
Yeah, cross-collateral and oracles were added. However, there isn't a reference UI that works out of the box for this yet.
yeah I also saw this. I was really interested in using the newest version because it uses oracles xD.
If you check out https://github.com/solana-labs/oyster-lending (demo at https://solana-labs.github.io/oyster-lending/) this should work. It's using an older version of the lending program than what you'll find in the Solana Program Library now
Its a very interesting program and I wanted to better understand it because I feel a lot of applications can use this as a base
Any chance I can get some help with this simple question folks? https://stackoverflow.com/questions/68841171/how-to-sign-token-transaction-in-serum-anchor
oh alright, I was messing around with https://github.com/solana-labs/oyster/blob/11d8ba6047d8b8218e905138b21f49de09be9657/packages/lending/src/hooks/useUserObligations.ts and was attempting to get the borrow to work. I'm not sure where I went wrong because It seems I am having an error getting the obligation for borrowObligationLiquidity in borrow input
The hooks and data structures in the older oyster implementation are not up to date with the program in this case
Yes, this is just a pure TypeScript library for creating instructions to interact with the lending program. There are no React hooks in it, UI, etc.
Maybe I'm blind but does this not include any of the hooks? Like for example useUserObligations()
oh thats sick ill check it out, thanks
Hey guys - just bumping this up. Is anyone able to assist with updating the token list?
Check out this library: https://github.com/solana-labs/solana-program-library/tree/master/token-lending/js

This is built to work with the current version of the lending program.
The token-list update request has been over 2 weeks, but no news.
When is it possible?
<@!150787664553967616> hey I saw you worked on oyster on github. I was wondering if you could help me with this. How do I get the obligation for borrowObligationLiquidity?  I modified useUserObligations because it seemed like it was for a different version
I think i heard some wallet might be closing empty token accounts for you, something like that. (phantom maybe?), allowing this death trap
That is absolutely f**ed up, 100% of CEX should drop usage of non ATA
will do thanks!
I can't help much more unfortunately, I recommend that you reach out to FTX support about the issue. I've also reached out to the FTX dev team to see if we can prevent this from happening to others. Thank you for raising this issue!
Tried to DM you as well <@466984915376799748> to not pollute this channel
so since the USDC account was created on Serum it is unlikely I have the keypair. I will happily split the USDC with you if you can help me recover it! I didn't realize that settling that Serum USDC account would do that
I looked at the history and it looks like it was created here when you started using serum a few months ago: https://explorer.solana.com/tx/5nN3gMUPnnTmzLDA7ga2QZhj8EXSzgDwwbw96H5q8VuC3svUr66Vp7euMgVLyGhzNvqUnMejmBZg7H9Puo2izuEo
don't thank me yet, unfortunately there's a good chance you won't be able to recover those funds. You need the keypair for your old USDC token address (9Mu...)
<@!466984915376799748> also thank you so much for the explanation!
wow fascinating - that must have been when I migrated the USDC accounts.  How do I sign the token transfer to retrieve the USDC?
https://github.com/solana-labs/example-helloworld/blob/master/README.md?plain=1#L74
A few hours ago, you closed your USDC token holding account here: https://explorer.solana.com/tx/34q5jvGXuXqBJB3kAaSYyUU9utGrQq6tf7Rz1g6Cd85Nqd5vcfcGomRFeZAEPEQppF3qqSubZ8Hc8SAHnDqeS8i5

When you then withdrew USDC from FTX to `9Mu8R32W3D5fKWXmoadjbm2LAnoszK7f7AexGiu39wis` there was no token account so a new associated token account was created for you. Unfortunately since `9Mu..` was no longer a USDC token it was assumed to be your primary wallet address and therefore must sign the token transfer to retrieve the USDC now stored in https://explorer.solana.com/address/Hmt5qhtaZxdjrrxQeogGdS2ood3RFHGPWMa1aLNAuX2p
So i cloned down the hello world repo from the Solana examples website. I tried following along with a tutorial and run the `npm  command` to build the rust program and get the following error. I'm also on a windows os, so i'm wondering if this bpf isn't supported on windows yet?
Hey Folks and My Buddies.

Hopefully I may get help here....

I am implementing a stability pool where user may deposit stable coin like LUSD and get Sol as reward and I want to know how this can be achieved through coding guidance...

Also if there is anyone who can guide me about how I can port Etherium Liquity Project to Solana that will be of tremendous help.

Thanks in advance and Thank you for reading my issue and hopefully you can help me as a Brother🛠️ 🛠️ 🤓 🤓
This is the new set of actions that were added to the withdrawal
a couple hours prior I did the exact same withdraw to the same solana wallet I own and had no issues

https://solscan.io/tx/DbkP7xqzJcRaJVNde2E7pk9tfL5am2Wi5TwnV3gi1h2iE3SGDUhqyxe8b8mWYyVwADE39hZqBcksmvyFGhfdToz
hey folks, quick question! I've been withdrawing USDC from FTX for quite some time to a Solana wallet but today for some reason when FTX conducted the transfer, the transfer created a new account, put some SOL in it, and transferred the USDC into it.

I'm stumped trying to sort out why/how this happened

https://solscan.io/account/9Mu8R32W3D5fKWXmoadjbm2LAnoszK7f7AexGiu39wis
You could try upgrading your Solana cli version as well
thank you. let me give it a try 👍
You need to pin zeroize to <1.4.0
Hi I got this while running `anchor build`. Current rustc and cargo version is 1.54. Any idea how should I proceed next
```
Running: cargo +bpf build --target bpfel-unknown-unknown --release
error: failed to download `zeroize v1.4.1`

Caused by:
  unable to get packages from source

Caused by:
  failed to parse manifest at `~/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.4.1/Cargo.toml`

Caused by:
  feature `resolver` is required

  consider adding `cargo-features = ["resolver"]` to the manifest
```
thanks i'll check it out. Have you heard anything about this one https://github.com/project-serum/multisig ?
many thanks really appreciate it


///////////////////////////////////////////////////////////////////////////////////////////////

Is the solana-py library recommended? or is the js alternative the better option?
serum api
<@!476291650361229314> are you sure your config for solana-cli is pointed at your test node? (do `solana config get`)
My testnet is also running yet i cant airdrop any sol into my wallet. How can I fix this?
sorry if this is a dumb question, but how do i get or where does the code gets from the USD price of a token on sollet.io or any other wallet?
Ok I think I get it. Account purged means purged. If you want to have the same address, you have to grind a pubkey which would take years.
Ok sorry mate!
Please don't summon people.  Just address the channel. There are plenty of knowledgeable folks here who can answer
or more general, how can I retrieve AccountInfo from a PubKey?
Hi <@!585868308419444749>, how can I access mint state info (decimal, supply...) from its mint PubKey on chain?
cool thx; worked on v1.51 -- (I did `rustup install 1.51.0` then `cargo +1.51.0 build --release`)
```
Program XXX consumed 200000 of 200000 compute units
Program XXX failed: Computational budget exceeded
```
is there a way to set a larger max-unit parameter for my transaction in rust code? Didn't see api for that.
Hi everyone. Is it possible to represent data structure like queue on Solana? I want to store string to a queue held by account data, but I cannot resolve it. I considered ring buffer is much like this and can realize data structure like queue, but does anyone have better solutions?
We don't support 1.54 yet.  You can use the cargo wrapper script (root of the monorepo) to ensure you're building with the latest supported toolchain
```active toolchain
----------------

stable-x86_64-unknown-linux-gnu (default)
rustc 1.54.0 (a178d0322 2021-07-26)```
What version of Rust are you using?
looks to just be a clippy issue, but wasn't sure if there was a quick thing I could do to ignore the error or make clippy happy
running into an issue on building v1.6.20 from source (`cargo build --release`):
```
error: an inner attribute is not permitted in this context
   --> ledger/src/sigverify_shreds.rs:249:13
    |
249 |             #![allow(clippy::cast_ptr_alignment)]
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.

error: an inner attribute is not permitted in this context
   --> ledger/src/sigverify_shreds.rs:388:13
    |
388 |             #![allow(clippy::cast_ptr_alignment)]
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: inner attributes, like `#![no_std]`, annotate the item enclosing them, and are usually found at the beginning of source files. Outer attributes, like `#[test]`, annotate the item following them.

error: aborting due to 2 previous errors

error: could not compile `solana-ledger`
```
Is the python solana library up to par with the solana js library?
Hi, I want to install spl-token-cli and I always got error
```
error: could not compile `libsecp256k1`

error: failed to compile `spl-token-cli v2.0.14`, intermediate artifacts can be found at `/tmp/cargo-installi1Rkjw`
```
I am using:
```
cargo 1.53.0 (4369396ce 2021-04-27)
Ubuntu 20.04.2 LTS
rustc 1.53.0 (53cb7b09b 2021-06-17)
```

Does anyone know what's the problem?
I've seen the KIN happening, and how much they had to pay to create all those user accounts and fund them to be rent-exempt. But that was on mainnet.
As wallet creation counts as first interaction, I assume it will be just purged in the next epoch and you have to set up a new one?
I've been scrolling through the search results for `rent`, and I understand from trent that you can recreate an account on the same spot if it got purged because of not being able to pay the rent and not being rent-exempt. So 0 SOL accounts. What would you need to recreate that account with the same address? Do you need anything from the previous creation, like the mnemonic or private key? Or it will be a completely new keypair, mnemonic with the same address? Real life example: There will be a competition on solana devnet, and a bunch of people created accounts on sollet to participate, but the competition will be in a few days, so not in this epoch, nor the next one. Especially if we take the ~1 hour epoch for devnet. Will they lose access to their wallet if they don't touch it for 5-7 days? Will they be able to recreate them with the same address and with the same mnemonic?
Does anyone know about this problem?
`Program log: panicked at 'destination and source slices have different lengths`
How to deal with computational budget problem?
```
Program XXX consumed 200000 of 200000 compute units
Program XXX failed: Computational budget exceeded
```
thanks ~seems  I make things too complicated~😆
No need for docker, just use https://docs.solana.com/developing/test-validator
Hey guys , I am trying to deploy a local solana chain by using docker for test, is there any guide to read ? thx.
Sorry I missed that that backport wasn't squashed during merge.  The fix for the bug in v1.7.9 is in now, building from the tip of the v1.7 branch might be easiest
If I deposited SOL into an account owned by my program and I have the secret key to my program, not the account, can I recover the SOL?
Hey trent, I've tried with your suggestions, and gotten past that step. Now I'm getting a bunch of these errors ```
error[E0658]: use of unstable library feature 'stdsimd'
  --> poh-bench/src/main.rs:87:12
   |
87 |         if is_x86_feature_detected!("avx2") && entry::api().is_some() {
   |            ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #27731 <https://github.com/rust-lang/rust/issues/27731> for more information

error: 
        is_x86_feature_detected can only be used on x86 and x86_64 targets.
        You can prevent it from being used in other architectures by
        guarding it behind a cfg(target_arch) as follows:

            #[cfg(any(target_arch = "x86", target_arch = "x86_64"))] {
                if is_x86_feature_detected(...) { ... }
            }
        
  --> poh-bench/src/main.rs:87:12
   |
87 |         if is_x86_feature_detected!("avx2") && entry::api().is_some() {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `is_x86_feature_detected` (in Nightly builds, run with -Z macro-backtrace for more info)
```
I can also see that cc is trying to compile for arm still
```
error: linking with `cc` failed: exit status: 1
  |
  = note: "cc" "-arch" "arm64"
```
I may be doing something wrong but I'm pretty sure i've followed the steps from the README. Appreciate all the help. Lmk if it's something I've messed up on.
It looks like https://github.com/solana-labs/solana/commit/1cc32c9cda2d4a9dbfd46426039277ac2c5dbf21#diff-2e9d962a08321605940b5a657135052fbcef87b5e360662bb527c96d9a615542 missed the v1.7.8 tag.  Try picking it on top
Hey! We're building a wallet (https://steakwallet.fi) and are looking to add Solana staking in our next release. 

I'm getting tripped up a little on working with Stake accounts. How can I totally deactivate and remove a Stake account so I can recreate it with a different delegation amount? Using `solana-web3.js` I can't withdraw _all_ the lamports, 1 is still necessary which makes me think it won't be cleaned up.
Yep I was trying to build from there
You're building from the v1.7.8 tag?
Hmm.  Master worked last week.  Let me spool up the mini
I have been building under Rosetta, I think that all the tools of solana 1.7.8 are fine except for solana-test-validator....
You should follow the README in the root of the monorepo. We only support building under Rosetta ATM
Sorry this'll be my last thing on this but I can confirm that building from source for version 1.7.1 still works, Why would that be the case and what can we do if we need more recent versions of the solana cli for our development?
Just to build on this, I've managed to get it to build but no matter what I can't get solana-test-validator to build. with the error now being 
```
error: linking with `cc` failed: exit status: 1
  |
  = note: "cc" "-arch" "arm64"
```
To me it looks like even though I'm on a rosetta terminal the build script is still trying t obuild for arm64 instead of intel...
thanks <@!585868308419444749> 🙂
What are the proper steps I should follow to get a working solana build on Mac M1, I can't seem to run solana-test-validator I'm getting the `illegal hardware instruction` error, I've tried to build from source but I'm running into `cargo:warning=clang: error: the clang compiler does not support '-march=native'
  exit code: 1`, but I've seen other people do it, if anyone can help it would be much appreciated!
basically it's missing a bunch of account updates and sometimes also giving unexpected results (e.g. an account that hasn't been touched in a while)
been having issues with the `programSubscribe` ws endpoint. is this an issue with the public devnet nodes or would we have the same issues if we ran our own?
E.g. program A inits a PDA for program B
with regards to PDAs, does the program to whom the address is being assigned need to sign the transaction? Is it possible to init a PDA for program other than the program being called
Is it possible to export my sollet wallet private keys to use it with JS API? When I try to create an account with JS with KeyPair object, I need Uint8Array's. How can I overcome this?

Also is it possible to send transactions to my sollet wallet which is an chrome extension insteaed of signing it by myself on JS?
I am looking at https://github.com/solana-labs/oyster/blob/8bc6ad8467fe898cfb5d79a01716057209e166c3/packages/governance/src/models/serialisation.ts
Which is so far the most complete use of borsch i have seen so far, it seems like `VoteWeight` is the only example of usage of rust enum, but still the class does not make it easy to differentiate which enum is actually used, is there a better way?
```
export class VoteWeight {
  yes: BN;
  no: BN;

  constructor(args: { yes: BN; no: BN }) {
    this.yes = args.yes;
    this.no = args.no;
  }
}
+
  [
    VoteWeight,
    {
      kind: 'enum',
      values: [
        ['yes', 'u64'],
        ['no', 'u64'],
      ],
    },
  ],
```
I am not sure, but i think in most cases you do not need to use third-party on-chain programs. Most of these created for certain projects. Native programs provide you basis with which you can create your own DApps or DeFi apps (with JS application in Front-end and on-chain programs in Back-end). Anyway, if you want to use some third-party on-chain programs, you have to know those PROGRAM ID and Instructions (a.k.a API)
Hi, hello-world example program deploys on localhost but gives "Custom program error: 0x1" for the devnet. Trying to deploy the same .so file. What could be the reason?
Hi everyone! I am looking for a mentorship in Solana. Is this the best channel on the server to ask? I really appreciate an answer. Thanks! 😀
thanks
I fixed the issue by reinstall CLI
Yes. Please downgrade to 1.7.8 for now. https://github.com/solana-labs/solana/pull/19007
hey, is anyone facing issues with running solana-test-validator once upgrading to 1.7.9? I seem to be running into this error
```
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: "No such file or directory" }', validator/src/bin/solana-test-validator.rs:294:71
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
```
to survive on windows you need to use WSL
I have some path issue with cargo. Got no such sub command "build-bpf" error. I tried Cargo -- help but I can not find such sub command either, my cargo has some issue?
I'll give that a try, thank you!!
Ahhhhhh
I swear to god I was about to ask the same "how to x-fer ownership of SOL account" question.
To answer your question, though, you need to pass the `spl_token` program ID as an account in the call to your program so it can be included in the `invoke` method's  account list.
but, right now, what I get is 

```
thread 'solana-bank-forks-client' panicked at 'Program id TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA wasn't found in account_infos'
```
qq re `solana_program_test` crate, I'm trying to transfer ownership of a SOL account, but can't seem to figure out the right program_id. The code looks like:

```
        let owner_change_ix = spl_token::instruction::set_authority(
            &spl_token::id(),
            deposit_account.key,
            Some(&pda),
            spl_token::instruction::AuthorityType::AccountOwner,
            payer_info.key,
            &[&payer_info.key],
        )?;
```

basically trying to transfer ownership from the payer (who owns the deposit_account) to the program so that the program can transfer SOL out of that deposit account.
Also are there any apprenticeships for learning to develop on solana?
Hi all, anyone using Unity with Solana or making a nft game with Solana please reach out?
<@411154935917445145> Thank you! So, other than these native programs, are there some commonly used third-party on-chain Solana programs as well? If so, how should I go about finding more information? I have more JS experience than Rust, but would like to experiment more with the Solana ecosystem.  Hope this makes sense. If my understanding is completely off, please let me know. Thanks again!👍
oh i just had to allow insecure content cool
but if i use `HTTPS=true yarn start` then the websocket library refuses to connect to the test validator since it wants to use wss
basically if i use `yarn start`  then chrome refuses to expose the crypto libraries since im not on localhost so nothing works
i feel like i used to have this working but cant get it anymore
ughhh does anyone have a working dapp-scaffold configuration for serving from a vm?
Please address your questions to the channel.  There are plenty of knowledgeable folks who can answer this stuff
Sorry to bother you, I have another question. Please keep in mind I'm a super newb to Solana, What exactly do you mean by "stake program"?
Is that for example the validator address? if so, could I just get a random one from https://solanabeach.io/validators in order to test the RPC ( https://api.mainnet-beta.solana.com )?
hi


///////////////////////////////////////////////////////////////////////////////////////////////

does anyone have a simple blog/video in which each component of just a rust smart contract is completely explained(Apart from the escrow one by paul dev)
For NFTs on Solana, most people are using the standard used by Metaplex. They have plenty of docs on how to store metadata and how their tokens are structured https://github.com/metaplex-foundation/metaplex
Solana Programs don't get any real notification, they just get the transfer. SPL tokens are transferred to addresses, which each have different authorities on top of them. Some addresses can have the program given authority over the account, allowed the program to interact with the funds in it. The DApp on top of the program will check the `accountInfo` of each account, and get the updates.
I m new here and also new to Solana. I was read a docs from Solana team (https://spl.solana.com/token) about NFTs, so I understand that on Solana, each nft equal to 1 token with unique address. So there are no smart contract involve in the mint nft part? Right?
so how to link the meta data to the nft? Is there any standard on solana?
I see phanton wallet have nft view, how to make a nft and view it on Phantom?
How do Solana programs get notified that an SPL token was transferred to them? I was looking at the token program, and it doesn't look like there's any sort of cross-program invocation when tokens are transferred. Is this possible to do, and if so, does anyone know of any open-source examples or documentation (of an Anchor program preferably)?
Yeah they are in rust in processor.rs 
But I want to write js test 
How do I do that 
What is best way ? In your opinion
there are already tests for that curve
And how do I write test for it ?
Like there is already test for token swap.
Ohh, okay
Not too sure, maybe because it hasn't been audited yet
But why is that so ?
Why offset curve is not a valid curve type ?
yes, that's right
Right ?
So the program address will be different than what are provided in solana docs right ?
I have to use the address where I depolyed it
correct
But after doing that I have to redeploy the program didn't I?  <@466984915376799748>
Yeah <@466984915376799748>  i am the guy who asked you on telegram, 🙌
it's ok, I asked him to ping me here. <@!821633464141873163> you'll want to adjust the valid curve types here to include the offset curve: https://github.com/solana-labs/solana-program-library/blob/6703bda1c25c83ef3c9640cef3d7bddbfbe0d133/token-swap/program/src/constraints.rs#L77
You'll generally get better support by _not_ @'ing random green names
<@466984915376799748>  can you help ?
That's the account that was _charged_ rent, rather than the account that received it
any answer for this?
<#742230900380795020>
It’s solana-agnostic. Google should help.
I am kinda new to solana development, so could you send any articles regarding how to do it
Literally any binary encoding
i just need to send like 5-6 variables of different data types into the blockchain and also retrieve them back , what would be a better way that JSON  ?
You'll be paying rent on useless overhead, but sure if that's acceptable, go for it
i just want to send a small amount of organized data, thus JSON works for me
thanks
Sounds like you specified some required signers as pubkeys instead of something that can sign
The `getTransaction` RPC method can return the transaction body
You probably don't want to do this.  JSON is not a space-efficient encoding
https://docs.solana.com/developing/clients/jsonrpc-api#gettransaction
...
Does anyone know what `presigner error` means in the context of a multisig tx? I was able to test sending USDC on mainnet with all signers + nonce authority on my ledger, but when I try to do it with my team we're unable to get it to work. I'm certain that everyone is on `spl-token-cli 2.0.14` installed from the v1.7.10 release, and that we're all using the same nonce.
Arweave?
hey is there an api which can retrieve the data sent in a transaction, I just want the data and not the blockchain explorer.
I don't know how to create an arbitrary transaction so I haven't figured out how to use that one yet.
<@!831450660146642974>  can you help?
hey,  <@!539801435571748868>   could you please help  me understanding about the  offset curve implementation in the existing token-swap program,  why it is not a valid curve type even though tests are implemented for it 
or if any other way to implement a offset curve wiithout chaning the existing smartcontract  that  you can suggest ? please help 
if anyone is aware about my issue please please reply !
A json object when serialized is just a string
Hey is there a project already made where you can send a JSON object into the blockchain, I am able to store strings in the blockchain, but now I need to send a JSON object
is that wrong?
I thought anchor was just a framework for development
kk
anchor doesn't have much integration with metaplex at the moment
Also is Anchor the right place to start?
this is a discuss in serum channel.
I can't access to the link
I'd like to develop a fairly simple NFT, but with some additional logic decorating the mint - I think I understand the basics of how metaplex stores and I think I understand the token account, etc but local dev interacting seems tricky to get started
I'm an experienced dev, but new to Solana. any suggestions on where to get started interacting with the metaplex programs?
I think it will help you https://docs.solana.com/developing/programming-model/accounts
To be short, you can read all account's data you passing. Only the accounts belong to the program can be modified by the program.
// The account must be owned by the program in order to modify its data
    if account.owner != program_id {
        msg!("Greeted account does not have the correct program id");
        return Err(ProgramError::IncorrectProgramId);
    }

What does this internally mean?
What if I want to interact smart contract from different accounts and a central counter. ?
Got it, Thanks a lot🙂
unless your frontend has a abs function to deal with it.
or you get a huge number in your program
So if someone passes -500 from frontend, my program will parses it as 500, correct?
if you are using solana/web3js I think you can just treat it as an account.
a uint always parses data as a uint
I think it relate to https://discord.com/channels/739225212658122886/739236663926063145/868253351094128680
Just to be sure, a keypair is what is called an account in other blockchains? aka a user?
Hello, any update on this ?
<@!455114989397868556> <@!639493393512398869> <@!439209823201132558>  Hey Solana team ! I'm part of hal.xyz core team, and we applied for a grant to integrate solana to our recipe chains, but got no answer since more than 1 month now. 

Can you update us with this ?
While interacting with my deployed program using web3js I'm passing withdrawnAmount (has type number in typescript ) as data and I'm unpacking it to u64 in my program. 

data: Buffer.from(
        Uint8Array.of(
          1,
          ...new BN(withdrawnAmount).toArray("le", 8));

What will happen if someone fill negative withdrawnAmount in frontend? Will I receive a abs(withdrawnAmount) in my program or some other number?
`wss://api.devnet.solana.com`
Alright hopefully I can figure out something. I just feel like im guessing and checking lol
what would be the devnet URL for the websockets ...in documentation they only have provided localhost urls
I don't have any example code for that unfortunately. 😢
I think you can take a look at  https://docs.solana.com/developing/clients/jsonrpc-api#accountsubscribe
<@!788215642070581289> one last thing, is there any example of websockets of solana RPC calls ... I want to monitor the deposit transactions of my address. It would be great if you can help me to get any example on it for javascript or typescript
sure https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getTransaction
if you guess there is something wrong in you typescript, I think you can check the serialize data struct first. This part annoyed me too.
*of
<@!788215642070581289> is there any method in web3 api fo solana to fetch a transactions details from signature
Its working now. Thanks
no
is devnet down?
lol
I just wish I could see what was the "InvalidArgument"
Rust  test seems to work, but I guess I messed something up in my typescript code
for me. I  write rust test and this https://github.com/solana-labs/example-helloworld/blob/master/src/program-rust/tests/lib.rs#L14 to test my program. This way make me find errors quickly.
I'm getting "InvalidArgument"
seems like I cant really printout errors from the program since the instruction just fails
I'll check it out. rn its kinda hard bc im trying to build the web front portion and when I send instructions its hard to see stuff
https://docs.solana.com/developing/on-chain-programs/debugging
Does anyone have any good debugging tips? I'm interacting with my program and I'm getting "invalid program argument". Is the best way to output the error to add checks in the program using !msg?
Thanks, yeah that's what I've been using haha :)
Yeah just now figured it out. Thank you 😁
Does anyone know what's about the problem?
Hi, i always got error while depoly program `Error: Deploying program failed: Error processing Instruction 0: invalid account data for instruction`
We are in great need of solana transaction V2 account mapping feature, can I have some expected time for that to come into devnet/testnet? I noticed it's already under development.
do you mean calling contract method or deploy contract?
if you want to call contract method, you will put arguments into instruction's data
How can I send arguments to solana smart contract ?
I need help to give me step-by-step guide to set a new pool account and associate that with LP token and token swap program.
Thank you. Thanks for the solana project template that you made too 😉
beta (currently at 1.7.10) works well for development
Should I use stable, beta or edge for the contract development in localnet?
Hi team, I'm from bybit and met some troubles when integrating the token onto our platform. May I know the correct contact window?
I suppose if you cannot find another suitable way, you could poll using getSignaturesForAddress as an alternative.
Thanks I had a look at this before, but it seems like you have to know the tx sig ahead of time, whereas I'm more after something that listens to all transactions regarding a specific program. Thanks anyway
for some subscription information, and there are others. for program and account, etc. https://docs.solana.com/developing/clients/jsonrpc-api#signaturesubscribe
Is there a nice way to subscribe to all transactions or instructions that interact with a specific program?
Am I understanding correct.. that for NFTs, Phantom (and maybe others) are expecting you to use the Token Metadata Program from Metaplex in order to get 720-ish metadata out?
memory, access, allocations, vm, could be, could be other things? https://docs.solana.com/developing/on-chain-programs/debugging . depends on the error
of course, i should have thought about the fact that explorer.solana is open source 🤦‍♂️
awesome, let me take a look at these (luckily, i had all of them up -- minus the github)

i got the instructions from the transaction and printed them. but i got stuck working backwards on how to derive data. i assume the `programIndexId` relates to the `accountKeys`  under `transaction.message`
/ stack overflow issue?
is access violation in unkown section a memory issue?
to just see, you should be able to see what is being transferred using the explorers/scanners:  https://solanabeach.io/, https://explorer.solana.com/, https://solscan.io/
it may depend more what your referring to, as in fees, actual token transfer instructions, etc. basic literature on instructions: https://docs.solana.com/developing/programming-model/transactions#instructions, tutorial that explains some instructions: https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/, there are plenty of instructions in the solana github to reference, with examples, and more in <#763249718339567626>
<@!264513675770068992> for NFTs, the best examples are in the metaplex source code. https://github.com/metaplex-foundation/metaplex
is there a good resource/guide anyone could link in regards to reading instructions? i want to figure out how much sol was transferred in a given transaction.
ahhh, not really a dev in that capacity (i.e. don't do that kind of dev work), so, unclear how I would, may play around with trying to see if I can recover my funds, but having a web UI like Etherscan does would be 100000x more user friendly, imo
you can use the web3 lib to call contract functions, among other methods. https://docs.solana.com/developing/clients/javascript-api.
public tracking, https://solanabeach.io/, https://explorer.solana.com/, https://solscan.io/
Not necessarily a dev question, but figured no one would know better. Is there a way to directly call on a Solana contract from some web explorer UI like there is on Etherscan? A project I was in just rugged and trying to see if I can at least salvage my LPs from their contract, but their website down, so I'd need a way to directly interact with the contract
Thanks for the quick answer, not the one I wanted tho 😦
the error was in the ui, not the contract sorry
There was an error in a contract where funds were sent to the wrong ATA
(But the answer is no, the ATA program won’t let you do that)
Why would you want to do that?  The mint address is part of the ATA address derivation
HI, could it be possible to "delete" an associated token account and use the same address to create another associated token account but with a different token mint?
What kind of data? You can use the solana json RPC to get a lot
Yea I have that all set up with a token, I just dont know how to link the key to an image
basic details are here: https://spl.solana.com/token
should I just follow the etherium standard?
Are there more details on nfts? I do not see how to embed graphics or point to graphics in the documentation
Everyone, please don’t mind if you have asked, is there a good github or template you can refer to to create a website that interacts with data on the solana chain
Hey do you guys have any debugging tips when using using interacting with instructions? For example when I get the error InvalidArgument there isnt much I can see by looking on the explore. Is my best bet to add printouts to the actual program using !msg?
do you have any resource on how to sign the transaction ?
That's clearly a bad thing.  The account needs to sign the calling transaction
invoke(
            &system_instruction::create_account(
                &source_account_info.key, //from
                &dest_account_info.key, //to
                amount, // lamports
                start_time, // space
                &program_id, // owner
            ) ,&[source_account_info.clone(), dest_account_info.clone(), lock_account_info.clone()],
        )?;
yes
Sounds like you're trying to CPI an instruction that requires an account to sign from an instruction where that account has not signed
system_instruction::create_account
hey guys any one know about this error
Error: Transaction {{my_transaction_hash}} failed ({"err":{"InstructionError":[0,"PrivilegeEscalation"]}})


///////////////////////////////////////////////////////////////////////////////////////////////

thanks!!!
Thanks
<@!707604162673639504>Awesome! Will have to dive into this
you will also find a section on NFTs there - they work a little different to ethereum
here are the docs - https://spl.solana.com/token
for erc20 look at token-program
the closest thing is the "solana program library" (also called "SPL") - found here - https://github.com/solana-labs/solana-program-library/
thanks a ton. makes total sense
Friends I am coming from an eth developer background. Is there anything close to openzeppelin specs for NFTs/SPL tokens in rust for solana?
wrapping might be a bit of a pain on the front end but the serum `swap` repo might have some examples on how to do it
and you don't have to think about empty accounts and lamports and shit
it's just easier to move around on chain because you can use the SPL token program
makes a ton of sense.
regarding wrapped sol - any particular reason for using that over normal sol?
How can we debug a solana rust programs on vscode... tried debugging but after hitting a breakpoint and doing stepover it takes me to syscalls and never returns to next statement...can anyone help ?
Resolved with https://www.npmjs.com/package/bs58

```ts
const bytes = bs58.decode(process.env.PRIVATE_KEY)
const account = Keypair.fromSecretKey(bytes)
```
in anchor we store account state using PDAs. Only the program can change data on the PDA. Plus you have the added benefit of using seeds. All these things help to ensure you actually have the right state (and not a maliciously inserted state)
you should use wrapped sol imo
If I wanted to create an nft with the jsonrpc... would that just be a transaction I send? Are there docs for such a thing other than this? https://docs.solana.com/developing/clients/jsonrpc-api#sendtransaction
solana-keygen grind
https://smith-mcf.medium.com/solana-vanity-address-using-gpus-5a68ad94d1d4
hey sol team, i noticed Sollamas has their addresses start with oops and tuco. how could i generate an address like that?
I tried this but gives `bad secret key size` error

```ts
  const buffer = Buffer.from('ABCDGGGG')
  const account = web3.Keypair.fromSecretKey(buffer)
```
```
    if (idlField.type.option) {
      // @ts-ignore
      return data === null
        ? "null"
        : this.formatIdlData(
            // @ts-ignore
            { name: "", type: idlField.type.option },
            data
          );
    }
```
thanks I was trying to avoid borsh though because I can't use borsh to deserialize on the program side
https://github.com/project-serum/anchor/blob/4e7790eacfb82d8f71e68a743d352c19c25ad0a2/ts/src/coder/instruction.ts#L224
https://solana-labs.github.io/solana-web3.js/classes/Keypair.html#fromSecretKey
How to generate a Keypair object using a string private key?

```ts
const key = new Uint8Array([10, 20, 30, ...])
const account = web3.Keypair.fromSecretKey(key) // this works

const stringKey = Buffer.from('ABCD...secretkey')
const accountFromString = web3.Keypair(stringKey) // fails
```
Anybody have an example of  Option<T> layout in javascript for sending instructions?
interesting, ok I guess there's more art to account selection than I thought haha
both work, depending on what the program's goals are.  typically accounts are broken up by user, so I'd default to keeping  the SOL and state associated with each user separate.  ie, an account per user.  But that approach doesn't work for all programs
a related question then: let's say I want to receive and store SOL in my program. Should I receive that into the same account that stores the state of my program, or create a separate one?
I see
<@!707604162673639504> - really it depends.  PDA is useful if you want the program to be a signer for the account during a CPI, or if  finer control over the account address is desired
does anyone have an example of a CPI call involving normal SOL transfer, ie not token transfer?
hm, are you sure? I've just looked through a few SPL programs and so far I've only seen normal accounts used for storing state. It seems PDAs are used to control token accounts owned by the protocol. Am I wrong?
PDA
https://blog.neodyme.io/posts/solana_common_pitfalls
if I want to have an account that holds state for a program - should that account be a PDA or just a normal account? What's the recommended approach?
Hey, I can see the **program's lamports** via '**accountInfo**'. But can't I sent balance with '**SystemProgram.transfer()**' to Program?
What I am trying to do is achieve my own https://solana.com/news/inside-solana-s-internal-scalability-test
I would expect near 100% of transactions to make it to the ledger
At first I thought I was doing something wrong, but given that both lead to similar results, I might not
Does anyone know why the backend for break or the CLI for program update, both using the tpu client, seem to drop most transactions when strained?
i plan on updating the ido-pool code that mango used for their ido to use a PDA mint soon
simplifies testing your front end as well
but i would personally recommend PDA mint all the way
if you're initializing a mint in a program it's more likely to be a temporary mint anyway and won't necessarily need metadata
What is the best practice on initializing accounts vs passing in fully initialized accounts and verifying them? For example, if your program expects to control a mint. It could either accept an initialized mint that has the authority set to your program. Or it could create and initialize that mint as a Pda. 

The advantage of initializing is that you can guarentee there's nothing nefarious about that mint. Where passing you're effectively running a blacklist on the fields. With something like account delegates, this can be dangerous if you miss one. 

The advantage of passing is that you can decorate the mint before it arrives to the program. So you could, for example, create a token Metadata. If you had initialized the mint, any decoration calls would have to go through a CPI
prfekt! I assumed that bruteforcing it wouldn't be feasible. 😄 Or it'd be super super expensive.
discord search keygen-grind
Alright! That makes more sense. Thanks for pointing out <@!248066053161222144> 
(it wasn't well explained during the public sale imo)
that 90% is the DAO account, controlled by the other 10%
or anything about mango
lol, you should read the docs
or SRM or Saber https://explorer.solana.com/address/Saber2gLauYim4Mvftnrasomsv6NvAuncvMEZwcLpD1
Just like Mango did **Mango**CzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac
Extremely curious to know if there's a way to mint a token with a specific leading characters in its address (e.g.  ASDFxxxxxxxxxx...)
without starting a loop and using a bunch of SOL?
But 90% of the Mango supply is controlled by 1 wallet, so not much of a DAO there. (sorry for the blast from the 6 days ago, but I had to point out)
I again tried and its done. Thanx <@456226577798135808>
What version are you on?
I have also updated solana CLI tools with all versions.
update your solana cli tools
when i run solana test validator it doesnt run and says image not found, anyone had the same issue?
Tried all types of kill commands. It showing the same  error.
program address can't be a stake account. it has already belong to BPF loader.
you need to use a program derived address to init as a stake account.
more about PDA https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses
Right, thank you. Another question, as only the address of the stake account is relevant in this case, can a program address be a stake account?
Perfect! Thank you
only the owner you assigned to the stake account can auth your stake account.
https://docs.solana.com/staking/stake-accounts
I just want to be sure that I understand it correctly, or if there are things that the owner of the staking account can do that could deny the withdrawal and staking authority somehow.
do you want to get token account's mint by token account?
if yes, you can use `getAccountInfo` to get your token account's data and parse its first 32 byte. this is mint pubkey.
Anyone able to help?
Not really, I want to create a smart contract system that doesn't rely on users having to trust my off-chain javascript server.
For now you can solve it by 2 different ways
1. Use mayben's subscribe method or parse block by yourself on your server, when event match, you send a tx to do what you want to do.
2. Wrap transfer function and what you want to do into your program instruction, if someone want to trigger it, he must call your program’s instruction.
does this not suit your needs? https://docs.solana.com/developing/clients/jsonrpc-api#programsubscribe
you can try the following cli conventions for various methods when using different wallet types . https://docs.solana.com/cli/conventions.
i amfacing this error passiing offset curve type
it fails at Depositing all token type instruction
can you help ? <@!539801435571748868>    <@!466984915376799748>
?
I am trying to use the command line to create an spl token , how do I set the cli config to use a paper wallet as the keypair
Is there no way to launch a program function whenever its underlying account receives SOL? ie transaction event / listener.

Must it always be a programatic TransactionInstruction ? This seems severely limiting.

I thought this was a basic tenet of smart contract fulfilment is that you can trigger events based on when funds are given across?
tracing the code now,  this starts to make sense - thank you !
the accounts being passed in should contain the mint -> token source:  let expected_mint_info = if let Some(expected_decimals) = expected_decimals { .. } 
also you can reference https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/instruction.rs  for comments on the instructions
FYI, it handles mint mismatch situation in https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/processor.rs#L231
The mints are specified in the src/dst account data
I am looking at the spl-token code here https://github.com/solana-labs/solana-program-library/tree/master/token/program/src, and could not find where multiple tokens are managed. for example, the transfer() method does not indicate if I am transferring a SRM or a RAY token ? it only states from_account, to_account and an amount. hence my confusion. code reference below

pub fn process_transfer(
        program_id: &Pubkey,
        accounts: &[AccountInfo],
        amount: u64,
        expected_decimals: Option<u8>,
    ) -> ProgramResult {
all token use the same token program. unlike ethereum, token in solana is just an account, called `mint`
it depends on how you call final. if you call it directly you get full compute units, you use invoke by semi-final, you get remain of previous units.
want to confirm my understanding of the spl-token program. is a global/single single spl-token program  used for all token types (SRM, RAY, ...) or there are many copies (instances) of the spl-token program and each is used for each token type ?

if the latter is true, does it mean the following command indeed deploy a new program (identical code as the spl-token program) to the network ?

$ spl-token create-token
Creating token AQoKYV7tYpTrFZN6P5oUufbQKAUr9mNYGe1TTJC9wajM
Basically I'm trying to divide and conquer as a way of getting around compute requirements.

I want to have a structure like semi-finals and finals of a sporting event.

Each semi-final uses eg 180,000 compute units.

The 2 results from the semi-final get added to the "final" for final computation of the result. Can the "final" program have its own compute allowance?

I realise I would need to deploy the final first so that the semi-finals know where to post to.
you mean you want to separate your logic into different programs ? technically you can do it but there is a problem that if you want to store result into the same account.
To me, if you separate your logic clearly, you can just write them into the same program and distribute them as different instruction.
for compute units, I have solved it by storing some complex result to prevent recalculate it. use space to save compute unit.  I don't know how you reach it maybe you can describe more detail about it.
https://docs.solana.com/developing/clients/jsonrpc-api#getidentity
How can you get the public key associated with a cluster url?
Not a configuration problem, actually -- at least not the one I just suspected a moment ago.

What is unusual to me is also that on the machine where it works, I get the `confirmed` subscription's reply almost immediately. On the machine that is not working, I get the `confirmed` message about 15 seconds late, with a slot count only 1-3 higher than the slot in which the tx resides.
Hi, is there a way chain programs without having to use the same 200,000 compute units across all of them?

From what I understand, "invoking" means it inherits the parents allowance. Is it possible to deploy the programs separately so that they have independent compute allowances?
are they using the config to send ?  interesting if all things are truly equal why there is a different response. I wonder if a 3rd instance were subscribed, or creating to subscriptions on both machines, what would happen. unless the finalized only returning 1 response..
https://docs.solana.com/apps/jsonrpc-api#signaturesubscribe

This endpoint. Both machines are pointing to devnet.
Sending this:
```
  msg = {
    "jsonrpc": "2.0",
    "id": <some-int-here>,
    "method": "signatureSubscribe",
    "params": [<some-nice-long-txid>, {'commitment': 'finalized'}]
  }
```

I get a response back with the subscription ID. The `confirmed` WS subscription message looks exactly the same, but with `commitment` equal to `confirmed` instead, which is sent first, and which both machines receive a reply from.

Same code has worked before in the past, no configuration changes I can think of. And works fine on my local machine.
which subscription using what method is this? could it have anything to do with the commitment level that is set on the machine based on the code?
what documentation is this?
Fairly sure I'm under rate limit, but having one machine get websocket responses no problem on the `transactionSignature` subscription, whereas another machine is only getting `confirmed` subscription responses, not `finalized`. Same code running on both machines.

Noticing a significant latency difference as well -- the one performing well returns its `confirmed` subscription message right away. Could this be just that one machine is connecting to a different JSON-RPC node and thus having differing performance than another struggling node?
generally it is a good way to go yes 🙂 is there a further question in there?
The associated token account for a given wallet address is simply a
program-derived account consisting of the wallet address itself and the token mint https://spl.solana.com/associated-token-account#finding-the-associated-token-account-address. Just being used in different context for different things, but yes. They are program derived accounts derived in different ways.
If I want to make calls over the internet from a website or an app - would web3 javascript api be the best way to go?
Hi, the documentation about the stake accounts says that a stake account may not have a private key (although one could be created and, and potentially saved, when creating the stake account using the command-line tool). So this means that I could create a stake account for a user and assign his address as withdrawal and stake authorities, and he would be certain that even if I have the private key of his stake account, I would never be able to withdraw the funds that he deposits or change any permissions/delegations? Is that correct?
I guess it's the same. Wanted to make sure
if this is what you're asking about
I'm not sure about the terminology, honestly. Perhaps ask in Serum's #anchor channel
https://www.youtube.com/watch?v=i6Ycr5nhjH8&t=2381s
idk, give me more context, where did you find the term "associated account"
PDA and associated account
Right, so they are the same ?
aha, sorry. thought you mean associated token account in the first place
not associated account
Isn't that associated token account ?
while associated account is a SPL token account associated with the "main" account (i.e. wallet)
PDA is account created by program (hence Program Derived Account)
no
are PDA and associated account the same ?
hi, I am interested in doing a swap programmatically on one of the (amm) dex on solana, lets say raydium. is there any example codes for something like this? or how could I dig deeper into that?
Didn't seem to not be working in any  obvious way
Mmm.  Yeah I did most of my testing on master
oh, yeah 1.6 is pretty M1 hostile. 1.7 should be better, I think <@!585868308419444749> has an M1
Also happens to be that we all got upgraded to M1 macs and that looks friendlier on 1.7
I'm well convinced, switching over to beta channel
(stable is a fair choice too if my beta pitch wasn't convincing enough)
tl;dr - beta is slightly more risk for you, but it really helps us out to have more users finding any bugs faster
In general, yes. We aim for the next minor releases to always be backwards compatible with the previous: both source and runtime, and beta gives you newer goodies as well.  
Definitely a larger risk that there'll be a bug in beta though, but in practice this doesn't seem to be happening (as often! Others can correct me if they feel othewise), and we aim to be super responsive when a backwards compatibility issue is discovered
(my assumption was not, and so i went down the stable route)
Do you recommend `BETA_CHANNEL_LATEST_TAG` for building an env around mainnet program deploys?
This requires the monorepo git be sunk, but here's what we use internally:
```
$ ci/channel-info.sh 
EDGE_CHANNEL=master
BETA_CHANNEL=v1.7
BETA_CHANNEL_LATEST_TAG=v1.7.10
STABLE_CHANNEL=v1.6
STABLE_CHANNEL_LATEST_TAG=v1.6.21
CHANNEL=
CHANNEL_LATEST_TAG=
```
$BETA_CHANNEL_LATEST_TAG is generally what we recommend for dev.
Yeah, i'm building this into a Dockerfile so that's not an option
or `solana-install info` to see if an update is available
Once you have a cli installed, `solana-install update` is an easy way to get the latest patch release for the major.minor release you're on
Small nudge to get a `stable` tag somewhere to avoid janky grepping
Nice, yeah the installer cli also looks at the github releases to figure out the latest stable release
If anyone else wants the latest stable version here's a shell script hack: ``` curl -s https://github.com/solana-labs/solana/releases | grep releases\/tag | grep Mainnet | grep -o -E '[0-9]*\.[0-9]*\.[0-9]*' | head -1```
yeah, <@!539801435571748868>   but i didnt understand the meaning of curve parameters 
is that  a offset amount?
you're the one who wants to write js tests, so it's up to you! those code snippets can give you inspiration of how to write them
looking for developer grants for solana projects
<@!466984915376799748> can you help ?
Hey folks, i'm building a Dockerfile to leverage vscode  dev containers for my team and wanted to use the most recent `stable` source for the solana tool suite but couldn't find any easy ways to download the source without using a pinned version number (no stable tags on github) and https://release.solana.com/stable/install doesn't link to the source. Anything i'm missing? or should i just crawl the github releases page?
alright thank you!
You mean for _generative_ NFTs?  That's not really something we have experience with.  You might try the Metaplex Discord
algorithm which creates new customized nfts based upon the "main" nft
What do you mean by "algorithm"
yeah I think that would be great
Like that one specifically, as we're building improved token vesting solution. But curious if a reference to the Anchor-based project would be accepted in the docs instead of native Rust + Solana crates.
<@!466984915376799748> <@!585868308419444749> attending response
I have a question for rockstars trent, starry & co. 
If we build programs using **Anchor**, can those still find a way in the docs? Like this 3rd party (not solana-labs) program: https://spl.solana.com/token#token-vesting-contract
Fantastic ! thanks 😉
so i was curious and wanted to gain a little more knowledge in the solana NFT world and was wondering where or how I can find the code for the algorithm
okay makes sense
Others will learn from those messages
alright thank you!
no worries!
surely can but might take a few messages
why can't we discuss here?
you may have to use the `ASK` keyword to recover the old pubkey, there was a recent change which made the docs around this more clear: https://github.com/solana-labs/solana/pull/19330/files hope this helps
<@!466984915376799748> may i please text you in privat chat
can you provide more context? what cluster you're using, which public node, is the private node behind or ahead of the public node is block processing? which query are you using
The biggest difference I'm noticing is that the # of accounts i get back when hitting the public node is less, while the private node gives back more.
trent may i ask you something
Not without describing the difference
Is there a reason why callng getProgramAccounts (https://docs.solana.com/developing/clients/jsonrpc-api#getprogramaccounts) to a private node gives a different result compared to a public node?
Sorry, just seeing this whole conversation now.  You can definitely write tests in JS for the offset curve if you like! it's pretty well-tested on the rust side at this point, but you'd need to just create the token swap pool with the offset curve and provide the offset.  The parameters were recently added to the JS side [1]  and you can write similar tests to [2] to check that the logic is as expected.

[1] https://github.com/solana-labs/solana-program-library/blob/7c8e65292a6ebc90de54468c665e30bc590c513a/token-swap/js/src/index.ts#L371
[2] https://github.com/solana-labs/solana-program-library/blob/7c8e65292a6ebc90de54468c665e30bc590c513a/token-swap/js/cli/token-swap-test.ts#L89
Hi everyone, I have generated a paper wallet (solana-keygen new --no-outfile). Then, I used the public key derivation (solana-keygen pubkey prompt://) with the previously generated seed phrase to see if I would get the same public key and I don't ! Any ideas why this is not the case ?
So as not to get the Solana core gangs pants in a bunch, they are indicating that the above constraints are constantly looked at and may potentially change at some point but there is nothing to hang your hat on at the moment
So, regardless of the link you were given it's good to know the following (current) constraints:
You can not send a transaction greater than 1231 bytes. This implies you will need to "chunk" up larger content and have the logics in your program to manage that
You only have 10 MB per account to store data in, and it is not dynamically growable or shrinkable
Options like IPFS or FileCoin(?) are reasonable solutions as well as offchain storage but that is driven by your goals and design principles
what does vesting mean?
There's no way to debug this without seeing the command
mean
what do you mena?
you basically create the mint, mint, and send
read the spl-token docs.
hey how does minting work?
nvm, I went full retard, that was the oldest tx
What is the best way to retrieve the token mint for a given token? Using the JSON RPC API
tried with:
"before": <oldest_known_signature>
I basically want to have all signatures (txs) for that given address for the month of June

Yes, sorry
got it, do you mean getSignaturesForAddress?
and tried to get even older signatures
then I get the oldest signature within that 1000 range
because I need data from June, I meant I did the getSignatures with max limit 1000
if it's the oldest signature, why would there be earlier signatures?
If I use getSignatures with "before" param to oldest signature I have, I get empty array back []
Hi there, is there any way to fetch transaction signatures for a given address from past months? like June for example?
<@!466984915376799748> You right, it's better to show them to use the right way to do the job. Thanks for the answer
Ah I was checking anchor's wrapper 🤦‍♂️. Thanks!!
the spl-token program has a "close account" instruction for this purpose
yes you can but deploying is a little complex and it's better to just use the solana cli because you need to use the cli to build the program anyways
<@466984915376799748> but I still can do transaction in js
Is there any way to cleanup/close token accounts? I'm creating temporary token accounts as PDAs of my program. But because they are owned by spl-token, and there is no deallocate command in spl-token, I don't think it's possible to get rid of them?
there's no rpc api for deploys
ah yeah so deploys are done using normal transactions
usually users delegate some amount of tokens to the program that they're calling, then the program can transfer the tokens it needs and do some additional logic. So your transaction would have instruction 1 be a token delegate instruction and instruction 2 would call the program
but looking at the json-rpc call availble it's look like its no possible
tyvm
<@466984915376799748> I'm writing a tutorial where I try to do everything in js, the goal is to catch the focus of web2 dev then I'm trying to speak their language
It's not recommended to use the web3 sdk for that, any reason why you can't use the solana cli for that?
Hey, Is there a way to upload a program to devnet using only js-api ?
Try `r = requests.post(url = URL, json = PARAMS, headers = HEADERS)`
thanks, will check that out
Check here first: 
https://solana.com/ecosystem

You would probably just resolve it to an IPFS file.
Lol
Yes, it's Chainlink: https://solana.com/ecosystem/chainlink
is there a chainlink for solana?
hey
Can we upload and retrieve images on solana ??
hey hey! I am having trouble with my past me 😄 it seems like I fucked up big time and now need support. I was redirected to discord from the telegram group by mahib. So I created a paper wallet with the cli and wrote down everything the cli gave me back than. stored in different places... used passphras and (of course) seed phrase. then i transfered funds from binance to that wallet. now i want to withdraw funds and it (CLI) tells me that my seed and passphrase are for a different wallet than that to which I transferred from binance. Any ideas what I might be missing? And if I made a (super dumb and huge) mistake can you tell me if it is possible to retransfer my funds when I can prove that I am the owner of that binance account that transferred funds ? thanks a lot in advance!
How would we have done that? Everyone derived addresses using `solana-keygen pubkey usb://ledger/?key=0/0` or similar derivations. Here's the multisig in question: https://explorer.solana.com/address/4Ve7K99445RqBdbzknyaXxJif6cncVy1J7tPq57TQLqd

There ones that don't have balances I'm having the team double check to make sure that they can be added to Phantom/Sollet
hey can someone please contact me id like to ask something about nfts
get transactions for an address, account: https://docs.solana.com/developing/clients/jsonrpc-api#getsignaturesforaddress.
Please, it is very important for me!! Help me when you have a lot of time!
Hi everyone, I was a victim of the Luna Yield scam and I need you urgently. The scammers did not withdraw the funds from the SOL-USDC pool and therefore I would like to manually unstake the LP. Can you give me the code that I can use for this operation?
This is the deposit signature.
5hMstLipvHHahqVSvY7LFPkxtMfLeogzmRD1FqfJhWGwzwMwXkN8HJqf4La3My67vJzRwwebRbqYw7ueFVzDjvMP
How to get the latest transaction id done by an Account
Just trying to hit the RPC API and I'm not sure if I have it totally wrong

Anyone have any idea why this code would lead to this kind of error?


///////////////////////////////////////////////////////////////////////////////////////////////

is that because rust final binary is like 67k and it need to be spread over many accounts?
like, memo program is small, I'd expect it to fit in very small space
I've just did my first solana deploy on localhost, on memo program from github examples. Why it caused like >300 transactions? When I look at them in explorer it seems to be a lot of BPF loader writes. What is going on here?
and it stakes to any validator!!!
I tried this and it does not work. I have to find the right API RPC call to get the Mnet validator's name and other sales info so I can put it in my staking wallet app please? Seriously can a DEV help me as i am trying to release this wallet this week in Beta
with an account address, what is the best rpc method(s) to work backwards and get all transactions associated with it?
Very helpful write up. Thanks. I guess you're saying no to uppercase text 😄
I am trying to create a token using web3.js and spl-token library. I using phantom wallet to sign the transaction, but i am getting "signature verification failed error"

let mintAccount = Keypair.generate();
let createAccInst = SystemProgram.createAccount({
        fromPubkey: publicKey,
        newAccountPubkey: mintAccount.publicKey,
        lamports: minBalance,
        space: MintLayout.span,
        programId: TOKEN_PROGRAM_ID,
      });

let createMintInst = Token.createInitMintInstruction(
        TOKEN_PROGRAM_ID,
        mintAccount.publicKey,
        5,
        publicKey,
        null
      );

// transaction value contains the above instructions
let signed = await provider.signTransaction(transaction);
let signature = await connection.sendRawTransaction(signed.serialize()); //this is where error is thrown.

Can someone help me on this? or share some docs/blog if possible.
Thanks

edit:
I logged the createAccount instruction and found 2 addresses contains  "isSigner "=true. Can there be 2 signers?
Can someone really help me as I need to list the Info accounts for a stake node using maybe getProgramAccounts but its not giving me any data back. Trent or somebody know the way to do this with mainnet validators info?
Sure, no worries!
Hope that others can answer my question now 🤓
thanks
oh god missed it
https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getTokenAccountsByOwner
i'm going over the documentation but i cant find how to get all accounts owned by a certain public key. Is there a way to do it or i'm wasting my time ? x)
<@585868308419444749> would you know this?
Legacy docs from before the account data really mattered 🙃
ohh i see, i miss interpreted it then. Thanks 🙂
This is just to discriminate it from the less informative `getBalance`
I think fetch all refers to all information, not all tokens?
From the js sdk :
```
    /**
     * Fetch all the account info for the specified public key
     */
    getAccountInfo(
      publicKey: PublicKey,
      commitment?: Commitment,
    ): Promise<AccountInfo<Buffer> | null>;
```
How can this return multiple accounts, shoudnt there be only one account per address  ?
I'm wondering because of the "fetch all" in the comment, maybe it returns accounts owned by the public key ?
<@!248066053161222144> <@!585868308419444749> thanks
serum swap handles wrapped sol but i haven't worked with wrapped sol much myself either so can't provide much guidance unfortunately <https://github.com/project-serum/swap>
Is data about a token (like name and symbol) stored on chain? When looking at the explorer and solscan, I get the idea it is. 

https://explorer.solana.com/address/EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp

https://solscan.io/token/EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp
It's demonstrated in the spl-token-cli code base
Does anyone have resources on wrapping / unwrapping SOL (in code) ? I can't find it mentioned in any tutorial. A search of chat history only shows how to wrap with command line.
Haha. I’m glad that worked!
I think the error message is misleading, your delegated vote address is not a vote account
how would I go about checking if a PDA account already exists before trying to create it, from inside a program?
Interesting, thanks!
But my script fails with a `incorrect program id for instruction` error
OMG, it's in the mainnet! what url address should i use instead?
edit: i found the url and it's working now. thanks a lot.
And this https://explorer.solana.com/tx/5HWeM2WRD2XuLJfsceY6fy7Rfg8RS5qjCNnuSauxH9MJNMgk4JMBV99S92pj75WhHyUSqUNmgP1S2GFhTggwjyvM is the output of delegating via Phantom. I can't quite figure out the difference
This is the output of my delegation script
Dumb question you have 9 sol in the devnet or mainnet?
Hey could anyone more experienced with Solana than I help debugging this issue? https://explorer.solana.com/tx/5i4JEaFuAcEnAxUrRfj7oHCTPS7x4eiMW9grTw4wkw8PPgpxW59tHWvkKUsyJyPE5Pj6povp7za5vP6Vn2hbt25Z
Correct, here's an issue that describes adding support for this case: https://github.com/solana-labs/solana-program-library/issues/2248
can you help me?
im using this now but the value  doesn't have anything to do with the balance

from solana.rpc.api import Client

solana_client = Client( "https://api.devnet.solana.com" )

x = solana_client.get_balance("8FgJ64v6rcVLpUVsJfqYF6muhJctmPqHQCCVVyFGFLBT")
print(x)

it just returns 

{'jsonrpc': '2.0', 'result': {'context': {'slot': 75895138}, 'value': 0}, 'id': 1}

and i have about 9 sol in my account
I have some more solana dev content on my youtube channel it may also help.  https://www.youtube.com/watch?v=gA7hFdq2h9Q&list=PL41Cw3fN3CfdbmhgxADwyDyIoDrxc22v2
Wow that's some seriously fast coding!
that's actually really helpful. Thanks. It didn't help with this error - but it solved another error I was struggling with!
I searched back through the history. I can't find any rust resources on how to do this. Do you have any examples?

I just want to transfer SOL from a user to a program (in the context of a TransactionInstruction) .
You need placeholder data and the slots need to line up, at least that's my experience.
thanks - what ended up solving the error was moving all the calls to `.serialize` to the bottom of the instruction. Weird but works!
hold on, you're saying that the data doesn't automatically get filled with 0s?
eg if I have Option<x> and I want to initialize with None, that's not gonna fly is it?
well, this is what i tried at first and couldn't get it to work so because i didn't need anything else i used the native curl command. by the way the error im getting is this:
equests.exceptions.InvalidSchema: No connection adapters were found for 'curl https://api.mainnet-beta.solana.com
Why not use the native api for py? https://github.com/michaelhly/solana-py
req = """
curl https://api.mainnet-beta.solana.com -X POST -H "Content-Type: application/json" -d '
  {"jsonrpc":"2.0", "id":1, "method":"getBalance", "params":["83astBRguLMdt2h5U1Tpdq5tjFoJ6noeGwaY3mDLVcri"]}
'
"""

r = requests.post(req)
guys i wanted to write a python code to get user account balance, the following code fails. can someone tell me why?
I'm familiar with borsh. If you're serializing into your account data is the account data and the input data the exact same size? For example if you had a string field called name the account data, even in uninitialized form, should have placeholder values for the maximum length of characters you will allow. For example you could do something like "000000" and then you would need to "fill" those slots with real data. But if its shorter then you would need to fill in the gap "jon___" and the new data cannot be longer.
Try getting rid of the `&mut *` they should be superfluous at least
Out of curiosity: had the token account been created via ATA, would there be a way to retrieve the tokens? In that case the ATA could sign for the (incorrect) wallet (here, `9Mu...`) and invoke a token transfer if it provided such a function, right?

(That function would simply be a workaround for when this mistake happens and would have to check that the "real" wallet signed.)
no idea i'm afraid, i use anchor so i don't have to deal with this stuff!
hm so after some digging it seems the error is actually unrelated to token accounts.
I'm serializing a bunch of data into a state account as part of the same instruction, and if I uncomment those lines, the error goes away.
The lines are:
```rust
let game_state_seed = format!("{}{}", GAME_STATE_SEED, game_state.version);
game_state.round_id += 1;
game_state.serialize(&mut *game_state_info.data.borrow_mut())?;
```
Anything look wrong to you? I'm using borsh.

I am allowed to access elements out of order on the deserialized struct, right?
i would also try searching for your error in discord search, there's been a couple of other mentions of it
not sure if this is helpful but here's the backend in anchor for creating token account PDAs <https://github.com/project-serum/anchor/blob/master/lang/syn/src/codegen/accounts/constraints.rs#L457-L499>
over moving around regular sol
i would recommend using wrapped sol though
Ahhh OK. I yanked it from the paulx tutorial.
it's for transfering spl tokens
that's the spl token program transfer function
all accounts are owned by a program <https://2501babe.github.io/posts/solana101.html>
getting `'Program failed to complete: Unaligned pointer',` when trying to init a token account inside a program. Any ideas how to debug?
Thanks for the response. If I'm not using SPL tokens (just want to transfer SOL) should it be blank?
it's the pubkey of the account that has the authority to mint new tokens. So no, it shouldn't be the mint
Here's a playlist https://www.youtube.com/watch?v=gA7hFdq2h9Q&list=PL41Cw3fN3CfdbmhgxADwyDyIoDrxc22v2
Hey anyone needing to learn solana try my youtube channel.   https://www.youtube.com/channel/UCsTeW2lMXnBSTM3spk1nu9w
Any solana rust smart contract developer looking for a job? Please connect with me.
Hi, in spl_token::instruction::transfer, what is authority_pubkey? Is that the pubkey of the mint?
```
pub fn transfer(
    token_program_id: &Pubkey,
    source_pubkey: &Pubkey,
    destination_pubkey: &Pubkey,
    authority_pubkey: &Pubkey,
    signer_pubkeys: &[&Pubkey],
    amount: u64,
)
```

so i've got a websocket subscription to my test validator with `logsSubscribe` and for some reason every interaction with spl-token (which is all i've tested and the only thing i really need to look out for ) returns two identical messages? could anyone provide some insight to this?
any help greatly appreciated !
I've run solana-test-validator --h and it doesnt look hopeful....
is there a way to start the test-validator with a certificate ?
hello folks, I find myself in a situation where I need to access a solana-test-validator using https and wss - however when I switch the config so its like this ```RPC URL: https://0.0.0.0:8899``` when I access from my website I get ```This site can’t provide a secure connection``` which apparently means invalid certificate
Horror stories https://twitter.com/larry0x/status/1429367220854042627?s=21
So your program needs to establish how many different functions it can perform. This is commonly in an `enum` in the program (e.g.):
```rust
#[derive(Debug, PartialEq)]
/// All custom program instructions
pub enum ProgramInstruction {
    InitializeAccount,
    MintToAccount { key: String, value: String },
    TransferBetweenAccounts { key: String },
    BurnFromAccount { key: String },
    MintToAccountWithFee { key: String, value: String },
    TransferBetweenAccountsWithFee { key: String },
    BurnFromAccountWithFee { key: String },
```
 so when it processes new requests, it can branch to the appropriate function handler:
```rust
pub fn process(
    program_id: &Pubkey,
    accounts: &[AccountInfo],
    instruction_data: &[u8],  // The enum for the function to branch to is in this data 
) -> ProgramResult 
```
Obviously this means that when a client is sending a transaction to the program, it is indicating which function by including the `enum` index in the data.
is there a way to programmatically determine struct and enum size when inside the program? So that I don't have to constantly recalculate space requirements?
let me have a double check on these, thanks!
There are 3 accounts you're showing here. Presumably the third doesn't have enough sol
Hi, I'm following the tutorial and trying some CLI commands. In the devnet, I created two accounts with airdrops. Then I tried to transfer SOL from one to another, failed with following error. 
```
~ solana balance HTzKD6wajksF6R6mjB5MzU2BzE2aBwwPVgAVFz79SrKL
1 SOL
~ solana balance Ckfa2a1nMFdACqKj6QXgmP6cA7JQowT6UxLtV8uU6MoN
1 SOL
~ solana transfer Ckfa2a1nMFdACqKj6QXgmP6cA7JQowT6UxLtV8uU6MoN 0.1 --from prompt:// --fee-payer prompt://
[fee_payer] seed phrase:
[fee_payer] If this seed phrase has an associated passphrase, enter it now. Otherwise, press ENTER to continue:
[from] seed phrase:
[from] If this seed phrase has an associated passphrase, enter it now. Otherwise, press ENTER to continue:
Error: Account Hb9HitxoKT5Nf1NBmSmkqMhKojTude2EpjUbkDX6sAs8 has insufficient funds for spend (0.1 SOL) + fee (0.000005 SOL)
```
did I miss something here?
🙂  o know but how can use with cient. ?  The examples are very complex.  How do I redirect to function in  process_instruction ?
so just add another one?:)
but it have only one function. ı want to use 2 funnction.
https://github.com/solana-labs/example-helloworld
Does anyone have a simple solana program? I want to learn how can ı use 2 function in solana program. how can client  use this functions.  for example  ```setName``` and ``` setNumber``` functions with struct.
https://github.com/solana-labs/token-list
i think its all maintained in a git repository for now although there might be a more standard onchain way of doing it
Any comment from the team would be awesome:)
for anyone searching for this in the future - the solution ended up being changing this line:
```
&[funder_info, pda_info, system_program_info], 
```
to this:
```
&[funder_info.clone(), pda_info.clone(), system_program_info.clone()], 
```
Which is weird because I already do that once when I pass in the args. But apparently you have to do it again inside the function...
Searching discord history only revealed one solution where someone had a problem with their `BPF_LOADER_PROGRAM_ID`. I'm not even sure where that is configured? I've updated the cli version and reset the validator node - with no luck.
So just to be clear - if I literally copy paste the above code into the `process_x` function instead of calling `create_pda_with_space` the error goes away. What's going on?
I'm stuck with this error: 
```
Access violation in unknown section at address 0x7ffffffffffff007 of size 8 by instruction #3785',
```
I managed to narrow down the piece of code causing it - but the weird thing is, it's only happening when that code is extracted as a function. If it's inlined then there is no error.

I tried adding `#[inline(always)]` but that didn't fix it.

The function:
```rust
#[inline(always)]
fn create_pda_with_space<'a>(
    pda_seed: &[u8],
    pda_info: AccountInfo<'a>,
    space: usize,
    owner: &Pubkey,
    funder_info: AccountInfo<'a>,
    system_program_info: AccountInfo<'a>,
    program_id: &Pubkey,
) -> Result<u8, ProgramError> {
    let (pda, bump_seed) = Pubkey::find_program_address(&[pda_seed], program_id);
    if pda != *pda_info.key {
        return Err(SomeError::BadError.into());
    }

    let seeds: &[&[_]] = &[pda_seed, &[bump_seed]];

    invoke_signed(
        &create_account(
            &funder_info.key,
            &pda_info.key,
            1.max(Rent::get()?.minimum_balance(34)),
            34,
            owner,
        ),
        &[funder_info, pda_info, system_program_info], 
        &[seeds], 
    )?;
    Ok(bump_seed)
}
```
I know that the `invoke_signed` call is causing it. Any tips for debugging this?
BTW if you are finding something like ABI in ethereum, maybe you can take a look at https://project-serum.github.io/anchor/getting-started/introduction.html
Okay, I’ll keep digging around for it then thank you!
if you want to decode account info, you need to know the account's struct.
for now you can only see contract code if they open source.
for fungible token, you can add PR to https://github.com/solana-labs/token-list/pulls
Is there any struct in Solana analogous to the python contract ABI's? I'm trying to decode some acount info but I'm struggling to figure it out.
Hi, just so I am sure I understand this, there is no way to see a contract on solana like you can on eth?
When minting SPL tokens, how do you add metadata (e.g. image, properties), like the metaplex spec? https://github.com/metaplex-foundation/metaplex/blob/master/js/packages/web/src/actions/nft.tsx#L66
I'm from web backend too so your experience is absolutely relevant to mine. I will try them out. Thanks for the suggestion 👍
So a sollet wallet is basically different from other wallet provider 🤔 Sorry kinda messed up wrapping my head around this concept
if you want a quick intro that covers a lot of ground I recommend https://www.udemy.com/course/ultimate-rust-crash-course/
if you want to go much much deeper I found https://www.zero2prod.com/ to be just excellent
but ultimately you will learn the most from building something in rust that you already know how to build in another language. Eg for me it was webservers.
A sollet wallet address would be owned by the system program
hmm, I checked my sollet address on explorer and it still says the owner is System Program. Is there any difference?
Thanks, that's helpful
Thank you. I learnt some rust previously but couldn't find motivation to go deeper into the program. I will follow the track that you recommend now. Btw here are my favorite rust resources
https://doc.rust-lang.org/book/
https://doc.rust-lang.org/rust-by-example/
https://exercism.io/tracks/rust
I second the rust > solana > anchor route. That's how I did it and I feel jumping to quickly to eg anchor will leave you in a tough spot in terms of debugging.
I would def learn some rust, then rust with solana first, then look at anchor, as it is shaping up to be a great framework for solana. the new dev site has a lot of great resources, for rust and solana, and then anchor. no harm in learning both at the same time. knowing how it works benefits everything. the githubs solana program library (SPL), solana, anchor, and dapp scaffold have all you need for refeences. I would def go through this tutorial: still the best for understanding some concepts and theory as well as some code examples. https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/
Here's an example of using `invoke_signed()` from within a program to create a PDA account: https://github.com/solana-labs/solana-program-library/blob/7c8e65292a6ebc90de54468c665e30bc590c513a/feature-proposal/program/src/processor.rs#L148-L163
I seeeeeeee
to simplify, I think what you're saying is calling `createProgramAddress` doesn't take a base key while `createAccountWithSeed` does. Correct? That's sort of the conclusion I came to as well.
You must do this from within a program, not possible from Javascript client code
yep, aware of that, just trying to find a way to accomplish the following:
1. have a PDA address
2. which also holds state, which means I need to allocate space during creation

so I somehow need to both create a PDA and allocate space inside of it. 
The usual approach of calling `PublicKey.findProgramAddress` > `PublicKey.createProgramAddress` doesn't let me do (2).

Any other way to do it?
A PDA has no private key, so cannot sign a normal transaction.  A PDA can only act as a signer through the `invoke_signed()` syscall when called from within a program
hey everyone, i have been trying to subscribe to onProgramAccountChange and onAccountChange via the solana/web3.js sdk. 

i saw a few transactions on the explorer come through but my callback was never invoked. any quick thoughts / debug tips?
hm I'm trying the following:
```js
//find the pda
const [pda, bumpSeed] = await PublicKey.findProgramAddress(
        [Buffer.from("state")],
        OUR_PROGRAM_ID,
    )
//prepare the create account ix
const createIx = SystemProgram.createAccount({
        programId: OUR_PROGRAM_ID,
        fromPubkey: ownerKp.publicKey,
        newAccountPubkey: pda,
        space: 65,
        lamports: await connection.getMinimumBalanceForRentExemption(65),
    });
//package & send
const tx = new Transaction().add(createIx);
const sig = await sendAndConfirmTransaction(connection, tx, [ownerKp]);
```
but I'm getting `Signature verification failed`. Which I guess makes sense since the signature from the PDA account is missing. Without it, I could have passed anyone's public key and overwritten the data on it.

But how do I pass a signature from a PDA into this function? It's not a CPI from inside the program, it's a normal function call client side?
Not all accounts but many are.  User wallet accounts are system accounts for example
Are all accounts owned by System Program? Because I often see in explorer that the account owner is this account https://explorer.solana.com/address/11111111111111111111111111111111
It's the same reason for having multiple normal accounts per program really -- to separate the code (the program) from the data (accounts) it operates on
i see, wonder what would be the rationale for having multiple PDAs per Program_id. I am thinking of the Escrow example, a single PDA can facilitate all the Escrow txns
check out https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses
The comments at https://github.com/solana-labs/solana/blob/216983c50e0a618facc39aa07472ba6d23f1b33a/sdk/program/src/pubkey.rs#L181-L203 and https://github.com/solana-labs/solana/blob/216983c50e0a618facc39aa07472ba6d23f1b33a/sdk/program/src/pubkey.rs#L265-L280 should help
1-N
so is Program_Id -to-PDA a 1-1 relationship ?
PDAs are just like normal accounts except that rather than an external signer, the program itself can sign on their behalf
The program id is used to identity the program executable itself, which is not the same as accounts that are owned by that program
an additional question: I am new to Solana and know a little Rust, should I learn Solana development in Rust or Anchor first?
just curious - I understand how PDA works but curious why Solana can't  just use the Program Id public key directly to do what PDA does. The Program Id pubkey is already uniquely identify the program. Again, understand how PDA works, just want to dig a little deeper.
Hey guys, There are many place using the seed, like finding account, creating account and signing transaction.
I am truely not clear about the seeds. Can someone help answer the question here on stackoverflow?
https://stackoverflow.com/questions/68878330/what-is-the-seeds-in-creating-account-or-finding-the-account-in-solana-and-coul
Is token program a native program? Should it have an entry here?

https://docs.solana.com/developing/runtime-facilities/programs
How do I figure out the accountInfo schema from the stake program code? https://github.com/solana-labs/solana/tree/master/programs/stake/src
Let's say I am using `getAccountInfo` from the `StakeProgram`. How do I deserialize the data buffer into something meaningful?
```connection.getAccountInfo(StakeProgram.programId)
  .then((accountInfo) => {
    console.log(accountInfo.data);
});
// <Buffer 73 74 61 6b 65 5f 70 72 6f 67 72 61 6d 5f 76 33>
```
Solana labs engineers fixed it, I haven't checked but if you want to, grab my repro repo in the pr and test
Hey skynet. Were you able to verify that `logSubsribe`  is working properly now?
Hey guys. Did this issue get fixed? Are the websocket subscriptions not spotty anymore?
yes.  you can reference dapp scaffold for their new wallet implementation and adapters as well for this.  transaction.recentBlockhash = ..https://github.com/solana-labs/dapp-scaffold.  nice work.
I followed their docs as is, and ended up with that error. Surely that step should be documented
Phantom's `serialize()` method. I figured it out though, you have to manually set the transaction's `recentBlockhash`, which phantom docs never mention
looks like it could not resolve the recentblockhash, perhaps a nonce/instruction issue. what action resulted in this error?
Has someone encountered this before while working with phantom? `transaction.ts:213 Uncaught (in promise) Error: Transaction recentBlockhash required`
look at the fees, and auction code, it should process transfers
Was just wondering if someone has a quick answer, but I’m looking now
Thanks! Yes I am using MetaPlex actually but you made me think of something. MetaPlex has to have a way of doing that already because when NFTs are transferred to winners, there would have to be a fee associated with that and no one is manually pressing an approval button to pay that fee on MetaPlex’s end. So I have to dig through the code more.
sounds like you just need a store front. https://www.metaplex.com/ or a program that does something similar. Follow the guides to create a store front or use the source code and build your own functionality.
Question to the dev community, what is the best way to implement the automatic payment of transfer fees when transferring an NFT from an owner account to a buyer and the owner who is providing the NFT can’t manually approve every transfer request that comes in
def check it out. it can compliment your background. it takes no time at all to go through the examples and see where its at and even contribute. helps generate clients, workspace management, wrapped functionality, very active devs, and more. only getting better. you could easily do some quick layup contributions with your background.
Hello

Currently I'm developing programs in pure Solana and now I'm comfortable developing in pure Solana rust. Do you recommend switching to Anchor? Does Anchor have any advantage over Solana rust?
and the owner is the program
you almost got the right function, it's actually just create account, where `to` is your PDA pubkey <https://docs.rs/solana-sdk/1.6.8/solana_sdk/system_instruction/fn.create_account.html>
various methods including the api https://docs.solana.com/developing/clients/jsonrpc-api#getfees  #getblock   search on fees, to get you started. https://docs.solana.com/implemented-proposals/transaction-fees#calculating-fees
I think you still should be able to create an account for the derived address and allocate space when your using createProgram address above. when creating an account just pass in the the derived key, and allocate space

at a glance, what looks like is happening, when you call create with seed, what your actually doing is deriving a public key from another key (base), a seed, and a program ID. it should be in solana->system_instruction_processor.rs. ('CreateAccountWithSeed") along with other linked functions. So your deriving a key from a base key, a seed and  an owner (program Id). Where findProgram address is just finding an address based off whatever seed your passing, "state", and the program Id, and does not include the base key.

for finding the key generated from createWithSeed, when your doing findProgramAddress, searching for that key, your passing 'seed' as "state" and program Id (owner), so you would never get the same result, as it lacks the base key, which would need to be included?
anyone know how I could see how much gas a transaction used? want to build something like fees.wtf to show how dope sol is. could not find it in the API
has happend before too but not for this long
https://github.com/solana-labs/solana/issues/19357
opened an issue here earlier
havent been able to upgrade a program for >12hrs now
is something wrong with the network today?
Ok somewhat hacky solution - I ended up creating 2 separate "derived accounts".
One of them holds state - which means I needed the ability to specify the size when creating it. The function I used is:
```js
    const stateAcc = await PublicKey.createWithSeed(
        ownerKp.publicKey,
        "state",
        OUR_PROGRAM_ID,
    );
    const createStatePdaIx = SystemProgram.createAccountWithSeed({
        fromPubkey: ownerKp.publicKey,
        newAccountPubkey: stateAcc,
        basePubkey: ownerKp.publicKey,
        seed: "state",
        lamports: await connection.getMinimumBalanceForRentExemption(65),
        space: 65,
        programId: OUR_PROGRAM_ID,
    })
```
The other one is used as transfer authority over an SPL token account held in the name of the protocol. Here I needed the bump seed, so I used:
```js
const [authAcc, bumpSeed] = await PublicKey.findProgramAddress(
        [Buffer.from("state")],
        OUR_PROGRAM_ID,
    )
    await PublicKey.createProgramAddress(
        [Buffer.from("state"), new BN(bumpSeed).toBuffer()],
        OUR_PROGRAM_ID,
    )
```
Is there a way to merge these two into a single PDA account, that both has state and can be used to sign transaction during CPI?

Or is the above the only way?
thank you. very useful article
Both seem to fall off the curve, so that can't be the issue.. just checked.
what I mean is:
output of this rust-side:
`let (pda, bump_seed) = Pubkey::find_program_address(&[b"state"], program_id);`
doesn't match output of this client-side:
```js
    const createStatePdaIx = SystemProgram.createAccountWithSeed({
        fromPubkey: ownerKp.publicKey,
        newAccountPubkey: pda, //derived using PublicKey.findProgramAddress()
        basePubkey: ownerKp.publicKey,
        seed: "state",
        lamports: await connection.getMinimumBalanceForRentExemption(65),
        space: 65,
        programId: OUR_PROGRAM_ID,
    })
```
The seeds are the same... any ideas?
without the same idea as the eth mempool, will this be considered realtime?
thanks for this - so I actually found and tried that one, but I'm getting an address that doesn't match the PDA address I'm deriving internally in the program
https://github.com/solana-labs/solana/blob/master/sdk/program/src/system_instruction.rs   CreateAccountWithSeed {  ... /// Number of bytes of memory to allocate
        space: u64.   Use the SDK and SPL source code and look at the instructions.rs and program, process, lib, related .rs files. Along with the spl, web3, json rpc and cli documentation, and searching with and without underscore  createAccount, create_account, you should be able to find many things. For the code, the instructions have some of the best comments and will help you figure out what is available and what you can pass.
<@!248066053161222144> any pro tips?:)
is there a way to specify account size when creating a PDA? `PublicKey.createProgramAddress()` doesn't seem to take a size parameter.
I treied `SystemProgram.createAccountWithSeed` but I'm getting a different account address. I'm guessing it doesn't create a PDA, but some other type of account?
i setup a solana/web3.js `onAccountChange` to an account to try and capture any time solana goes in/out. it doesn't seem to be picking them up. any quick thoughts?


///////////////////////////////////////////////////////////////////////////////////////////////

Pending response there. It looks like the idl parser has issues with underscored numbers as well https://github.com/project-serum/anchor/issues/633
Yeaah. Like that would boost up the "transparency" factor by a lot
i was copying someone's code who incorrectly assigned lamports to balance
any idea how to json parse it?
curled and it was in my buffer all along
nm i got
It seems crazy that there is no way to view contracts on solana
I keep seeing the rent exempt balance of 2039280 lamports rather than the token balance?
I was working in remote shell in Linux from vscode from windows. Though I restarted vscode it was not working. It worked when I issued the command in the linux system directly
i can only get it working with connection.getAccountInfo
hmm are you sure its splToken.getAccountInfo?
excellent. might have needed a terminal restart.
Thanks
Its working now. I logged out and logged in again. I think it has something to do with the path
Yes. I followed the instructions from figment learn. I also checked the link you sent.  Everything worked till build program
did you set up the environment path variables for cargo and follow the install instructions?  it may be related to not finding cargo. Install instructions: https://docs.solana.com/cli/install-solana-cli-tools
not sure off hand. did you try the project serum/ anchor discord? the anchor code is available. if its anchor specific you could try to resolve the issue and submit a fix if its indeed anchor related.
https://docs.solana.com/developing/programming-model/calling-between-programs
https://github.com/project-serum/anchor/issues/632 Any known workarounds to use const generics in Anchor?
Hi. I am trying to build program but I am getting error: no such subcommand 'build-bpf'. please help
Thanks, I saw this as well was thinking there'd be more examples. Anyhow was mainly just highlighting the link is broken in the doc
How to get return values from current CPI function call? If I break one function call into two so the 2nd call can get the return value from an account, this assumes this value has not been changed between my 1st and 2nd function call, right? https://stackoverflow.com/questions/68891123/solana-rust-how-to-get-return-value-from-current-cpi-function-call
in my case, i want to interact with project serum's program through my program.
Is there any example on interaction between programs ?
so, one more question about costs of program deployment. My understanding is that when I'm deploying simple memo program, it is like 600 transactions, because binary is big and need to be split into ~1000 byte transactions, so loader can write a chunk of binary to my program account. But, if I'm deploying upgraded version of my binary (e.g. I added a log statement or some extra checks), a lot of the code should technically be the same. Like 90%+ of binary should be exactly the same. If the BPF loader would have 'copy binary from account X' feature, and my `solana deploy` would analyze the existing binaries (e.g. just looking at previous program id), there is a good chance that it could just send 1 'copy' transaction to copy many bytes from old account, possibly saving hundreds of transactions & respective costs. That of course would vary from binary to binary, but it still should be doable relatively easily and profitable for everyone? (less network congestion, less fees to be paid on deploy)
Metaplex is gaining steam because it’s a uniquely amazing at allowing artists to control their own content sales. This stands to be a big on-ramp asset for Solana, but it shouldn’t be on the super scarce and valuable rust/react devs to make that on-ramping work.
Hello amazing Solana devs. I’m noticing a troubling phenomenon in the amazing metaplex ecosystem - many drawn to the platform are artists and therefore amateur coders. This is the core beauty of metaplex but it means that the main dev assigned to the ecosystem is distracted by folks (like me, honestly) asking basic questions like how to merge a git. The ecosystem doesn’t need more rust/react dev support - the current metaplex dev team is doing amazing work on the real coding. *But it could really use some Solana enthusiast intern or whatnot familiar with basic react css  js etc, to field the very basic questions that come up in the discord, so that the rust/react dev team can actually build out the ecosystem.*
Hey guys this may bea  dumb question but how can I know the rustc version of the bpf tools?
Then you can use the `splToken.getAccountInfo` with the address
You can find the token address by using the Token list on Solana's GitHub
That's how my code looks to get the users address for any given SPL token. I think it's right
```
SplToken.getAssociatedTokenAddress(
      ASSOCIATED_TOKEN_PROGRAM_ID,
      TOKEN_PROGRAM_ID,
      new PublicKey(token.address),
      new PublicKey(this.address)
    )
```
I'm using the `@solana/spl-token` library
SPL Token Address
Hey frens, I'm getting lost a bit, no matter what I try I end up with address that doesn't match my public address, can someone please explain how can I get public address back from mnemonic+password known?
What steps should I take?
Like: BEP39(mnemonic+password).seed ->  BEP44.derive(private_key, m/44'/501'/0'/0') -> public key

And what rust libraries can I use for it?
Thank you

I'm also trying to debug it via bip32.net but seems like it doesn't have proper set or smth, so I can't get SOL addresses
Does anyone know how to get usdc balance of solana address? I only know how to retrieve sol balance
Is it because an account needs to have the minimum balance for rent exemption?
I'm getting an `Insufficient Funds` error when trying to withdraw any amount but I'm not quit sure why. My authorized account has more than enough SOL
I'm trying to withdraw that `0.001` SOL from the Stake account to `DX5vPQCzY2myV6qUpaiFoM6HSUJjKrvSEpgi6qHQT5Zd`
I have a stake account with `{ active: 0, inactive: 1000000, state: 'inactive' }`
This is a transaction hash in question 63JL8oC7ji1VhqC6QuMiqgG3P3Z4aXxDZzX3182WEF7jnALUeDmr39p3wyqaeFYHGHpYcNgbXjompEfAsCojNDgW
Hey all, another Solana staking question from me
I created an ATA with the mint address being the native mint address and then funded this account with lamports to make the account rent exempt. The transaction goes through. I then try to transfer a small % of this rent exempt balance in my tests using `spl_token::instruction::transfer_checked` to a different token account (again using the native mint). I then get an error indicating insufficient funds, despite ATA having the rent exempt balance. I can resolve this by sending a transaction to deposit lamports into the ATA from a different token account, before transferring from the ATA to the token account mentioned previously.
Yes, sorry. Right and if the tokens are wrapped sol (not sure if the terminology is correct), i.e. using native mint, then lamports of associated token account wouldnt be impacted as well?
do you mean token program's instruction, `transfer_check` ?
if yes, it will transfer your token,  it will do nothing to your lamports.
I recommend you to walk through https://docs.solana.com/developing/programming-model/overview first for building solana's concept. there are many different between ethereum and solana.
Then you can take a look at https://github.com/solana-labs/example-helloworld
it can make you understand how to interact with contract on solana
maybe find an oracle to do it?
Does `transfer_check` fail with the `insufficient funds` error if the transfer would result in the lamport balance of a token account being reduced below the balance necessary for rent exemption?
Hey guys, I'm new to solana blockchain and developing in crypto in general. I wanted to ask - where can I read the smart contracts of public projects? On ETH, I simply go to etherscan and check the Contract tab. How do I do this on Solana?
I'm guessing there currently is no random number generator to use as part of `solana-program`? What's the recommended alternative?
What do I put for baseTokenAccount and quoteTokenAccount when settling serum orders?
current payerAccount is loaded from mnemonic, but I would like to use sol-wallet-adapter's object of selected wallet

anyone knows how to load `https://github.com/project-serum/sol-wallet-adapter` object into web3js keypair object so you can then add it as a payer account when doing a transaction submission?
I think I can move lamports only from accounts owned by my program, right? So what is the simplest way of sending lamports to a program? a) user need to create account and move lamports there and then hand the ownership of that account to my program, b) user sends some instruction to program to create empty account & then user puts lamports in it & then user sends another instruction to program to actually do the thing (and 'consume' lamports), c) any simpler way?
hm, I can't find good example on github on how to build some token minting for SOL. I.e. the regular mint require authority account to authorize the minting of new tokens - that part is clear to me. But what is the typical pattern for the mint authority to issue mint transactions only after receiving some lamports? Generally, lamport operations are scarce in examples. Should I just ask for the tx signer account and deduce some value from their account `.lamports()` and add lamports to my account? I guess the runtime will then check if the lamports debited from signer account is equal to the value I credit to another accounts, is that right? Otherwise I could just create lamports out of thin air or burn them accidentally. Now, if this is the case, what stops program to take *all* lamports from signer account? I.e. if I am regular user and I'm calling any program (i.e. I'm signing some tx/ix to it), can that program theoretically take all my lamports away?
Asking here, because I had no answer on <#428295358100013069> : I'm reading the resources about the pool staking, and I do not understand the conceptual difference between the "Staker" and the "Stake Pool Manager". Can someone enlighten me?
https://github.com/solana-labs/solana-web3.js/tree/e8e96f7814f5678ac4887c2d75b2f94cf4bea59f/examples 
Looking for this?
Hi guys just wanted to highlight that the link here doesn't work: https://solana-labs.github.io/solana-web3.js/examples
hi ,  who will help me ?
Sorry. Can't help you there. No idea.
```
The macos release binaries are not suitable for M1 silicon in any configuration as they are built for x86_64 arch with AVX and AVX2 extensions available. Building them from scratch under Rosetta is the workaround for now. See https://github.com/solana-labs/solana/blob/master/README.md#building
```

<@!519222880840450059> is there anything special i need to do to "build under rosetta"?
guess i will just use devnety
ah
Hi, i am getting a weird error on the latest Solana ledger app version. the error message contains "Please enable Contract data" - does anyone has/had this problem?  Thanks
https://github.com/solana-labs/example-helloworld/issues/200
Running M1?
in general, i am hving a hard time setting up the local network
How can i get a local validator up and running?
does anyone have any idea?
Hi all, i am following the anchor tutorial, but i am getting this error when i run the solana-test-validator. everything works well otherwise.

```
solana-test-validator
dyld: Library not loaded: /usr/local/opt/openssl@1.1/lib/libssl.1.1.dylib
  Referenced from: /Users/xx/.local/share/solana/install/active_release/bin/solana-test-validator
  Reason: image not found
zsh: abort      solana-test-validator
```
https://docs.rs/spl-associated-token-account/1.0.3/spl_associated_token_account/fn.create_associated_token_account.html

Can someone help me understand the difference between funding address and wallet address, the parameters passed to `spl_associated_token_account()` ?
I think you could do the thing you mentioned but you need to prepare the PDA and seed before you send it and an on-chain program need to verify it and call invoked_sign.
How to manage unique number’s incrementation I think it is another scope haha.
I'm guessing  the explanation for it is a bit complex then yeah?
My thought was that if a PDA can be used like a regular account, and program acts like the signer, then perhaps it could derive unique  accounts procedurally on-chain by, for example, including a unique incrementing number as seed input. That sort of thing is not possible then.

No biggie but was just curious. Thanks for confirming!! 🙂
you need to prepare all addresses you need and pass them into tx before you send it.
* oops meant to say not possible
<@!788215642070581289> I'm still a bit lost for question 1. If I understand trent correctly here, he's saying it's  possible. Hoping someone could help me understand why that is? https://discord.com/channels/428295358100013066/517163444747894795/840310994252070932
Thanks!!
to add on to what <@788215642070581289> said, when ownership is transferred the account must meet the following criteria: including data to be empty/0'd : https://discord.com/channels/428295358100013066/517163444747894795/879161042867986442
1. PDA is like a normal account but need to use a program to sign it. In most situations you can do anything to PDA if it can be done in normal account.
2. Only account’s owner is the program that the program can modify its data. If you want to transfer your ownership, you can take a look at https://github.com/solana-labs/solana/blob/master/runtime/src/message_processor.rs#L140
Two quick question I hope someone could clarify:

1. Is it possible to construct AccountInfo of a PDA in a program, so that for example, it could be passed to create a new spl-token mint account? I can't seem to get this to work. If not, could someone help me understand why AccountInfo's must be specified in the tx?

2. Is it safe to assume that if an account has allocated state, this must have been allocated by the current owning program? According to the docs it seems so, but just want to be sure :). 
e.g. It wouldn't be possible for someone to allocate some arbitrary to an account, and then assign that accounts ownership to my program, right?
try: game_account.data.len(), also try printing game_account.data  to see if the data does show up in the log.
YES!!! nice. thanks
yes
like so?:
console.log(\`ProgramId: ${programId}\`)
surround it with ` inside paran
like:   console.log(` ProgramId: ${programId`)
Yea it's ts.
thats logging format, are you logging from ts/js? when logging the pub key use ${key}
Do you know why the discrepancy between the input and log output? 

programId = new PublicKey("FD5PP3uoDvvogiXfZ2TmkYXby378r23CTNchX3pM7TYt");
console.log("ProgramID: ", programId)

--
```
ProgramID:  PublicKey {
  _bn: <BN: d31b8bb8faa12533024822af7fab15aecb90dc07e0749b46f806b6097788e8f1>
}
```
not sure exactly what your asking, but you can choose to reference whatever program you want using CPI inside your program. you could deploy your own swap program as well, and use that to swap in your program.
account address are mostly base58
Hello, Does anchor support me to add a new swap-program CPI?
When a program is deployed, I get the program ID: FD5PP3uoDvvogiXfZ2TmkYXby378r23CTNchX3pM7TYt

What encoding is that?

How can I change that to base58 for use in typescript?
if you do connect, and select wallet, and select auto connect, and refresh, you should be reconnected, as is the case in the example link. does example link not work for you as intended? as it does for me.
I did try this as well. When auto connect is selected, "Upon Reload",  it opens a new modal/extension asking user to connect again
I would use this wallet-adapter going forward. https://github.com/solana-labs/wallet-adapter, where there is auto connect feature as well. https://solana-labs.github.io/wallet-adapter/example/
I am trying to use this package to connect to wallet https://github.com/project-serum/sol-wallet-adapter. But when I reload, the wallet state is turned to disconnected. Is there any way that can keep the wallet state as connected on reload as well?
The contract, or "program" usually is the owner.
Thus meaning the owner also has access to those accounts?
State needs to be set in wallets owned by the smart contract?
Yeah sorry it was right under hello world thought break would call it many rimes
If it's 0.08 SOL to play, then I guess they are syphoning off some of that in the form of a donation.
What is "break"? I thought you were talking about hello world?
‘Break can be played on our Devnet, Testnet and Mainnet Beta networks. Plays are free on Devnet and Testnet, where the session is funded by a network faucet. On Mainnet Beta, users pay to play 0.08 SOL per game. The session account can be funded by a local keystore wallet or by scanning a QR code from Trust Wallet to transfer the tokens.’
Docs not updated then
It's not as high as that.
I’m interested in building on solana but I have some concerns (didn’t do all my research yet):
1. I see on the hello example app that each play through is 0.08 sol. Isn’t that a bit too much for such a simple dapp?
307 bytes
`solana account GR5DRLFCx87vPNTUQ53JTnY5Tpy9YFhDQoMuMwNpkpGs`
doesn;t make sense, trying to think what could make it "size 0" while it's there it exists on devnet
i'm wondering if there is some signer or something related it's stupid =/
0
yes tried just that
the game account key prints the address above to console?  
and did u try just  game_account.data_len()     .?
and this is my simple rust just to check the size:
`pub fn process_instruction(
    program_id: &Pubkey,
    accounts: &[AccountInfo],
    instruction_data: &[u8],
) -> ProgramResult {
    msg!("Helloworld Rust program entrypoint");

    
    let account_info_iter = &mut accounts.iter();

        let game_account = next_account_info(account_info_iter)?;
        let player_account = next_account_info(account_info_iter)?;
        let server_account = next_account_info(account_info_iter)?;

        msg!("game account key: {:?}", game_account.key);
        msg!("player x account key: {:?}", player_account.key);
        msg!("server account key: {:?}", server_account.key);

        let dorito = &game_account.try_data_len()?;

        msg!("size of dorito: {:?}", dorito);
Ok(());`
`{
  "jsonrpc": "2.0",
  "result": {
    "context": {
      "slot": 75983378
    },
    "value": {
      "accounts": null,
      "err": null,
      "logs": [
        "Program 72eFRofEWfZbftitDVQjZwKCUk5umPbsn7kjHsDDPQrk invoke [1]",
        "Program log: Helloworld Rust program entrypoint",
        "Program log: game account key: GR5DRLFCx87vPNTUQ53JTnY5Tpy9YFhDQoMuMwNpkpGs",
        "Program log: player x account key: 5Z9oJEs2hUBd5vNTDWZq4A7NANAkPeBRRjQw7eEvbPwB",
        "Program log: server account key: FbSwjbBBKPzUiPzK9SewRnVTAK1USEXf9xvv248c2zAm",
        "Program log: size of dorito: 0",
        "Program log: done",
        "Program 72eFRofEWfZbftitDVQjZwKCUk5umPbsn7kjHsDDPQrk consumed 37558 of 200000 compute units",
        "Program 72eFRofEWfZbftitDVQjZwKCUk5umPbsn7kjHsDDPQrk success"
      ]
    }
  },
  "id": 7`
should be 307 bytes size, but it's giving 0..
`Public Key: GR5DRLFCx87vPNTUQ53JTnY5Tpy9YFhDQoMuMwNpkpGs
Balance: 0.0030276 SOL
Owner: 72eFRofEWfZbftitDVQjZwKCUk5umPbsn7kjHsDDPQrk
Executable: false
Rent Epoch: 175
Length: 307 (0x133) bytes`
<@!785084693023424542> yeah it's this on devnet
correct. that is the idea.
Ah, so this last bit "And only if the data is zero-initialized or empty" means that I should not have to fear malicious owner x-fers into my program as long as I check if the accounts I'm handling have been initialized and are owned by my program. Does this sound right?
yes ownership of an account can change, by the owning program, if -> is writable, and 0init/empty.  https://docs.solana.com/developing/programming-model/runtime#policy
does the account exist? the one your passing in, is it the right account you passed in vs iterating on? what data are you expecting and not getting?  if you do a get account info on the front end or test do you get diff results? is there additional data in the account? no error just 0 len?

what if you just try .data_len() ?
this is 0 wut
if your using cli,    --help after most things sometimes leads to useful commands you can use occasionally. there is also solana-genesis among others. so many awesome commands: https://docs.solana.com/cli/usage
`let game_account = next_account_info(account_info_iter)?;
let dorito = &game_account.try_data_len()?;

        msg!("size of dorito: {:?}", dorito);`
any specific idea why would size of data account that is passed as one of keys would be 0?
thanks!
if you need to, you can reset the ledger, -r --reset
I believe some resources are being worked on in the community, in the mean time metaplex alone is probably the best and most available resource and reference, with examples. What specifically are you having trouble understanding in regards to NFT, collections, and generation? For development and coding or just learning about.
I can't garbage collect with spl-token, it's throwing an error `RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0 [7 log messages]`
Hi, how does one cleanup/purge a validator? I restarted the validator but there is residual wallets from the last ledger still here
borsh is better performance wise, but i don't know any diagnostics. maybe google.
I'm struggling to wrap my head around generative NFTs on solana and how collections of NFTs can be established. Any good resources? I've had a look at metaplex but i'm a little lost
What is difference between borsh serialization/deserialization vs serde serialization/deserialization ?
the error above that i had was due to not adding all required signers in transaction
If using anchor, unless needed, you probably want to be building with 'anchor build' command, among other things. This is a great guide to getting started with anchor: https://project-serum.github.io/anchor/getting-started/introduction.html and the project serum anchor discord is great too for anchor specific questions.
have you ever resolved this? seems like they changed something but no one knows lol
to my knowledge, there is nothing like etherscan where you can view the actual code for the contract in the native coding language like etherscan, there are resources where you can get a lot of the information associated with transactions, account and program address, etc. https://explorer.solana.com/ https://solanabeach.io/ https://solscan.io/
https://github.com/michaelhly/solana-py/issues/64
seems someone else has similar issue with python lib
was there any specific change on rpc for transaction deserialization?
any ideas why would i get `{"jsonrpc":"2.0","error":{"code":-32602,"message":"invalid transaction: index out of bounds"},"id":3}
` when trying to submit transaction when creating new data account for program ? what particular index are we talking about?
I found the answer. Thanks trent: https://discord.com/channels/428295358100013066/517163444747894795/871837810431238174
you have your validator private key in ```~/.config/solana/id.json```
off hand, if you look at the following you should be able to figure it out, between the types of encoding, and serializing, and fields in the struct, classes, instructions. between the web3, cli, and source, you can search on things like parse, getParsedAccountInfo, ParsedAccount, and down to parse_stake, account-decoder, parse_account_data, 'decode', deserialize, for potential methods that will help parse, deserialize, and track down the fields and info you are looking for.  many of them match/switch on account types, for the type to decode/deserialize.
Hello. So I'm trying to get my local test-validator accounts into the phantom wallet. 
How do I do this? It asks for a private key and `solana-keygen pubkey ./id.json` give only public key and rightfully so. 
I understand that private keys are meant to be safe but how do I get the account on my local machine with sol tokens into the wallet? 
My question being "How do I get private key from .id.json" ?
Is this even possible?
I have been trying to build the demo anchor project but have been getting ```Running: cargo +bpf build --target bpfel-unknown-unknown --release
error: no such subcommand: '+bpf'``` Sorry for asking such a stack overflow question but I haven't been able to find support for this kind of stuff
this ? https://github.com/Henry-E/dog-money/blob/main/programs/dog-money/src/lib.rs#L52
Has anyone had luck using `Option` in an anchor account?
Can an account owner change after it's been initialized? I understand accounts owned by the token program have a concept of owership, but they're still owned by the token program no matter what, right?

So I don't have to worry about someone else making an account with data and x-ferring it's ownership to my program?
Does anyone know how to get a list of all stake account public keys (or even better, info for all stake accounts, including delegation status) by the owning account public key?
Anyone?
ah, that makes a lot of sense, thanks!
*Anyone
Hey guys, I've been having issues installing the Solana tool suite on Windows. When copying & pasting the line " curl https://release.solana.com/v1.7.10/solana-install-init-x86_64-pc-windows-msvc.exe --output C:\solana-install-tmp\solana-install-init.exe --create-dirs ", an "Invoke-WebReuest" reads " A positional parameter cannot be found that accepts argument '--output' ". Anywayone able to help me out?
https://solstake.io, go to the source code and you will see how to get validators name and logos, it is on-chain
<@585868308419444749> is this token information stored on chain? 

https://explorer.solana.com/address/EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp
Anyone have an example of deserializing a stake account?
There is no way to view contracts unless published by the developer, is that right?
One account, but TX size limit is 1232 bytes, so the deploy is chunked
anyone ran any diagnostics borsh versus serde? how much better performing is borsh?


///////////////////////////////////////////////////////////////////////////////////////////////

It sounds like you want an example and need to learn how to do this. You need to gather and send those parameters in.  This might be a good place to start to learn about the connection and a transaction. https://learn.figment.io/protocols/solana and https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/ are great resources to learn how to use a connection, build a transaction and instructions.
You need to create connection from Connection in the web3 library. 
SIgners are just Accounts passed as array I guess whose sign are required for the transaction.
wallet is an object out of sol-wallet-adapter
https://solana-labs.github.io/solana-web3.js/modules.html#GetProgramAccountsFilter can you explain a little about this?
Can i go through all accounts in the cluster and get owned by some specify program with this?
The docs doesn't tell much!
I want to use the sendTransaction function , it takes 4 parameters. Connection, wallet, instructions and signers. I just know how to write the code for instructions. How to get the rest 3 parameters, which functions should I call, not able to find them
this generally means the program id/address was not found. you may want to check the network your connected to and program id your using/referencing in the transaction your sending. you can also verify if the program exists and some simple data about it in the cli if pointed to the correct network with 'solana program show' passing program id/address
https://github.com/solana-labs/dapp-scaffold/blob/00aa49c1a290937ae65463e7f17fe5364f2b2f5b/src/contexts/connection.tsx#L52
It internally calls the same thing.
Ah sorry about that, I assumed dapp scaffold called the web3 method
<@!466984915376799748> this is not what I am referring to, in the dapp scaffold there are already functions given to get the parameters but I don't know which ones to use
for data like this that you need access to you generally want to pass it in, and you can use something like GetProgramAccountsFilter, that may help you.
https://solana-labs.github.io/solana-web3.js/classes/Connection.html#sendTransaction
https://solana-labs.github.io/solana-web3.js/modules.html#SendOptions
How to get the parameters for the sendTransaction function, I just have the Instructions functions. This is the dapp scaffold repo https://github.com/solana-labs/dapp-scaffold
nope, they must be passed in via transaction account keys
Can i get list of all the accounts owned by my program in the program?
Very hyped
Hey guys, full stack dev who has been doing Solidity for various projects in the past 4 years. Switching to Solana now 🙂 !
hi i am trying to register name with spl-name-service js library.. when i send the instruction createNameRegistry(), this error comes..

ERROR Error: Transaction instruction index 0 has undefined program id
yep, which I think is what anchor does internally
I can't see a way to automate this manual padding without procmacros.
oh yeah you could manually add a padding field, you just can't add types that'll cause the compiler to add implicit padding
Computing those lengths doesn't look like an undecidable problem. So I thought maybe there is a canonical way.
Oh, sorry. By "padding" I meant an extra struct field like `padding: [u8; 7]` for your `Foo` above.
tl;dr - it's definitely a very constrained environment, but you get zerocopy 😻
cc: https://docs.rs/bytemuck/1.7.2/bytemuck/trait.Pod.html#safety
The `Pod` macro does not allow *any* padding.  It'll throw a compile error (eg, that `Foo` struct I shared above)
<@!445425471027544095> In your gist I didn't see an example of a padded struct. Is padding going to be the responsibility of the user?
Is there a canonical way to pad structs? I'm just adding padding arrays with length computed by hand.
it's always been supported but it's not supported in the web3.js sdk, so not very discoverable
also no `bool`, `char`, `enum`s, or `Option<>` since they're not just plain old data (that is, some bit values are invalid for those types)
You can't do this for example:
```
struct Foo {
  a: u64,
  b: u8,
}
```
bytemuck barfs on the implicit padding
Yes, like `#[repr(C)]` and padding which needs to be computed uniquely for every struct.
<@!514892258722709544> - I extracted some of the bytemuck account helper code I've currently got into https://gist.github.com/mvines/b7b9a01251ab53a106b70f2047434019 so you can get a sense for it.  Very much a WIP, but eventually this'll end up in the main SPL repo in some form
wot is this wizardry
is this new?
json-rpc supports batch requests, so you could batch several individual calls to `getTokenAccountBalance` together
Yeah for sure.  But more importantly if you are dealing with large accounts, the BPF stack and heap limits start to bite if you copying data out of the accounts.
bytemuck imposes some annoying annoying restrictions on your types though, so it does require much more effort to work with.  Also anchor supports bytemuck under the hood, so unless you don't want an anchor dependency then it'd just use it for your zero copy needs.
fairly dumb question but is there a way to do this rpc call for multiple tokens: ```getTokenAccountBalance```
yes, that fixed it!
thank you!
I didn't realize that the id wasn't being regenerated on every build
by default the keypair file next to your .so file is used to determine the program id
you might want to check the program id that you're deploying to. it's possible it was created before when your program was smaller and isn't large enough for your current version
So using bytemuck would help to save some compute budget compared to `Pack`?
OK, thanks!
No, it wouldn't.  On instruction failure all changes are rolled back
An example of that would be Mango.
<@!445425471027544095> I have a question about your work with bytemuck https://discord.com/channels/428295358100013066/774014770402689065/880700984563744839
Suppose we used zero-copy mutable access to account data during instruction processing and modified some of it in-place but then a check failed with an error before the instruction was fully processed. Would the account data become modified on the blockchain currently?
hey guys, looking for some support:
I've been successfully building and deploying a couple of contracts to my local test cluster, but after adding some code I now have
`solana program deploy path/to/my.so`
fail on me with:
`Error: Deploying program failed: Error processing Instruction 0: account data too small for instruction`
the .so in question isn't even 90kb... so to me it looks like `solana program deploy` incorrectly calculates the required size of the program's code account 🤔
Also can i do transactions like this if the senders account is not owned by program in smart contract?
Hello, 
Stupid question 
How do we get lamports with with this entrypoint call? : )
` transfer(&senders_account.key, &writing_account.key, 1100);`
<@!607998614760980516> https://docs.solana.com/developing/programming-model/runtime#policy 🙂
each solana smart contract defines its own data encoding. you'll have to ask solfarm how to decode their data, they may have a js library available to help, not sure
token names are stored off-chain unless you're using the metaplex protocol: https://github.com/solana-labs/token-list
there's a dev guide here: https://www.notion.so/Metaplex-Developer-Guide-afefbc19841744c28587ab948a08cfac
How do you get token names using RPC?
why there isnt a tutorial on solana documentation about creating metadata for nft? what good is a documentation for creating a nft without creating metadata?
not from rpc, this would probably need to built as part of an indexing service like thegraph
and ideally would want to paginate the data
thanks
is there any way to get accounts from rpc sorted by a certain parameter i.e. sort accounts in increasing order based on some numerical parameter
I trying to build a very light sort of Solana SDK for AppsScript (Google Sheets backend / equivalent of Excel VBA). I've been able to interact with rpc's such as Solfarm very well, but I am stuck on the Solana rpc.  Here is a small piece of code that I cannot figure out:
```
var data = {
  "method":"getAccountInfo",
  "jsonrpc":"2.0",
  "params":[
    "8Woh2VMqpjk9JgimBSY8hFK2PcfgBc3E8JCSM1sU8cPc",
    {
      "encoding": "base64",
      // "encoding":"jsonParsed",
      "commitment": "confirmed"
    }
  ],
  "id":"153fe278-d7c1-4ee1-a749-5e6c55580b4c"
 }
var payload = JSON.stringify(data);
var options = {
  'method': 'POST',
  'contentType': 'application/json',
  'payload' : payload
}
var uri = 'https://api.mainnet-beta.solana.com/'
var response = UrlFetchApp.fetch(uri, options);
```
It returns something like 
```
{"jsonrpc":"2.0","result":{"context":{"slot":93610923},"value":{"data":["Ixa5e1kjbqvzipK3x1f+ESpJ7kATcmmpp6odnf4vNQktoynwVOtE+3zBnZFwBAAAAAAAAAAAAAA=","base64"],"executable":false,"lamports":1280640,"owner":"7vxeyaXGLqcp66fFShqUdHxdacp4k4kwUpRSSeoZLCZ4","rentEpoch":216}},"id":"153fe278-d7c1-4ee1-a749-5e6c55580b4c"}
```
I know `response.value.data` is giving me the right encoded output through comparisons with Node.js.  But I have no idea what this encoding is or how to decode it to the JSON object that I want (AppsScript doesn't have buffers)... Is it possible to either decode this in AppsScript or to request the data in JSON format from the API?  Any help would be much appreciated!  An AppsScript SDK would bring DeFi on Solana to so many finance people that have no clue how to code, so I think it would be a great thing for the ecosystem.  Thanks!
if you have installed solana command line tool. you can take a look for this
https://docs.solana.com/cli/deploy-a-program
it will told you how to deploy program
and you can start a local node
https://docs.solana.com/developing/test-validator
or just use devnet to develop. it is totally ok.
Hey, I have built a solana program and deployed it as well, Now I am trying to connect it with a react frontend and the Frontend should send be able to send data into the blockchain, I tested the programs and its working perfectly, but I am not able to connect it with react.  I tried using this repo https://github.com/solana-labs/dapp-scaffold .  but I am unable to find docs about how should I process to call the deployed program.
I think for now you can just use borsh to do those serialize/deserialize things for you.
https://github.com/near/borsh-rs
https://www.youtube.com/watch?v=Jz5v_u75xk8
Hello, 
I just saw this tutorial here, He is creating a chat app on solana, I am working on a dapp which would have something similar.
I had one doubt  what this guy is doing is he gets the users public key, then the destination public key and creates account that the program can write into with SIZE for 20 msgs.
He uses local storage to store this public key of the account where the messages are stored. Is this the right thing to do?
I thought of one approach that is to create a account just to store the public key of the account where program can write data, (say it has size of 100)
And then program can figure out where to write data according to the Sender and Receiver address. Can someone suggest me something better?
And also what does arweave do?
Hey are there any examples of how to Pack and Unpack an array that I can look at
sure. you can take a look at this https://github.com/solana-labs/solana-program-library/blob/master/associated-token-account/program/src/processor.rs#L63
is it possible to transfer sol from one account to another onchain ? <:peepothink:602685945724272670>
Yeah pretty cool
ok it will compile solidity into bpf compiled code, this is insane 😮
Contract code is compiled bpf
https://docs.solana.com/developing/on-chain-programs/overview
So it will convert solidity code into rust code basically
Solidity to bpf for Solana
https://solang.readthedocs.io/en/latest/targets.html#solana
Hi, I'm new to Solana dev community and I found the solang-solidity-compiler, is the goal of this is to compile Solidity contracts into Rust contracts or make Solidity contracts "talk" to Rust contracts ? Sorry if this is not clear, i'm just trying to understand the concept :p
I'm not really sure if this is exactly what you are looking for, but maybe it will help somehow.
https://www.youtube.com/watch?v=JwjZLwjY-4w&t=783s
Hey sure <@251377492579975169> . I wanted the nfts to be able to change appearance based on events on chain.
How to sign transactions from the account given in this dapp scaffolding https://github.com/solana-labs/dapp-scaffold , I have written the instruction for the program but not able to connect it with the wallet , could someone please help ?
I heard that borsh works incorrect in client (JS) framework
Where are you having weird output... in Rust CLI, Solana Program, or ???
I can give you a link to one lesson (but it is in Russian)
any friendly resources ?
can someone help with creating a programmable NFT on solana ?
I am have used borsh to save data into my account, But when I try to decode data from my account I am getting weird outputs. Is there any resources I can refer to for this?
optimized for gotta go fast regardless lol
maybe... but what would be the usability of that... 😛 how often does one print 5 numbers? especially without any description supporting them? 😉
r1 - r5

Maybe because it fits snug in the registers
ok, I have to ask
```
#[macro_export]
macro_rules! msg {
    ($msg:expr) => {
        $crate::log::sol_log($msg)
    };
    ($arg1:expr, $arg2:expr, $arg3:expr, $arg4:expr, $arg5:expr) => {
        $crate::log::sol_log_64(
            $arg1 as u64,
            $arg2 as u64,
            $arg3 as u64,
            $arg4 as u64,
            $arg5 as u64,
        )
    };
    ($($arg:tt)*) => ($crate::log::sol_log(&format!($($arg)*)));
}
```
why 5 integers? why not 2 strings or whatever else? XD
guys,, did anyone found a workaround on "Solana Rust BPF toolchain is not available on Windows" issue? I tried install WSL and VM but they both pain in the ass coz some whatever reason wsl cant be enabled on my windows
it seems like a no
Is there any wallet supporting sending a memo?
<@&439193644826755093>
Can someone help me with an example to programmable nft on solana?
Is there a guide about how to use the scaffold https://github.com/solana-labs/dapp-scaffold ,  Like I have coded the instructions but how to execute it from the account
check this
https://www.notion.so/Metaplex-Developer-Guide-afefbc19841744c28587ab948a08cfac
hey there, does solana support metadata in nfts yet? so we can link img or video in nft?
I am hitting this error deploying the basic anchor tutorial to devnet. anyone has any clue what is happening?

```
Error: Deploying program failed: Error processing Instruction 1: custom program error: 0x1
There was a problem deploying: Output { status: ExitStatus(ExitStatus(256)), stdout: "", stderr: "" }.
```
<@!585868308419444749>  https://github.com/solana-labs/solana/issues/19458 ,When I add this option, the result is the same
I want to send user input in the blockchain and letting the user pay for the transaction. I am using this as a base template https://github.com/solana-labs/dapp-scaffold , how to move forward to sending the data and paying from the integrated wallet system
Is that source code size or resulting binary reduction?
Has anyone worked with buffer-layout? What should I specify if the rust data type is u64 , I came across an example like lo.ns64 , it was used for i64 and worked perfectly , but not for u64 , the interesting thing is that lo.ns64 is not in the documentation , tell me how can I pick up the data type for u64 , lo.nu64be does not work
like same error, how to solve?👀
np
Well now that I say it, maybe it is a big deal haha
Okay, thanks : )
just FYI to get an idea, I recently moved my project to anchor and it's reduced my code-size by 70-80%. So it's really nice but if your project is small that's not a big deal anyways 🙂
Is there a way to get the previous blockhashes from inside a program? And how many back can you get if so
For one project for hackathon I'd maybe recommend sticking without it just because it's another thing to learn, not sure how much time it'd save you.
I'd describe it as a framework on-top of Solana that helps eliminate boilerplate and just overall adds some convenient features for devs on Solana. It's an abstraction on-top so it's probably best learning Solana first, then moving to anchor as you'll have an easier time understanding I think. But that's jmo, not sure if 100% technically accurate.
What is anchor? It is something that can help me develop dapps?
It is worth learning giving I am making one project for hackathon and I do have knowledge of smart contract qnd blockchain with tezos
Hey, I'm getting `EiumQYeAnx2MdqHXAiYxRpy5jaSGpeq1LaBg617uDWKj's writable privilege escalated` when calling a program using `invoke_signed`

I noticed that `invoke_signed` takes in `account_infos` so I figured I should be able to pass in additional signer(s) along with the PDA + seeds & bump.
And so I've made 100% sure that the `EiumQYeAnx2MdqHXAiYxRpy5jaSGpeq1LaBg617uDWKj` account is signer and writeable.

But it's giving me this error and I can't figure any other reason: does `invoke_signed` somehow "remove" privileges in the other account infos that's used in the CPI? And only the PDA is a signer/writeable? No right? I thought that if accounts are marked as signers/writeable from the initial tx signature, then and CPI also gets to use those privileges. Is that correct?
Got it, thank you!
Okay, thanks
Ownership can only be changed on accounts whose data has been zeroed
<@!875283781559418890> https://blog.neodyme.io/posts/solana_common_pitfalls#missing-ownership-check
but the ownership of the account can be given to `escrow` outside of contract
yes. so you need to check the account's owner which you read. is the owner expected
if it is your program bug, you allow bob to create a malicious state from your program. I think it cannot be avoid. it is just a bug
but can't someone create another program similar to token-program with the same data format, yet a bit screwed logic, which, if I'm not careful enough, will corrupt my own internal state
The program will transfer money out, because it was given counterfeit state
That's what I'm saying as well
pda only controlled by program. if then transfer their money to a PAD, only the program can transfer it out.
you can check the account's owner is token program and parse it as a token account format
Also for that matter, in that nice blogpost implementing escrow program[1], how is it checked that Bob didn't create a similar state account, which holds the same data but with `initializer_token_to_receive_account_pubkey` pointing to another Bob's account? This way he would be able to steal Alice's money, by transferring his own money back to himself again, no?

[1]: https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/#q-a
I think you just compare the pubkey equals to token program ?
u64 is 8 bytes. you call create account and allocate 8 bytes for your account then you pass it to your account to store u64.
system program don't care about how you use your space. your program define them.
I get a minus in calculations if I use i64, although the logic and calculations are correct, I will rewrite my program, but it would still be easier to use u64
So I can use u64 or not ? I don't quite understand you
And for that I would need to receive an account of spl-token as well, how can I make sure that I get, an actual `spl-token` and not something pretending to be it
You can check that the account's `owner` field matches the spl-token program's program id.
create account can only allocate size. after you create it then you pass the created account to your program to store your u64
So you want to know that an account that was passed is owned by the spl-token program?
Inside my program, when calling `next_account_info`
What do you mean by "got" ?
How can I verify that my program got `token_program` and not some rogue contract?
do you know why when we create an account with a structure via create account with seed , the structure cannot contain u64 <@!814228493302497301>
No, it is fixed at create time.
No one knows ?
then people can start making wS**0**L and wreck people ( O => 0), looking forward to it.
Nothing is safer than keeping mint addresses on a tiny piece of paper
<@!788215642070581289> Who can tell me why I can not put in the structure u64 and create an account with this structure ?
I want to send user input in the blockchain and letting the user pay for the transaction. I am using this as a base template https://github.com/solana-labs/dapp-scaffold , how to move forward to sending the data and paying from the integrated wallet system
Managing it is hell
We definitely want that on chain at some point
How about basic symbol, logo and link for tokens though? Like <@!832686202074300446>/token-list but on-chain. But i think the problem is who is the authority for all those existing tokens, for which the token mint keypair is probably long gone
Hello, 
The data size in the account is adjustable? Or I have to set it when I create an account?
surprisingly sparse information about minting your own nfts beyond the official documentation
someone in general suggested using metaplex.  I'm really just trying to mint some artwork to sell on solanart or similar marketplaces
Not sure if there's a better way though
I think a way you could do it is how I suggested above, where you have a mapping from token ID to NFT metadata that is enforced by a smart contract.
fairly new to minting NFTs, obviously
Anyone know how to attach digital artwork to an NFT token?  I've read through solana documentation and created the token, minted 1, etc.  How exactly does one then attach digital goods to said token?
to stay up to date: solana discord announcement channels, twitter subscribe to notifications, solana.com. they seem to be going on frequently.  solana summer hackathon was recently.
It seems like you only need to keep track of the following state if you're launching an NFT on Solana:

1. # of NFTs minted
2. A mapping of NFT token public key => NFT metadata (Current owner, IPFS CID, on-chain traits, etc)

It's my understanding that you can replicate mappings in Solana smart contracts with program derived addresses, in the above case hashing the NFT token public key + some constant string, and allocating an account at that address that's owned by the NFT smart contract.

However, with the above architecture it makes it difficult to look up how many NFTs one user owns since there is no reverse mapping of user public key => NFTs owned. I understand I could add the two additional mappings to make this possible:

1. Mapping of user public key => number of NFTs owned
2. Mapping of user NFT # => NFT token public key

However, this feels like I'm storing too much redundant data on-chain and there's a better way to do this. Am I missing something?
Any good NFT tutorials for Solana?
you can see how large the size is by calculating the data and serialized size, as well as run tests for compute units, fees, and transaction simulation.  check out https://github.com/solana-labs/explorer, which has source code for these things and much more. https://explorer.solana.com/
when's the next big solana hackathon / how would I find this out or stay up to date?
Oh wow I'm a headass, thank you so much!
Are  you querying the correct cluster?
I'm getting 3959073520 lamports for an account with ~9.9 sol
I messing with the python solana package but get_balance is returning the wrong value?
Is there a way to see how large a transaction is before we send it?
Hi , I submitted an issue. Can someone help me? https://github.com/solana-labs/solana/issues/19458
Unsure personally. It may be something on the backend as well.
Is there any way I can slow down the rate at which those commands are sent?
In case it matters, I'm running wsl2 on windows 10
devnet
Sounds like you hit a rate limit. When you deploy a program, you send a lot of RPC calls out to the jsonRPC endpoints. What network are you running on?
I'm brand new to solana and trying to go through the tutorial on Figment. I've gotten through to the point where I'm supposed to deploy the rust program but when I try I get this message. Does anyone know what I'm doing wrong.

Error: Data writes to account failed: Pubsub error: UnexpectedMessageError("{\"error\": Object({\"code\": Number(-32603), \"message\": String(\"Internal Error: Subscription refused. Node subscription limit reached\")}), \"id\": Number(1), \"jsonrpc\": String(\"2.0\")}")
<@!489206164270350337> Thank you so much. That did it! I was pulling my hairs.
https://discord.com/channels/428295358100013066/517163444747894795/870111750085824512
I ran into this issue because I installed rust with brew. Uninstalled with brew and installed via the recommended way on Rust and it worked fine
We need to escalate  this all the way to Anatoly. lol.
sigh
I'm on wsl ubuntu within window
<@&843913730203189318> im having the same issue!
Can someone please help me resolve this?
https://stackoverflow.com/questions/68599747/rust-solana-build-error-no-such-subcommand-bpf
I have tried using stable and the same problem happens
rustup toolchain list -v

stable-x86_64-apple-darwin (default)        /Users/smith/.rustup/toolchains/stable-x86_64-apple-darwin
1.53-x86_64-apple-darwin        /Users/smith/.rustup/toolchains/1.53-x86_64-apple-darwin
bpf     /Users/smith/.local/share/solana/install/releases/1.7.10/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust
Thanks for for helping out <@!693486673606082580> . However,  I cannot get a contract to compile. It looks like i am not the only one that has come across this error. There is a stack overflow question posted and there are several people from searching the discord that have had a similar problem

DK: /Users/smith/.local/share/solana/install/releases/1.7.10/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: rustup toolchain link bpf /Users/smith/.local/share/solana/install/releases/1.7.10/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust
Running: cargo +bpf build --target bpfel-unknown-unknown --release
error: no such subcommand: `+bpf`

    Did you mean `b`?
I have used borsh to serialize my instruction data and store it to a account. I am facing issues when I try to decode data from accounts to typescript interfaces. Can someone share any resources or tips on where I might be wrong?
thank you
I tried to use solana-gossip roc-url -- entrypoint 192.168.74.199:8001 to obtain the cluster RPC in my LAN, but it can't work normally .Can someone help me?
hi, how can I get the Token Name from the RPC API?
The former.  We just release from the mirror
If I want to contribute back to the solana web3js docs, should I make a PR to `solana-labs/solana`, or `solana-labs/solana-web3.js`?
https://solmaz.io/2019/02/24/scalable-reward-changing/
take a look at this for example
you need to do it in a way that the users themselves "harvest", so they poll, rather than you pushing to their accounts
if you want to do something like staking, where token emissions are distributed to multiple users
what is the use case?
never did it, don't know if it's possible to batch it
<@!693486673606082580> What's the idiomatic way to have a program transfer tokens to a bunch of accounts in a list?
you could try constructing it: `AccountInfo::new(key, is_signer, is_writable, lamports, data, owner, executable, rent_epoch)`
ah, it looks like invoke_signed needs an accountInfo too
```
pub fn transfer<'a, 'b, 'c, 'info>(
    ctx: CpiContext<'a, 'b, 'c, 'info, Transfer<'info>>,
    amount: u64,
) -> ProgramResult {
    let ix = spl_token::instruction::transfer(
        &spl_token::ID,
        ctx.accounts.from.key,
        ctx.accounts.to.key,
        ctx.accounts.authority.key,
        &[],
        amount,
    )?;
    solana_program::program::invoke_signed(
        &ix,
        &[
            ctx.accounts.from.clone(),
            ctx.accounts.to.clone(),
            ctx.accounts.authority.clone(),
            ctx.program.clone(),
        ],
        ctx.signer_seeds,
    )
}
```
you can replicate what anchor does in their impl
sorry, that's sol, not a specific token
```
    let ix = anchor_lang::solana_program::system_instruction::transfer(
        from.key,
        to.key,
        amount_in_lamports,
    );

    anchor_lang::solana_program::program::invoke(&ix, &[from, to, system_program])
```
then you can do this
https://github.com/project-serum/anchor/blob/master/examples/cashiers-check/programs/cashiers-check/src/lib.rs#L22
this is easier
It appears to have the type `AccountInfo` which means I still have the same problem as before
highly recommend to use anchor
take a look here
https://github.com/project-serum/anchor/blob/master/examples/spl/token-proxy/programs/token-proxy/src/lib.rs
<@!693486673606082580> Where does `to_account` come from?
this is how you do a transfer in anchor

```
let cpi_transfer_accounts = Transfer {
            from: from_account.clone(),
            to: to_account.clone(),
            authority: user.clone(),
        };
        let cpi_ctx = CpiContext::new(token_program.clone(), cpi_transfer_accounts);

        let result = token::transfer(cpi_ctx, amount);
```
it does a lot of things for you that you would do manually
https://project-serum.github.io/anchor/getting-started/introduction.html
No, what is anchor?
are you using anchor?
But I don't know how to construct the instruction
<@!693486673606082580> That's exactly my use case. I have a data account which stores the key
have you looked at anchor?
let's say you have a data account which stores the key
<@!693486673606082580> How would I take it from a field?
afaik, you have to, since every account touched by your transaction needs to be declared upfront, but maybe cpi is another instruction altogether so you could take it from a field
<@!445425471027544095> ^
If I want to create a CPI call to transfer tokens to an account, does the account I want to transfer the tokens to have to have been passed in as an argument? Is it possible to read the account key from somewhere else instead?
rustup toolchain list -v
stable-x86_64-apple-darwin (default)    /Users/smith/.rustup/toolchains/stable-x86_64-apple-darwin
1.53-x86_64-apple-darwin        /Users/smith/.rustup/toolchains/1.53-x86_64-apple-darwin
bpf     /Users/smith/.local/share/solana/install/releases/1.7.10/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust
i don't remember doing this specifically, that's why I think you need to do this again https://docs.solana.com/cli/install-solana-cli-tools#use-solanas-install-tool
you need to have bpf
rustup toolchain list -v
Hello, guys. Anyone now any solution to solana like loom?
so that might be just an alias
which is just specifying the target only
I have the cli and have a validator-test running
i think cargo build-bpf resolves to " cargo +bpf build --target bpfel-unknown-unknown --release"
yes
did you install solana?
I can find anywhere in the docs where it says to install this dependency
cargo install solana-cargo-build-bpf
    Updating crates.io index
error: could not find `solana-cargo-build-bpf` in registry `https://github.com/rust-lang/crates.io-index` with version `*`
cargo intall solana-cargo-build-bpf
Probably better to just get it from the solana CLI tool suite
I'm not sure that's a real release though
```
$ cargo search build-bpf
captain = "0.1.0-alpha.0"           # Program management for Solana and Anchor.
sol-did = "0.2.0"                   # Solana Decentralized ID Program
solana-cargo-build-bpf = "0.0.0"    # Compile a local package and all of its dependencies using the Solana BPF SDK
```
one second
cargo install build-bpf
    Updating crates.io index
error: could not find `build-bpf` in registry `https://github.com/rust-lang/crates.io-index` with version `*`
I am also getting this error can someone please help out?
you need to cargo install
I am trying this out too and I am also getting this error. Can someone please help out?
i tried to sleep for 100ms but still doesn't work
how can I make sure that when I call `await program.provider.connection.getAccountInfo(account, "confirmed").lamports` I get the latest value? when I call it and print it on the console it shows an old value, then when I check on the explorer I get the "correct" (updated) value?
Yes, we want the program to be standard for on-chain governance. However the recommended scenario is to use clones of the program and then put the clone under it's own governance so only the created organisation has authority to upgrade it. We are working on snapshot/withtally style UI which would allow you to use all the clones from one place
this worked, thanks
You could drop the `let me = Keypair::new();` and just use `payer` for `me`
The rest looks pretty good though.  If you're still stuck creating the SPL Token account, share your latest code and I'll try to spot the next issue!
Not off hand. I've got one here actually but I'm not ready to push it to a public repo just yet 😕
<@!445425471027544095> Thanks so much
Do you know of an example program/test I can look at somewhere?
This'll get you a little further along.  The rent and data fields are definitely wrong for that `create_account`:
```
    let (mut banks_client, payer, recent_blockhash) = program_test.start().await;
    let my_tokens = Keypair::new();
+   let rent = banks_client.get_rent().await.unwrap();

    let create_instr = system_instruction::create_account(
        &me.pubkey(),
        &my_tokens.pubkey(),
+       rent.minimum_balance(spl_token::state::Account::LEN),
+       spl_token::state::Account::LEN as u64,
-       Rent::default().minimum_balance(0),
-       0,
        &token_program,
    );
```
I'm going to ask my question from earlier again in case someone is around who can answer it:
When initializing an account in the token program, what data do I need to _have_ in that account?

```
    let me = Keypair::new();

    let token_program = spl_token::id();
    let mut program_test = ProgramTest::default();
    program_test.add_account(
        me.pubkey(),
        Account {
            lamports: sol_to_lamports(100.0),
            data: vec![],
            owner: system_program::id(),
            ..Account::default()
        },
    );
    let (mut banks_client, payer, recent_blockhash) = program_test.start().await;

    let my_tokens = Keypair::new();

    let create_instr = system_instruction::create_account(
        &me.pubkey(),
        &my_tokens.pubkey(),
        Rent::default().minimum_balance(0),
        0,
        &token_program,
    );
    let init_instr = spl_token::instruction::initialize_account(
        &token_program,
        &my_tokens.pubkey(),
        &spl_token::native_mint::id(),
        &me.pubkey(),
    )
    .unwrap();
    let mut transaction =
        Transaction::new_with_payer(&[create_instr, init_instr], Some(&payer.pubkey()));
    transaction.sign(&[&payer, &me, &my_tokens], recent_blockhash);
    banks_client.process_transaction(transaction).await.unwrap();
```
results in
`Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA failed: invalid account data for instruction`
feels strange (as opposed to the token program which makes this explicit)
yep
so there's no direct connection between the from and to, there could be 5 accounts exchanging between each other, all that the runtime knows is the net change for each?
got it
The runtime just makes sure that the total number of lamports is the same before/after your program executes, and that accounts that aren't owned by your program had no debits.
and, is there a library/util that makes this prettier?
just for my understanding, how does the runtime know that the lamports crediting the new account come from my program owned account?
oh, I see
From your program you can credit lamports from any account, even ones that your program does not own.  But you can only debit lamports from accounts your program owns
You're still using the solana program here.  Instead directly manipulate the `lamports` field on the account that the program owns, like this:
https://github.com/solana-labs/solana-program-library/blob/0db32380a8358f19060dc3af77e3b5b203c47c43/token/program/src/processor.rs#L293-L301
on the explorer it shows that my program owns the `from` account
where from was created with `await serumCmn.createAccountRentExempt(provider, programId, 9)` in typescript and programId is my program
checkout dappscaffold for a react front end and wallet integration: https://github.com/solana-labs/dapp-scaffold
```
let ix = anchor_lang::solana_program::system_instruction::transfer(
        from.key,
        to.key,
        amount_in_lamports,
    );

    anchor_lang::solana_program::program::invoke(&ix, &[from, to, system_program])
```
within an instruction of my program I'm trying to do the transfer
yes, the program is doing it
The program must transfer the SOL out.  The system program can't transfer SOL from accounts that it doesn't own
how do I sign this?
hi, trying to transfer SOL from an account already owned by the program (not a PDA) and I'm getting invalid signer
I built a smart contract which could simply send data into the blockchain (tweaked the hello world program), now I need to connect a react frontend to send variables from the frontend and those variables should be used by the smart contract to send to the blockchain, I am trying to setup the Server for it which will handle all the API calls but its giving a lot of trouble. Is there an easy way to do this ? Could someone send some resources regarding the same ?
oh, I see.  Sorry looks to be something with the intellij setup, I know nothing about that thing
my `cargo build` and `cargo build-bpf` work fine but i don't have any navigation in intellij b/c of this build error
tried to resync afater `rustup default stable`
```
rustup default stable 
info: using existing install for 'stable-x86_64-apple-darwin'
info: default toolchain set to 'stable-x86_64-apple-darwin'

  stable-x86_64-apple-darwin unchanged - rustc 1.54.0 (a178d0322 2021-07-26)

```

```
Execution failed (exit code 1).
/Users/rchen/.cargo/bin/xargo metadata --verbose --format-version 1 --all-features
stdout : + "/Users/rchen/.cargo/bin/rustc" "--print" "sysroot"
ERROR: the sysroot can't be built for the Stable channel. Switch to nightly.

stderr :
```
Try the latest stable rust (1.54)
```
 Compiling core v0.0.0 (/Users/rchen/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core)
     Running `/Users/rchen/.cargo/bin/rustc --crate-name core --edition=2018 /Users/rchen/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C metadata=00f24b9015421352 -C extra-filename=-00f24b9015421352 --out-dir /var/folders/y2/lgf8xp1n4hggvbycl67bgxwr0000gn/T/xargo.AS1l3DyoHtxZ/target/x86_64-apple-darwin/release/deps --target x86_64-apple-darwin -L dependency=/var/folders/y2/lgf8xp1n4hggvbycl67bgxwr0000gn/T/xargo.AS1l3DyoHtxZ/target/x86_64-apple-darwin/release/deps -L dependency=/var/folders/y2/lgf8xp1n4hggvbycl67bgxwr0000gn/T/xargo.AS1l3DyoHtxZ/target/release/deps --sysroot /Users/rchen/.xargo/HOST -Z force-unstable-if-unmarked`
    Finished release [optimized] target(s) in 14.57s
+ RUSTFLAGS="--sysroot /Users/rchen/.xargo/HOST -Z force-unstable-if-unmarked"
+ "cargo" "build" "--release" "--manifest-path" "/var/folders/y2/lgf8xp1n4hggvbycl67bgxwr0000gn/T/xargo.mqdEO6CuIOFA/Cargo.toml" "--target" "x86_64-apple-darwin" "-v" "-p" "compiler_builtins"
error: failed to parse manifest at `/var/folders/y2/lgf8xp1n4hggvbycl67bgxwr0000gn/T/xargo.mqdEO6CuIOFA/Cargo.toml`

Caused by:
  dependency (compiler_builtins) specified without providing a local path, Git repository, or version to use.
error: `"cargo" "build" "--release" "--manifest-path" "/var/folders/y2/lgf8xp1n4hggvbycl67bgxwr0000gn/T/xargo.mqdEO6CuIOFA/Cargo.toml" "--target" "x86_64-apple-darwin" "-v" "-p" "compiler_builtins"` failed with exit code: Some(101)
note: run with `RUST_BACKTRACE=1` for a backtrace

stderr : 
```
```
Execution failed (exit code 1).
/Users/rchen/.cargo/bin/xargo metadata --verbose --format-version 1 --all-features
stdout : + "/Users/rchen/.cargo/bin/rustc" "--print" "sysroot"
+ RUSTFLAGS="--sysroot /Users/rchen/.xargo/HOST -Z force-unstable-if-unmarked"
+ "cargo" "build" "--release" "--manifest-path" "/var/folders/y2/lgf8xp1n4hggvbycl67bgxwr0000gn/T/xargo.AS1l3DyoHtxZ/Cargo.toml" "--target" "x86_64-apple-darwin" "-v" "-p" "core"
warning: Patch `rustc-std-workspace-alloc v1.99.0 (/Users/rchen/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-alloc)` was not used in the crate graph.
Patch `rustc-std-workspace-core v1.99.0 (/Users/rchen/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-core)` was not used in the crate graph.
Patch `rustc-std-workspace-std v1.99.0 (/Users/rchen/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/library/rustc-std-workspace-std)` was not used in the crate graph.
Check that the patched package version and available features are compatible
with the dependency requirements. If the patch has a different version from
what is locked in the Cargo.lock file, run `cargo update` to use the new
version. This may also occur with an optional dependency that is not enabled.
```
this is the error i get in the build window after running `rustup default nightly`
and it's not working on nightly either?
i used `rustup update` and everything is already up to date. i switchted to 1.51 toolchain b/c i saw an earlier post that said 1.54 isn't supported yet
<@!652573044375552024> Try updating your rust toolchain
```
 rustup show                              
Default host: x86_64-apple-darwin
rustup home:  /Users/rchen/.rustup

installed toolchains
--------------------

stable-x86_64-apple-darwin
nightly-x86_64-apple-darwin
bpf
1.51.0-x86_64-apple-darwin (default)

active toolchain
----------------

1.51.0-x86_64-apple-darwin (default)
rustc 1.51.0 (2fd73fabe 2021-03-23)
```
What version of Rust are you on?
i've been running into an issue w/ intellij + rust plugin when trying to sync/build my program

has anyone else ran into this?

```
 /Users/rchen/.cargo/bin/xargo metadata --verbose --format-version 1 --all-features
+ "rustc" "--print" "sysroot"
ERROR: the sysroot can't be built for the Stable channel. Switch to nightly.
```

using intellij 2021.2.1 ultimate edition + rust plugin version 0.4.153.4056-212
Good luck!  Most of the Metaplex expertise hangs out over there rather than here
I asked them last night, but hopefully someone answers me there. I'll wait for their response
These are probably all questions better suited for the Metaplex Discord server. https://discord.gg/metaplex
And will the Solana I used to mint, but never showed up on my store, ever come back? I've minted things multiple times
Can I get some help regarding transactions, I've been minting NFTs on metaplex and uploading some characters. Sometimes it will say I successfully minted it, but it actually doesn't pop up in my store, but the transaction says success. Sometimes I pay again to mint it even 2x, 3x, and even 4x before it actually gets minted onto my store. How do I fix it? The transaction shows success: https://explorer.solana.com/tx/4nzAQyW5BUvCgsMJjbbW2doRG1cGQRGvCqovp31LmD6gF1WWWq4yEW8hEyBP7BtDPKRwnyGUeVJC1UxLHRihvunR
Im getting a node subscription limit reached on devnet. Is it offline?
yep
does a pda with the same seed return the exact same key everytime ?
https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getParsedAccountInfo
that worked -- you're amazing. thanks a ton!
ohhh
Yes it is encoded in the data, which you can get parsed if you include `{"encoding":"jsonParsed"}` as in my example
maybe it's encoded in the data field somehow?
I tried that, it yields the wrong addr.. (maybe the token program addr?):
```
{"jsonrpc":"2.0","result":{"context":{"slot":93483530},"value":{"data":["DsartVYaPiGy4/zMuUiuzSpMoN+ZapClGkixDLCKDyfqsx5e66MDieoSb2NJ49oO0zoSsQTMDVsDKCaIvT7uGwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","base64"],"executable":false,"lamports":2039280,"owner":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA","rentEpoch":216}},"id":1}
```
Try:
```
{"jsonrpc":"2.0","id":1,"method":"getAccountInfo","params":["<TOKEN_ACCOUNT_ADDRESS>",{"encoding":"jsonParsed"}]}
```
given a Token Account how do I get the Owner? as in this page https://explorer.solana.com/address/39dLtKYEHcLWdPs3B2r8gSKTE1ZGyFRQRyEVaZ2TVk3N maps 39dLtKYEHcLWdPs3B2r8gSKTE1ZGyFRQRyEVaZ2TVk3N  to GoApFfrzHJzo57JF52fyxhMXmGfnHQCkjqWQbnNeXeVp

looking for the right rpc command(s) to call against my node
Can anyone tell me why ```longroad@ubuntu:~/solana-release/bin$ spl-token create-token
error: No such file or directory (os error 2)``` this happens? When i use ```spl-token --help``` there is the right output! tf? Please help
<@!539801435571748868> I still haven't figured out what's supposed to go here. Is there any documentation I'm missing?
Hi I'm new to solana and im new to blockchain 👋

I'm trying to get the hello world example running but ive ran into an error
Repo im using is https://github.com/solana-labs/example-helloworld
```bash

> helloworld@0.0.1 build:program-rust
> cargo build-bpf --manifest-path=./src/program-rust/Cargo.toml --bpf-out-dir=dist/program

error: no such subcommand: `build-bpf`
```

OS: 
```bash
windows WSL ubuntu 
uname -a
Linux DESKTOP-OMF548Q 4.4.0-19041-Microsoft #1151-Microsoft Thu Jul 22 21:05:00 PST 2021 x86_64 x86_64 x86_64 GNU/Linux
```
```bash
>rustc --print sysroot
/home/oran/.rustup/toolchains/stable-x86_64-unknown-linux-gnu
>rustc --version
rustc 1.54.0 (a178d0322 2021-07-26)
node --version
v16.7.0
 npm --version
7.20.3
solana --version
solana-cli 1.7.10 (src:03b93051; feat:660526986)
```

Any help would be greatly appreciated!
-o
cool. its working now. i am logged in
i would like to become a student
is there a way into solhack?


///////////////////////////////////////////////////////////////////////////////////////////////

Hey guys, quick question here. I am learning Rust and my goal is to be a blockchain developer. I am interested in both Solana and Polkadot for developping Dapps. In your opinion which blockchain is the best?
Anyone knows whats happening with RPC node? Gives me "message": "Method not found" when sending queries to it.
Fresh git clone
I get stack on init store. Transaction timeout on devnet
Sorry I forget off the top of my head: do accounts need to be specified in the initial TX for their state to be loaded/accessible at runtime? 
So it wouldn't be possible, for example, to read an address stored on-chain in another accounts state and somehow deserialize/access that accounts data right?
Anyone know where to find opensource dapp scaffolding that looks like saber?
following
here's another question: can I get every account that lists a specific account as its Owner Program? (ie, can I list all "child accounts" for a given Program Account?)
This looks good will give it a try for sure, thank you 🙂
not sure if this is what you are looking for https://github.com/solana-labs/break
Hello, is there a possibility to load test the testnet of solana? Would like to compare it with the eth testnet after the load test to see how much transaction can be done etc
hi- I'm an experienced ETH developer but relatively new to Solana. I'm inspecting an executable Account, and I'd like to see the transaction that created it. It's got many thousands of transactions associated with it, so loading transaction history newest to oldest is out of the question. any ideas?
https://www.metaplex.com/ and the github on their site has a lot of NFT examples and auction and store support.   Here is a simple example to create NFT with the Solana Program Library: https://spl.solana.com/token#example-create-a-non-fungible-token
finally , its done <@!788215642070581289> thanks for answering my questions, bro!
Also, How a derivative asset can be created on Solana Ecosystem.
Hi, I want to know how vesting exactly works in the solana ecosystem
any solana dev here that i can PM some questions please?
ah looks like it was downgraded from 1.7? (`getSignaturesForAddress` only in 1.7)
```
$ solana cluster-version
1.6.22
```
Having issues with the `getSignaturesForAddress` rpc method with `https://api.mainnet-beta.solana.com`

```
(node:45907) UnhandledPromiseRejectionWarning: Error: failed to get signatures for address: Method not found
    at Connection.getSignaturesForAddress (.../node_modules/@solana/web3.js/src/connection.ts:3285:13)
```
did something change? (perhaps related to issues earlier?)
i keep gettting errors with this api on web3 js.. 
would be grateful if someone could explain or help it to work..

https://github.com/solana-labs/solana-program-library/blob/928bb764ed9c15e7978763b2a182e99c7481a5f5/name-service/js/src/bindings.ts#L44
that’s why I’m asking how to do it in one http request because I don’t want to write my own library if I don’t have to
`Rent::get()?.minimum_balance(writing_account.data_len())`
Is this the right usage?
I am not sure i should multiply this with 8 (length of u8 array so total with be writing_account.data_len()*8) or not?
How much does it cost to create an NFT with metaplex today?
I need some help
Any developer free?
Hello
Cool, Thanks : )
I'm not quite sure but the docs says
```
Currently, the rent cost is fixed at the genesis. However, it's anticipated to be dynamic, reflecting the underlying hardware storage cost at the time. So the price is generally expected to decrease as the hardware cost declines as the technology advances.
```
so basically is dynamic but for now almost a fixed value.
The exemption_threshold is same for say 200 bytes, whenever i get it?
or could it be 1000 lamports now 2000 lamports a year later?
thank you!
yup. dex use many PDA. this is a kind of address only program can sign it.
https://docs.solana.com/developing/programming-model/overview
programming model is very worth to read it.
it contains all you need
official rpc endpoint has rate limit. if you want to get rid of it you can host your own node or use something like https://rpcpool.com/
ok thank you, this part feels clear.  Looking at more complicated transactions like DEX trades I still have trouble understanding them, but it's probably just an outflow of more accounts like the above
and also: Is anyone in the Solana ecosystem hosting a remote Solana node with an API like Infura does for ETH?

Background- I’m looking to build an event handler that filters transaction by type and by data and then notifies a client when it receives that transaction. Do I need to run a full node for that? I was hoping to be able to use some remote infura-like API for that instead.
In solana you will have a SOL address.
Every token in solana, like RAY, SRM.
We call them “mint” and these address are different. (RAM mint and SRM mint are different address)
If you want to hold mint (token), you need create a token account.
One token account can only hold one type of token.
So your RAY holder and SRM holder are different.
========
In real world.
If you want to hold RAY and SRM,
you will have
1. SOL address
2. RAY token address
3. SRM token address
The addresses have been confusing for me as someone new to Solana.  Do you happen to know of a good explainer video or resource to help me think about it?  I know it's laid out in docs but somehow I haven't internalized it yet
got it, thanks
no. if you are using the same SOL address to control them. you will get the only one USDC ATA
hey when using `useUserBalance` from the dapp scaffold, can i change the rate at which market data is refreshed? it looks like calls are made every 1-3 seconds
like can i have 10 ATAs for USDC? or only 1?
can an account have more than 1 ATA for any given token?
there are many accounts in solana
your SOL address
your token A addres
your WSOL address (one of token address)
and all of them are different.
yes but recommend to use ATA.
https://github.com/hyperledger-labs/solang

I have not used but you may find this useful
hey, noob question alert 

I created a token and wrapped SOL around it
the address of token and wrapped token will be different?
noob question but one account can control more than 1 token account of any specific token right?
To me rust looked verbose at first place so wanted to just on solana web3 first
https://www.rust-lang.org/
I think Solana is still on hackathon stage..
Whaaat, still on 1?
I am a dev for smart contracts
the project will be out of budget to cover all the bugs.
probably it will come up 1.0, 2.0, 3.0 ... and more iterations.. endless breaking changes..
Rust sucks..
i dont want to wasting my life to reinvent the wheel again on rust..
for now.
its my opinion
start using rust will just make alot of bugs and security weakness because the languages itself is not yet stable enough.
Yeah feel pretty comfortable with it as well
I think solidity is solid and secured by the language.
I dont touch any rust coding from polkadot because its only the role for the main chain developers. Its their job to make it easy to access and deploy smart contracts for the solidity developers.
What's your background
that why i come here to find some supports. .
I just know that  the spotlight from solana is fast and low gas.
when solana is starting to adopt evm, let me know..
project cannot raise fund because the MVP is forever..
slow devs
low adoptions
rust sucks..
can't even deploy a Token
I'm freaking out as well man, i get your feeling
rust languages is very hard to learn..
any translator from solidity to rust?
omg..
still using Rust?
As far as i know they are not compatible. For EVM you'll use Solidity, while for Solana you need to use Rust, am i wrong? xD
I need EVM enabled or web3 supported mainnet
Also Phantom wallet acts wierdly (doesn't keep connection on refresh, and need to connect each time account)
does solana support EVM?
Hey guys! I'm new on Solana coming from EVM...

I was wondering is someone could address me on development of tokens/nfts. It looks kinda confusing to me... Am i able to deploy for example an NFT with correct metadata using sol web3? ( anyone could provide me like some examples of repo where i can check? could't find any around)
Anyone know much on https://www.digitalassets.ag/ ?
i try to code swap token on solana but still stuck, anybody here can share me an example code to swap toke on solana pls
Ok here's approach I used to get the number of bytes in a transaction

```
    let args = [tx_sig];
    let options = {};
    options.encoding = "base64";
    options.commitment = "confirmed";
    args.push(options);
    let rpc_call = await connection._rpcRequest('getTransaction', args);
    let base64_string = rpc_call.result.transaction[0];
    console.log((base64_string.length * 6) / 8);
```

The rpc call returns a big base64 string. And apparently each character in the base64 string represents 6 bits. So take the length of the base64 string, multiply by 6 to get the total number of bits, and divide by 8 (because a byte is 8 bits).
I'm using https://github.com/project-serum/sol-wallet-adapter/blob/master/example/src/App.tsx 

What should I replace in place of 'https://www.sollet.io' to use the phantom wallet instead of sollet?
Okay,thanks : )
sounds like it
Clock::get().unwrap().unix_timestamp this?
devnet is like one or 2 validators, testnet is more than a thousand
testnet is to test the validator software on a real cluster, devnet is for app dev to test their buggy code
just don't use it
haha, true
yeh
My program is successfully working on devnet & even on Mainnet. But on testnet it is not satisfying the timestamp conditions.
it should be the `dontusethisfordevelopment`net
because it's confusing
i don't agree with the naming convention
just use devnet
testnet is for testing (something?), devnet is for development
<https://docs.solana.com/developing/runtime-facilities/sysvars>
for time you use sysvarclock
`UnixTimestamp.now()` How to do this?
is testnet having some issues? The timestamp is mismatching for the instructions I am trying to process. Can anyone help here.
or maybe there's an rpc call to use a transaction signature to inspect the size of the transaction
right now i'm thinking of just getting the transaction object, serializing it and then maybe counting the bytes
Is there some way to use Solana web3 library to inspect how many bytes a transaction is?
Since you tagged him I’ll see if he replies here instead of directly asking/tagging again.
might want to ask <@!455114989397868556> for that , he is the man
So to confirm the Rust and Js SDKs and APIs both support all features and same functionalities, correct?
go to metaplex, i think they are the face of Solana NFT rn
Excellent, do you happen to know the Solana version of an NFT?
you dont need to as there are many SDK now for Solana but i am new to coding , Rust is all upside for me
As Solana supports Rust, JS and others, I’ve seen online that Rust is the way to go but why? Does the rust APIs support something that JS does not? I’d rather not learn rust unless I need to.
also why im grinding thru this headaches since Solana is too fucking early which is a separate headache from Rust
thats why im using ubuntu vm so that i can try this stuff out, i got a good feeling solana is gonna go toe to toe with eth
solana validator don't support windows for now.
you can use devnet to continue your hello world trip ...
<@!788215642070581289> , just wanted to circle back and thank you again for all your help.  The problem seems to have been that while I had everything installed under x86, I somehow managed to have the Rust toolchain set up for the M1 chip.  It never would have occurred to me to even check this if you hadn't pointed out confirming the Rustup toolchain
my machine is windows so...
it does follow the metaplex's rule. In the solana explorere, is there a way for me to find the metadata program PDA?
not really, the second one is the critical. what is your origin os
if you are using m1 mac, you can just run it. you don't need a vm to run `solana-test-validator` but need to build it by yourself. you can refer to previous discuss 2 hours ago
looks like i need to install cuda 1st
my goodness, I just wanna run hello world program 😦 why the need to go thru all these maze
im only running a ubuntu vm
`cat test-ledger/validator.log`
like this?

not this one. you create a solana-test-validator, you should cat `test-ledger/validator.log` the directory created when you start.
this is the error

maybe cat the validator log to fetch more details about error?
if the NFT follow metaplex's rule, you can refer to https://github.com/metaplex-foundation/metaplex
the metaData will store in the the pda of token metadata program.
you will find the rule in the docs.
I has installed openssl in x86 brew.
can anyone tell me why i am getting this error? i  followed the hello world example
Is it safe to use the std::time::timestamp utility (is it able to be validated)? And if so what's the granularity?
hey got a silly question.

Given a NFT address, https://explorer.solana.com/address/8GrBFziM2JHJhoVzdd81TaJmo6fuqTnuDKDZLN5uvTJp

How do I actually find the metadata? (e.g. phantom wallet is able to render the photo of the NFT). How would I do it myself? (e.g. via a CLI or some library). What calls do I need to make?
<@!788215642070581289> , is your version of openssl built for arm64 or i386? What about homebrew?
oh! if you call to an official rpc endpoint. it has rate limit.
https://docs.solana.com/cluster/rpc-endpoints#rate-limits
and all rpc methods are listed here
https://docs.solana.com/developing/clients/jsonrpc-api
IMO, you can only do a batch call for accounts for now if you want do it in one http req.
but i dont think standard solana rpc rust library implements this so i was wondering if someone else wrote some code to do this
this is part of json-rpc standard
i want it all in one http request
it gives me rate limiting problems and is too slow
not sure I understand. is using a loop to do many rpc calls like a batch rpc requests to you ?
BTW, although I run an arm64 terminal but I have installed rosetta before and my rustup toolchain is set `stable-x86_64-apple-darwin` as default. just provides more my env setting to you.
how to do batch rpc requests using solana-rpc rust library
Awesome, I'll try that out, thanks <@!788215642070581289>.

I had previously tried that last week but it kept failing and everywhere i read says that the solana command line tools do not support the M1 chip so I've been banging my head against this since then.
no. I use arm64. I can share my steps to you.
I do `cargo build --release` in solana folder
after that I run validator by  `./target/release/solana-test-validator`
Thanks for testing <@!788215642070581289>, did you have to build using a Rosetta Terminal?
Sorry, I can’t reproduce your problem. I’m using M1 now. I try to build from source (v1.7.11), run solana-test-validator and deploy my program. It works fine. Not sure why your tx can’t be finalized. 😢
sorry, I just realized that was an important detail I failed to mention 🙂
yep
are you using solana-test-validator ?
> have you exported the path of the folder ?
Not sure I understand
oh. you build your own node ?
If I grep through `validator.logs` for my transaction I see  a lot of  ```INFO  solana_rpc::send_transaction_service] Retrying transaction:```
eventually it errors out at which point I try to close the buffer but I get the same error and can't close the buffer
sorry, what I mean to say, is that it just hangs here
the error looks something like this for both `deploy` and `close`: 
```[0/1] Finalizing transaction 33Q5rJfho3iY1b9aMun9PHrZ6LM3EHdjitefV756sAu1wRC1zhi1rsQbWsCkWigXnknjSLA95a8mxgGtLAj1MTZ1```
what is the error message you got when you use `solana program deploy `? have you exported the path of the folder ?
I did  `./scripts/cargo-install-all.sh .`
That worked on an m1 chip?  I built mine from source using v1.7.10 but just now updated to v1.7.11
How did you install the solana command line tool? 
I use `sh -c "$(curl -sSfL https://release.solana.com/v1.7.10/install)"`
and works fine.
...or `solana program close ...`?
Has anyone been able to get `solana program deploy ...` to successfully run on their M1 Mac?
Any update on this?
but not sure tbh if that's actually true / how it works 😅
If program was pretty big.
Oh I guess perhaps account size limits might be one
Not in a future proof way, the current facility to do this will be deprecated in 1.8.0
bump
Source code size. IIRC the binary ended up growing in size by a small amount (20-40%).
But I think for others it may grow even more -- I took extra care to try and use as minimal macros and stuff as possible.
No doubt the increased readability and productivity make it a big win IMO.
But now I'm a bit curious: apart from the extra lamports requirements for storage, are there any other reasons why large binaries would be really bad?
I can't imagine just the storage cost alone making some bigger projects even care too much, so is there some other issue they face?
I would def submit a git issue for tracking if functionality appears to be wrong or unexpected, to have it looked into
if there's an explorer that allows any kind of search or filtering though pls lmk!
thanks!  The explorers I've seen don't allow anything more than hitting "Load More" in the UI.  The tx I'm looking for is like tens of thousands or more txs deep
so I'd consider this either a bug, or something that urgently needs to be documented (my implementation was relying on overflows leading to panic rather than undefined behavior)
this is about how u128.pow() is implemented when compiling to BPF, because a standard x86/amd64 program panics as expected
thats usually the idea. as far as i know overflow is still possible, and especially against unsafe code. but this sounds like a rust conversation. and yea the general concept is that is the idea in many ways.
after all, that was the point of Rust in the first place I thought
the point is that a non-checked pow should panic in case of overflow
you should be able to review history, but if filters or params are not available in an explorer you need you could try https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getSignaturesForAddress  or https://docs.solana.com/developing/clients/jsonrpc-api#getsignaturesforaddress to help narrow it down
extremely basic question here: trying to look back at some old transactions (i.e., I know roughly when they occurred) to see how they are structured.  None of the explorers I've seen allow that.  What's the easiest way to do that?
probably allowed overflow? is there a checked_pow? 🙂 tho I think largest u128 is 340282366920938463463374607431768211455. could be wrong..
they are referring to program derived addresses and creating accounts based of seeds/identifiers. It kinda of references what they are here but never spells it out. https://docs.metaplex.com/#metadata. Program Derived Address:   https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses
Does anyone happen to know what PDA stands for in <https://docs.metaplex.com/>? I don't know if it's a solana thing or metaplex thing
and while I'm being pesky:
`let v1 = 10u128.pow(39);`
fails to panic but instead returns:
`319435266158123073073250785136463577088`
between https://docs.solana.com/developing/programming-model/runtime#compute-budget and https://docs.solana.com/implemented-proposals/transaction-fees#calculating-fees you should be able to calculate fees against the max budget. nothing else like gasleft that I know of. gas left works differently and based on gas you pass in/allowance, so the models are different.
is there any way to get my hands on the remaining compute budget within the program itself?
essentially, I want `sol_log_compute_units` without the logging (essentially the equivalent to `gasleft()` in Solidity)
I am facing this issue on the devnet.
Anybody has idea about this issue?
https://github.com/solana-labs/wallet-adapter. more example implementation with front end here. https://github.com/solana-labs/dapp-scaffold
is there a package people recommend for adding a 'connect wallet' button and functionality to a web app?
there is also the dev guide that explains more if you havent seen it. https://docs.metaplex.com/.
hopefully I'll get a response soon. Thanks <@!785084693023424542> 🙂
ah gotcha, I was looking at their docs and there was a little ambiguity so I shot the team a message
https://www.metaplex.com/ and the metaplex github are the best examples of NFTs and meta data right now.
Hello friends, was curious if there's any way to replicate what Simple Assets does for ETH in Solana. The main thing I'm interested in is how they outline the ability to add metadata to a token. I haven't found any mention of that in the Solana docs. Is that possible, or do folks have workarounds?
Thank you I will check on anchor discord. I'm running the test validator on a server, worked for most examples including the ido-example
I would ask this in the project serum, anchor discord, as many issues in anchor can be anchor specific. that being said, first id look at how your setting up the provider, as that is not how most anchor examples do it.  Your setting provider anchor.setProvider, then creating a provider and referencing it. I am not sure what functionality your trying to achieve, but the mint is not signed and the token account is. 

I would start by copying the ido-example exactly, and get that to work. then start changing bits or taking bits away, making sure its working every time a change or update goes in. work your way to a bare bones functionality. then start adding. something is clearly different in your implementation, and most of the time it starts with initial provider configuration and setup, accounts, and addresses.
Okay, Thanks : )
it probably depends on how often and complex the scenario is. short term I would just call it from the front end. Later on, based on your requirement you can start to optimize. In general, In the beg, try not to overdo or overoptimize anything initially, just get your functionality working. If you are able and or need to later, and based on requirement you could use an API, cache results, index data, hopefully some form of graphQL or other query, or several other options.
calling from node js project to test apis..
i have imported the name service..
```const { NAME_PROGRAM_ID, createNameRegistry } = require("@solana/spl-name-service");```
this time i created system program account but still getting the same error 
```var registerNameTxn = new web3.Transaction().add(
      createNameRegistry(
          connection,
          NAME_PARENT,
          SPACE,
          systemProgramKey.publicKey,
          systemProgramKey.publicKey
      )
  )

  var registerNameSign = await web3.sendAndConfirmTransaction(
      connection,
      registerNameTxn,
      [systemProgramKey]
  )```
Hey,
In your opinion if I want do this for my project should I consider creating a small backend with rust (just checked the rust client also have this function.. also consider I am using borsh for serialisation and deserlization) 
Or is the filtering fast enough that it is possible to do on the front-end?
Thanks : )
where are you calling this? is this your own project or program, are you importing the name service or including some how to ref createNameRegistry like this? somehow at least, it appears, the transaction you are sending, instructions, do not or may not have a program id defined.
the program is showing correctly in the terminal.. the transaction i am trying to send is this.. 

```var registerNameTxn = new web3.Transaction().add(
      createNameRegistry(
          connection,
          NAME_PARENT,
          SPACE,
          wallet.publicKey,
          wallet.publicKey,
          classKey.publicKey
      )
  )```

the method calls program id and system id internally
right, and your using getAccountInfo right? I think what starry is saying, based on the account info your requesting, it may need to be decoded/deserialized based on the 'type' of the account you are retrieving, in which you case perhaps you find you want to use a buffer to decode. in your specific case you just might need to include buffer in your TS,  by either declaring or importing a Buffer or BufferLayout import {Buffer} from 'buffer';
import * as BufferLayout from 'buffer-layout'; The solana-program-library should have examples of this and several others.
Thank you so much that was something I was looking for : )
I would start with https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getProgramAccounts  and pass in the program id to start then go from there. what I sent was an additional filter that you can use that requires to knowledge on the mem and data filters -> of which there are examples in the Solana SPL (solana-program-lbirary) source. for a basic usage you can pass something like memcmp: { offset: 0, bytes: key } and search for similar in the code base to try out additional filters.
They actually send theirs in jsonParsed which is great.  In the above example, I'm hitting the solana api.  I just don't know how to handle the encoded response...  The solana JS SDK injests the data like this.  The problem is that there's no buffer in AppsScript.
 ```
const userData = USER_BALANCE_LAYOUT.decode(
  Buffer.from(data[0], "base64")
);
const USER_BALANCE_LAYOUT = struct([
  blob(8),
  publicKey("owner"),
  u64("amount")
]);
```


///////////////////////////////////////////////////////////////////////////////////////////////

<@&842165148802351144>
How do i make th function return the token, instead of the mint account
The Question
The reason is that it's returning the mintAccount
it works when i don't sign it externally, but does'nt work when i want to
I want to run a function that uses the token's abi/JSON
If its false it returns token
If you look at the return statement when externalsignature is true, it returns mintAccount
which asks if i want to sign the transaction externally or not
there's a boolean as an input that is being passed in the function
I have this function that mints a token, using the spl token program
Hey guys'


I understand the TowerBFT mechanism of solana. The fact that validators vote on blocks and submit their votes on-chain and commit to only vote the corresponding children of that fork for N (=32) blocks. After 32 blocks is their a probablistic finality like bitcoin or is there an absolute finality? If there is an absolute? If yes how is it reached? And how much time does it take?
as it is compiled by rust I think reverse engineering is a lot tedious task. 
Binary code to back in rust would require great skills to get back to where it came from, also there are many ways to do  a single thing. reverse engineering a single program might result in many ways
It would be more "open" to easily just read code
Like if you can actually work your way back from binary to just code. I know the technical part is hard but if its possible then shouldn't it be a feature in explorer.solana already?
Is there a reason why we cant read the actual code that is deployed as programs on chain?
is there a way to get solana blockchain data through API?
Hey, I'm trying to filter accounts larger than 128 bytes, so I'm assuming I have to use base64, but this only has one option - `Binary`? https://docs.rs/solana-client/1.7.10/solana_client/rpc_filter/enum.MemcmpEncoding.html
go throught helloworld first https://github.com/solana-labs/example-helloworld then this project to make token/nft https://github.com/solana-labs/solana-program-library/tree/master/token
hello, does anyone have some tut or git project on how to make a nft mint like sollamas for example , i trying to understand how it work this one solana , and if i not wrong each of the NFT must be an account ?
It's just ed25519. Nothing special
Is there any library / sdk that provides the functionality of solana-keygen?  (I'm trying to use it programmatically, so ideally I wouldn't be shelling out to the CLI)
I require to make multiple accounts each time
how to create a new account everytime I hit a function, I am currently using PublicKey.create With Seed and it always gives the same Public key

A colon after the https is missing
I am not sure where to talk about it but this channel seems reasonable. On the "`Getting started with solana development`" page, the link to the developer page is broken.
DM your wallet
*like fractions of a dollar of sol, not fractions of a sol
Can someone send me a few cents of sol? Need some to keep on the wallet to cover transaction fees
Hey I have deployed a program and which accepts a string and sends it in the blockchain, now how to call the program from the Web3 JS API
Like what will be the transaction instruction,i tried my best but I am not able to send data from the api,
Could you help just to  write the pseudo code for Transaction Instruction...as I am not able to find how to write
What does `ELF error: jump out of code to #18446744073709538085 (insn #146)` mean when trying to deploy a program?  Is there a way to get around it?
for context i'm using a 2021 MacBook Pro running Big Sur. This is also the first time i've used Rust, so it could be not specific to Solana. The process always gets to item 20 and hangs on compiling "solana-program"
I'm trying to set up my dev environment. Have Rust and Solana SDK installed but when i try to build the helloworld app with the command 'npm run build:program-rust' the process hangs, i have to force restart my macbook every time. Anyone had this or have an idea of what it might be?
And if so, I'm assuming it's the same for signers? e.g. A CPI couldn't transfer lamports from a non-PDA?
So i.e., accounts user accounts marked as writeable are only writeable by the first program?
Does privilege escalation mean a CPI accountinfos are automatically marked as read-only, unless they are a PDA of the derived program?
whats wrong with my cpu  AMD® Fx(tm)-8120 eight-core processor × 8
~$ cat test-ledger/validator.log
[2021-08-29T02:05:18.830290897Z WARN  solana_core::validator] CUDA is disabled
[2021-08-29T02:05:18.830321426Z INFO  solana_core::validator] AVX detected
[2021-08-29T02:05:18.830327087Z ERROR solana_core::validator] Incompatible CPU detected: missing AVX2 support. Please build from source on the target
<@788215642070581289> can you reply to my dm just once pls pls 🙏
I see, I'll read the PDA part again, thanks a lot <@!788215642070581289> !
He can not. create account need the created account's signature. ATA is PDA, so only ATA program can sign it.
My bad, I don't mean he creates it through ATA program. I mean can he create the account with system program and initialize it with token program?
he can not do it.
you don't need to worry about Bob can use token program to create ATA
also ATA is a program derived address in ATA program. so only ATA program can create it
I mean with my SOL address, there's only one ATA for each token right? => yes
So what if someone derive the token address from my SOL address and create the account before me. =>
an account created by ATA will init SOL address as owner, so if there are two accounts Alice and Bob. Both of them can create ATA for Alice, and the ATA init owner is Alice. Bob can't assign the owner to himself. it is the logic in ATA program
I mean with my SOL address, there's only one ATA for each token right? So what if someone derive the token address from my SOL address and create the account before me. Next time if my friend assumes that he can send me some tokens to my ATA, the other guy will have control over it?
you can wrapped SOL and use token program's interface to transfer. I think the main idea is to unify interface in program.
maybe try `cat test-ledger/validator.log` first to fetch more information about error?
<@!788215642070581289> What does wrapping SOL mean? do we wrap it around a token which is its current value?
I don't think you can prevent anyone who has the token address's auth to transfer their token address to you.
if you want to prevent someone do some trick to the token address. you can only believe your SOL address's ATA.
an account created by ATA will init SOL address as owner so whoever create ATA for your SOL address, your SOL address will be the first owner.
If you are saying fungible token, for now you can add PR to token list
https://github.com/solana-labs/token-list
need help with this https://github.com/solana-labs/example-helloworld/issues/296
I logged the deserialized data in on-chain program it was correct. When I get the account data web3.js library and deserialize it on client js program, I am facing issues.
https://github.com/solana-labs/solana-program-library/blob/928bb764ed/token/program/src/processor.rs#L79

Hi guys, what prevents me from initializing someone else's associated token account and set the owner as myself? I see it's checked in the associated token program, but I don't see it in the token program's initialization function.
Can we add more data than just balance in token account?
<@!687766822426378314> do you mind reading my PM, please, thank you ❤️
there's still something I am missing, what's the authority to define the collection that constitutes degenape? What prevents me to create another degenapes with the same format of metadata etc
99% of NFTs on Solana will likely display there
No it's just the standard NFT spec, which is part of SPL
`Metaplex NFT spec` is another, separate standard than SPL?
it'll show you collectables that conform to the Metaplex NFT spec
you can plug a pub key in at http://step.finance
Hey there, is there an easy way to tell if a given wallet owns any degenape (https://solanart.io/collections/degenape) ? More generally speaking, because NFT of a kind all have different mint addresses, how do you identify them as part of a collection?
Thanks a ton!
Also make sure to check out Anchor
Lots of good info at https://solana.com/developers - <@!455114989397868556> can point you in the right direction too 🙂
Hey folks, I'm a Rust n00b and was wondering what the best bootcamp or tutorial is out there? What's the Chainlink Bootcamp or CryptoZombies (https://cryptozombies.io/) for Rust / Solana? Thank you so much in advance! Is this the best place to start (https://learn.figment.io/pathways/solana-pathway)?
what is the process flow when a buyer selects BUY TOKEN / MINT TOKEN from a sale site?

is it 

1. The transaction is created in the user web wallet. User signs and sends. On receipt into the program the program then does the minting and transfers the new mint to the sender of the payment.

or

2. something else?

is there an example i can look up for myself.
Hi, Any experienced developer available for a quick discussion/help. Thank You 🙂
Hey folks, why do I see the `#[repr(C)]` annotation on Account structs in some existing Solana code. What is it for and do I need to annotate mine with the same one. : https://github.com/metaplex-foundation/metaplex/blob/master/rust/token-metadata/program/src/state.rs#L76
How efficient/expensive is `getProgramAccounts`  using with a `MemcmpFilter` ? This seems to work fast/fine locally but I'm wondering if there are any performance hindrances, limitations, or unexpected transaction fees in the prod block chain.
getConfirmedSignaturesForAddress2 seems to get signatures for program addresses but is getting deprecated. getSignaturesForAddress does not appear to support program addresses, is there a different endpoint i should be using
Hey I have deployed a program and which accepts a string and sends it in the blockchain, now how to call the program from the Web3 JS API
Like what will be the transaction instruction,i tried my best but I am not able to send data from the api,
Could someone write the pseudo code for Transaction Instruction...as I am not able to find how to write
Hello everyone! I am trying to implement some stuff with NFTs, I'm wondering if there is a way to add some custom metadata to them (for example to display them in different places easily) can you point me to any source to research this? thanks a lot!


///////////////////////////////////////////////////////////////////////////////////////////////

Hello, I am new to Solana and coming from Ethereum 😄 On etherscan I used to be able to see source code (or bytecode) of the smart contract, but I don't know where to find it on Solana.

For example, here is one: https://solscan.io/account/EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q 

If I wanted to stake raydium programatically, how do I know how to interact with the program and set appropriate input data?
I pushed a PR: https://github.com/solana-labs/solana/pull/19499
QUESTION.
Why can't I get my PR request pushed to update my SPL token on the GitHub token list to update Explorer so I can get my token listed on DEXs?
Am I in the wrong room or does this just take forever for some admin at Solana to get it done?
DiscordLabs couldn't get it done and that's where I created the token.
Bueller?
No. The program id is implicitly that of the stake program
https://solana-labs.github.io/solana-web3.js/modules.html#CreateStakeAccountWithSeedParams
Hello this does not take the programid as input?
Hey devs, me and my team have got most of the code ready to release an NFT collection on the ethereum blockchain but we are thinking of instead releasing on solana, anyone with solana experience here who could help me figure out how minting an NFT collection with metadata and stuff works on solana? (We are gonna pay you with a % of the profit with a cap, we can discuss this later)
any docs on setting token URI for a Master edition NFT collection?
Just so you know, I didn't have a problem when I created a multisig using 3 keys on my own Ledger `SIGNERS=($(for i in $(seq 3); do SIGNER="usb://ledger?key=0/${i}"; echo "$(solana-keygen pubkey "$SIGNER")"; done)) && echo $SIGNERS`. Same none account (and I generated a new nonce afterward).
Hey Everyone - I'm building a decentralised version of YouTube. My requirements are very simple, I simply want to persist a handful of hashtables of structs, also read/write. Here's an cut down example in Solidity for ETH, how exactly could I do this in Solana?

```contract DSocial {
  uint public videoCount = 0;
  string public name = "DSocial";
  mapping(uint => Video) public videos;

  mapping(address => User) public users;
  uint public userCount = 0;
  mapping(uint => UserIdMapping) public userIds;
  mapping(string => UserNameMapping) public userNames;
  mapping(uint => mapping(uint => UserVideo)) public userVideos;

  struct UserVideo {
    uint userId;
    uint videoId;
  }

  struct UserIdMapping {
    uint id;
    address publicAddress;
  }

  struct UserNameMapping {
    string userName;
    address publicAddress;
  }

  struct User {
    uint id;
    string profilePhoto;
    string userName;
    string displayName;
    address publicAddress;
  }

  struct Video {
    uint id;
    string hash;
    string thumb;
    string title;
    uint userId;
    uint comments;
    uint likes;
  }

  event VideoUploaded(
    uint id,
    string hash,
    string thumb,
    string title,
    uint userId
  );

  function uploadVideo(string memory videoHash, string memory thumbHash, string memory title) public {
    // Increment video id
    videoCount ++;

    // Add video to the contract
    videos[videoCount] = Video(videoCount, videoHash, thumbHash, title, userAccount.id, 0, 0);

    userVideos[userAccount.id][videoCount] = UserVideo(userAccount.id, videoCount);

    // Trigger an event
    emit VideoUploaded(videoCount, videoHash, thumbHash, title, userAccount.id);
  }

  function getVideo(uint videoId) public view returns (Video) {
    return videos[videoCount];
  }
}```
oh weird!  The release automation for 1.7.11 was green even. I've retriggered it and will keep an eye on it. It usually takes hours to run
no idea but dev or test net u get free airdrops
Dear Solana team, can you publish the rest of the crates for version `1.7.11` on crates.io?
For example, https://crates.io/crates/solana-program-test is still `1.7.10`.
Hi, my team and I have an NFT project in mind and we are looking into what's possible with the different blockchains. Could somebody please give me an idea on what to expect for the minting price of NFTs on Solana? I've been able to find this information for other blockchains but have had no luck with Solana yet.
Ok. Thanks I'll try to repro later today
it will be great, I'm in the same boat
You sure you are deploying to the same program id (an upgrade)?  You can do a `solana program show` on the program id and take a look at the last slot the program was upgraded to find it out if it is indeed being upgraded.  You might also check the path of the .so file you are using during deploy, maybe it is not being updated when you rebuild?  Or maybe wrong path?
my keypair is `usb://ledger/?key=0/0`
and if I do it w/o: 

```
Transfer 1 tokens
  Sender: Hn3uFy6VLEGVznRaUocCkeZ352SCdK1fLn8VFqiXdikt
  Recipient: 13GPC1eWk7fvDzEb3fwayWFhidenvDSeHNoYE5Qw6wXa
  Recipient associated token account: 2JKoopaCoTT7Wku3GD9sZ97T8GbKxSUy7t5FEYaxCjy1
Waiting for your approval on Ledger hardware wallet usb://ledger/7CzfJauMha4ev95GzmZ11DhTe2BPWj3cwYnsV2znaHeZ
✅ Approved
Waiting for your approval on Ledger hardware wallet usb://ledger/7CzfJauMha4ev95GzmZ11DhTe2BPWj3cwYnsV2znaHeZ
✅ Approved
Waiting for your approval on Ledger hardware wallet usb://ledger/7CzfJauMha4ev95GzmZ11DhTe2BPWj3cwYnsV2znaHeZ
✅ Approved
presigner error
```
Sorry for the delay. 

I get a third signature, for my wallet: 13GPC1eWk7fvDzEb3fwayWFhidenvDSeHNoYE5Qw6wXa=5tT3zLYzPd28FLbwcKE7BBKfwsYGUQpTJB9UkwPjZLjBiBVnFEixy6bNP1YiHtfMxzChSBHx5Wr47kPinYpwXL43
Is it possible to configure the transaction fee in a test network or even charge no fee.
Nevermind, Xargo.toml is no longer needed - I checked the Github issues. Still wondering if anyone with NixOS has a shell script to share, else I'm happy to do a PR to get cargo-build-bpf to accept a custom filepath which contains bpf-tools.
Another question, is Xargo being used in any way with the latest SDK?
I've made a nix shell - still gotta deal with a lot of problems with the build tools though i.e. cargo-build-bpf requiring bpf-tools to be in a directory _within_ the folder where bpf-sdk is that is not a symlink
Heyo 👋 Anyone used NixOS for building apps with the SDK?
Is it to control the transaction cost in a test network. I want to be able to set a fix amount.
A transaction may have multiple instructions however; the total size muse be no bigger than 1232 bytes in size, including the accounts
But using what?
nvm, I guess I can also use the CLI tools instead of the program
Or
I'm trying to allocate 2.5MB
Hey, what does this error imply? `SystemProgram::CreateAccount data size limited to 10240 in inner instructions`
Not the program itself but to Accounts owned by the Program... yes
Also, how does the last command look if you leave the `--sign-only --mint-decimals 9` in place?
Which presigner error?
I've also tried it  without the variables: 
```
spl-token transfer $token 1 13GPC1eWk7fvDzEb3fwayWFhidenvDSeHNoYE5Qw6wXa \
     --owner 4Ve7K99445RqBdbzknyaXxJif6cncVy1J7tPq57TQLqd \
     --multisig-signer 27V3vmMLEBXb5f4LKyv6FknCu8qn1NVrB5FuYHzJNGXg \
     --multisig-signer HN8eyk5S92SPJUNkj81oevUFS2ng1FffbgZWc8AzG3KC \
     --multisig-signer $keypair \
     --blockhash ArJ2wtRLhCxVDsr6AYdRDhjG2rqgYqnqNbVNGG4Mj3so \
     --fee-payer $keypair \
     --nonce ECmirg6zadjSf9RiKDmJrBFfpkjFw1HFEvmbzzSfaAir \
     --nonce-authority $keypair \
     --signer 27V3vmMLEBXb5f4LKyv6FknCu8qn1NVrB5FuYHzJNGXg=4WuPyfGDp98S4Afw9TEyWgsP92EFwD9gvLhDtPz6pieoEJ5yMDAjnd3L2En3EpBSkABh9rhwzeRTCwdUJcaCpCer \
     --signer HN8eyk5S92SPJUNkj81oevUFS2ng1FffbgZWc8AzG3KC=GezDMJyoEi8wSH8Yqo5udpCYa4BPFsccdkf48WkqMagtafTRTStNV3EYhc8gGV6X2JZdAvaNfZHuFiPwVS4Eq7M

```
and just get presigner error.
Then broadcast the tx with my keypair for the mulsigsigner, fee-payer and nonce authority. I get three approvals on my ledger: 

```
spl-token transfer $token 1 $bcm \
   --owner $multisig \
   --multisig-signer $jakstar \
   --multisig-signer $komada \
   --multisig-signer $keypair \
   --blockhash $blockhash \
   --fee-payer $keypair \
   --nonce $nonce \
   --nonce-authority $keypair \
   --signer $sig1 \
   --signer $sig2
```
I store their signatures as such: 
```
sig1=27V3vmMLEBXb5f4LKyv6FknCu8qn1NVrB5FuYHzJNGXg=46Sjhj4HhYUU24R6aFDenxTrGcEQVyzRCWAsEmbx5ow96vfrsv8DaNX3rcwexC7oSXoJ94DYqFGQvdMQqGTDi28a
sig2=HN8eyk5S92SPJUNkj81oevUFS2ng1FffbgZWc8AzG3KC=GezDMJyoEi8wSH8Yqo5udpCYa4BPFsccdkf48WkqMagtafTRTStNV3EYhc8gGV6X2JZdAvaNfZHuFiPwVS4Eq7M
```
then I have other signers replace their name with they're $keypair: 

```
 spl-token transfer $token 1 $bcm \
    --owner $multisig \
    --multisig-signer $bcm \
    --multisig-signer $jakstar \
    --multisig-signer $komada \
    --blockhash $blockhash \
    --fee-payer $bcm \
    --nonce $nonce \
    --nonce-authority $bcm \
    --sign-only \
    --mint-decimals 9
```
So we setup the script like this: 
```
# set ?key= to what matches wallet address below
keypair=usb://ledger/?key=0/0
solana config set --url https://api.mainnet-beta.solana.com
solana config set --keypair $keypair

bcm=13GPC1eWk7fvDzEb3fwayWFhidenvDSeHNoYE5Qw6wXa
komada=HN8eyk5S92SPJUNkj81oevUFS2ng1FffbgZWc8AzG3KC
jakstar=27V3vmMLEBXb5f4LKyv6FknCu8qn1NVrB5FuYHzJNGXg
davidkohcw=EqiMYGbSUWifqFbkQAVpwQWSRYcvNoBhLXcHY48ivPpx
arch=Gjh6cP6UFWcJNGQDEY7x3p8Eh9dwPavTDtTLxdN9AHXV

multisig=4Ve7K99445RqBdbzknyaXxJif6cncVy1J7tPq57TQLqd
token=EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v #USDC
nonce=ECmirg6zadjSf9RiKDmJrBFfpkjFw1HFEvmbzzSfaAir
blockhash=ArJ2wtRLhCxVDsr6AYdRDhjG2rqgYqnqNbVNGG4Mj3so
```
Can you provide the command line that exhibits this behavior?
thank you, it worked!

```
    var accounts = await connection.getParsedProgramAccounts(new PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"), //Token Program
    {
        "filters": [
            {
                "dataSize": 165
            },
          {
            "memcmp": {
              "offset": 32,
              "bytes": `${myPublicKey}`
            }
          }
        ]
    })
```
noob question, but can you transfer lamports to program account?
Yea, we were getting presigner errors when we try to do offline tx signing, and I wasn't sure how to proceed. I'm not sure if it's a version mismatch or something, but I verified that everyone was on 2.0.14. Your last response was something along the line that we were trying to sign something that couldn't be signed.
spl-token transfer multisig presigner error
Add an appropriate `dataSize` filter to hit the index
is there any alternative way to do it?
Your query misses the accounts by owner index and is rejected (because it would be very slow)
I tried with 
```
    const { Keypair, Connection, PublicKey, TransactionInstruction, Transaction, sendAndConfirmTransaction } = require('@solana/web3.js');
    var url = 'https://api.mainnet-beta.solana.com'
    var connection = new Connection(url)

    var accounts = await connection.getParsedProgramAccounts(new PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"), //Token Program
    {
        "filters": [
          {
            "memcmp": {
              "offset": 32,
              "bytes": `${myPublicKey}`
            }
          }
        ]
    })
    console.log(accounts)
```

But I'm getting
`Error: failed to get accounts owned by program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA excluded from account secondary indexes; this RPC method unavailable for key`
how can I find all the token accounts associated to a public key by using solana web3?
Nvm I think I found the solution. For those who might encounter the same issue (build from M1 chip), here is how I solved it:

Switch to the right rustup toolchain before building: `rustup default stable-x86_64-apple-darwin`
Is there still an issue outstanding?  I thought we'd addressed them all.  Can you remind me of the details?
Okay
https://docs.solana.com/clusters
both sound like test net too me ; )
what is the difference between testnet and devnet?
<@!585868308419444749> I just got back from vacation and really need to pin down this issue with spl-token multisig transfers. What's your preferred way to troubleshoot this? I'd like to send you a FR and add you to chat with the rest of my team if that's alright?
How big should my transactions be? If, say, I wanted to create 4-5 accounts, would it be better to batch them together or create a new tx for each new account?
Newbie here. 
To the python devs: best resources beyond those listed in dev-resources for python? 
An article covering some of the basics would be great for troubleshooting early on
$ cat .config/solana/cli/config.yml
---
json_rpc_url: "https://api.testnet.solana.com"
websocket_url: ""
keypair_path: /home/josep/.config/solana/id.json
address_labels:
  "11111111111111111111111111111111": System Program
commitment: confirmed
Need support:(SOLVED)
$solana balance AvHkxCQarbTMmiZq64ziuPDfSFFbjRmHKcQWZMVpcbQt
1 SOL
solana-keygen recover --outfile ./wallet3
Wrote recovered keypair to ./wallet3

$solana transfer 2zD65UdvchZNmM1uxCssYBbf8kvRX83owuJ3DgrzG7jV 0.5 --from wallet3 --allow-unfunded-recipient
Error: Account 5WMxaWxASfKyZKtYTLdjttX8QdbJDYPQfLdxy7PkMF29 has insufficient funds for fee (0.00001 SOL)

Why the sending account is 5w.. instead of AvHk..? 
Answer: somehow it is reading the keypair from the config filepath: keypair_path: /home/josep/.config/solana/id.json
how to fix this?
I deploy a new version of the program, but when I send an instruction from the client, the old version of the program responds back
I'm having this issue very often...
also, I'm trying to deploy a program locally, everything succeeds but when I hit it from my client, the program seems to be at an older version, not the most recently deployed
does anyone know why i keep getting Error: Deploying program failed: Error processing Instruction 0: account data too small for instruction when trying to deploy a program on the cluster?
hi everyone
Hi Guys, please can any share what the content of `.config/solana/cli/config.yml` is suppose to look like
hi all - trying to get a sense of what Solana network looks like in stress times.  Have you guys tracked transaction spikes during launches like the Solana apes (or anything else that was big)?  How high did it go?  Given that there's no mempool and clients have to retry if the tx isn't included in a few dozen blocks, trying to see if that's common already
Great thanks
I am not 100% sure, but if you want to get around the default rpc limits you generally need to host your own as most people use the defaults
Thanks, so the limits are higher than solanas api endpoint of 100 requests per 10 seconds?
Check this out: https://github.com/hyperledger-labs/solang
it should be rate limited by default, but its fairly high. Used to be a lot worse
Is the serum api not rate limited?
> https://api.mainnet-beta.solana.com - Solana-hosted api node cluster, backed by a load balancer; rate-limited
> 
> https://solana-api.projectserum.com - Project Serum-hosted api node
So I found the current information on the endpoints
Hello
is solana ignite gonna help me build?
This is particularly frustrating.
Hi everyone - just bumping this again. We're looking at over 4 weeks with a 'unknown' token - this is also affecting other Solana projects we're working with. Is there any way we can get this escalated?
Hi folks, wonder if anyone encountered this issue. Just tried to build from source using M1 chip. The building was successful. However when I tried to deploy on the local cluster, this error popped:

```
ERROR solana_metrics::metrics] datapoint: panic program="validator" thread="solana-banking-stage-tx" one=1i message="panicked at 'JIT is only supported on x86_64'
```

Any idea to this? Thanks
Hi <@!878702045920657419>, did you have any news about that?
Thank you so much...
Who knows how to make an instruction with borsh js ? I have a function, how to create an instruction for it ? How do I specify enum , the argument to my array function [u8] , using borsh js ?????```fn update_admin(accounts: &[AccountInfo], admin: [u8; 32]) -> ProgramResult {
        let acc_iter = &mut accounts.iter();
        let admin_info = next_account_info(acc_iter)?;
        let settings_info = next_account_info(acc_iter)?;

      
        if !admin_info.is_signer {
            return Err(ProgramError::MissingRequiredSignature);
        }

        let mut settings = StakingInfo::try_from_slice(&settings_info.data.borrow())?;

        if settings.admin == [0; 32] {
            settings.admin = admin;
        } else if settings.admin == admin_info.key.to_bytes() {
            settings.admin = admin;
        } else {
            return Err(StakeError::AdminRequired.into());
        }

        let _ = settings.serialize(&mut &mut settings_info.data.borrow_mut()[..]);

        Ok(())
    }```
Best I've seen for now: https://docs.metaplex.com/ but if you find anything else would be interesting to see
if you use the source code and build it on local and deploy.
you can create accounts and use that
One more question, is there any open-zeppelin template for smart-contract in solana?
It seems that i need to rewrite solidity codes to run in solana...
oh thanks, i will check it...
https://github.com/project-serum/anchor
check anchor
Is it possible to use solidity in solana?
Anyone know where to get the metadata of Solana NFTs? Been struggling to find it.

Also any metadata standards being widely used at the moment like ERC721? Only found this so far: https://docs.metaplex.com/
Okay, Thank you : )
also
active addresses, total addresses, tx count daily would be great
is there a way to graph daily addresses created on SOL?
This is an example from the creators of Solana, but in the data where the instruction is supposed to be sent, it is not there at all, how can I create an instruction with borsh? ```export async function sayHello(): Promise<void> {
  console.log('Saying hello to', greetedPubkey.toBase58());
  const instruction = new TransactionInstruction({
    keys: [{pubkey: greetedPubkey, isSigner: false, isWritable: true}],
    programId,
    data: Buffer.alloc(0), // All instructions are hellos
  });
  await sendAndConfirmTransaction(
    connection,
    new Transaction().add(instruction),
    [payer],
  );
}```
Hi all, does anyone know how to work correctly with borsh on ts?```class Staking {
  constructor(fields: {
    amount: BN,
  
    reward_allowed: BN,
  
    reward_debt: BN,
    
    distributed: BN} | undefined = undefined) {
    if (fields) {
     
    }
  }
}

class SettingsInfo {
  constructor(fields: {admin: number[] , 
    start_time: BN , 
    distribution_time: BN, 
    unlock_claim_time: BN, 
    reward_total: BN ,
    total_staked: BN , 
    total_distributed: BN ,
    tokens_per_stake: BN , 
    reward_produced: BN , 
    all_produced: BN , 
    produced_time: BN } | undefined = undefined) {
    if (fields) {
     
    }
  }
}

const stakingSchema = new Map([
  [Staking, {kind: 'struct', fields: [['amount', 'u128'],['reward_allowed','u128'],['reward_debt','u128'],['distributed','u128']]}],
]);

const settingsSchema = new Map([
  [Staking, {kind: 'struct', fields: [['admin', 'Uint8Array(32)'],['start_time','i64'],['distribution_time','i64'],['unlock_claim_time','i64'],['reward_total','u128'],['total_staked','u128'],['total_distributed','u128'],['tokens_per_stake','u128'],['reward_produced','u128'],['all_produced','u128'],['produced_time','i64']]}],
]);


const Staking_size = borsh.serialize(
  stakingSchema,
  new Staking(),
).length;
const Setting_size = borsh.serialize(
  settingsSchema,
  new SettingsInfo(),
).length;```How do I create an instruction manual ?
<@!295862671155396609> yes, a transaction can contain multiple instructions https://solana-labs.github.io/solana-web3.js/classes/Transaction.html#instructions - just create a transaction, add multiple instructions then invoke web3 sendAndConfirmTransaction(...)
I am trying to learn common pattern by reviewing oyster-swap code in https://github.com/project-serum/oyster-swap . This is only the UI code. Any ideas where I can find Rust program code for this ?
is that possible?
I want to create an account first and then in the same instruction call a entry point
Can i combine 2 instructions in the frontend?
Unfortunately the examples for the videos are kind of out of date from the latest version of anchor
You can ask questions in the serum discord #anchor channel as well https://discord.gg/cPsVwFfH
Ah thanks! I do feel dumb indeed 😅
getParsedAccountInfo
Hey bit of a dumb question but anyone know how to use web3 to get jsonparsed data back?

Tried the below but didn't seem to work

```accountInfo = await connection.getAccountInfo(myPublicKey, {encoding: 'jsonParsed'});```
Okay, my mistake was using `Pubkey::find_program_address` to create a derived address. The following snippet works:
```
let package_metadata_pubkey =        Pubkey::create_with_seed(&payer.pubkey(), &my_seed, &program_id).unwrap();

let tx = Transaction::new_signed_with_payer(
  &[system_instruction::create_account_with_seed(
    &payer.pubkey(),
    &package_metadata_pubkey,
    &payer.pubkey(),
    &my_seed,
    rent.minimum_balance(account_size),
    account_size,
    &program_id,
  )],
  Some(&payer.pubkey()),
  &[&payer],
  recent_blockhash,
);
```
*s
are there any solana indexers implementation out there?
Hey folks can somebody explain how am I supposed to sign a `create_account_with_seed` transaction that creates a PDA assigned to a program_id as the owner. This code is a part of a test, so the account is being created outside of the program I want to be the owner of it. It currently throws `Transaction::sign failed with error NotEnoughSigners`, I just can't wrap my head around who else should be passed as a signer?
```
let (package_metadata_pubkey, bump_seed) =
        Pubkey::find_program_address(&[scope_and_name.as_bytes()], &program_id);

let tx = Transaction::new_signed_with_payer(
  &[system_instruction::create_account_with_seed(
    &payer.pubkey(),
    &package_metadata_pubkey,
    &program_id,
    &my_seed,
    rent.minimum_balance(account_size),
    account_size,
    &program_id,
  )],
  Some(&payer.pubkey()),
  &[&payer],
  recent_blockhash,
);

banks_client.process_transaction(tx).await.unwrap();
```
Try this 
export const WALLET_PROVIDERS = [
  { name: "sollet.io", url: "https://www.sollet.io/" },
  { name: "solflare.com", url: "https://solflare.com/access-wallet" },
  { name: "mathwallet.org", url: "https://www.mathwallet.org/" },
   { name: "phantom",  url: 'https://www.phantom.app' },
];
reference this example for the new wallet adapter along with phantom support. https://github.com/solana-labs/dapp-scaffold
any ideas how to add Phantom to the app based on this setting ?
bit confused why we're connecting to the wallet provider site ? isn't this all supposed to happen using the chrome extension ?
export const WALLET_PROVIDERS = [
  { name: "sollet.io", url: "https://www.sollet.io" },
  { name: "solflare.com", url: "https://solflare.com/access-wallet" },
  { name: "mathwallet.org", url: "https://www.mathwallet.org" },
];
I am looking at some example to understand how client JS interact with JS
why there is an account not an instruction in your line 43
and actually you can put system.createAccount instruction in there
you can take a look at https://project-serum.github.io/anchor/tutorials/tutorial-1.html#creating-and-initializing-accounts
I've already initialized the account and checked with solana cli that the account is existing on local net

Hi Chido agian!
have you initialized the account?
take a look at this for more information about account discriminator
https://project-serum.github.io/anchor/tutorials/tutorial-1.html#arguments-and-accounts
I'm so lost..

const mAccount = await program.account.memeNumAccount.fetch( memeNumAccount.publicKey);
does anybody know solana anchor
NFT is just a token in solana if you have the auth of the token account. you can transfer it.
if you are saying NFT, take a look for this https://github.com/metaplex-foundation/metaplex
if you are saying fungible token, add PR to here https://github.com/solana-labs/token-list
i mean, any fuction with which the validator can be bribed
is there a **block.coinbase.transfer **solidity similar in rust?
I'm looking for experienced Solana dev(s) for a project. Is this an OK place to ask?
Hey either make your own or use Torus.
pretty desperate here
sorry if i asked in the wrong channel
anyway i can send my SOL nft to a new address?
i just got keylogged
hihi
Did you ever get an answer for this 👀
How to store metadata when creating a token?
Is there a https://hedgehog.audius.co/ equivalent for solana
That's one way.  Forks also cause the block height to fall behind the slot number.  The blocks in the failed fork also never get included in the finalized chain
No, I will work with Solana in the next few days again so let’s see 🙂 I keep you updated
*produce a block
thanks <@!445425471027544095> . so every time a leader fails to produce a slot the block number falls behind the slot number by 1?
block height is <= slot number.  Not all slot produced a block (eg, the leader for that slot was offline or otherwise unable to produce a block in time)
Are block height and slot number generally the same? e.g. will a block in slot 5 have a block height of 5?
i need help https://discord.com/channels/428295358100013066/428295358100013069/881649759511789608
what command you using. what does solona config get. give you back
in that example the Greeting accoutns its like a global state?
the "greetins example"
question guys i trying to learn this programming model i dont know i anyone tryed the hello world example
I already have my keygenfile in my cwd
hey guys i keep getting this error when trying to do a simple transfer of SOL, anyone has an idea why? 
``` Error: Dynamic program error: No default signer found```
wondering the same thing ☝️ <@!748280825384271895> did you find an answer maybe?
I've had 2 developers now install the Solana Tool Suite and it didn't include the rust bpf build tools. Tested on v1.7.6, .8 and .10. Both mid-2014 macbooks. Any way to manually install the bpf tools?
```
BPF SDK: /Users/theuser/.local/share/solana/install/releases/1.7.8/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: rustup toolchain link bpf /Users/theuser/.local/share/solana/install/releases/1.7.8/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust
error: not a file: '/Users/theuser/.local/share/solana/install/releases/1.7.8/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust/bin/rustc'
```
 ```Big Sur 11.4, Macbook Pro 13"```
Hi. I was trying to build the scaffold app contract and i got this running in windows
thanks
What does it mean to  Create a Token object attached to the specific mint
I mean bit or bytes?
And also for calculating with cli its 800  or 1000
One more question
If i have  a array of u8 of size 100
I have to allocate 800 space to the contract storage at start time or 
100?
Roger, Thanks : )
Yea, Solana docs so far are excellent.
They're well documented
then sure I'll get what is going on
Thank you trent, I'll dedicate time to learn what is BIPxxx
bip39 is just the seed phrase part
Or better yet, just use `new` to create random seed phrases (ignore the raw keypair) and `recover` as many bip32 derived keypairs as you like
Try not passing `prompt:...` to recover at all
aha, here it says bip39
Assuming the first output is from `solana-kegen new`, it's because that command creates raw keypairs. What you recovered is a bip32 derived keypair
not equal?
josep@DESKTOP-45MI6OA:~$ solana-keygen recover 'prompt:?key=0/0'
[recover] seed phrase:
[recover] If this seed phrase has an associated passphrase, enter it now. Otherwise, press ENTER to continue:
Recovered pubkey `5WMxaWxASfKyZKtYTLdjttX8QdbJDYPQfLdxy7PkMF29`. Continue? (y/n): y
Wrote recovered keypair to /home/josep/.config/solana/id.json
let me try
solana-keygen recover 'prompt:?key=0/0'
it's the same issue I was having
<@!585868308419444749> just recovered my wallet thanks to this. Really appreciated!
solana wallet 1
=================
pubkey: AvHkxCQarbTMmiZq64ziuPDfSFFbjRmHKcQWZMVpcbQt <-------------!!
=================
Save this seed phrase and your BIP39 passphrase to recover your new keypair:
need kit damage behave client spend music accuse possible dutch call unable
=================
josep@DESKTOP-45MI6OA:~$ solana-keygen pubkey prompt://
[pubkey recovery] seed phrase:
[pubkey recovery] If this seed phrase has an associated passphrase, enter it now. Otherwise, press ENTER to continue:
B5cHrkTL8MD4C1tAvTMG7hwKf9uGmwHPBRFvqatYA5F5 <----------------------!!

Learning Solana.. How come the pubkeys are not equal? M'I missing something? 
Thanks
Runtime verifies all signatures and the program must check that the expected  party has signed. The client side bit is used for transaction construction, but never directly serialized. A different but (with the same name) is set by sigverify in the runtime
Is there an equivalent concept of an interface like Ethereum in Solana? e.g. In Solana, tokens are just part of the standard spl program. Is it there an equivalent concept where I can provide my own implementation for my own tokens?

e.g. In solana, how do I create an implementation of tokens where there is perpetual fees paid everytime that the tokens change ownership?
```
 const messageInstruction = new TransactionInstruction({
      keys: [{ pubkey: destPubkey, isSigner: false, isWritable: true }],
      programId,
      data: Buffer.from(serialize(ChatMessageSchema, messageObj)),
    });
    const trans = await setPayerAndBlockhashTransaction(
      wallet,
      messageInstruction
    );
    const signature = await signAndSendTransaction(wallet, trans);
    const result = await connection.confirmTransaction(
      signature,
      "singleGossip"
    );
```
Hello 
I had one question https://solana-labs.github.io/solana-web3.js/classes/TransactionInstruction.html here if i have to set isSigner then how can i verify right person has made this transaction instruction call
` isSigner: false, ` I or any hacker can send this to whatever they want?
yes that works
thanks <@!585868308419444749>
aaaaah
You need to use `solana-keygen recover 'prompt:?key=0/0'` to get a wallet that matches sollet (and most other web wallets)
Or does the Sollet wallet do something weird with the seedphrase that's different than what solana-keygen does? e.g. add some kind of salt?
I have been writing a script to recover partially lost seedphrases and solana-keygen doesn't seem to output the same public key as the sollet wallet/block explorer does. Anyone know about this?
yeah I would also like to know this


///////////////////////////////////////////////////////////////////////////////////////////////

from rust?  which references to them are you using? :   unpack generally has additional functionality, like initialization check.  then calls unpack from slice. the solana sdk should have the details and you can view which you need, if your referencing the solana rust implementation, in program_pack.rs.   generally there is pack, unpack, with or without a check to see if its initialized, where the check initialized refers to the account state and if it has been initialized.
can I connect a page to my already built website ?
Anyone have any good metaplex resources ?
is there a difference in calling `unpack` and `unpack_from_slice` or are they the same function?
yes there are known mac m1 issues because if its abilities and support, here some links to issue and potential solutions if available for your setup, and you can navigate some links, and conversations to see if they can help in your specific situation: https://github.com/solana-labs/example-helloworld/issues/200, https://discord.com/channels/428295358100013066/517163444747894795/881910783901065246, you may be able to build from source if binaries or the installer dont work for your system or you are unable to get them working as intended. https://docs.solana.com/cli/install-solana-cli-tools#build-from-source
I’ll def read into these. Think the nft marketplace can be better productized (and profitable but nft hodlers) so looking forward to trying something cool
Thank you so much <@785084693023424542> !
the developer site has been updated with a lot of great resources: https://solana.com/developers (rust and solana resources), great tutorial on programs: https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/,  wallet front end integration: https://github.com/solana-labs/dapp-scaffold, NFTs: https://www.metaplex.com/  and all the Solana, and Solana Program Library, githubs, with the token, lending, and swap examples and source code: https://github.com/solana-labs. Lookup oyster in the github for a lot of great code references as well. synthetify github is another more advanced react integration example as well.
mac m1
so its just the local validator not working? what kind of system are you running on?
i'm connected to devnet
the logs appear and i set up a command line wallet
I know there are a few “courses” on solana smart contracts building but is there anything a little deeper that I can sink my teeth into? I have some fairly large ideas but need to get more well versed with rust + solana smart contract building
when i try to run solana-test-validator

can you show the error message?  what network are you connected to? how are you 'running' solana logs?  with solana logs cli command?  what does you config/connection look like?
how are you sending the instructions to both create, find, and send/transfer tokens?  as long as your following those instructions for the creation, and to find the account, using that account to then send, you should be good!
hi i'm getting a message unable to connect to server when i'm trying to run solana logs. additionally it says that the library was not loaded, any tips?
Ping on this. We tried creating an address with instructions here: https://spl.solana.com/associated-token-account
But sending an SPL token of that type to the address caused creation of a new account.  I.e., it doesn't seem to be using what we created

Want to make sure we're generating addresses correctly so that a swap transaction doesn't send back to an unrecoverable account!
hi can anyone help me
Hey guys is this the section forthe Igntion hack?
Any idea to how get rid of this? The unverified address is the one added creators array during minting with verified at false. Any suggestions to fix that issue?
Thank you! Specifically was interested in credit card purchasing. I'll check into some integration there.
I believe FTX, Binance and Coinbase all have some level of Solana -> Fiat on-ramps based on demographics - results and exposure likely vary by those demographics, availability, and partner level integration based on your specific requirements. I'd reach out to their supports with any specific questions.
Hello guys

My team and me decided to launch our project on SOL.

We are looking for a solid SOLana developer.
Please DM or tag me to discuss details.

Time is now tho, we don't have time to lose.
Quick question for the community. Which ecosystem partner is the best for fiat onboarding currently with Sol token? I've seen MoonPay and PlasmaPay but wondering if anyone has experience with another? MoonPay doesn't seem sufficient for our needs.
lamports is not really that easy to read, would think it could be a bit more user friendly

Is there a way for a wallet to display the sol amount instead of the lamports e.g. with phantom wallet
I'm on Windows OS
Any idea how to go about this?

How do I unpack this instruction?
https://docs.solana.com/terminology#lamport
how many lamports in a sol?
degen apes, aurory, etc
anyone know where i can see the contracts for recent nft drops?
can anyone help with this ?!
Still interested to learn the answer to this. :)
Thanks i’ll give that a try once i’m back on
ty vm
`solana-keygen grind`
Anyone know how to create a collection and then put individual nfts into that collection?
How can i create an address started with a personalized word like mango has it `MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac` ?
(it's trying to import non-transpiled TypeScript files rather than JS files, so I'm guessing it wasn't built)
Do yarn install from the root of the project, then run yarn build
Cloned from the main repo, attempted to install via yarn and start one of the examples. Definitely a yarn issue but I just want to make sure i’m not missing something as I tried installing on WSL and Windows
hi, given a known SPL address, is there an easy way to create a wallet-owned account for that token?
: )
Appreciate it! Ill share anything I find haha
good luck YIn
you prob. are lil ahead of me though on the process
hmm. well ill be going thru all that today too. if i find something out. i def. will share wit ya
ooo
i got the keypair but the result is only for the starting of an address, how to do the same with token? I tried with help but not success
I cat mint an nft on metaolex but idk how to create one "collection" to put each individual nft under
im tryong to do the same thats why im interested
actual*
you mean creating the actually NFTs. gif itself.. or doing the minting process
yeah i gotcha
Yeah i can do that but doesn't really help with what im trying to do lol
yeah
Like a single token?
token
thats what im going to be doing today
SPL?
just to get that process down
have you tried creating a SPL first
gotcha
I got my metaplex setup but have no idea how to create a collection of NFTs with different traits under one single collection
i thought a window was going to pop up lol
im at the telemetry part
im just went through installing metaplex for the nft marketplace
well you can start with metaplex
Does anyone know how to create a collection to put nfts in on SOL? Trying to learn and just want to be pointed in a direction lol
link would be stored in the memo portion of the token correct?
hmm actually i think i figured it out
react / typescript
hi everyone, ive made some progress.. integrated the wallet + added a "buy" button, but now how do i interact with the wallet and create a buy transaction / instruction when the button is pressed... anyone have an example of this?
This sounds like a yarn/npm install issue. Happy to take a look if you have a project repo. Also, that's importing a tsx file. Are you building this from source or using it in a project?
Hey devs, me and my team have got most of the code ready to release an NFT collection on the ethereum blockchain but we are thinking of instead releasing on solana, anyone with solana experience here who could help me figure out how minting an NFT collection with metadata and stuff works on solana? (We are gonna pay you with a % of the profit with a cap, we can discuss this later)
Grinding may take a while... depends on your machine
Thank you
Thank you, i’ll test it
1. Solana programs is BPF, there is no reverse compile to source that I know of
2. Program instructions are usually specialized and many projects have web ui to execute transactions, e.g. https://github.com/solana-labs/solana-program-library
`solana-keygen grind` see the help to set vanity prefix, suffix or both
Help would be appreciated
Can we call any function from smart contract in solscan or anything like that where a common user can simply click a button to call a function like he does in ethereum smart contracts?
Hello guys! I have a question. Can we see solana smart contract like we see ethereum blockchain? Is that possible?
Hello, i saw that some projects have their name at the begining of program address? Could somebody tell me how to do it?
<@!150787664553967616>, have you seen this issue before with wallet-adapter? I cannot for the life of me figure out where I have went wrong
Anyone knows how to fix this error?

OK thanks ill look around
I would be lying if I said I knew anything more than the basics, best to look it up. I know there is a Python library etc
Thanks Viper, just 1 more question - are there perhaps a guide on how to do this using ARweave? Maybe a library?
Technically you can host it anywhere as long as your provide the link
Or is Arweave the only way?
Are there any other solutions?
Correct
I have a question - when creating an NFT, I want to add ART to the NFT, but that art I would need to store on Arweave?
Today going to work on creating and Minting my first SPL
Solana is so much fun to learn
Had success with funding my account for devnet
Just finished creating my first few Solana cli wallets
If someone could point me in the right direction that would be great 🙂
Like what is the logic in that?
```./src/Wallet.tsx
Module not found: Can't resolve '@solana/wallet-adapter-material-ui' in '/home/USER/code/sol/react/wallet-adapter/packages/material-ui-starter/src'```
How to execute this function？
Hello all, it seemed to me or has become more expensive, I spent 2 SOL
That then occurs
yarn start
CD'd into packages/example
Followed this
https://github.com/solana-labs/wallet-adapter#install
```
./src/Demo.tsx
Module not found: Can't resolve '@solana/wallet-adapter-ant-design' in '/home/USER/code/sol/react/wallet-adapter/packages/example/src'
```
I think it finally clicked with me, thanks a lot 🙏🏼
Hi How can I convert a public key into AccountInfo type? Thank you https://stackoverflow.com/questions/68997169/solana-anchor-rust-how-to-convert-a-public-key-into-an-accountinfo-type
you need to calculate `package_account_pubkey` and pass it into your transaction before you send it. all accounts you need you have to wrap them into tx before you send the tx.
What is the owner you passed in SystemProgram.createAccount? It is expected to pass tokan program.
I'm clearly doing something wrong but I don't know what
The official one
The one you just linked
which wallet-adapter project?
Even though i've done all of the setup
Module not found: Can't resolve
I keep getting issues trying to run the example
Anyone had issues getting the wallet-adapter project to work?
seems pretty complete
as an wallet adapter
Anyone used https://github.com/solana-labs/wallet-adapter before?
Hey folks, trying to wrap my head around creating PDAs. The following snippet when executed fails on the `invoke_signed` call complaining about `Account WhEASQrYcXMRkBfbcbsRCD9zYXKu7xXLQSCvYS7Bf2G wasn't found in account_infos`. The account mentioned is the new account I'm about to create - `package_account_pubkey`.  I can't pass it in cause I'm creating it, any idea what am I doing wrong?
```
pub fn process_publish(
    program_id: &Pubkey,
    publish_args: PublishArgs,
    accounts: &[AccountInfo],
) -> ProgramResult {
    let scope_and_name = publish_args.package_scope_and_name();
    msg!("Instruction: Publish {}", scope_and_name);

    let mut accounts_iter = accounts.iter();
    let payer = next_account_info(&mut accounts_iter)?;
    let system_program = next_account_info(&mut accounts_iter)?;

    let (package_account_pubkey, seed_bump) =
        Pubkey::find_program_address(&[scope_and_name.as_bytes()], &program_id);

    let rent = Rent::get()?;
    let account_size = std::mem::size_of::<PackageAccountData>();

    msg!(
        "payer {:?} system_program {:?} package_account_pubkey {:?}",
        payer,
        system_program,
        package_account_pubkey
    );

    invoke_signed(
        &system_instruction::create_account_with_seed(
            &payer.key,
            &package_account_pubkey,
            &payer.key,
            &scope_and_name,
            rent.minimum_balance(account_size),
            account_size as u64,
            &program_id,
        ),
        &[payer.clone(), system_program.clone()],
        &[&[scope_and_name.as_bytes(), &[seed_bump]]],
    )
}
```
I am trying to `SystemProgram.createAccount` and `Token.createInitAccountInstruction`, but failed with error `instruction modified data of an account it does not own`
```
 ERROR  Transaction simulation failed: Error processing Instruction 1: instruction modified data of an account it does not own 
    Program 11111111111111111111111111111111 invoke [1]
    Program 11111111111111111111111111111111 success
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [1]
    Program log: Instruction: InitializeAccount
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 3680 of 200000 compute units
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success
 ERROR  [Error: Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 1: instruction modified data of an account it does not own]
```
Hey, any idea how to fix this?
Thank you guys for all the docs on metaplex. I'm still a bit sceptical about this whole approach dictated by a third party, It would have been better if those guidelines would have come from solana directly, but I understand the limitations. I also understand that metaplex is more for NFT and for fungible tokens which only rely on the solana token registry which is still a manual pull request right? (but some solutions are currently under cpnsideration)
Thanks 😘  , you saved 3 hours of my life
`program`, right 🤦 .my bad, thanks!
Check your syntax
I think the doc uses `solana program deploy` not `solana deploy`
if you have run this example, you will need to change GREETING_SEED when you adjust struct. The new struct need to create a new account.
And why did `spl-token` choose `u64` instead?
Good day! Are there any ERC20-like token programs, which use 256 bit integers for tokens
hey
I was following this https://docs.solana.com/cli/deploy-a-program and tried providing ` --program-id`
but I'm getting that
```
solana deploy --program-id 9apKkLCDuKqjiEPJm2v49Bk5tVWHHEnmcGN6W4Qe3MNA ./mytest.so
error: Found argument '--program-id' which wasn't expected, or isn't valid in this context
```
`solana-cli 1.7.8 (src:7aced9e7; feat:2045430982)`
can anyone help me with this api 
https://github.com/solana-labs/solana-program-library/blob/4406265d4a3af748f6709f38c3e4f6b07b578ee9/name-service/js/src/bindings.ts#L44

i keep getting error 
`Error: Transaction instruction index 0 has undefined program id`

I am getting: Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: Failed to serialize or deserialize account data: Unkown
Hi all I added a new property to the hello world program, but it isn't working, the program is suppose to increment the second variable by 2, did I do something wrong here?
just a question - there wouldnt happen to be any vuejs wallet libraries? i just did a search on github but couldnt find any
wow guys thanks you so much!  that was super fast
in general, best and recommended wallet adapter: https://github.com/project-serum/sol-wallet-adapter along with examples, 
best current react wallet adapter base scaffold implementation: https://github.com/solana-labs/dapp-scaffold
this https://docs.metaplex.com/ seems to have info on how to add metadata
will really appreciate any sort of help with these
also, minting an NFT i am trying to add ART to it and nowehere does it state on the documentation how to do this, i have also tried google / youtube but no one seems to know
hi everyone, i would like to know if anyone can assist me with phantom / sollet wallet integration on a website - is this the right channel? or can anyone point me to a resource / library
got it, thanks
standards are evolving along with the eco system. metaplex on Solana is the best NFT resource available and is currently the recommended NFT foundation to build upon and learn from. It is also an excellent source of Solana coding examples.
thank you! one last question, is this universal? like will the same standard work for Solanart and stuff too?
If by collections you mean numbering and or grouping, there are 'editions'. This and much more information about the metaplex design and implementation can be found at: https://docs.metaplex.com/
thanks! does that work for creating collections as well?
you can take a look at https://github.com/metaplex-foundation/metaplex
hello, are there any resources on how to deploy a NFT ? I understand how to mint an NFT from docs, but there's nothing on how to associate metadata with it or create a collection like how opensea let's you
hi all, I see some awesome links in dev-announcements for learning solana. Is there a cryptozombies like approach to learn solana that walks you thru the learning process?
Workaround to access devnet. Mind the fact that this is using http: `solana config set --url http://api.devnet.solana.com`
Not sure what the right channel to put this, looks like the cert for devnet expired: https://discord.com/channels/428295358100013066/694949720644124762/882092081739366400
Is this the right channel? I'm looking for a developer for an NFT project on Solana. Will pay very competitively. We're working with a great artist and the assets are done, need help with the minting contract and hooking it up to the site. Please DM if interested!
yeah same. is this a familiar problem or new?
Seriously
devnet having problems?
Protocol on promotion events these days.
Experiencing total breakdown now. Is there any work-around?
FetchError: request to https://api.devnet.solana.com/ failed, reason: Hostname/IP does not match certificate's altnames: Host: api.devnet.solana.com. is not in the cert's altnames: DNS:*.devnet.rpcpool.com, DNS:*.rpcpool.com
Just want to add another voice confirming the same exact issue re: invalid SSL cert for htttps://api.devnet.solana.com
Team has been notified, please hold 🙏
Should be fixed soon
Same here
```Caused by:
    RPC request error: cluster version query failed: error sending request for url (https://api.devnet.solana.com/): error trying to connect: invalid certificate: CertNotValidForName```
sollet devnet seems to  be hanging as well
running into `ERR_CERT_COMMON_NAME_INVALID` when trying to fetch info from the devnet rpc node
is the ssl cert for devnet up-to-date?
Thanks!!
thanks
#sollet on https://discord.gg/EDvudv6
this has to be not wallet problem, i did used almost all 25 wallets (imported that wallet) from solana.com list
sollare doesnt know how to fix it
They absolutely have support
i can finde them
sollet has no support
No one on this server can help you
I told you in wallet support that you need to contact support for the wallets you're trying to use
i need to try, coz im not getting answers in other channels... 5 hours i cant get any info whats cant be wrong with this... nobody in solana ecosystem knows this.... cant fine any info, just one guy on CT in april had same problem, checked hes wallet, 13days later he was able to move his coins...  so have to be solution
If someone can explain in simple way : )
Hello, 
What is Arweave?
Is is like some kind of indexer?
> decentralised permanent data storage solution of ledger data, ensuring the data can be always retrieved as required.
stop cross posting
Maybe  someone here to know, how to deal with this issue. Hi, can anyone tell me how i can send SOL from wallet when i getting this message "Signature verification failed" ?
cant move sol from that wallet . thanks
in sollet, you should be able to 'export' the private key from the wallet
blockhash is generally used to support lifetime of a transaction, if you need one you can generally call a getrecentblockhash function, usually references hash of the ledger at a given time/block, usually for logic in some kind of tracking and processing, i believe a base58/Hash type,
And to answer something from a few days ago... https://www.notion.so/Metaplex-Developer-Guide-afefbc19841744c28587ab948a08cfac Metaplex === how we are determining which image applies to which token
can it be any sting? Is there a specific format?
Q: on spl-token create-token: what IS a blockhash?
We don't have anything specific for that unfortunately, especially because the actual value heavily impacts the number of instructions used.  For example, dividing a huge number by a huge number will be much more expensive than dividing a small number by a small number.  On the other hand, we have a few tests at in the math library at [1], feel free to grow those with new tests and see how expensive everything is!

[1] https://github.com/solana-labs/solana-program-library/blob/master/libraries/math/tests/instruction_count.rs
Metaplex doesn't allow outright purchases?
here is some multi-sig account reference and information using CLI https://spl.solana.com/token#multisig-usage and possibly some related information based on your use case: https://docs.solana.com/offline-signing
I have not yet seen an explorer like etherscan that shows contracts presented in the same manner for native solana programs/contracts. Some sites have public githubs where you can view their programs, and the solana and solana-program-library githubs are good sources for reference. But for viewing all contracts being used like ethereum has with etherscan, not yet that I know of for native solana.
Is there a CLI support or web UI to deploy and configure Solana Multisig wallets?
hey folks, is there a way to read contracts in Solana like we can on etherscan
so ultimately I need to understand:
a) what are the basic instructions and what are their associated costs
b) how are more complex instructions (such as u128 division) implemented in terms of basic instructions.

for a) I need a table
for b) I (presumably) need to learn to read the ELF dump
this does not tell me how expensive individual operations are. for example, it turns out that `.leading_zeros()` is a cheap instruction on both u64 and u128. division is cheap for u64 but absurdly expensive (thousands of compute units) on u128.
https://docs.solana.com/developing/programming-model/runtime#compute-budget
Secondly: Are there any resources for how to read the ELF dump generated by build-bpf --dump?
The Ethereum yellow paper states the gas cost of all operations in a table in appendix G. I'm looking for something equivalent for Solana and the compute budget. Is there such a thing?
thanks <@!569965272052793344> I saw this ressource however I was wondering the official vision from solana, as after all metaplex is still a third party
https://www.notion.so/Metaplex-Developer-Guide-afefbc19841744c28587ab948a08cfac
also, forgive my ignorance, will it be possible to have similar behaviour as oon ERC20 Contract where transfer of token can be bound to program instructions (to replicate frictionless logic that you could see on many tokens on ERC or BSC)
HI guys, I was wondering the official guideline for token metadata on solana. So if I understood correctly from phantom documentation for NFT we have to follow the metaplex metadata structure, but for normal tokens, for the moment the metadata would be stored in the token registry ?
I guess they just check the address of the minter and ensures that the capability of minting is disabled
Hello guys, 
Can you please explain to me in a nutshell how markets like Digitaleyes or Solanaart are verifying the NFTs authenticity? Like how they detect that the NFT is indeed legit, minted from the legit source. Because on digitaleyes they are getting "Verified" stamp, and on Solanart you can list only the legit content. Really interested to see the process behind this. Or any theory how this is solved, as i would like to implement it in my app too.
maybe it didn't like how the privatekey was converted from to string to Uint8 array. Anyway, if you solved I'm happy 🍻
Yep! my issue was I couldn't get the private key export from Phantom to work  in fromSecretKey (even after converting to Uint8 array). If I run into that again I'll import into Sollet and export from there, just seems odd the PK export from Phantom can't be used.
if you know the seed phrase of your previous wallet you can import it on Sollet. You're facing this problem since that fromSecretKey() expects the private key to be an array of UInt8 type
I'm using Phantom wallet not Sollet, and I've exported the private key, but no matter what I tried I got the bad size error. I got around this by using the Solana CLI to generate a Keypair and then import that into Phantom wallet
export your private key from sollet in array format, then create the instance of your wallet in this way:
```
const {Keypair} = require('@solana/web3.js)
const arrayPvtKeyFromSollet = [45, 54, ..., 12] //Paste here the array of numbers 
const privateKeyuint8 = new Uint8Array(arrayPvtKeyFromSollet)
const myWallet = Keypair.fromSecretKey(privateKeyuint8)
const publicKey = myWallet.publicKey.toString() //get your public key
```
Hi every one, I'm not sure if this is the right place to post, but I created a sample react app to showcase the usage of solana-web3 and wallet-adapter to support devs develop Frontend application. https://github.com/tomoima525/solana-transaction-tool
I'll stick to using my own local testnet cluster for playing around with Solana then 😄
Gotcha, would be worried if working off master would cause some handshake issues hahah
I think it's just "total on the server", there might be a per-ip limit by the proxy in front of that
I tried setup a testnet cluster just now and it worked fine
Oh, is it per-IP? It's my first try deploying a contract
Sounds more like maybe you hit the subscription limit on the backend
Were there any changes to how handshakes are done recently causing me to not be able to connect to the devnet? (on solana master)
Unsure why a handshake would fail 🤔 any sort of authentication I need to perform apart from setting the endpoint URL via `solana config set --url`?
Tried to deploy a program to the devnet just now and got this error, anyone know a quick fix for this? `Error: Data writes to account failed: Pubsub error: ConnectionError(Protocol(HandshakeIncomplete))`
Thanks! Going to finish my PR in anchor 😃
`BorshDeserialize::try_from_slice(writing_account.data.take())` does this work in the program? it is not working in my rust(rocket) backend? I had to replace it with `try_from_slice_unchecked`.
Should i replace it in the program and redeploy?
<@!448034961652449283> - try the 1.7.11 crates now
Okay : )


///////////////////////////////////////////////////////////////////////////////////////////////

Others are here: https://docs.rs/solana-program/1.7.9/src/solana_program/program_error.rs.html
Since it's a custom error it'd be in the program's source code.
Custom program error: 0x92
where can I find the program error ids?
ok 🙂
Yeah I know. :)
that's what Anchor does for you
Yeah, there's a few things that are a bit dicey...like keeping the C++ classes in sync with the JavaScript BufferLayouts on the client. If I were a bit more fancy I'd generate them from a single source-of-truth (i.e. one from the other), but so far I've been okay with just being very careful when I change them.
fair enough, whatever you're most productive in
Weeks? Try in a few years. :)
to sell it :))
I'll try again in a few weeks
Yeah, I'm sure Rust is the better choice for most people, just not for me at the moment.
and macros that I use from anchor's library, none that I write manually myself
it's C++ with Option/Result and macros
the rust you need for solana is a subset of Rust and it's quite similar to c++ really
I'm just very pragmatic about languages. Since I'm working on a one-man-project and know C++ well, I can do everything I want without having to deal with language-issues. I'm sure Rust has its peculiarities too and it takes some time to get used to them. I'd rather use that time to work on the product.
it just won the most loved language for the 6th year in a row this week
still haven't gotten into Rust yet?
It sure looks enticing. And there's certainly value in having a well-tested quasi-standard that everyone understands.
saves so much code
this is amazing
#[account(seeds = [<seeds>], bump? = <target>, payer? = <target>, space? = <target>, owner? = <target>)]
https://docs.rs/anchor-lang/0.12.0/anchor_lang/derive.Accounts.html
it gets codegen'd if you add the macro derive
Yeah no idea. It's all too high-level for me. ;)
https://github.com/project-serum/anchor/blob/5018e98a9c27622880bad4fa0c9acf7546ae85ba/lang/syn/src/codegen/accounts/constraints.rs#L288
looks like I can do it with anchor
haha
Yeah, you can then assign it to your program...even save some rent. ;)
but that's fine, the account can exist but there is no data to it, got it
not sure
Well yeah. Have you never transferred SOL to an account that hasn't existed before? :)
and nobody can create an unitialized data account at that PDA apart from my program?
But "assign" works as long as the account-data is empty - even if it has SOL.
ooh
Because you can transfer SOL to any account without signing for the receiver. That creates the account too.
I hadn't thought of that, yeah, then I could use 4-byte seeds...
wait, how? if it's a PDA, how can someone else, who doesn't have access to my program, create an account ahead of time? or how can you send lamports to an account that doesn't exist yet?
(It's calling "allocate" and "assign" instead of createaccount, because createaccount fails when the account has lamports - so a griefer could just transfer some lamports there to "block" account creation.)
thanks a lot!
By the way, here's a Rust example for what you're looking for: https://github.com/solana-labs/solana-program-library/blob/8ed36b5ec19fb2c39a599da41c5cd88b9b14e04e/associated-token-account/program/src/processor.rs#L78
you can just keep the seeds used to create them
you can do something else
My main gripe is the 10MB limit. If the array elements are just the 32-byte addresses I'd be hitting the limit at ~300k accounts. Not great.
It is random access, yes. You can also read just the portion of the array-account you care about, using filters.
and you can basically have multiple accounts each with (start, end) so you know who to call
i guess if you reserve upfront and know the index then it's random access
i never tried this tho, don't you run out of compute units quickly here for any operation?
Well I can grow the account.
one global massive array in a single 10mb account?
I think I'll go with the array-approach.
It would be a huge overhead if I had to load all users' complete dataset and merge to do that.
(i.e from a single element)
I see what you mean, but I want to iterate forward and backward locally.
then offline you can do a merge sort
they increment their own and then save a timestamp
what if each user holds their own start_index and end_index
(The array-approach allows you to load the array and then call getMultipleAccounts)
Yeah that's another interesting question that poses a tradeoff. If you use linked lists you have to load one-after-the-other. With an indexed-PDA you can easily getMultipleAccounts, because you can determine the addresses on the client.
what if you save the timestamp for each account
can you do it offline?
how do you want to iterate through these?
yea..
Another interesting idea. But you can see it's getting complicated. :)

Actually no, the content can be uploaded to a separate account first, which is then referenced in the "final" transaction. Kinda how we upload programs.
yes
(And then checking that hash in the second TX.)
Something like forcing the user to send a hash of the data he's going to send.
maybe you can leave some breadcrumbs, like a discriminator of what each account should contain, basically compressing the data you need to send in the transaction
if your creation is path dependent, then this doesn't work
I agree that for some applications that doesn't matter much.
yea
Yeah, writing the data afterwards...the thing is that users could then "reserve a spot in the queue" and only decide on the content later.
nono, fair enough, didn't know there was a size constraint
I mean, I appreciate your ideas! I had actually thought about that solution, but I was hoping for something really elegant.
can you not write the data after you create the account?
I also want to send "real" data with the instruction and losing 400 bytes isn't a great tradeoff.
It takes up almost half the size of the transaction (1200 bytes or whatever it is) to declare those accounts.
and if you can touch 32 accounts in a transaction, you have quite a lot of room for error
you give each of them start index, end index, and the 10 pdas, and then you get random access based on the globla state
i disagree
Yeah well, that's no longer "elegant". :)
and find the one that matches the current global state
you can send like 10 PDAs
And they will fail because their account exists.
But they each have to derive the PDA with the index.
and none of them fail
so your state keeps the next_index
they will have to queue to change the state
so if they take the global state as mutable
well that still works
In the end it doesn't matter so much which client was "first"; but I don't want the other clients have their TX fail.
Nope.
For example, 3 clients sending a TX within the same second. And then they are quiet for a minute or so.
do you control the clients?
I realize I cannot do that in a sustained way. But short bursts should work.
and you want to be able to iterate sequentially between these accounts afterwards?
okay got it. thanks. 
I am looking how many iterations I can do in a program.
I'm looking for a solution where multiple clients can hit the server pretty hard and create multiple accounts per second without failing. (Well let me elaborate on that...)
why is that a problem?
which is fine apart from the fact that you pay for gas for a failed txn
true
Yeah, I should clarify. I don't mean that invalid data will get created. (Perhaps I shouldn't use the term race-condition.) But only one of the concurrent transactions will succeed, the others using the same index will fail.
in that case 2 clients can't be executed in parallel
isn't the race condition solved by the current index being read from a mutable global state?
alright, will dig one myself
I certainly don't have one in Rust. I might have one in C++ somewhere.
always in the client
i have never created an account in the CPI
that's neat, do you have an example?
Yes, you derive the address in both the client and the program. But you call the "CreateAccount" function via CPI, so the program can sign for it.
I'm not clear what the race condition would be. Each new account has to happen inside of a transaction, right?
then you can't run them in parallel
and that state account is mutable by the transaction
yes but let's say next index is held within a global state account
That's the solution I ruled out because it has a race-condition. If two clients want to create an account at the same time and read that the current index is "5", both with find the same program address and one of the two transactions will fail.
I thought you need to define upfront what accounts your program is touching when it gets executed
so you can loop through it
so you can deterministically know what account is at what index
You'll have to create it in a CPI.
await PublicKey.findProgramAddress(
        [
            Buffer.from(anchor.utils.bytes.utf8.encode(custom_namespace)),
            Buffer.from(to_be_bytes(account_index)),
        ],
        programId);
you can basically generate an address from a string & an index
hey, looks like we're trying to solve the same problem
Well, I think there'd still be a race whenever the "consolidation" program runs. It's not a bad idea, but I don't think such a solution will be more elegant than using the arrays.
hi, how can I create an account with a given PDA? I get signature verification failed and I believe it's because I am not signing it with the private key, but since it's a PDA, it doesn't have a private key?
You can log how much compute budget you have remaining w/ this: https://github.com/solana-labs/solana/blob/d3a3a7548c857f26ec2cb10e270da72d373020ec/sdk/program/src/log.rs#L102
No hands on experience with that, yet. But the expectation I currently hold is -- you're fine unless you exceed your compute budget. 

And if you exceed your compute budget, your transaction fails.
hey guys, what happens when program runs a heavy for loop?
just a thought, sorry if the answer is "duh, no" lol
Obviously, I'm new here, but could you have accounts be made in a "pending" sort of state, and then a program go through periodically and consolidate?
I think the account terminology _could_ work, but the usage probably needs to evolve. I personally have to read, re-read and restate things into my own framing. 

paulx said:
> During the next steps you will create the token mint accounts for X and Y and 2 token accounts, Alice's X and Alice's Y account.

<@!514629735339261993>'s internal translation:
> During the next steps you'll create four accounts. One account to store the mint data for token X. Another to store the mint data for token Y. A third account to store Alice's holdings for token X and the fourth to store her holdings for token Y.

I'm relatively new to this tho., so maybe repeating store, store, store is just where I'm at in the learning cycle and that will dissapear.
follow up, I have the code roughly like this: 

```
    let create_depositer_account_ix = create_account(
        &depositer_keypair.pubkey(),
        &depositer_account_keypair.pubkey(),
        client
            .get_rent()
            .await?
            .minimum_balance(spl_token::state::Account::get_packed_len())
            + 100_000, // TODO(trezm): Figure out the required lamports for rent
        spl_token::state::Account::get_packed_len() as u64,
        &spl_token::id(),
    );
    let initialize_depositer_account_ix = initialize_account(
        &spl_token::id(),
        &depositer_account_keypair.pubkey(),
        &spl_token::native_mint::id(),
        &depositer_keypair.pubkey(),
    )?;

    let txn = Transaction::new_signed_with_payer(
        &vec![create_depositer_account_ix, initialize_depositer_account_ix],
        Some(&depositer_keypair.pubkey()),
        &vec![&depositer_keypair, &depositer_account_keypair],
        recent_blockhash,
    );
```

in a test, then the actual program does one of these

```
        let change_account_ownership_ix = set_authority(
            spl_token_info.key,
            deposit_account.key,
            Some(&pda),
            spl_token::instruction::AuthorityType::AccountOwner,
            depositer.key,
            &[depositer.key],
        )?;
```

similar to the escrow program. Problem is, now I'm getting an `Error: owner does not match`. Not sure why, given that if I print `depositer.key` and `depositer_keypair.pubkey()` are the same when I print them out.
Does anyone have an idea for a datastructure to keep track of a sequence of accounts (by time-of-creation) that can be iterated forward and backward in time?

I want to avoid race-conditions when different clients create accounts at the same time. So that rules out doubly-linked lists (since the clients would have to specify the account with the forward-reference that's to be changed) and PDAs with incremental numbers as seeds. Singly linked lists (where each account links back to the previous one) would work, but can only be iterated backwards.

The most obvious solution is a simple array of account addresses, but then I'd have to deal with reallocations to grow the array and would eventually hit the 10MB account size limit. Once that happens I'd have to keep track of multiple such array-accounts, which begs the question...

Perhaps there's an elegant solution I'm missing.
or even just "data" or "class" or something more familiar to "this thing has data that lives inside of it," oh well
thnks for the share., this is great read for new devs. to solana
I wonder how much of this confusion could have been avoided if Solana had called "accounts" "files" instead. :) People are used to the fact that files have metadata (such as access-times and owners) and that this is separate from the data stored within the file.
here's a link and quote for posterity -- thanks for pointing that out <@!687984626400231464> !

https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/#token-ownership

> Note that this token account owner attribute is not the same as the account owner. The account owner is an internal Solana attribute that will always be a program. This new token owner attribute is something the token program declares in user space (i.e. in the program they are building). It's encoded inside a token account's data, in addition to other properties such as the balance of tokens the account holds. What this also means is that once a token account has been set up, its private key is useless, only its token owner attribute matters. And the token owner attribute is going to be some other address, in our case Alice's and Bob's main account respectively. When making a token transfer they simply have to sign the tx (tx=transaction) with the private key of their main account.
(The terminology used is admittedly super-confusing.)
I suspect you both want to re-read the tutorial's paragraph that contains the sentence "Note that this token account owner attribute is not the same as the account owner."
I actually have a similar question -- I'm finding when I do the above (all in rust, not in web3js), and I create_account followed by initialize_account, the owner remains the token program 🤔. Either I'm doing something wonky in my tests, or I'm confused what the point of the `owner` keys are fo rthose instructions
Paulx tutorial uses spl_token::instruction::set_authority instruction to make a vault controlled by program, can I directly make a vault controlled by program using SystemProgram.createAccount &  then Token.createInitAccountInstruction by passing owner as PDA[0] using web3js?
Oyster lending : can anyone help me to solve this..<:tinfoilhat:809110749141663754>
how can get the stake wallets with publickey address?
hi guys
\
Greetings guys, is there a way to customise the Rpc Config with the rust rpc client?
have you solved problem ? "error: failed to run custom build command for `openssl-sys v0.9.57`"
`u64::MAX` was most likely chosen bcoz the chance of someone oweing that amount are practically 0
if in the repay instruction you give `u64::MAX` as input it tries to repay all you owe
its just a check for that
can someone help me understand what's the thinking behing this if statement inside `token-lending` program?
```
        let settle_amount = if amount_to_repay == u64::MAX {
            borrowed_amount
        } else {
            Decimal::from(amount_to_repay).min(borrowed_amount)
        };
```
Found here - https://github.com/solana-labs/solana-program-library/blob/master/token-lending/program/src/state/reserve.rs#L200

I get that Decimal is a U192 and sometimes we want to convert to/from U64, but I don't get why we're checking `== u64::MAX`. What's the purpose of that check?
Thanks a lot!!
Yes, example:
https://github.com/hashblock/solana-cli-program-template/blob/main/program/src/processor.rs#L25
gm y'all
Could anybody assist with the filter offsets and params needed for getProgramAccounts to enumerate an account's associated solfarm vaults and radium farms?
I want to confirm as There is an owner field in account data, so If compare account owner with program_id will it work or not?
I'm doing this to prevent someone from passing false data account while calling my program.
I'm reading some data from an account in my program, is there any way to ensure that account that I'm reading is owned by my program i.e., only my program have ability to write data to that account.
Thank you very very much for the help. But I am not sure I still understand the difference between Raw key & BIP44 root key 🥲
there are keccak, blake, and sha256 but just looking for a non-cryptographic algo that can be used
is it possible to do fnv hashing in solana programs?
1) The raw key is a keypair generated directly from the seed phrase entropy. The BIP44 root key uses the BIP44 hierarchical derivation spec. (The code is here, if you want to check it out: https://github.com/solana-labs/solana/blob/master/sdk/src/signer/keypair.rs#L153-L173)
2) I don't know how to answer that question. Sounds like that account doesn't have any SOL yet.
2) when I entered solana balance 'solana BIP44 root key' it showed me balance as 0 SOL. Why that happened if it is not a valid raw key
1) solana BIP44 root key vs raw key whats the difference
I have a list of Qs, I would be very glad if you could provide me some material to clear my doubts.
It worked
`solana-keygen pubkey prompt://` returns the solana BIP44 root key from that seed phrase (`m/44'/501'`).
`solana-keygen pubkey ASK` will return the raw key (which solana-keygen new displays by default)
you can try by using the phrase yourself


as it is a dummy account, I am sharing the screenshots here
I generated a paper wallet and it gave me a recovery phrase & pubkey (Pubkey 1). When using that recovery phrase to get my pubkey ( Pubkey 2), it gives me some other pubkey. I tried it multiple times it gave me the same pubkey (Pubkey 2) & not pubkey 1
those of you familiar with the `token-lending` program from the SPL, what does `WAD` stand for?
```
/// Identity
pub const WAD: u64 = 1_000_000_000_000_000_000;
```
It's scattered throughout code but I can't find a definition
nice, so it's an optimization trick. thanks!
https://docs.solana.com/developing/on-chain-programs/overview#stack
https://nnethercote.github.io/perf-book/inlining.html
what does this line mean in the token lending program?
```
#[inline(never)] // avoid stack frame limit
```
where can I read more about it?
but our team is stretched a bit thin so will happily sponsor someone to tackle this
Ceramic is cool because it allows for cross-chain identity. We're building on ETH and Solana so it would be great to have the same identity across chains
Hey not sure if this is the right channel for this but we'd like to put a bounty on a PR to add solana blockchain support for 3ID https://developers.ceramic.network/authentication/3id-did/3id-connect/#installation
Rust
`solana help` or `solana program  help`
nvm found `solana rent xyz` command
Does it sound right that a ~10MB account would cost over 70 SOL?
and what language are used in solona dapps
is there any document for deploy a smart contract to solana chain
servus
heloo
Hi all , any Dapp recommendation for on-ramp fiat in Solana ??
But if the tx is 'old', if that makes any sense, then `confirmTransaction` doesnt do anything, just wastes 30sec of my time 😃
Its kind of annoying cause in my use case, `confirmTransaction` could wait until the tx reaches 'confirmed', and then I could use `getConfirmedTransaction` to actually read it
it looks like a lot of people have had similar issues
i would also try searching for `confirmTransaction` in the discord search in case someone else has run into similar issues
it's not something i'm super familiar with but if `getConfirmedTransaction` works for you, may as well stick with that 🤷
weird
tried all kinds, confirmed, finalized, max, single
what commitment are you using?
I'm a bit confused about it because I have a confirmed transaction (can see it in explorer) and I just wanna see if it is confirmed in js. `confirmTransaction` always throws and is unable to confirm, and `getConfirmedTransaction` works.
i don't know, you linked the associated token account screenshot in the first place. What was the context for that?
ok but why do I need to find associated token accounts? account from whom?
confirmTransaction: `Confirm the transaction identified by the specified signature.`

getConfirmedTransaction: `Fetch a transaction details for a confirmed transaction`

one of them checks that a transaction has been confirmed, the other fetches details about the transaction
that function will only return a pubkey
they use a deterministic seed (the user's wallet pubkey and the token mint's pubkey)
the associated token address is a way of publickey's for user's token accounts in such a way that they can easily be found / reused
this looks like a different function from the one i linked
what is the difference between `confirmTransaction` and `getConfirmedTransaction` ?
If I have the token pubkey and my wallet addres, what else do I need to find?
But it is still unclear to me what I'm finding with this function helper lol

I've reading about this in the documentation
here is the extent of the information in an SPL token program account <https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/state.rs#L86-L106>
but you might also need to know what structure each `LP pool` is using in order to correctly construct all the info
what you need is the public keys of the token accounts you want to access
but they each have their own implementations, although perhaps there are overlaps
tbh i don't know how these LP pool work
but you're thinking about it the wrong way
right
their token programs should be the same
it's not that simple
and given that they should use SPL
Yes Raydium and saber and all those, thing is I wanted to know basically how to fetch the data as it will be the same for every pool
this looks like raydium, <https://github.com/raydium-io/raydium-ui> you could check how they construct that info
where you get LP balances of given pools

Sorry if my wording is wrong, not exactly sure about all the concepts as of now, but basically I need to fetch information like these site does
tbf, it wasn't clear (to me) what your definition of `LP balance` was
or you can even just look it up in the explorer <https://explorer.solana.com/>
https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getTokenAccountBalance
is there a particular language you prefer?
so you want to access balances for an SPL token account given the public key
so If I have the address asd123 I should be able to query balances for that given address
I'm super specific, I just need to read LP balance, which I guess should be easy because pools should follow the token program, so the LPs are basically just tokens
it's not but you're being pretty unspecific
But I can't believe is THAT hard to do read only queries to get some balances
don't get me wrong, the docs suck but what you're asking to do probably requires talking to the people behind the specific program you're interested in analysing account from
will check
I haven't
this cuts through a lot of the bs
have you seen https://2501babe.github.io/posts/solana101.html
The documentation lacks basic information regarding to the strange wording and concepts on Solana
and ask them if they have any web3 apis you could use?
maybe you should contact the devs whose pool data you want to access
all of these actions are very specific to program you're trying interact with. But the general principle is well understood if you read through the docs / example
I just want to read associated LPs and data from a given pool
you have to construct an instruction if you want to send transactions to a particular program
if you want to look at the account data of a particular account, you need to get the account info of a particular public key and then deserialize the data


///////////////////////////////////////////////////////////////////////////////////////////////

Hello Im facing the following error: "Failed to execute 'setItem' on 'Storage': Setting the value of Failed to execute 'setItem' on 'Storage': Setting the value of 'pda-6d657461706c657839e30265676ac7b2c8aad0b40c3257c3dbe114baa5cd06715856746aa70da850dc98c76779f57c59e73d70dfad7db0c67fc6c98fcc8478542c304af536b41304p1exdMJcjVao6GzWfh98' exceeded the quota' 

Can somebody tell me what this error is and if it's a code fault?
Hello All, do we have USDC program id in dev network?
I am having the exact same issue. Posted about it earlier on stackoverflow (no response yet).  I've done some more investigation and it can be replicated very simply by getting the repository for https://github.com/solana-labs/example-helloworld and deleting the cargo.lock file and running npm run build:program-rust.  So it seems for the exact same dependencies in Cargo.toml gives a different Cargo.lock file. Note I have learnt that cargo clean doesn't delete the lock file
For each leader rotation, multiple validators are handling txns right and it gets grouped together at the end of the rotation?
Is there a way to snipe specific txs?
so catch txs from/to a specific address
Where can we find ABIs of already deployed contracts?
What is the size of rust usize in solana sealevel runtime? is it u32 or u64? means 32 bytes or 64 bytes?
Guys, I'll repeat my question. I try to build step by step for M1 following the instruction https://github.com/solana-labs/solana/blob/master/README.md#building, but get the error : error: failed to run custom build command for openssl-sys v0.9.57"
docs.solana.com/wallet-guide/paper-wallet
Yes, I think I read about it in the solana docs.
also what does this error mean from running `cargo test-bpf`:

```
 ELF error: Entrypoint out of bounds
```
sometimes when running `cargo test-bpf` ill get this error

```
error: failed to download `solana-frozen-abi v1.7.9`

Caused by:
  unable to get packages from source

Caused by:
  failed to parse manifest at `/home/solidity/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-frozen-abi-1.7.9/Cargo.toml`

Caused by:
  feature `resolver` is required

  consider adding `cargo-features = ["resolver"]` to the manifest
```
no sure the decode format for it. the numbers are easy because I can just do int.from_bytes but what about text?
```ACCOUNT_LAYOUT = cStruct(
    "mint" / PUBLIC_KEY_LAYOUT,
    "owner" / PUBLIC_KEY_LAYOUT,
    "amount" / Int64ul,
    "delegate_option" / Int32ul,
    "delegate" / PUBLIC_KEY_LAYOUT,
    "state" / Int8ul,
    "is_native_option" / Int32ul,
    "is_native" / Int64ul,
    "delegated_amount" / Int64ul,
    "close_authority_option" / Int32ul,
    "close_authority" / PUBLIC_KEY_LAYOUT,
)``` Say for example I was trying to decode something like this. I might just be stupid lol but how do I convert close_authority to a readable pubkey. I am using python and setting it to a Bytes(32)
Hi everyone, apologies if this is the wrong channel to ask this in.

I was looking to find Solana developers for hire. If someone could point me in the right direction that would be very appreciated.
Can someone tell me if its possible to set keypair with the Solana CLI using a Paper Wallet ??
Hi guys
so catch txs from/to a specific address
Is there a way to snipe specific txs?
Is there any way to apply fees on evey transaction of an SPL token as it can be done on ethereum using _beforeTokenTransfer?
thanks


///////////////////////////////////////////////////////////////////////////////////////////////

But i get an error:
i tried some stuff found in this example: https://github.com/solana-labs/solana-program-library/blob/31603ed3753d5d329ce8ccb57e3d43b0cb2eca38/examples/c/src/cross-program-invocation/cross-program-invocation.c#L34

This is my C code
Hi everyone ! Is there any example on how to create an account with a C program ?
The RPC port exposed by the validator itself has no rate limiting support, this is accomplished by a front-end proxy like haproxy
`Connection::new(..)`
I have a validator running, and an RPC alongside it. How can i ensure my RPC is not rate limiting my requests. 
How do I set config of solana web3 package to make use of my RPC instead of a public RPC
currently the cost model doesn't charge by opcodes, the fee is just based on the number of  signatures in the transaction (see `solana fees`).  Future releases will have a more sophisticated cost model though
is there a similar way to estimate the cost of doing a simple computation? on Ethereum again there's `ADD` opcode which costs 3 gas. trying to compare the compute costs on eth vs. solana as well. thank you.
amazing, thank you 🙏
```
$ solana rent 32
Rent per byte-year: 0.00000348 SOL
Rent per epoch: 0.000003048 SOL
Rent-exempt minimum: 0.0011136 SOL
```
can anyone point me to a fee estimator for Solana? specifically i want to know how much it costs to store some data. i'm trying to compare Ethereum cost to Solana. the EVM has `SSTORE` opcode which stores 256 bits and costs 20k gas. i would like to estimate the cost on Solana for storing 256 bits — or any amount of data.
Got it.  https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getBlock is what you'd use then, and you'd fetch each block in turn.  Note that this is quite a heavy RPC method and the public RPC servers will rate limit it
Hi, 
getSignaturesForAddress method requires account address as an input. I wanted to get list of recent transactions on solana blockchain, similar to the one shown in 
https://solanabeach.io/transactions
Try Connection.getSignaturesForAddress - https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getSignaturesForAddress
(it wraps this JSON RPC method: https://docs.solana.com/developing/clients/jsonrpc-api#getsignaturesforaddress)
Hi Everyone,
I wanted to get list of all transactions using solana web3 package.
Couldnt find a corresponding method. Can someone please direct me to it 🙂
done: https://github.com/solana-labs/solana/issues/19124
I can see where you went wrong. The associated token program uses PDA's but it requires that the authority of the associated token account can sign. In your case, you used your program's id as the authority which means you would have to use your program's keypair to manaage those tokens.

If you want your program to sign, it does not use your program's keypair (that keypair is typically just used for the initial program deploy). You will want to use a pda for your own program which would look something like this:

findProgramAddress(
            [
                ...mySignerSeeds,
            ],
            myProgram.programId,
        )

and then ensure when you call `invoke_signed` in your program, you use the same seeds
Hello everyone 🙂
So i have a question, in the following code the pda matches a token account owned by my program.
```
let [pda, tokenNonce] = await anchor.web3.PublicKey.findProgramAddress(
            [
                program.programId.toBuffer(),
                splToken.TOKEN_PROGRAM_ID.toBuffer(),
                mint.publicKey.toBuffer()
            ],
            splToken.ASSOCIATED_TOKEN_PROGRAM_ID,
        )
``` so far so good.

Then in my program i want to sign transaction that will transfert some tokens to a user but i'm unsure on how to get the signer_seed. This is what i have for now but it does not work :x 

```
let cpi_accounts = Transfer {
            from: ctx.accounts.vault.to_account_info().clone(), //program token account
            to: ctx.accounts.owner.to_account_info().clone(), // the user
            authority: ctx.accounts.p.to_account_info().clone(), // the programID
        };

        let seeds = &[
            ctx.accounts.p.to_account_info().key.as_ref(), //the program ID
            ctx.accounts.token_program.key.as_ref(), // TOKEN_PROGRAM
            ctx.accounts.vault.mint.as_ref(), // the mint
            &[nonce], ]; // the nonce from findProgramAddress
        let signer = &[&seeds[..]];


        let cpi_program = ctx.accounts.token_program.clone();
        let cpi_ctx = CpiContext::new_with_signer(cpi_program, cpi_accounts, signer);
``` 
any idea ? That would be greatly appreciated
you should spend some time reading about how accounts on solana work and how the token program works
https://docs.solana.com/developing/programming-model/accounts
https://spl.solana.com/token
the metadata program would allow you store extra information (like a name, symbol, url, etc) about a token since the token program doesn't support storing that info for token mints
Haha im a little confused with this
Makes sense, I think it would be worth adding this functionality to the solana cli, can you please create an issue?
Yes, we changed `new Account()` to `new Keypair()` because this was confusing. When you use `new Keypair()` you are only creating the keypair that can manage an on-chain account. In order to create an account on-chain you have to submit a transaction which tranfers sol and that is when `SystemProgram.createAccount` and other instructions come into play
this is going to be super useful for my token redemption crank
ah, interesting. Thanks for that
context: https://github.com/solana-labs/solana/blob/c7b986220ed9f2e43b452c012bc14822750530dc/rpc/src/rpc.rs#L2083
you need a data size filter and a memcmp filter for getProgramAccounts. If correct, it will be fast because we have a special index for token mints
starry, do you know what the most efficient way to get all the tokens account linked to a particular mint is? It seems like could run getProgramAccounts for associated token accounts, that would take a really long time to filter through though
yeah need indexing since RPC doesn't give account history for different slots
the checked version should always be used to ensure that the correct mint and decimals value is being used in your transfer
Yep, I'm also not sure. maybe the do indexing or something like that..
@everyone has any of you guys know what is an SPL Token program account and a SPL Token metadata program account?
Hello, how can i send a nft form my wallet an other wallet without adding nft address on destination wallet
what i am trying to do is ..get sols from the user and need to stake it in my solana program so that i can send back it after a condition is passed..so how to do it is there any blogs or tutorial availabe..coz i am a complete noob
yeah, will try it
actually i am not sure if that would work, but maybe
oh dear, thanks a ton
you can move to a specific slot
https://github.com/solana-labs/solana/blob/master/program-test/src/lib.rs#L996 check this
I think that is because by default you don't need the slot to move
is there anyway to do scheduling on-chain ?
hi guys, I am looking for a way to schedule a Solana program on-chain.  For example, checking an account balance and execute program instruction if a condition met
ok then i think this occurs because the `ProgramTest` simulation does not let time pass
then the timestamps totally do not work
oh yes correct
or I misunderstood you?
I guess I actually did as what you said, outside the program by process_transaction twice
`transaction.sign(&[&payer, &initializer], recent_blockhash);
 banks_client.process_transaction(transaction).await.unwrap();
    println!("-------------------------- {} --------------------------", "END");
    println!("-------------------------- {} --------------------------", "Waiting 25 seconds...");
    thread::sleep(Duration::from_millis(25000));
transaction.sign(&[&payer, &initializer], recent_blockhash);
 banks_client.process_transaction(transaction).await.unwrap();`
something like "if you call me before unixtimestamp > 102103, then return an error as I need to be called at 102103 or later"
you need to do your operation, wait outside the program, then call it again
hmm interesting, so is there anyway to increase slot?
https://docs.solana.com/developing/runtime-facilities/sysvars#clock
"More explicitly: for each slot, the most recent vote timestamp provided by each validator is used to generate a timestamp estimate for the current slot"
Within 1 slot the timestamp does not change
so you mean thread will not work on-chain, but probably timestamps will work?
1) I use thread::sleep(Duration::from_millis(25000)); on test script 2) slot is still 1 after all
i bet this wouldn't actually work on chain
second, even if you do, timestamp changes only every slot
first i don't even know how you can use thread
did I miss anything?
well
oh
yes cargo test-bpf
`cargo test`?
yes
is that ProgramTest?
but the current timestamps are the same
as you can see, the solana_runtime is from 06:21:08 to 06:21:33
[2021-08-09T06:21:08.148162000Z DEBUG solana_runtime::message_processor] Program log: current timestamp = 1628490064
[2021-08-09T06:21:08.148483000Z DEBUG solana_runtime::message_processor] Program log: next_closing_timestamp timestamp = 1628490089
[2021-08-09T06:21:08.148720000Z DEBUG solana_runtime::message_processor] Program log: current next_closed_timestamp = 1628490094
[2021-08-09T06:21:08.149250000Z DEBUG solana_rbpf::vm] BPF instructions executed (interp): 6192
[2021-08-09T06:21:08.149269000Z DEBUG solana_rbpf::vm] Max frame depth reached: 9
[2021-08-09T06:21:08.149344000Z DEBUG solana_runtime::message_processor] Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM consumed 6609 of 200000 compute units
[2021-08-09T06:21:08.150901000Z DEBUG solana_runtime::message_processor] Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM success
-------------------------- END --------------------------
-------------------------- Waiting 25 seconds... --------------------------
-------------------------- Bet 5 High --------------------------
[2021-08-09T06:21:33.355841000Z DEBUG solana_runtime::message_processor] Program 4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM invoke [1]
[2021-08-09T06:21:33.356528000Z DEBUG solana_runtime::message_processor] Program log: Instruction: BetHigh
[2021-08-09T06:21:33.357760000Z DEBUG solana_runtime::message_processor] Program log: current timestamp = 1628490064
<@!831450660146642974> can we switch to English because I'm better with English
that's cool, they have literally every account. I'm curious as well what RPC  call they use to get this?
well you can't, unless you have a program other than the token program in the loop
<@!831450660146642974> nope, it is just a requirement from my boss. i got some hint is making the main wallet a fee payer. did anyone tried that?
Hi everyone ! Is there any example on how to create an account with a C program ?
I'm confused about creating accounts on solana (js).

For a long time I thought this was sufficient: `const acc = new Keypair()`
But I'm now discovering that one also has to call: `SystemProgram.createAccount(//pass in "acc" and other params)`

what's the purpose of the 2nd step? and why is the 1st alone not sufficient?
When should one use spl_token::instruction::transfer over ::transfer_checked?

https://docs.rs/spl-token/3.2.0/spl_token/instruction/index.html
`isOnCurve()` will tell whether a pubkey is a PDA or not in a generic manner. PDAs don't have private keys, for they fall off the ed25519 curve.

https://solana-labs.github.io/solana-web3.js/classes/PublicKey.html#isOnCurve
Users doing due-diligence before using contracts. Let's say an important account has X as auth. I want to verify X is a PDA. Project publishes seeds, how do I as a user (not coder) can verify X is a PDA?
Seeds published can be: 1 pubkey + string,  or 2 pubkeys + string for example
Where did you see that? That is incorrect
the SOL token is there any way to make like the gas is charge by the main wallet? Then we control the transaction fee to earn the gas back

For example, it cost 0.0001 for you to do the transaction. But you transfer 100 tokens, the receiver only can get 99 token

any article for that?
what's wrong with my approach? or did I misunderstand something?
I get the clock's timestamp after 25 seconds, and the timestamps before and after 25 seconds are the same let clock = Clock::get()?; msg!("current timestamp = {:?}", clock.unix_timestamp); thread::sleep(Duration::from_millis(25000)); let clock = Clock::get()?; msg!("current timestamp = {:?}", clock.unix_timestamp);
hi guys, how are solana_program::clock ::Clock supposed to work?
it returns
the response balance from getParsedTokenAccountsByOwner function  is also incorrect
could you check it?
hello, today i checked one of my testing address: <https://explorer.solana.com/address/9yQs9967snKfKDrpYZ8rKyxWu7Wfat3VmFTZHMM6TQts?cluster=devnet>
there're 3 txs inside this address:
1st: create account
2nd: received 90 tokens
3rd: received 10 tokens
in the 3rd transaction, the post balance is correct with 100 tokens, but after going back to address, the balance is 100.000001
I think there's something wrong with rounding float number
<@398512532895039499> here pls
hm, I still struggle conceptually. If you wanted to repay everything you have, why not put the entire amount instead of U64::MAX?
Hi Guys, I'm runnig 3 VMs on GCloud and I want to test a 3 nodes cluster (1 bootstrap-node and 2 validators) using the multinode-demo folder scripts. I have several questions and if someone could give me a hand would be fantastic:
    * The NDEBUG=1 ./multinode-demo/setup.sh generates the genesis file and it must be copied in each VM in the /multinode-demo/ I guess, correct?
    * The bootstrap-node is the only one that needs to get some tokens from the Faucet?, other nodes don't need it?
    * I'm using NDEBUG=1 ./multinode-demo/validator-x.sh on the 2 separate VMs but it seems that they can't find other peers (the bootstrap node in this case). Network connectivity between VMs works fine, no port restrictions. On Ethereum nodes (in private configurations) for example you specify the IP of the bootstrap node you want to connect to, Do I have to specify the IP address of the bootstrap node?
When I execute solana cli I got "Error: RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x6 [6 log messages]"
this messages
how can i see 6 log messages?
Hey i’ve got a medium spec linux box doing nothing rn
Is there a testnet i could help by running a node?
May be the parameters in serializing?
How has people's experiences been with the Solana python API: https://michaelhly.github.io/solana-py/#

Relatively stable/fully featured?
Example: https://solanabeach.io/token/Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB/accounts
basically, same just like how they did it on SolanaBeach
Hi guys is there anyway to get list of token holder at specific time or block?
okay I figured, I'm due for all of those installations anyway. Appreciate it sir, you're the man for being in here helping people like me. Cheers
hard to say what or where the issue is, the program is expecting a different type of account than what you're passing in the transaction
hmm you'll need to use the command line for everything. shouldn't need to install much more besides rust, node, and the solana cli tools. feel free to ask questions here if you get stuck at all
Okay and this is like super noob level shit, but to get a handle on how github works, is there any good resources you could recommend? Always seems like stuff I need to have programs installed for like rust etc. in order to run command-line stuff. Is this usually the case or is there a web-based tool to do some of this stuff without needing to go command line?
https://github.com/metaplex-foundation/metaplex/tree/master/rust/token-metadata/program
yeah there's a bunch of this functionality for nft's in the metaplex suite of programs actually
rip, what about a set of nfts? Would that make it easier to get something unique on chain? I did see that it was a different program than just the token program
That may be an issue of the client function or the program itself?
so there's no good way to set it up for fun tokens just yet
currently all the metadata is setup off chain but soon we should be adding a defacto way to add metadata on-chain through an spl program
Hey guys, I'm just messing around and minted 1,000,000 tokens that I want to call "BenCoin" and distribute to some friends for fun. Is there a way to change the metadata/name/symbol on chain? Or get it to show up in a given wallet? Very minimally tech-savvy so as soon as I hit Github I tend to get a bit lost, but any help would be appreciated
Thanks, I'll check it out.
I believe you can use anchor for this: https://project-serum.github.io/anchor/cli/commands.html#verify
How can I verify that the contract's code matches with the on chain contract?
only the bytecode is publicly available by default, if the contract's code is open source you can verify that it matches what is on-chain. Explorers don't have support for doing this all quite yet, but I expect it to be implemented in the near future
Hi. Is there really no way to check out the source code of a contract?
also, it looks like the program error is caused by a borsh account deserialization error, if you add logs to your program you could try determining which account is causing the problem
you can still use the inspector in this case, follow the directions on the inspector page to inspect a transaction before it's sent to the cluster
the issue is actually sending the transaction
have you tried using the transaction inspector? https://explorer.solana.com/tx/inspector
having support in the `solana` cli would definitely be useful, could you write up an issue for that?
in what kinds of situations are you thinking this would be useful? maybe wallets could offer some tools for that?
@everyone hey im getting an error when trying to call my solana program and am having some trouble understanding what my next steps are, would anyone be interested in offering a dm consultation?
yeah, but I want a solution for a non-coder user. `solana` cli is a good one, but the limitation of 32 chars is a problem, also state-pubkey is added to seed as bytes... 
Maybe we need to develop a .ts based simple CLI to verify a PDA with multiple seeds
If there's not one already
if a user is able to derive it, it's indisputably a PDA
You can use this method to derive the pda: https://docs.rs/solana-sdk/1.7.9/solana_sdk/pubkey/struct.Pubkey.html#method.create_program_address
```
seeds = &[
   &program_state_account.key().to_bytes()[..32],
   b"string_seed",
   &bump_seed]
```
but in the code we're using a PubKey plus a string as seed, totaling a 40 bytes seed for example
I've seen `solana create-address-with-seed`, but it does not accepts strings > 32 chars
Question: We're using PDA's as auth in the program, as we're supposed to, but how does a user checks that some account auth is effectively a PDA from the program ?


///////////////////////////////////////////////////////////////////////////////////////////////

