At this time, no, but the developers have talked about reviewing that ability... in the meantime it is fixed at account creation.
and match the result.
Any help on how to deserialize an enum using borsh ?
Happy to have you
yeah i'll be watching that. its the only reason im awake rn lol
The link is posted above
Apparently this will be covered in the twitch stream happening in 45 minutes
Hi, is there a way to allocate more space for an account at runtime? The allocate instruction only works for an unfunded account.
Looking for some past-precedent and/or general pattern to follow
Anyone have an example of passing another instruction as an effective function-argument to another instruction to invoke?
is there a .NET sdk/API wrapper available? a quick google didn't bring anything back
and subscribeProgramAccounts
this is here

https://github.com/solana-labs/solana-web3.js/
will do!
look into getProgramAccounts as well
thank you. i'll check that out
https://docs.solana.com/developing/clients/jsonrpc-api#accountsubscribe
You'll definitely want to take a look at it and get familiar. I'm just getting ramped up on the team.
i haven't actually taken a look at that yet. still exploring the solana_program rust crate atm
Are you using the js web3 library?
is it possible to read the state of an account from client side code?
Awesome!
This is an intro, so no pre requisites.
What are the pre requisites
Have you tried project serum discord for serum dex? I believe they use react.
<@&651168058978861057> 

1 Hour Warning. Come join!

Join Solana engineer, Bartosz, for a technical workshop. ‚Äòintro to Solana programming model‚Äô TODAY (May 13) at 12pm PDT (7pm UTC)

The workshop will be hosted on the Solana Twitch account üëá

https://www.twitch.tv/solanatv
Thanks I am trying here because their dev channel does not have many devs in ^^ thanks anyway
Unfortunately I don't have a lot of experience with it yet, but Raydium has their own discord and I'm sure they'd be happy to offer some advice.
chase could you give me some advice on how to start from that repo you posted to understand the logic to interact with raydium via smart contract? is that possible
We prefer react https://github.com/Synthetify/synthetify-webapp
That's more of a personal choice. But Raydium uses Vue

https://github.com/raydium-io/raydium-ui
Hey, guys what are you using when building dapp frontend ? react, nextjs ? I'm just thinking what to choose üòÑ
i mean like from a script or something
is there a way to "watch" the state of an account of a program and "listen" for changes from client side code?
This would be your best resource for that question
https://discord.gg/vT3dQS6H
yep! take a look at `spl-math` crate, source code at: https://github.com/solana-labs/solana-program-library/blob/dc730085defeefad869f1978d21224e7af14b8d7/libraries/math/src/approximations.rs#L15
Hello, I need some help with resolving conflicts in a pull request for the solana-labs/token-list repo, I'm new to this stuff.
Hey guys, does any one know how to get historical apy or apr of serum-dex-pools.
Hi - new developer here. I am looking for a way to interact automatically with raydium (adding/removing liquidity)  - is that something that can be done via solana sdks?  How do I get the addresses of their contracts for each functionality?
Hi <@!539801435571748868> ! I stumbled upon this message from Starry about sqrt and u64: https://discord.com/channels/428295358100013066/517163444747894795/808915664315482123
I was wondering if I could find the code somewhere ? I just need to sqrt an u64, so precision number is totally overkill.
what's the standard way in Solana to do deal with high precision floating point operations? By high precision I mean I need to be able to represent all the values in u64 and need some left over bits for the fraction part. f64 doesn't work because it has only 52bits of mantissa.

Right now I'm using the rust `fixed` library which provides fixed point numbers. Any better / more efficient options?
guys, when I compile the source with cargo build my ram usage is getting throttled to 97%
is there any way to limit the ram usage for the compilation so that my laptop doesn't get freezed ?
So can we close a market.
wont be able to attend it live, will watch the recording üëç
How many private keys can be produced from one Seed Word?
Should be able to be viewed later on our Twitch account. I'll make sure to continue announcing these in the future so that everyone sees them.
awesome!
Yes we will record it!
Will there be saved webcast for those of us living on the other side of the world? üôè
will this be recorded and saved as well?
<@&651168058978861057> 

Join Solana engineer, Bartosz, for a technical workshop. ‚Äòintro to Solana programming model‚Äô TODAY (May 13) at 12pm PDT (7pm UTC)

The workshop will be hosted on the Solana Twitch account üëá

https://www.twitch.tv/solanatv
I was getting a bug about undefined ELF symbol for imod... when using division for i64. The problem went away once I changed to division with u64. Is this a known issue?
So given the private key, or a third-party sig service (like a wallet), it can be determined independently from the cluster.
https://solana-labs.github.io/solana-web3.js/classes/transaction.html#signature this seems to suggest that the txn sig is equivalent to the fee payer's sig of the txn.
lol
I am trying to understand things
What are you trying to do?
This might be because the cluster RPC API is not reliable, due to congestion.
Also, https://docs.solana.com/developing/programming-model/transactions#anatomy-of-a-transaction I cannot find how to get the transaction signature.
I get that this is given by the RPC, but is that something only the RPC can provide? Or is that something I can get from the raw transaction itself?
Mmmh weird, should a  blockhash be from a finalized commitment to avoid bad blockhash?
```
// Transaction simulation failed: Blockhash not found 
await connection.getRecentBlockhash('singleGossip');
await connection.getRecentBlockhash('confirmed');

// but this seems more reliable
await connection.getRecentBlockhash('finalized');
```
`brew install llvm`... did you do that? Or, if you have xcode installed you should have it already
Perfect, it's working now. One thing that struck me as weird was that simply adding and subtracting lamports didn't work, leading to the runtime complaint that account sums didn't match. But I printed the numbers and everything checked out, so no idea why that didn't work.
Yeah, just realized that. Thanks.
Pretty sure you need to pass the system program as well
Thanks üòã
let xfer_lamports = system_instruction::transfer(&taker.key, &escrow_info.initializer_pubkey, escrow_info.expected_amount);
invoke(&xfer_lamports, &[taker.clone(), initializers_main_account.clone()])?;

Any idea why this program snippet might fail with "An account required by the instruction is missing" ? I am puzzled.
None  other than figure out a way not to do that
Is there a way to workaround this 4 call depth limit, if a transaction of my program involved calling many programs?
It may just be a bonus field for RPC.  You can dig around in `solana-client` and/or `solana-cli-output`. It's probably in one of those
I think depth is 4, no re-entry
hey! anybody going to hackathon? I signed up but received no info on email or something
i did, and find nothing helps, that's why i'm here üò¶
Isn't it the sum for a given epoch?
i guess this is because epochcredits is a vector
<@!585868308419444749> excuse me, sir. May I ask about the call depth of Solana?
From the doc https://docs.solana.com/developing/programming-model/calling-between-programs#call-depth
How call depth is counted in Solana exactly?
For example,
```
Program1 -call-> Program2 -call-> Program3 -call-> Program4 -error-> Program5
```
Would this scenario caused an error at the Program5 call?

and what about this scenario, where only 3 programs calling each other in a single transaction
```
Program1 -call-> Program2 -call-> Program3 -call-> Program2 -error-> Program1
```
would it failed like that?
Strange, there doesn't seem to be lastEpochCredits anywhere in this declaration
https://github.com/solana-labs/solana/blob/master/programs/vote/src/vote_state/mod.rs#L457-L475
it doesn't seem to pick it, try to look for llvm setup on macos with google
i already got all those thing and still got this error
https://github.com/solana-labs/solana/tree/master nothing much for macos
No it's fine
ahhh
So this should be solana-program rather than sdk?
`dev-dependencies`
Happy to be pointed to the `.rs` source code, i did a search over the codebase for `pub struct VoteAccount` but nothing came up that was useful
https://github.com/solana-labs/dapp-scaffold/blob/main/program/Cargo.toml#L17-L18 yes it is a double trap
Mostly for ourselves, then we forget about them until y'all find them üòÖ
Maybe?  We set lots of traps
What is the difference between `credits`, `epochCredits`, and `lastEpochCredits` in `VoteAccount`? https://solana-labs.github.io/solana-web3.js/classes/voteaccount.html
Is that another trap setup by dapp-scaffold?
From the doc https://docs.solana.com/developing/programming-model/calling-between-programs#call-depth
How call depth is counted in Solana exactly?
For example,
```
Program1 -call-> Program2 -call-> Program3 -call-> Program4 -error-> Program5
```
Ah üí°
Use `solana-program` not `solana-sdk`
program
Is this client or program code?
Ok, updating rust didn't change anything
That is for cargo build-bpf, again replying to <@!485438294348267552>
Is there a macos version for this?
Build works just fine without the solana_sdk dep
I think the concepts in that article are equivalent to a commitment of "single-gossip" in web3.
https://github.com/solana-labs/solana-program-library/blob/master/ci/install-build-deps.sh#L5-L15
Do you have all this? In needs clang or something like that installed
Let me update Rust.
Ah
Sorry was replying to <@!485438294348267552>
Mmmmh odd I had this one just yesterday
Huh. I guess I figured it would do that automagically for me lol
rustc 1.51.0 (2fd73fabe 2021-03-23)
llvm-sys cannot be install in cargo
what is your rust version?
seems like you need to install the dependencies
it's a llvm-sys problem but i don't know how to solve it
Yes
hey anyone have problem in cargo build-bpf?
so you added solana-sdk = "1.6.8" to Cargo.toml?
that is enough let's see
3 samples
Compiling winapi v0.3.9                                                                                                                                                                   
error[E0308]: mismatched types                                                                                                                                                               
    --> /home/sky/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.0/src/socket.rs:1451:23                                                                                        
     |                                                                                                                                      
1451 | from!(net::TcpStream, Socket);                                                                                                                                                        
     |                       ^^^^^^ expected struct `Socket`, found `()`
Compiling syn v0.15.44                                                                                                                                                                    
error[E0432]: unresolved import `sys`                                                                                                                                                        
   --> /home/sky/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.4.0/src/lib.rs:129:5                                                                                              
    |                                                                                                                                   
129 | use sys::c_int;                                                                                                                                                                        
    |     ^^^ use of undeclared crate or module `sys`
error[E0432]: unresolved import `std::panic::catch_unwind`                                                                                                                                   
 --> /home/sky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs:3:18                                                                                
  |                                                                                                                             
3 | use std::panic::{catch_unwind, UnwindSafe, AssertUnwindSafe};                                                                                                                            
  |                  ^^^^^^^^^^^^ no `catch_unwind` in `panic`
There's 25 of them, a couple screenfuls
which compilation error?
Any idea why that might be?
But when I add the latter to my Cargo.toml, I am getting a huge load of compilation errors
I'm trying to use system_instruction from solana_sdk
or maybe i should issue a few transactions, listen for each level of commitment then get my own empirical number
I am curious, what is the delay between a tx going from processed to confirmed?
Is web3js confirmed term equivalent to https://docs.solana.com/proposals/optimistic_confirmation being reached?
What region are you in?
Maybe a Ctrl + Shift + R in your browser?
I ran a script to manually purge the CDN. Are you able to see the token now?
The CDN cache and/or browser cache can be somewhat stubborn. What is the address of your token?
Thanks! yeah i'm bit of a rust & solana noob üòõ  but it seems interesting!
You can submit a pull request to the token-list repository (https://github.com/solana-labs/token-list). The instructions for doing so are in the README.
It could be smarter about choosing which transactions to execute and went, to improve throughput.  There‚Äôs a work-in-progress PR linking to that issue if you want to dive into the code
basically banking takes time coz it needs to check which txs r not parallelizeable right?
got it thanks!
https://github.com/solana-labs/solana/issues/5395
The leader will try to execute as many transaction in parallel as it can.  If more than one wants to write the same account, only the first will be executed in the current entry, the rest deferred
oh! what are the problems exactly?
can u elaborate a bit?
If there's a write block, a tx will defer to the next entry
Soon it‚Äôll be more advanced though, the dumb queue is causing some problems
thanks for the help
cool
Yeah
queue?
First come first serve
got it right now it dosen't priorotize the transaction with more fee. I guess the reason might be the difference in gains from prioritizing costly transaction vs current algo for picking tx won't be much. Can you tell me what exactly is the algorithm for picking txs in prod now?
We've gotten a little backlogged on the PRs this week. I will try to get yours through ASAP. Feel free to @ me directly in the PR that you'd like merged.
Yes, it‚Äôs more of a streaming model.  A node is typically leader for only 1.2 seconds so it just processes transactions as quickly as they arrive.  Currently the software doesn‚Äôt prioritize transactions with a higher fee but it could.  There‚Äôs no tip system right now, I imagine we‚Äôd only bother working on that when we start getting close to saturating the transaction throughput. Also possible to implement if/when needed
so its upto the leader to decide transaction position in the block right? is there a tip for leader to place a transaction before others?
Everybody sends their transactions over UDP to the node that they believe is the leader for the next slot. The leader processes as many of those transactions it can until its (slot) time as leader expires.  Any unprocessed transactions are forwarded to the next leader.  Repeat.
Need to get token-list on-chain, the centralized repo approach hurts
Heh not intentionally, we do our best.  Please comment with an @ directly in the GitHub PR that you‚Äôre interested in getting merged.  Tomorrow morning <@!383348505491668993> hopefully will see it
i see that answering questions here goes in similar fashion :P
üëç
not working on it, that was a very early hack from years ago üôÇ
i saw a github link for ide.i think you are working on it?
ref: https://docs.solana.com/developing/on-chain-programs/developing-rust#how-to-test
No IDE yet. There‚Äôs a unit test environment though that allows for rapid iteration on a program without writing a front-end or deploying to a network
Is there any IDE for solana just like Remix for etherium?
Hey! Guys Can i test a program (made by own) without making frontend? Just like etherium where we write smart contract  and by deploying it we saw  frontend of our smart contract in Remix Ide.
Hey, guys general question - maybe someone has used nextjs when developing dapp frontend ?
this might have been asked many times before, how are transactions picked by validators? is there an auction similar to eth? would be nice if u can point me to the docs for this.
can someone explain to me what's the deal with token-list merging PRs few hours old while some are waiting for over a week?
Is there a guide/simple example for transferring spl tokens using a program
thanks
that is awesome, thank you !!!
<@!832481870360084490> - yeah it's possible.  `solana-test-validator` supports a `--clone <ADDRESS>` argument, that'll cause it to copy an account (which could be a program) from mainnet into your local test validator.  There's also a `--bpf-program` argument that can be used to preload programs into the test validator
or, is it possible to pull an on-chain contract without available open code to test against a local node
hopefully a simple question, but: is there any way of pulling on chain contracts to test them off chain ?
here's info about the available clusters: https://docs.solana.com/clusters
I have connected to a specific cluster which is offline currently
how do I revert to some random cluster which is online ?
I don't have the url so I cant put it into config set
callback gives me 670.586116, while getTokenAccountBalance.uiAmount is 3717452.779163
2tNEBoEuqJ1pPmA1fpitDnowgUQZXvCT6W3fui67AFfV
Hi I got different value when using web3.connection.onAccountChange   and connection.getTokenAccountBalance
the document is hard for me
can i have any demo to learn
i want use @solana/web3.js to query and transfer
`let (tag, rest) = input.split_first().ok_or(InvalidInstruction)?;`. It's the first instruction.
What's the first instruction in the transaction?
Yeah... that's not what I asked
I created a `Processor.rs` and `Instruction.rs` like the escrow tutorial of <@!347689664855015424>. The entrypoint calls the `processor.process` that unpack the `instruction_data`.
Well what's the first instruction in that transaction?
Oh
I'm using the hello world only to send a request to my program.
Did you modify helloworld?
Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0
    Program FLjWCEiSYXw6NgEqkZSBNt9taMogxdCxC5GwbmujP5b8 invoke [1]
    Program log: process_instruction: FLjWCEiSYXw6NgEqkZSBNt9taMogxdCxC5GwbmujP5b8: 1 accounts, data=[]
    Program log: Hello World!
    Program FLjWCEiSYXw6NgEqkZSBNt9taMogxdCxC5GwbmujP5b8 consumed 13039 of 200000 compute units
    Program FLjWCEiSYXw6NgEqkZSBNt9taMogxdCxC5GwbmujP5b8 failed: custom program error: 0x0
Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0
    at Connection.sendEncodedTransaction (/Users/ovidio/git/Ovidio/solana/example-helloworld/node_modules/@solana/web3.js/src/connection.ts:3359:13)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
    at Connection.sendRawTransaction (/Users/ovidio/git/Ovidio/solana/example-helloworld/node_modules/@solana/web3.js/src/connection.ts:3320:20)
    at Connection.sendTransaction (/Users/ovidio/git/Ovidio/solana/example-helloworld/node_modules/@solana/web3.js/src/connection.ts:3308:12)
    at Object.sendAndConfirmTransaction (/Users/ovidio/git/Ovidio/solana/example-helloworld/node_modules/@solana/web3.js/src/util/send-and-confirm-transaction.ts:29:21)
Need the full error message
I'm getting the error `custom program error: 0x0` when I try to make a transaction. Can anyone help me?
thanks üôÇ
You can run ‚Äúsolana validators‚Äù to get the list of validators, or look them up on a site like sola.na/beach
I don't have the url so I cant put it into config set
I have connected to a specific cluster which is offline currently
how do I revert to some random cluster which is online ?
However I observe a ~0.3% const difference
These two methods are supposed to return same amount
onAccountChange => splToken.AccountLayout.decode
----------------
connection.getTokenAccountBalance.value.uiAmount
Is there a list of the validator address that is open source to check the rewards they received?
hey, 
i remember there was a website where i could fill a form and it would connect to metamask and generate a ERC20 i could share with my friends

is there a website for solana like that?
Thanks a lot!
> I wanted to know if there was a transaction made when a rent was deducted from an account and if there is an example?
Rent due is withdrawn automatically by the runtime at the end of processing blocks, so there's no associated transaction.  However rent rewards do appear in RPC, and are attributed to the validator identity accounts that share in the rent payment.

> If the rent can't be paid and the account's data is cleared, is there a way to retrieve the lost data after refilling the account of lamport?
Nope. The runtime is a harsh landlord. Once the account can't afford rent, it's deleted.

> Is there a way to know if an account will not have enough found for the next epoch to pay the rent?
We don't have a good method for this yet. It's easy to compute the rent required to live rent exempt (which is the equivalent of 2 years of rent payments)
Hey everyone, sorry to come back with many questions about the rent.  

I wanted to know if there was a transaction made when a rent was deducted from an account and if there is an example? If the rent can't be paid and the account's data is cleared, is there a way to retrieve the lost data after refilling the account of lamport? Is there a way to know if an account will not have enough found for the next epoch to pay the rent?

Thanks üôÇ
ty
makes sense
They are just whatever the oracle provides (though the liquidity does affect the borrow rates)
But the prices of the other reserves aren't quotes against it's available liquidity per se
Yes, you would also create a USDC reserve
We hope to be using Pyth's oracle for it soon, but it's designed in such a way that it shouldn't be hard to swap something else out
makes sense. so when you say "other reserves that are not in the quote currency" if we go with the default usdc quote currency this would mean if i create reserves for SRM, SOL, etc...
The current "oracle" on the deployed lending program is Serum's order book, but this has been changed in the latest code
Yes, other reserves that are not in the quote currency are expected to be priced using it with an oracle
is the purpose of it to represent the value of borrowed liquidity and supplied liquidity?
It's set by the lending market owner, but the default is USDC
makes sense. what is the quote currency used for when you initialize a lending market?
Does anyone know of any open source farming contracts?
Read the <#836969024130777118> channel for some background info on that
The transaction is too large when encoded
is it more likely that you put too much data in the transaction or is something going on the transaction that probably shouldn't be there
The linked formula also includes "validator uptime", which is also confusing since I'm trying to get the network APY displayed by numerous staking websites / dashboards.
To give a specific example, I'm curious how places like Staking Facilities calculate the current 11.8%. The formula you linked is helpful but doesn't seem to include compounding periods.
Probably one of the better error messages we have. `encoded transaction too large: 1652 bytes (max: encoded/raw 1644/1232)`
```thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: ClientError { request: Some(SendTransaction), kind: RpcError(RpcRequestError("Failed to deserialize RPC error response: {\"code\":-32602,\"message\":\"encoded transaction too large: 1652 bytes (max: encoded/raw 1644/1232)\"} [missing field `data`]")) }',``` Im a little confused what this error means. Could someone help me out
Hey guys!
I have an issue with generating keypair from seed using solana/web3 and BIP39. BIP39 generates seed with 64-byte length, but Keypair.fromSeed requires 32-byte seed. What am I doing worng?) Trying to use first 32 bytes but solana-keygen recover doesn't recover private key
No.  But it's the best we have right now.  So please just be respectful with the wording and repeat rate
Just an FYI - Chainlink will be integrated with Solana in the future, although I cannot confirm any dates. This will include price feeds and VRF (Verifiable Random Function) which would be perfect for what you are trying to build: https://solana.com/ecosystem/chainlink
Is this a good section for hiring, to build DeFi apps powered by Solana?
Nice, thanks ‚ù§Ô∏è
No, but this does. https://docs.solana.com/developing/clients/jsonrpc-api#gettokenaccountbalance
does this work with token accounts ?
https://docs.solana.com/developing/clients/jsonrpc-api#getbalance
Thanks
https://solana.com/staking#estimaterewards
Sure, staking.
So you want to know about _staking_ APR/APY?  There are many projects that are built upon solana that have their own yield rates.  I'm not sure why I was expected to know you weren't talking about one of those or building one yourself
If I posted that question on SO I'd understand your response, but we're in a dev support channel for a specific chain. You don't have to get snarky.
I'm obviously asking in terms of this chain
Not in the general sense in which you asked the question
isn't it a little particular to the chain mechanics?
Wikipedia probably has this answer for you
what is the formula for APR / APY?
There's code that does that here https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/
Does anyone know of any examples of code that basically sends a wallet a SPL token. Kinda like a transfer
https://docs.solana.com/developing/programming-model/accounts
you seen this? https://docs.solana.com/developing/programming-model/transactions
Can't do this right ?
I have to send all accounts that I want to read its state with the tx
Ok, So I can't just store the pubkey inside the state and then create an AccountInfo object
You have to specify every account you touch; writing or reading.
So I decide to store its pubkey in the state
But I don't want to send the target account with the tx.
Nop , I mean in the program
For example `account.data.borrow_mut()`
this? ```solana account <pubkey>```


///////////////////////////////////////////////////////////////////////////////////////////////

For the name i think it is just a simple command but i cant fiind anywhere. For eth for exemple they put the icon. You give them the pic and they put the logo on the token. On solana i couldnt fiind anywhere how to out the name and the logo:(
I'm still fairly new to solana but my understanding is you would put your token into an account and that account can store additional information (such as image url and name) and then it's up to the front-end to determine how to display that info
ha, lol. I guess thats the correct answer, I just asked the wrong question... I'm trying to connect via ws using ```PubsubClient::logs_subscribe(  "ws://127.0.0.1/8900" ``` but cant...
Hello. Can someone help me i have a question. How can i add a pic to my token and also how can i put a name for my token? So when i whant to use solana explorer to see the pic and the name? Thx
Same, you'll get redirected to the correct port through haproxy
Yes
Is there any recommended reading material on how to secure data on the blockchain appropriately?  I understand persistent (potentially rent-free) accounts can be used to store data and that data can be stored in an encrypted manner, but are there any best-practice patterns for allowing a trusted third-party or contract access to the data with decrypt privileges?
thanks - while you are in this space - do you have any idea what url to use when connecting via ws ?
Are these the new robust ones?
<@&651168058978861057>  we have new devnet and testnet endpoints:
For devnet you should point to http://api.devnet.solana.com
For testnet you should point to http://api.testnet.solana.com

The old endpoints are still working, but changing them is recommended moving forward.
nvm !
ok, so I've tried, and I cant find what parameters go in PubsubClient::logs_subscribe() - is there an example anywhere ?
Any trick to logging in functional tests? I get "Invoke context not set!" if I use the msg macro
What is the right way to save javascript dates to an account's data when using Borsh serializer?
Hey so I‚Äôm connected to raydium with my ledger but the command line pub key is different to the one I‚Äôm connected to raydium with. Anyone know the reason for this?
the validator docs actually explain how to run devnet node
yes
Is the human readable token name on Sollet added only by the user, or is there something that can be done by the mint authority to bake the name into the token
nvm - looks like i need use solana_client::pubsub_client::PubsubClient;
Hi everyone. I am totally new here so my question might sound like out of place but here it is anyways.
The **hello-world** example drives me through the process of running everything by my self and thats great but I was given the task of build and maintain the client and another person will go ahead with the smart contract. My question is more a guessing but I would like to know if I am right or wrong or how should I go.
The only thing that I need is the client typescript entry point under the /src folder so I can ignore the rust and c programs since they has more to do with the other team member but at some point we might end up working in different repos so both client and contract will no longer be in the same repo. In order to run the client I would always have to have in my dist/program folder the keypair .json file produced by the on-chain program once deployed, right? So this is all I need to run the client by myself but connecting to that contract?
Hey folks! Chav here, Unicrypt Network. We're looking to deploy our full suite of services on top of Solana Chain. We're currently deployed on ETH, BSC, xDai and Matic.

We'd be keen to have a call with Solana developer(s) that may be interested to collaborate with us.
cheers!
I grepped for subscribe in the rpc_client and didnt see anything
I am in a rust server and want to subscribe to events (or transactions) happening on chain
Hi all, hope everyone is well! hopefully a quick one: is there a rust rpc_client equivalent of the jsonRPC to subscribe to logMessages ?
interesting, thanks a lot!
Yes, but you have to bend over backward a bit `spl-token --verbose address --token MINT_ADDRESS --owner WALLET_ADDRESS`
Hello, is it possible to get the associated token account address with the spl-token-CLI program? Assuming I have the public key and the mint address.
I am new too hahahhah, still struggling with some basics, but consistency brings results.
Correct.  We're planning to cut the 1.6.9 release today.  You should be able to `solana-keygen recover prompt:?key=0/0` with it
okay, you are ahead of me, I'm new to this, but old on eth.
I checked some examples but still getting this error.
Made some changes in the hello world program, now trying to deserialize enum using borsh.
Hi, im a C dev and work hard on Solana since 2month.
I find your project really promising.
If you dont mind developping more on how equipment would be unique for users, like standard weapon of 10ATK, 2SPD wouldnt be unique, si what differenciate them all and make them NFTs ?
what is that? some sort of greeter program ?
I have trouble accessing devnet today, is there a way to run a private node for devnet, similarly to how we do it for mainnet-beta to improve access?
Nice one thanks and have a great weekend!
thats your public address, the private address is never known, and always on the USB key. That how it is secure
replace the long string address that was created when you initially created you wallet.
in real life it's 44'/501'/0/0 but you dont need add the 44/501 the solana software inserts that for you
Cool thanks for the help, so replace the keypair variable with the path above?
unless you didnt chose the first address when you created it
your path should be 0/0
Yeh don't know that either, but if Ledger Live doesnt support it, then yeh with hw wallet the above is your only option. A bit ugly as you have to deal with some low level wallet lingo
<@!478600879356772378> to send from HW wallet through command line <KEYPAIR> will look like something above, I dont know what derivation path is used, it maybe a ledger support question.
Ledger live doesn‚Äôt support solana right?

Easiest way to send out of Ledger is LedgerLive. Why not do it that way if you are not comfortable with linux command line?
Cool I'll try to look myself but coding isnt my strong suit...really appreciate the help

Still stuck here, any help ?
Oh ledger doesnt have a visible keypair, to send out of ledger with command line you replace <KEYPAIR> wiht another arugment, that indicates it is a hardware wallet, I need to find it in the docs.
there is step by step guide in the docs. The <keypair> is a json  file on your system.  so you replace it with /home/user/key.json for example. It is the file that is created when you created your keys.
Would love to be pointed towards the right documentation
Hey gm everyone. I'm just starting out here. I'm trying just to do some basic tutorials and learn as I go along. Rn I'm trying to make an NFT. I followed the instructions on the token program and produced a unique Spl-token, but how can I actually add metadata to it?
yeah. The deploy recovery stuff work though...the instructions were just confusing...
Hey guys looking for help sending from my ledger to a phatom wallet through the command line. What the hell is a <KEYPAIR>? Say my ledger sol key is "123" and my phantom is "456" an I want to send 1 SOL, whats the command?
I think if you use your own testnet node instead of the public endpoint it would work. Always get that timeout msg when forget to use own node.
Hi, im not a Sol Dev yet but might become one soon. But first i would like to know something: Would it be possible to have a on chain program with a function which mints a NFT on call?

Further info:  I want to create an web based adventure game where the players are able to forge individual Items (restricted by their skill level and solved missions). I think it would be cool if they could actually own this items as a NFT. Each Item has an attack and a defence value so i want to know if its possible to create function which takes those values as arguments and than creates their Item as NFT.

I mainly want to know whether this is possible the way Solana works or not but if you know a program/project which does something similar I would really like to know about it since i dont know much about Solana yet (i speak rust tho) and think this would be a great starting point for me.
anchor should be linked at the very top of the page imo
fyi for any hackathon participants in this channel, make sure you check out <#806214566349635604>. We have an entire list of helpful resources for you to get started building on Solana other than the docs üôÇ
it was quite confusing üòï
okay i finally to the deploy recovery working...
testnet deployment still broken for me üò¶
```
$ solana deploy target/deploy/prog.so recovered.json 
Error: Data writes to account failed: error decoding response body: operation timed out
```
err i'm so confused, how do I use the keygen-recover?
```
$ solana-keygen recover -o ./recovered.json "master grass task place poet found course clog atom sell broken exercise"
error: Found argument 'master grass task place poet found course clog atom sell broken exercise' which wasn't expected, or isn't valid in this context

USAGE:
    solana-keygen recover --outfile <FILEPATH>

For more information try --help
```
anyone able to deploy their program to testnet recently?
Just raised an issue on Github, Idk which license Solana team would like to put up.
you should create a pull request that adds a license
Still getting
```
Error: Data writes to account failed: error decoding response body: operation timed out
```
after:
`solana deploy target/deploy/prog.so target/deploy/prog-keypair.json `
some good points
Just wish to be clean. Here's what the internet says:
> If you find software that doesn‚Äôt have a license, that generally means you have no permission from the creators of the software to use, modify, or share the software. Although a code host such as GitHub may allow you to view and fork the code, this does not imply that you are permitted to use, modify, or share the software for any purpose.
> 
https://choosealicense.com/no-permission/
what is ^ value suppose to be?
`error: Invalid value for '--buffer <BUFFER_SIGNER>': No such file or directory (os error 2)`
getting this deploy failure on testnet:
```
=================================================================================
Recover the intermediate account's ephemeral keypair file with
`solana-keygen recover` and the following 12-word seed phrase:
=================================================================================
session purpose focus hat attitude palace burden cousin doctor mimic dune symptom
=================================================================================
To resume a deploy, pass the recovered keypair as
the [PROGRAM_ADDRESS_SIGNER] argument to `solana deploy` or
as the [BUFFER_SIGNER] to `solana program deploy` or `solana write-buffer'.
Or to recover the account's lamports, pass it as the
[BUFFER_ACCOUNT_ADDRESS] argument to `solana program close`.
=================================================================================
Error: Data writes to account failed: error sending request for url (https://testnet.solana.com/): operation timed out
```
there are already over 100 forks
If it is not licensed and on Github I would assume it is software provided "as is"
Hi, is it legal to fork and use Solana's Oyster swap repository (https://github.com/solana-labs/oyster-swap) ? I don't see a license in there
You can actually just mint from the command line using our CLI. Probably easier
Small bump, anyone managed to parse EncodedTrnsactionWithStatusMeta to an uncoded struct?
actually I just checked testnet, and it seemed... usable, whereas right now for me devnet is totally unusable
I can think of much better ways to use that money üòÜ  use `solana-test-validator` if you're having a tough time with testnet
I see. Thank you!
lol do we have to develop on mainnet now
Hm, looks like devnet is going really slowly... not sure what's going on there, but testnet does seem to be faster
not really, you would know that from the endpoint you're connecting to.  separately, it seems like there's a concept of chain id in the token-list [1] but it's not accessible over RPC

[1] https://github.com/solana-labs/token-list/blob/cc85e5e056105e803e8087d3f82721796a95db11/src/tokens/solana.tokenlist.json#L57
My JSON RPC connection to devnet is so slow right now about 80% of my requests fail... is this expected? Will the situation improve if I move to testnet?
I get error when i try to run the program.
You can check out using `solana-test-validator` for your own uses
you can issue a PR to https://github.com/solana-labs/token-list for that
It isn't too clear what's happening here, perhaps rust is warning that the variables aren't being used?
Does Solana have a concept of chainId or some other identifier to distinguish connected networks (dev, testnet, mainnet). Is it possible to get current network id via JSON RPC call? Basically I'm looking for something similar to Geth's `admin_nodeInfo`.
Is there a way to deploy private network of Solana? I see much pressure to both devnet/testnet so I was looking to this approach.
What is the status of walletconnect?
https://github.com/solana-labs/wallet-provider/tree/master/packages/walletconnect
Is anything using it in solana ecosystem? or everything relies on sol-wallet-adapter
https://github.com/project-serum/sol-wallet-adapter ?
Can someone help me pls. How can i give a name to a token? And how do i put the pic so that when you look on solana explorer i will see the name and pic.

getting error here, any help ?
So close.. i can't access [0] if i can't convert it to a vec.
Qn: How does someone decode a Json-based EncodedTransactionWithStatusMeta?
or use @solana/spl-token with ts
spl-token-ui.com
Sorry solved on my own, taking this qn back.
Looking for a solana dev, please DM me for additional info
Guys, when I receive a block and iterate its  transactions, I get None because its a JSON file.

Here's what's inside solana/transaction-status/src/lib.rs.

```
pub fn decode(&self) -> Option<Transaction> {
        let transaction: Option<Transaction> = match self {
            EncodedTransaction::Json(_) => None,
            EncodedTransaction::LegacyBinary(blob) => bs58::decode(blob)
                .into_vec()
                .ok()
                .and_then(|bytes| bincode::deserialize(&bytes).ok()),
            EncodedTransaction::Binary(blob, encoding) => match *encoding {
                UiTransactionEncoding::Base58 => bs58::decode(blob)
                    .into_vec()
                    .ok()
                    .and_then(|bytes| bincode::deserialize(&bytes).ok()),
                UiTransactionEncoding::Base64 => base64::decode(blob)
                    .ok()
                    .and_then(|bytes| bincode::deserialize(&bytes).ok()),
                UiTransactionEncoding::Binary
                | UiTransactionEncoding::Json
                | UiTransactionEncoding::JsonParsed => None,
            },
        };
        transaction.filter(|transaction| transaction.sanitize().is_ok())
    }
```

Am I suppose to decode or do something else?
Oh! This command works. Thank you very much.
Is it right that we can only check the pubkey using seed words generated by sollet, but we can't use the wallet created by sollet in the CLI yet?
I guess my choices are learn some rust, or mint with auxiliary account with solana-py which isn't recommended
oh looks like I can't mint from web3js üíÄ
Sollet creates the key from a bip32 derivation path.  `solana-keygen recover` will support this in the next release.  You should get the right public key with `solana-keygen  pubkey ask:?key=0/0` in the v1.6.8 CLI release
are there any sources of onchain randomness?
If I mint a token with web3js does it use ATA or auxiliary? I assume ATA..
Hello. I am looking  for a solana developer, it does not matter the skill level, we can find solutions. 
We need the developer to be active and dedicated. 
Please drop me a DM if interested.
hi there, can I ask some question about wallet?

* I created a wallet at sollet.io.
  * As a result, the pubkey of my main account is now `FR5P...`
* I'd like to use that wallet with CLI, so I added seed words (mnemonic) to `solana-keygen recovery`.
  * then, this command returns: Recovered pubkey `CNh8D...`
* Why is the pubkey different from the one that appears in sollet...?
  * (we cannot use same seed words between sollet and CLI?)
* Where can I find detailed documentation about this?
so i'm guessing this was fixed internally and doesn't have as large a runtime overhead any more
imo this is fake news because the`msg!` function call won't compile if you try to log variables of different types
```
The third form is more generic and incurs a very large runtime overhead so it should be used with care: 3. Generalized format string: msg!("Hello {}: 1, 2, {}", "World", 3)
```
https://docs.rs/solana-sdk/1.6.8/solana_sdk/macro.msg.html
But then, how does it pass in the simulation?
Hmm I believe its failure in verifying the Secp256k1 instruction
Moreover, I see different behaviour deploying on testnet and devnet.
Hi everyone. I cannot deploy my program on testnet. Is there maintenance at the moment?
<@!445425471027544095> we're facing an issue where the tx simulation works fine. But when broadcasted to the network (solana test validator) we get `"Error: failed to send transaction: Transaction precompile verification failure InvalidAccountIndex"`
Hey everyone, I have some issues understanding how to create a transaction that will subsequently be sent as UDP packets as in the example of solana-labs/break (https://github.com/solana-labs/break/blob/master/server/src/tpu_proxy.ts#L78). Is there a specific library to be used? Or an example?
Duplicate addresses are impossible.  Creation will fail if there's already an account at an address
So with auxiliary it is possible that duplicate mint addresses exist.

Edit:
NVM I get it now
thanks
wow
We write docs so we don't have to do that. https://spl.solana.com/associated-token-account#motivation
if you dont mind could you tell me some setbacks of using the auxiliary token account. or where to read about the differences
ü§£
https://github.com/michaelhly/solana-py/pull/56
Yes.  I don't see any ATA support in there
I minted a token with solana-py and on sollet it says
"This is an auxiliary token account"

Does this mean that solana-py is using the old method to mint tokens
getConfirmedBlocks works:
`{"jsonrpc":"2.0","result":[5,6,7,8,9,10],"id":1}`
Ahhh I see, so you don't place name and symbol in rust source like in erc20 contracts?  Rather add token details to that registry list (and create pr).
Currently there‚Äôs an off-chain registry at https://github.com/solana-labs/token-list
Can you please try getConfirmedBlocks instead of getBlocks?  The latter is the new name for that method, and I wonder if you‚Äôre talking to an older RPC node somehow
Hope this is the right channel
Hi there guys,  I am a dev learning a bit about solana development, have looked around some of the source, such as spl-token, tested the token cli functions minting, transfer etc and am curious how we would apply a token name and symbol
I'm running this command and returns the error:
`curl https://api.mainnet-beta.solana.com -X POST -H "Content-Type: application/json" -d '
  {"jsonrpc": "2.0","id":1,"method":"getBlocks","params":[5, 10]}
'`
Works here
The JSON RPC method `getBlocks` returns the error `Method not found`.  Is this expected?
awesome, it worked. Thanks a lot bro
https://spl.solana.com/token#example-creating-your-own-fungible-token might be enlightening
Ah!  Yep that'll do it
`fg` should unsuspend it, then you can ctrl+c
thanks for the help trent.
I thought I had to create a token account before minting but I see now it's the other way around.
yes I have the same terminal open
You should use ctrl+c, not ctrl+z, BTW
Eh... do you still have the same terminal session open?
how to stop a running solana-test-validator ?
may be that's why
there's no other solana-test-validator running for now
it was running earlier
then I pressed ctrl+z to stop it
Yeah, it works, ‚úåÔ∏è
I'm on 1.6.8 FWIW
Sounds like you have something else running on 9900.  If it's another `solana-test-validator` instance, stop it.  Otherwise find a free port and pass `--faucet-port ...`
Hey guys.  What do I need to be aware of before using `use std::collections::HashMap;` in my program?  Asking because the minute I do this my program fails even if I don't do anything further with this variable:

```rust
    let mut pck: MerchantInfo = [
            ("Norway".to_string(), 100),
            ("Denmark".to_string(), 50),
            ("Iceland".to_string(), 10),
        ]
        .iter()
        .cloned()
        .collect();
```

The failure is:  `solana_runtime::message_processor] Program failed to complete: Access violation in program section at address 0x100041cf0 of size 8 by instruction #22571`
how to solve this
$ solana-test-validator
Error: failed to start faucet: Unable to bind faucet to 0.0.0.0:9900, check the address is not already in use: Address already in use (os error 98)
My solana version is `1.6.6`, i will update later to check, thanks
<@!445425471027544095> <@!585868308419444749> ty for your help yesterday , we got a success https://solanabeach.io/transaction/5QfpYYzYGF7NmmAz64oyx8k9M6U9wEfxFmbqeWaPJ2FjHPGw6zTBL2bUonS7EVKDcroEwtwec4f7By3T7ugfJ8f5
Oh I forgot that was just added recently.  Maybe  you need newer bins?
Seems to be ~500 slots
The default is like 10k
Use a smaller number?
That's kind of a lot
How to use the command? i use with `solana-test-validator --limit-ledger-size 10240000000` but prompts error?
Or check the explorer faster
You may just need a larger number for `--limit-ledger-size`
Ah OK I made it work now.  had too much JS turned off üòÖ
oh shit youre right. I will backtrack a bit I might know where I messed up
That context raises more questions than it answers
What param?
for your Token instance's ```pubkey``` param is a SOL address valid?
I have set localhost, but does not work yet
Since when does that work? All I get is CORS errors

`>>> account = token.create_account(payer.public_key())`
maybe something is wrong with my Token instance then
is it just like you typed earlier?
You're running a local cluster, not connecting to any of the public ones that the explorer knows about
can you show me an example of what you passed for the ```.create_account``` method
Hi team, i was looking at the tokenswap programs, and noticed you guys created a separate subaccount for fees. Is there a reason to do that, vs just changing the state or deducting less from the LPs?
<@!601131226908065804> I dunno what you're doing, but this all JustWorks(TM) for me
Should i need to some special settings?
Should be a BufferAccount close instruction
If you used the upgradeable loader and didn't clear the upgradeable bit, yes!
Hi, i run local cluster use `solana-test-validator`,and test my program, the transcation is success, but i could not get the transcation info in explorer with signature
first 32 character of non-decoded bytes array
no i use the python/JS libraries
<@!601131226908065804> you know rust? üòÆ
idk the answer to that sorry.
for loading secret keys I can use first 32 chars of a bytesarray or first 32 of decoded base58
I think the answer is no, but is there a way to remove a deployed program / reclaim the lamports associated with its data account?
Are they enforcing utf8 yet or just let you put any random crap in there?
It's base58 encoded.  No idea what "encoding" python wants
the line I'm trying to execute is

```my_token.create_account(PublicKey('encodedpubkey'))```
where ```my_token``` is an instance of the Token class
not exactly but with the backslashes and such.
and a decoded key looks like b'\dfm3;s\x67\x57\.......
strange the error I get is ```TypeError: string argument without an encoding```

Pubkey copied from sollet is the encoded version right
The `PublicKey` ctor should handle the string, https://github.com/michaelhly/solana-py/blob/a0893393f97021b0f548d640bb9c61f3c95dbc7b/solana/publickey.py#L30
Thanks yea I did try that but it still thinks it's a string. I will try again
So... `owner = PublicKey('publickey')`,  I guess
Looks like it wants a `PublicKey`, https://github.com/michaelhly/solana-py/blob/master/spl/token/client.py#L207
I tried ```base58.b58.encode('publickey')```
and
```base58.b58.encode('publickey')[:32]```
solanapy ```Token.create_account``` method needs an owner's public key.
I passed a string but the error says it needs to be encoded.
What is the correct format?
I'll be working on getting https://github.com/pyth-network/pyth-client running in the program soon which should provide prices for more assets
thanks üëç
Just saw this. Right now the lending program (in master, not the deployed one) is using https://github.com/octopus-network/solana-flux-aggregator for this oracle. It's not a problem say, if USDC is your quote currency and has 6 decimals and your other reserves have a different number, as long as the prices are in USDC (with 6 decimals).
awesome, this worked, Thanks a lot for the help man ! `cargo test-bpf --test init_lending_market` was the final syntax to run that test suite
Try `cargo test-bpf` instead
`#![]` confusingly doesn't mean "invert the logic," rather, "apply to the whole file" üòÖ
This is at the top of file `#![cfg(feature = "test-bpf")]` .. I thought that this is a non bpf test ?
Honestly haven't looked at lending all that closely some I'm just going from rust intuition
Are they bpf-only tests?
I am running inside the `program` folder, is that correct ?
in any case even `cargo test` doesn't detect any tests, it does detect the files though inside the tests folder
I think `cargo test` needs --test to run a particular test
Don't pass `--test`, just the test name?
Could be a rust newbie question but I am tyring to run integration tests on lending program `cargo test --test init_lending_market` and it runs no tests. Any hints ?
the quote currency sued by the lending program isnt required to be used as a reserve right
looks like I need to create a token account before minting
Is generating a new public key fine for the purpose of creating a new Mint Address?
is `@solana/spl-token-lending`  not published anywhere?
sorry for the newwwwb question. Using web3.js what's the easiest way to query a wallet for all associated balances? ie. without knowing explicitly which types of token may be associated with it beforehand.
Still don't understand how we can't play nice in Rust... they get dropped at the end of a transaction.... 
```
1. // Transaction start
2. let bignumber_instance = BigNumber::new();
3. // Transaction end. bignumber_instance goes out of scope
```
how do I prevent that to act maliciously?
Is it possible to get the current timestamp of the transaction?
Right, which gets called rust when your program ends, but that's only because you play nice.
We don't call drop directly, instead we use the `Drop` trait:
```rust
/// Drop - removes the underlying BigNum
impl Drop for BigNumber {
    fn drop(&mut self) {
        #[cfg(not(target_arch = "bpf"))]
        {
            use openssl::bn::BigNum;
            drop(unsafe { Box::from_raw(self.0 as *mut BigNum) });
        }
        #[cfg(target_arch = "bpf")]
        {
            extern "C" {
                fn sol_bignum_drop(bignum_ptr: *mut u64) -> u64;
            }
            unsafe {
                sol_bignum_drop(&mut self.0 as *mut _ as *mut u64);
            }
        }
    }
}
```
Yeah, pretend you are malicious and don't call drop üòâ
Before we change anything, can you suggest how we can simulate the memory leak? We have `Drop` implemented which cleans up when our Program side BigNum wrapper goes out of scope, which in turn calls the syscall `BigNumDrop`. Any insight would be helpful as the alternative could be quite expensive if possible at all.
<@455114989397868556>
I get it üëå
One solana question then, can i associate data to a mint directly like we can do with accounts ?
Yes these are more conceptual NFT questions are that really up to the developer. I would recommend searching out some NFT Reddit and Discords to get some ideas of how others are doing it
When each ntf is minted and distributed to a client, what is the best way to associate data to the mint ?
Im thinking of character unique caracteristics+inventory linked to it
idk, I could use some STR so I can see if it occurs here as well üôÇ
The idea behind NFTs is uniqiueness AND/OR representation of a real world item.. So to guarantee that on chain, you would create a new mint for each item. Then would mint as many of those items as you want, then disable future minting (in docs). Now you have your unique items to distribute to your users.
Hello, how do I make a named alias for a Solana address?
If there is a better place to talk about it, feel free to tell me where to go
Translating the `Bignum` is possible but potentially dangerous since it itself could contain internal pointers and its internal representation could change.  I'm suggesting `BigNum::new` in program space, then `to_slice` in program space, pass the slice pointer to the syscall, in the syscall do `translate_slice_mut` to get a translated slice, then `BigNum::from_slice`.  Unfortunatly `from_slice` probably copies the slice so you will probably have to do a `to_slice` again and copy its contents back to the orignal slice. Unless there is a `BigNum:from_slice_ptr` or something
Yes totally
for the token lending program when initializing a reserve:

```
    ///   15 `[optional]` Reserve liquidity oracle account.
    ///                     Not required for quote currency reserves.
    ///                     Must match base and quote currency mint, and quote currency decimals.
```

what is meant by must have the same base and quote currency mint and quote currency decimals?  For example say USDC is my quote currency, but Im adding a reserve token with 9 decimals, would this cause problems given that USDC has 6 decimals?
This is a more high level question regarding NFTs, than I believe it to be Solana specific. Is that right?
I believe if you are creating unique items, each item type should have it's own mint, with however many of those items you'd like to have. And you can transfer to your users from that mint.
super weird, then, why could something this happen?
‚Äîclone should be all that‚Äôs needed yeah
I searching for good pratice account wise to solve this problem the better way
Well i want to create a game with my clients owning one or multiples unique characters. Each characters would have then immutables caracteristics, and an inventory.

For all of that, should i create an associated account for each characters of my client holding the immutable part, what should i do to handle the mutable one aka the inventory ?
btw: The CI kick worked, passes all checks now
It still isn't clear... are you saying on our Program (i.e. `BigNumber::new()` side to create a BigNumber structure with a Vec<u8> property, pass the new instance as `mut` pointer, do a `translate_type_mut::<BigNumber>...` and then access the underlying Vec<u8> from there? Is there any example you can refer me to? Otherwise I'd need to allocate a big enough `u8` array before the call and have the syscall write that but as the numbers can get big with no a priori knowledge of results size....
The important thing about minting an NFT is that it has no decimals. Beyond that you use it the same way as you would any token.
<@!687984626400231464> That would be great!
I'll just send a PR...99% sure it's a bug. ;) The affected `if (i >= ka_num) {` branch in the C code has no correspondence in the rust code you linked, because in C the SolAccountInfo[] is taken to have a fixed size, while (I believe; my rust is aeh...rusty) it's allocated dynamically in rust.
<@!814228493302497301> like I outlined in the pr.
Not quite following, `Bignum` might be missing some methods to make this happen but I think you can do this with from/to-slice.
sorry for being a pain, but want to make sure this isn't buried
What are you looking for? For the purposes of blockchain, an NFT is just a digital representation of something in the real ord digital world. If you're talking about how to connect that to a real world or digital item, that wouldn't be in our docs.
<@!687984626400231464> We love github issues üôÇ
Any doc more advanced ?
Was this for me? When I `Vec::<u8>::new()` on the program side and pass its pointer to the syscall, I can't `translate_type_mut` in the syscall itself to then `push` the resulting BigNum results instead of allocating in the syscall side... Note: `BigNum` is openSSL FFI structure (in syscall) and `BigNumber` is our program side structure.
None so far, I was just reading the sol_deserialize function to understand what it does. If I'm correct, the wrong address will be accessed to set `params->data_len` whenever more accounts are provided than the user wants to deserialize and at least one of the excess ones is a dup. That's because the `input` pointer is not adjusted correctly in that branch (see my second link in the previous message).
What issue are you running into?
<@!687984626400231464> The code you cited is the compliment of this: https://github.com/solana-labs/solana/blob/27004f1b76f91fd30c9c10c6a95c3c2269d5b8f8/programs/bpf_loader/src/serialization.rs#L182
<@!239813934360690690>
https://spl.solana.com/token#example-create-a-non-fungible-token
Is there any NFT good practice documentation on Solana ?
What you want to do is allocate memory in program space, pass that memory to the runtime to fill in.  That way there is no persistent state on the runtime side.  So for example, create the bignum in program space, get the inner pointer or slice, pass that to the runtime, runtime creates a bignum with that ptr/slice, does the operation
I'm looking at a potential bug in solana_sdk.h:
Notice how since `dup_info` is 1 byte only, `input` is realigned here when the account was a dup: https://github.com/solana-labs/solana/blob/27004f1b76f91fd30c9c10c6a95c3c2269d5b8f8/sdk/bpf/c/inc/solana_sdk.h#L399
However, in this branch it looks like this realignment is missing before the continue: https://github.com/solana-labs/solana/blob/27004f1b76f91fd30c9c10c6a95c3c2269d5b8f8/sdk/bpf/c/inc/solana_sdk.h#L349
(i.e. there should be an `else { input += 7; }` part there I think)
<@!453347985628200960> could you please take a look?
Heh. On another note, addressing the comment on the Box'ing of BigNum and possible leakage...I can't figure out how to translate an address to a mutable Vec<u8> to use instead. Rust n00b.... apologies.
<@!814228493302497301> I kicked CI
(contract == account, sorry, still on ETH terms...)
is there a special command, other than `--clone` that needs to be used in order to copy a contract from the main pool into the local test validator?
at least, all of them have nonzero balances in the test-validator
I'll take a look
which seems (mostly) self explanatory... except that all of the programs that are called really are on the chain?
<@!453347985628200960> - Hi, the latest push to PR #17082 is failing on the `buildkite/solana/local-cluster` step, which I don't see why it is timing out or anything I can do to fix it?
Currently getting the following error: `Transaction simulation failed: Attempt to load a program that does not exist`
ok, yet another silly question:
If yes https://docs.solana.com/running-validator/validator-start#vanity-keypair
Custom as in get some chosen letters?
Is there a way to custom generate your keypair for a program
Depends what it is. Talk to me in another channel I dont think this is the right one
thanks that sounds like it's what I need
I dunno anything about that python module. SPL Token program id is here though https://github.com/solana-labs/solana-program-library/blob/master/token/program/program-id.md
do you do any freelance?
seems like it accepts a SOL public key
what is the program_id parameter for Token objects in solana-py?
How can I get that value
Thank you both
I see okay
Gotta wait 'til 1.6.9 otherwise, as Tyera says
You can use restore if you install CLI tools from the tip of `beta`
^ what Trent said. But you will be able to recover keypair files from bip32 paths (like sollet) in v1.6.9 (or now, if you are comfortable building from source)
Just pass `--keypair ask:?key=0/0` to any command and/or in any signer arg role
Can I not essentially just restore the wallet and save the public private keys as the default command line keypair
Be able to transact, mint and burn from the sollet wallet I recover
But  that command is basically a synonym for `solana address ...` so I'm not sure what the goal is here
`$ solana-keygen pubkey 'ask:?key=0/0'`
Ok...how can I do that...
What date type in Rust should I be using with the Borsh serializer? Also what format should dates be in Javascript side as well?
Yes, you didn't specify the signer URI
Fiverr*
Hey everybody! Any of yall freelance solana devs on UpWork of FRiverr?
The follow up command is a different pubkey
solana-keygen pubkey
GrKxzQQHfQJoRdMav27EK8od7GwFgbMoZczAtTeWjDe8
solana address --keypair 'ask:?key=0/0'¬†¬†
[keypair] seed phrase:¬†
[keypair] If this seed phrase has an associated passphrase, enter it now. Otherwise, press ENTER to continue:¬†
65u8v84ZYwrnBMbAK4EnLDXW45G1Czt84bS4omGNDjts
it's a bit unwieldy so it's not particularly useful I think
yeah! ok, let me find a slighly smaller mwe, see if I can
I have no idea what you're doing at this point.
Oh I see this command fetches the public key but not the private? I access it, it shows the public key but how can I basically save the full keypair
might be a legit bug üôÇ
but not when it's a much smaller number?
ok for context, it seems to happen when I try to clone a large number of addresses
I have DMs turned off, sorry, to prevent scammers from bugging me.  You can pastebin a link here though
sure, I'll DM it since it's quite long if that's ok ?
Care to share your entire `solana-test-validator` command-line so I can see if it reproduces here?
Ty!
honestly this is still rather weird to me, not sure what it actually means
Is there a good rust library for handling datetimes coming in from js and back out? Or perhaps a pattern to use to handle these well?
You're going to have to provide the command
But the public key is the exact same
Actually now I'm at the point I was earlier. So it's accessed but it shows account balance is 0. The Explorer says I have SOL and tokens
yeah, `solana-keygen grind --help`
https://docs.solana.com/running-validator/validator-start (sorry, seems like I accidentally responded to something lmao)
`keygen grind`, no? <@!124564013970358272>
Hey guys, do you know how to generate vanity public keys? Is there a program you guys use for doing this? E.g Tokenkeg
not quite sure what the problem is though?
Hi! I seem to be getting an error of `Failed to create ledger at test-ledger: blockstore error` while attempting to run `solana-test-validator` on some cloned addresses
Success thank you
Quote and ask
Oh right.  I keep forgetting Michael shipped 1.6.8 over the weekend
Yes! That was it
Try `solana address --keypair "ask:?key=0/0"`
<@!585868308419444749> It's still `ask:` in 1.6.8. It will be `prompt:` in 1.6.9
I dont get
No.  Your shell is.  Quote the keypair URI
Am I stupid üò≠
solana address --keypair prompt:?key=0/0
zsh: no matches found: prompt:?key=0/0
Hi, someone can help me with validators info? When i call getAccountInfo on node public keys the data coming back are empties. I'm getting the key from both getClusterNodes  and getVoteAccounts.
"ask" will be "prompt" in 1.6.8 (we changed our mind)
`solana address --keypair ask:?key=0/0` should recover your sollet pubkey with 1.6.7 CLI tools
Well... that's for stake auth, I think.  Can't remember what my script uses.  I just called it "authority" like a proper forward-thinking programmer
Offset is 12
<@!233192450167013378> - here's approximately the filter you'd use for this (but in Rust, sry): https://github.com/solana-labs/solana/blob/cb5e000615c09d0ef847f2ff033bd2a51990a18f/cli/src/cluster_query.rs#L1689-L1706, however instead of searching for `Delegation::voter_pubkey`, you'd search for probably the authorized withdrawer key (https://github.com/solana-labs/solana/blob/master/programs/stake/src/stake_state.rs#L173), which is at a different offset in the stake account data
That's what I'm realizing
sollet and the command line don't derive the keys the same way
Like just if I make an account on sollet, am I only able to use sollet again or could I restore them via command line is all
Be able to make transactions from
What does "access" mean?
You can `getProgramAccounts` for the Stake Program ID with a filter that matches the appropriate authority
Ah guys I can't figure it how. How can I access a wallet made on sollet with passphrase from the command line
In that case, is there any related API-RCP method that can return all affiliated stakeAcount for specified Account?
Only time you'd need to keep them are if one of the authorities is also the address or if you plan to reuse the address in the future
Authorities are sufficient after the address has been reserved
Find the instruction index (text immediately before what you copied). Find the instructions program id. Find the code for that program. look up the error enum
e.g. for withdrawals or disable
Another question, should we store somewhere seckeys for stakeAccount, or authorities is enough?
Depends on the program.
what does ` custom program error: 0x2a` indicate?
Another question
Nvm, i will look at it later
Which instruction is that?
That's actually works, we have a progress :))

```
Program 11111111111111111111111111111111 invoke [1]
    Program 11111111111111111111111111111111 success
    Program Stake11111111111111111111111111111111111111 invoke [1]
    Program Stake11111111111111111111111111111111111111 success
    Program Stake11111111111111111111111111111111111111 invoke [1]
    Program Stake11111111111111111111111111111111111111 failed: invalid account data for instruction
```
Make that 500_000 into 2_282_880 and it'll probably work
will look into it
Oh, i see
The funding account balance is irrelevant.  The transaction specifies too small a funding transfer
Yes.  They must be rent-exempt
Because funding account got `994882713` lamports
So it there a minimal depostit amount for stakeAccount?
Stake account rent-exempt minimum is
```
$ solana rent stake
Rent per byte-year: 0.00000348 SOL
Rent per epoch: 0.00000625 SOL
Rent-exempt minimum: 0.00228288 SOL
```
You're creating the account with 500_000 lamports
This is going to be stake-initialize rejecting the target account due to sub-rent-exempt balance
And sending log
```
0: "Program 11111111111111111111111111111111 invoke [1]"
1: "Program 11111111111111111111111111111111 success"
2: "Program Stake11111111111111111111111111111111111111 invoke [1]"
3: "Program Stake11111111111111111111111111111111111111 failed: insufficient funds for instruction"
```
Aqvv2PhNLAiFajdu50rb21hgk/HH0IVlpfwG6FBsQ422YeRLxYRVJ9MIAgpOk4YYK1B3kxguLefQVx+YEllzUwEchhG6OH8X4nu6LIEtzu16hYjwsCZv/l0g3e5yEUnX6Sfk8up6EeNt0fE4QN62yYIfl7gUnq+hop2WNSa2+CUGAgAHCVPkn+pwkDtOnauWtDIHp2jg5TI/ObtGi1VaUDaRmNut1Rt5GduRfOorHlNK0l6FzWmgmU950rWKR7k7PPJhsGEGp9UXGSxcUSGMyUw9SvF/WNruCJuh/UTj29mKAAAAAHzgaQ+C+2FHX+u9FgXvIMNGqRZ3BtgpzkaZQ1xMJ4CuBqfVFxjHdMkoVmOYaR1etoteuKObS21cc1VbIQAAAAAGp9UXGTWE0P7tm7NDHRMga+VEKBtXuFZsxTdf9AAAAAah2BelAgULaAeR5s5tuI4eW3FQ9h/GeQpOtNEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGodgXkTdUKpg0N73+KnqyVX9TXIp4citopJ3AAAAAAOXRQJSLdiW9MUBlx44aEr2d6SD7YVuSk/oGclIDuAC6BAcCAAE0AAAAACChBwAAAAAAyAAAAAAAAAAGodgXkTdUKpg0N73+KnqyVX9TXIp4citopJ3AAAAAAAgCAQJ0AAAAAFPkn+pwkDtOnauWtDIHp2jg5TI/ObtGi1VaUDaRmNutU+Sf6nCQO06dq5a0MgenaODlMj85u0aLVVpQNpGY260AAAAAAAAAAAAAAAAAAAAAU+Sf6nCQO06dq5a0MgenaODlMj85u0aLVVpQNpGY260IAgECdAAAAABT5J/qcJA7Tp2rlrQyB6do4OUyPzm7RotVWlA2kZjbrVPkn+pwkDtOnauWtDIHp2jg5TI/ObtGi1VaUDaRmNutAAAAAAAAAAAAAAAAAAAAAFPkn+pwkDtOnauWtDIHp2jg5TI/ObtGi1VaUDaRmNutCAYBAwQFBgAEAgAAAA==
If `solana decode-transaction` can decode it, so can I
base64 is better
uhm, tx hex is fine? Can  u deserialize it?
sure
and the full transaction log, not just the line that errored please
thanks, ill definitely take a good look at those tests
few sec
sure
If it helps - i can provide raw tx from this code
When I check solana balance for any address I see 0 SOL for accounts I can see have some on explorer. Any idea why?
Yes
yeah, my bad.  misread the code.   so `address` is a funded system account, and `amount` holds a value that is LESS than the total amount in `address` right?
```const fromPubkey = new PublicKey(address)``` this use an argument, so i pass a funded account to it.
But new stakePubKey should use already used keypair from main account?
<@!233192450167013378> - wait that's wrong. sec...
<@!141059180969721856> Saw your message on the stream:
>  request: documentation for the token-lending program would be pretty nice

I'm working on docs üôÇ The tests @ https://github.com/solana-labs/solana-program-library/tree/master/token-lending/program/tests are probably the best place to look to understand the API for now. Happy to help answer questions.
yeah, `const { secretKey, publicKey } = Keypair.generate()` above it.  Instead you'd want to provide the keypair for a system account that actually exists on chain with a non-zero balance
right
The explorer shows the account because it could have past tx history or SPL Token accounts associated with it
this line? ```    const fromPubkey = new PublicKey(address)```
just out of curiosity
what would be the use of these things, then ?
it's just an empty account
ohhhhhhh
`fromPubkey` isn't funded.  `Keypair.generate()` just creates a local ed25519 keypair
0-balance is non-existent on chain
what would that mean ?
it is indeed !
Is it's SOL balance zero on the explorer?
Question re validator commission, would it theoretically be possible to connect validator commission payments to a program, i.e. commissions are paid into a program which acts as a smart contract and does something, e.g. splits the commission for further downstream payment into different accounts. Is this the right channel to ask this? I can elaborate further on a specific use case I have in mind
what are the possible reasons for this ?
I get this error `[2021-05-13T19:27:58.538956050Z ERROR solana_core::test_validator] Failed to fetch [...] AccountNotFound` even though the account is clearly visible on explorer.solana
another quick q: I'm having a problem fetching some of the accounts from the mainnet (using `--clone` with the test server)
as i said, tx serialization works fine
<@!445425471027544095> entrypoint is `createDelegationTransaction`
https://codesandbox.io/s/damp-sound-ugy1i?file=/src/index.js
few sec
yeah, share the code snippet, there's a bug in it somewhere
i can share u a code snippet with stake process at our side, if u can look at it and points at our mistake - that would be superb, cause we currently stuck üôÇ
there's enough funds, that's the point.
add funds?  Sorry, not being facetious but that's literally what that error is saying
Your favorite bip39 compliant key management tool
this's happens when i tried to send signed delegate tx ```Program Stake11111111111111111111111111111111111111 failed: insufficient funds for instruction```

but there is enough funds on deposit pubkey
What's the best command to take a 12 word phrase and derive the keypair
I saw it, but still have some issues. First of all i tried to make all staking steps as `createStakeAccount` , `init`, `delegate` and put into single transaction by `Transaction.add(...instructions)` and then sign them with affiliated keys
(they assume you understand the staking program of course, the `solana` command-line can be a good  resource to get familiar with how the staking mechanics work in general before writing code)
We've got some web3.js tests at https://github.com/solana-labs/solana/blob/master/web3.js/test/stake-program.test.ts that might be useful to copy-paste from
Or maybe anybody  related to web3-sdk can help me with my snippet pointing on some issues
No ETA, it's on <@!453347985628200960>'s roadmap though
Cool any eta? Is this a priority?
Hi, folks. is there any examples of staking SOL with web3-sdk?
Yes that's currently the case until account reallocation gets implemented
Right so then really I have no choice but to pre-allocate and also pre-pay for 10mb up front during account creation.
In the case of your example, you'd give a size of 10mb (if you wanted that 10mb to live forever on chain)
Thanks for the reply but I'm confused. Then why is the getMinimumBalanceForRentExemption call asking for a size parameter?
Think of it like `calloc`
livestream is happening rn btw guys üôÇ
When the account is created by the system program, the account data size is immediately allocated (10mb in this case) and zeroed.
is there any best practice for how larger data sizes should be set and updated on solana accounts? For example let's say I have an account that could be 10mb in total, but to start I want to insert just 10kb. But over time it will expand. Well since account data should currently be considered as unchangeable, according to the team, should I first insert dummy data of 10mb in size and slowly replace some of it with the real data? Isn't this wasting lamports since the rent or rent exemption will be higher based on data size?
The `FeatureProposalInstruction` is an enum that's serialized using Borsh:
https://github.com/solana-labs/solana-program-library/blob/a1071cd8c6a81d32d95ccc217f370f4782dea42c/feature-proposal/program/src/instruction.rs#L15-L16
Hmm I see. So it does work after all.

I'm starting to conceptualise it as having a puppeteer program that acts on your behalf on-chain. It has its own registry of access control, similar to other programs with derived addresses. 

Meaning - doesn't an SPL-token account need to have the corresponding registry/from-authorising-pubkey account-derivation method?

One of the most important thing this means is you can schedule txs to be signed at arbitrarily chosen times.

In a distant future this could also mean you can listen to on-chain events and react autonomously, even if that means signing (authorising) txs.

A bit of an interesting and scary thought.
Any help on how to deserialize an enum using borsh ?
and match the result.
program-derived address
PDA?
> Meaning - it cannot even feasibly sign a tx on the behalf of an SPL-token transfer.
The PDA needs to be the owner of the source SPL Token account to be able to sign for the transfer
Hmm, so I guess as long as one can delegate account creation of any form to an arbitrary program, the above idea works.

But I'm not sure if this would be true of SOL balances, SPL-tokens, associated tokens, staking accounts. These seem to also be program derived accounts. But a program cannot control the program-derived account of a separate program. Meaning - it cannot even feasibly sign a tx on the behalf of an SPL-token transfer.

I think this may be a currently limitation...?
A program using `invoke_signed()` with one or more of its program-derived address is functionally equivalent to a user signing with their ed25519 keypair before sending the transaction from the runtime perspective
Can an arbitrary account be controlled by a program?
Programs can act as signers for program-derived accounts.  The scheduled program instruction would be unpermissioned (the program doesn't require any signers) but instead checks the contents of the program accounts it was provided, then uses `invoke_signed()` as needed to "sign"
So the protocol I've just thought of works as follows:
1.To register your account with the cron program, first, you have to: atomically transfer ownership to the cron program + register your ownership in the cron registry.
2. When you want to schedule a tx, you can first sign it with information about the time you want it to be run. You pay a fee for the service. The cron program checks your pubkey corresponds to its registry of ownership for the account it has to modify. If these checks are valid, the tx is accepted and it schedules your tx.
3. When the time comes, the cron program, which is the authority, can sign a tx pertaining to that account.

Unfortunately, with this method, you lose the ability to control your account directly, but you can always submit a tx to cron that schedules it to be performed immediately.
i still don't understand how to implement the "store the output signature" part. how would I do that within a program? can't seem to find anything helpful in the documentation. all i've seen are `invoke` and `invoke_signed` functions, both of which seem to execute the tx instead of computing the output and storing it
na, it just means at times you need to write a program that you delegate authority to
wouldn't this restrict the types of transactions that could use the scheduling service by a lot?
that's not always feasible, I think
I think the best way to support a scheduling service is to require the scheduled transaction require no signers (beyond the fee payer), and avoid the signing problem entirely.
I think a nonce won't help you there - you can store the output signature, but alice still needs to sign a tx when the time comes with a new nonce - am I right <@!445425471027544095> ? In other words, the protocol is interactive, not non-interactive.

you can take a look at my design for an on-chain scheduling service that takes into account access control:
https://github.com/solana-labs/solana/issues/17145

But, the receiving program needs to be aware of the cron program. No programs are at the moment, of course. Suggestions welcome.

But if its an account you own, you can always set the signing authority to be the cron program. The cron program itself can check if the signature signed corresponds to a given account, which is stored in some auxiliary when you submit the tx to the cron program giving it ownership.
yep, you can by using a nonce: https://docs.solana.com/offline-signing/durable-nonce
Doubt you can store signatures for later though - sounds like a big security vulnerability üòâ
Think that'd be effective for program-internal actions and offer it as a library- I've been thinking of a similar idea
i'm toying with the idea of a transaction scheduling service. one of the approaches im looking into at the moment is the possibility of signing a transaction within a program without invoking any of the instructions inside it and instead storing the output signature which i can do some further trickery with (that part isn't relevant to my question though so i'll spare you the details)

is it possible to sign transactions that way and store the signature for further use within a program or am i grasping at straws here?


///////////////////////////////////////////////////////////////////////////////////////////////

you should be able to import it into Sollet
is this what you're looking for?
<@!837449711425945631> https://github.com/certusone/wormhole/blob/86ccc1c6176955b75b1fb41350d463bc220e6586/solana/id.json
not sure what's going on here, but using the node module @solana/web3.js I get an error calling `getProgramAccounts` with encoding: 'jsonParsed' - the error is in the libraries building up the object
Good for all. Can someone answer my question, trying to get information from LP Token ... How to get the balance separately (example RAY-USDC) 
RAY?
USDC?
Thanks.
https://spl.solana.com/token#finding-all-token-accounts-for-a-wallet this was what I was searching for üôÇ
ah nvm I think I've found somethingg
hmm not a v2.0 Token account
try this: https://docs.solana.com/developing/clients/jsonrpc-api#gettokenaccountbalance
I've just started looking into solana - currently trying to get my wallet's token balances via the RPC calls.  I can see my SOL balance via getBalance and/or getAccountInfo.  How do I get my balances for other tokens (USDC etc)?
It's getting resolved.  One of the backends didn't have the correct TLS cert setup
the api endpoint cert is expired
So i talked to michael vines and he says if oyu explicitly use --url with https://testnet.solana.com it works which is different older endpoint
üòê
Looks like that cert has expired

Looks like switching to testnet isnt an option anymore either
so I'd bet money that underlying library got messed up
and I havent touched this code in quite awhile
I just get: Program failed to complete: Could not create program address with signer seeds: Provided seeds do not result in a valid address
Hmm well starting about 24 hours ago, evening with upgraded libraries, authority seeds that used to work do not result in valid addresses anymore with invoking signed
When will meta data like Token Symbol, Name, etc  be on-chain?
it's just bytes, you don't need to use anything, you can just do it yourself
might want to look into borsh
hmm i actually don't know how to deserialize non-fixed sized struct fields...
When i change name to u32 type it works

I mean a struct in an enum.
Enums are not strings..
When i switch to u32 it works well.
Trying to deserialize an enum, getting error when i change type to String.
so I need to upgrade
oh
devnet has moved to 1.6.9 in the past 24 hours I believe
Has the token app or the devnet cluster been updated in the past 24 hours?
Where and what are you trying to deserialize? Also, what was serialized to whatever location you are?
does anchor include a good way to create an account with a size determined at runtime?
Getting "Unexpected length of input" in borsh deserialize, what to do ?
An answer would be highly appreciated. Currently already learning more about Solana but havent found anything regarding whether this is possible or not
nice that I can use ```#[path = "../../program-rust/src/state.rs"] mod state;``` to import
and unpack that data again
yeah, sorry - I have a program that packs/unpacks an object and stores it. Then in a very different piece of code in another server I need to query that account.
Yes, in testing we used the same `state unpack/pack` to emulate what happens in our program to test our serialization. I presume that is what you mean my "my existing state.rs"...
thanks! I'm heading down the route of using my existing state.rs to unpack the data. Sound about right ?
On RpcClient there is `get_account` or `get_account_with_commitment` which returns an `Account` and if you look at the `Account` structure it has the fields you are looking for. `get_account_data` returns the `state` data associated with an account and is typically serialized data if the account was created to support state data.
I guess I use all the code in the state.rs to unpack the data
Hi, I'm querying a public key using RpcClient from rust. I want to  get the AccountInfo. I cannot find get_account_info in rust api, so Ive used get_account_data and I get what looks like a load of binary. Do I need to de-serialize it ?
any help appreciated...
Any suggestions ?

GETTING error here
ow to add my new token for trading on Serum Dex? how do we provide liquidity?
Any suggestions or leads are appreciated.
Hi guys, noob here how can i check raydium or serum pool reserves using `json-rpc` api. In other words how can i read on chain data from solana.
`--no-voting`
How do I run this validator as a non-voting validaot?
Hi guys, I started a validator for mainnet and enabled RPC port. I want to use it as my private RPC server. I'm not yet ready for a voting validator since no enough staking SOL to break even.
Hi guys, I'm trying to run `solana-test-validator` within a Docker container. Things run successfully on my work laptop, which is an Intel Mac, but on my personal machine, which is Ubuntu 20.04, I get 
`Illegal instruction (core dumped)`.

I've seen other people have had similar issues, in particular: https://discord.com/channels/428295358100013066/517163444747894795/814410226249760768

Does anyone know how to get around this issue, or even how I can get lower level logging than from the `solana-test-validator --log`? There seems to be nothing obvious in the logs, and the error occurs at different places each time.
Probably just somebody missed a notification.  So adding another comment in the PR that's of interest might bubble that PR up to the top.  But note that it's the weekend now too üôÇ
I don't think it's deliberate or malicious.  People are really busy and there's a lot happening in there
<@!558969137842487316> - if you're talking about a token-list PR, please make noise in that PR and not here
thanks <:koolaid:831946858178936845>
How do tokens get avatars in sollet wallet. Is it baked into the token or it's done from sollet's side?
Is there any examples of a program paying out a token from an account that I would have the keypair to. For example If I were to have an spl token in my wallet and I wanted a program to give you the tokens out of the account. If not what is the best approach for this?
https://spl.solana.com/shared-memory - seems like Shared Memory isn't actually launched..? https://explorer.solana.com/address/shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL
Hi, I am seeking a Solana developer to help speed up our teams proficiency with Solana.  Please contact me at ian@fuzzy.one if you are interested in some extra online work.
https://docs.rs/anchor-spl/0.5.0/anchor_spl/shmem/index.html
Is there a Rust create for the Shared Memory program? Can't find it
i need solana dev to start project.
Building that right now. Facing one last blocker before we start indexing the entire chain.
thanks for the tip, was able to pull something together to generate the same keys as sollet üôÇ now compatible with the passphrase keys from solana-keygen and sollet as well
What's the best way to find solana projects to contribute to?
ah i think i see what im doing wrong, i need to create an oracle account after creating the aggregator, and give the oracle account not the aggregator account ?
for the token lending program, when the flux aggregator is used, what account do you specify as the oracle when initializing a reserve? I'm atempting to specify the public key of the aggregator account which i create, but that gives me an `InvalidAccountData` error when attempting to initialize the reserve
*hardware
Any guides to doing floating point arithmetic with Solana? I noticed Serum seems to do some fanciness with unsigned ints presumably to avoid floating point imprecision and inconsistencies across hardward
thanks! I'll try later.
The private key is generated from the seed via secp256k1 bip32
Read the code, it's not just the path
because I am not using that path
you mean that path will generate a deprecated wallet?
This will generate a deprecated wallet, https://github.com/t-nelson/analemma/blob/master/src/main.rs#L31-L39
The problem with Sollet's deprecated wallets is that they aren't properly generated ed25519 bip32 keys
I've tried with both non-deprecated paths shown on sollet
yes I am using m/44'/501' as base path
figure out the differences so I can make my c# lib compatible with both* wording lol
`key` assumes `m/44'/501'/` as a base path
For some reason this isn't working for me on v1.6.8, idk if I'm missing something. I am trying to figure out the differences between the solana-keygen and sollet way of generating the keys, even using the derivation paths (either m/44'/501'/wallet'/0' or /501'/wallet') I'm still not able to get the same keys as on sollet
Until we have something better to offer.  Just be respectful about wording and frequency üôè
Is the oracle integration broken presently for lending program ? https://solana-labs.github.io/oyster-lending/#/borrow seems to show no price, also tried it from new oyster repo but still no price.
It would be really nice if The Graph (https://thegraph.com/) supports Solana
Thanks!
You could probably compile your own version with a higher limit, and the entire Ledger on disk, if it's super important to your use case or your querying extremely frequently.
> The result field will be an array of u64 integers listing confirmed blocks between start_slot and either end_slot, if provided, or latest confirmed block, inclusive. Max range allowed is 500,000 slots.
This means I can query from the start of the cluster till now, but maximum 500000 slots per request?
api.mainnet-beta.solana.com has the full history
May I ask how far I can get back into the history? We are building an app requires historical logs. I'm currently thinking of whether we need to host a database for storing the history or just query the Solona cluster.
Got it!
`getBlocks` doesn't exist yet üôÇ  It will in v1.7
<@!469776019784466442> - docs.solana.com is a little messed up right now.  Please use https://beta.docs.solana.com/developing/clients/jsonrpc-api#getconfirmedblocks
maybe take a look here: https://docs.solana.com/running-validator/validator-reqs
I tried this but it is not working
by web3-sdk?
May I ask how far I can get by querying the transaction history using `getBlocks` rpc call?
And validator node too
Folks, is there recommended hardware params for highload running node?
there you go üôÇ
Oh i get it, so the uniquity wont come from stats alone but from stats+the weapon design.
Thats really smart, love the idea
It works, returning all stakingAccount affiliated to stake Auth, as <@!585868308419444749> says it's `12` offset filter, jfyi
Have a look at https://arweave.medium.com/permanent-nft-storage-on-the-arweave-network-41f38d700a2d
thank you for your patience!
oh!!! I dont know what changed... maybe I missed an error along the way,  but I got a different error now, so its connected
ok, i am blind or something... I copy pasted the url and get this still: ````Err` value: ConnectionError(Url("Unable to connect to ws://127.0.0.1/8900"))' ```
Yeeeeah, great! Our monitoring is runnig worlds faster, thanks!
here yes "ws://127.0.0.1/8900"
this is wrong ? ```PubsubClient::logs_subscribe("ws://127.0.0.1:8900/"``` sorry if im being blind !
your syntax is wrong
üò¶
yea, I can telnet and it rejects with Invalid byte message, and it doesnt connect if solana not running
ok, thanks both. I must have something else going on
just checked, this 2 works:
wss://api.testnet.solana.com 
wss://api.devnet.solana.com
ws://127.0.0.1:8900
shoot... was hoping that was it, but no. My local cluster is running for sure. And its config says this: ```Config File: /home/teddytomas/.config/solana/cli/config.yml
RPC URL: http://127.0.0.1:8899 
WebSocket URL: ws://127.0.0.1:8900/ (computed)
Keypair Path: /home/teddytomas/.config/solana/id.json 
Commitment: confirmed ```
try wss://


///////////////////////////////////////////////////////////////////////////////////////////////

why the delivery of insoles takes so long,
Were you pointing at api.devnet.solana.com? or devnet.solana.com?
Yup the devnet was overloaded, and my internet connection wasn't really that great. I managed to deploy the program using a remote server.
Probably very stupid question, but is there any way to un deploy a program. I assume no
Are there any good audit firms who are capable of doing security audits for solana programs?
üêõ Wormhole question - what's the point of using wormhole if any asset you transfer gets minted as a wormhole-prefixed asset? For example, I sent some 1INCH from Ethereum to Solana via Wormhole and now I have a _wormhole version_ of 1INCH whereas it appears there is a Sollet version of 1INCH as well.
I whant to make a vesting contract for a token that i have made and i see that is very nice made but i have an error and i was wondering if the vesting is working or i make a mistacke
Hi, does anyone else local solana cluster print logs twice ? Its a pain because I'm subscribing to the logs to take an action... but I'm now performing that action twice...
Did someone use the vesting.bonfida.com to lock a token and create a vesting?
But shouldn't I receive the `The recipient address is not funded. Add '--allow-unfunded-recipient' to complete the transfer` in that case? That's what happened in my tests.
If the address where you sent the token doesnt have any sol in the wallet the you mist pay the fee so use : spl-token transfer ‚Äîfund-recipient <your mint address>  50(how many token to transfer) <destination>
Can someone explain to me / or share some code examples on how to call smart contract methods on Solana? (with SolanaWeb3)

EVM example: contract.methods.getAmountsOut()

What would be the Solana equivalent?
Many many thx. It works i have found
(Perhaps "inner transaction" is the wrong term even...it's still all just _one_ transaction, right? "Inner...invocation"?)
Why does the `sol_invoke_signed_c` syscall require the full SolAccountInfo? I'm trying to understand CPIs in more detail. If the runtime creates a context for the inner transaction, then the fields in SolAccountInfo (e.g. lamports) cannot be trusted anyway and passing SolAccountMeta instead of SolAccountInfo should suffice?! Perhaps this is to make the changes from the inner transaction visible to the outer one?
I was transferring some spl-tokens on mainnet with `spl-token transfer` and I received this error: `unable to confirm transaction. This can happen in situations such as transaction expiration and insufficient fee-payer funds`.

I was using the `https://api.mainnet-beta.solana.com` RPC endpoint. When I checked whether those addresses received the SPL tokens, they did, but `spl-token transfer` didn't output a transaction signature. Is this normal and how should I treat this error?
Hi im also trying to set up a paper wallet but when i run: solana keygen pubkey prompt:// I get error : unrecognized signer source how can I get the prompt to work without having to save to a file?
Thx i will look
Is there a channel to ask about issues with the explorer? explorer.solana.com?
solana-keygen has a grind option
i dont really understand ur solution <@!690660746945888316>
so do u guys know the solution to my error?
Anybody know how can i make this? When i create a token the public key is generated . Whant i whant to know is how can i make the public key to start with my coin initials? For exemple rrr<public key>
yes
Pm me so we dont spam here
Copy the key and put in home -user-solana-solana-release
In solana-release go to ~ and there you have the key
From cmd you must be here
Home -user- solana-solana-release
i have installed it
yep
Where did you make the folder?
Ok but did you get solana ? Solana config set
i dont know where is $HOME is
but me too
it show that the system cannot find the path
note: i have already made a keypair
oh sorry mate no idea, would be easier if you share the output screen
im using window
then?
no
Are you using linux?
do u know where it is?
i dont know where is ${HOME}/new-keypair.json
You must put the json file in the path where you are
do u guys got any solutions to this?
error: could not read keypair file "${HOME}/new-keypair.json". Run "solana-keygen new" to create a keypair file: The system cannot find the path specified. (os error 3)
when i run command spl-token create-token, it show this error:
help me fix this
guys
I'm struggling to get the data out of the results of RPC calls in a way I can manipulate - using the solanaWeb3 npm package if I call, for example, RPCclient.getParsedAccountInfo(key) I get some stuff back successfully.  However, the result.value.data is encoded and I can't parse it
When i create a token the public key is generated . Whant i whant to know is how can i make the public key to start with my coin initials? For exemple rrr<public key>
anytime, happy building!
cool, thanks!
then you can have sollet or phantom, and use sollet for localnet
oh right, yeah that makes sense, unless you want to support multiple wallet providers
thanks, I'll switch to devnet
and that wallet basically needs to connect to the right network
fair enough, one day hopefully so will I üôÇ but I am trying to build an app that has a UI (starting from dapp-scaffold) as far as I undertand the ui needs to inject a wallet to display balances
i usually use all CLI
what do you use? sollet?
ah it's possible, i'm not using phantom so i can't tell you either way
for localnet it seems I cannot use phantom? should I use sollet or should I just switch to devnet?
thanks a lot
amazing
yep! it already comes by default as a courtesy üôÇ and you can use either, whichever one you prefer
cool, that works on solana-test-validator too? should I call it using solana-token-cli or should I use https://www.spl-token-ui.com/ ?
just use the one already deployed -- programs are stateless, so you can have tons of tokens all using the same token program
if I want to create a token, I see the token program in the solana-programs repo, do I have to build and deploy my own token program or can I just call that program with the correct parameters?
https://github.com/solana-labs/example-helloworld is a good place to start. To compile as C++, rename helloworld.c to helloworld.cc
WSL is fine for development. For running a validator in production, you'll face the problem that (unless you're on a server-version of Windows) you cannot do UDP port-forwarding to your WSL-instance; at least on WSL2. So for that it's better to install a full-blown hyper-v VM. (But again, running a production validator is not needed for development.)
awesome, thanks
yep, pretty much.  you can also have it work with other programs live on devnet / testnet
Protobuf is one option, and we've been pushing people to use borsh as much possible since it provides rust and js capabilities, all for pretty cheap compute cost
also, what benefits do I get from switching from test-validator to devnet? is it just collaboration with other developers?
Looks like devnet is overloaded if you're getting timeouts, can you try using `solana-test-validator` in that case?
hi, can someone explain the difference between devnet and testnet? at what point during development should we switch from running the solana-test-validator to using one of the above?
Could you report this user in <#812122623654887444> ?
You can take a look at <#763249718339567626> for that, it includes WSL setup and a few example projects to follow
You can run `solana logs` for that
Hello, I'm starting with solana, any full tutorial/guide on how to get started on windows and C++? or if windows is not an option a guide in linux, I got started with WSL?
Many thx
can anyone show we how to read console/log in solana-test-validator at local ? thanks
I think what you need to do is submit a pull request to this repository https://github.com/solana-labs/token-list. src/tokens/solana.tokenlist.json has a list of SPL tokens, so you have to add your information to it and make a PR.
<@!843168659144048730> Scammer <@!445425471027544095>
<@!445425471027544095> any idea about this? i cant find this in the documentation. Need to name the minted coin <:tinfoilhat:809110749141663754>
<@!439209823201132558> could you please help how do i name a freshly minted coin on solana?
Are there any libraries to help support this ? eg protobufs where you define in a single file the schema and then import it everywhere its required ?
Hi, not quite sure this is the correct channel, but as good as any others... I'm finding I'm doing a lot of de/serialization code. In JS, In program "state" files, and now in off chain rust components. I'm finding I'm reluctant to refactor and add/remove fields.
What could be the issue here?
That account is the upgradeable loader that was deployed in the deployment process, if I'm not mistaken
I see this error:
```
Error: AccountNotFound: pubkey=9zZq6CJmeRUNcvQbHYHxTb2B5BhFs8rFa9tDmpJ8KoB: error decoding response body: operation timed out
```
<@!439209823201132558> Hi, I am trying to upgrade a program on Devnet. And I am using the appropriate upgrade authority, the keypair paying fees has sufficient balance as well.
So, token user must create new key pair(this is as you said a cheap operation) for each token and associate its pubkey, say ‚Äúnew_token_pub‚Äù, to his owner pubkey and mint id of the token program. When he wants to transfer the token, he sends transfer request to the mint program signed by the owner private key and instruction content would be the tuple of ‚Äúnew_token_pub‚Äù as a src, owner pubkey as a signer, dest pubkey and amount.
Am I right?
is there an equivalent to `solana-keygen grind` which has CUDA support?
Can some one please help here I am able to create spl tokens, mint , transfer but I am not getting where we do set price and token name ?
ohh okay. switching to linux then
Not really sure, Windows isn‚Äôt great.  We build windows binaries in CI here, https://github.com/solana-labs/solana/blob/ed51cde37b9c7dcaff77a95257c2311bb910a73b/.travis.yml#L62 in case that helps.  Most folks use Linux or macOS
<@!445425471027544095> can you help me out here please ‚ù§Ô∏è
i have 2 visual studio folders, 1 i installed just now, other which the cmd is using idk where it came from :3
Getting this error whenever i try to build spl-token-cli
We should document the airdrop rate limit here: https://docs.solana.com/cluster/rpc-endpoints
Will get that done next week sometime
Yeah right, that will be better. Was just testing the devnet
Thanks this worked, I think devnet has limit for just 1
I forget the rate limit exactly, 1 SOL ever 10 minutes or so should be ok.  Unfortunately we have to impose strict rate limits to prevent users from draining the faucet
Consider using solana-test-validator for development, to keep everything local and unlimited
Happened with me yesterday
I airdropped 1 sol
And after 30-50 mins , tried for 1 more sol airdropped and got this error.

Is it like devnet can airdrop 1 sol only per account?
Got it, yeah just ask for 1
this was the first time on dev net and I asked for 10, and once it failed I asked for 5 and 1
But the error seems self explanatory...
<@438416525968277504>
How much did you ask for and how often?  Need those details to help
<@445425471027544095>
Help with what?
<@445425471027544095>  can help then here
Yeah tried with 2 new keygens
Create new Keygen
Then put solana airdrop 1 

Has  that already been done ?
Gotcha 
Many many thanks for persisting with me
tried the same, still no luck. Guess I'll work with local host for now
The wallet just holds an ed25519 keypair, it could even be a paper wallet that has never held a balance on chain.  But you can still set that address as the token owner.  

If/when they want to do something with their token, they‚Äôll either need to acquire some SOL though, or get somebody else to pay for the transaction
Thanks
I tried solana airdrop 1 <token addresse> and it worked
https://spl.solana.com/token#freezing-accounts
Okay that makes things confusing.
Can you elaborate on the comment that "wallet owner doesn't need to be funded"?
account address is different than yesterday, so I think that might not be the reason
Guys what does it mean to have a FREEZ AUTHORITY on the token?
Check account address contents
it's the first time on devnet, I guess I did it for local host yesterday
Na, it won‚Äôt.  The wallet owner doesn‚Äôt need to be funded
You might have airdropped 1 already
That happened with me yesterday
Rent is making things complicated üòÇ
If users doens't have/sell SOL , then there NFt will disappear after upcoming epoch.
using the devnet
Trying to airdrop some SOL for development using the `solana airdrop`  command on cli but getting this error `Error: airdrop request failed. This can happen when the rate limit is reached.` , can someone help out?
Yep.  There‚Äôs no guidance right now on how NTF metadata should be represented, just FYI.  Some teams are working on this but nothing I can link to just yet
Okay
So user account having NFT will have 2 things :
1. NFT (decimal --9 token) and 2. SOL to make it rent free 

Correct?
If the user feels the NFT holds value I imagine they wouldn‚Äôt do that.
Thank you for answering noob questions.

One last thing , Can I send SOL and get it locked for 2 years for user ? Because I don't have owner Keygen , so this is like aero in dark.

How can I ensure that user understand and doesn't sell .2 SOL I sent to him/her with NFT?
Yes and yes.
I went through that

My question here is :  do I need to send rent in terms of SOL of 2 years also with the NFT s/he is holding ?

NFT is nothing than --decimal 9 in Solana. So isn't all NFT are SPL tokens itself ?
Rent depends on the amount of data the account holds.   If you‚Äôre representing an NTF as an SPL Token then it‚Äôs the standard rent cost for a token account: https://spl.solana.com/token#example-create-a-non-fungible-token
Yeah I did in Dev environment yesterday when airdropped from token owner account to Phantom devnet wallet.

One thing here : what does NFT holder has to have in his/her account so that it is rent-exempt?
But you only need to know the user‚Äôs primary wallet address to airdrop them a token.  There‚Äôs a command-line tool that supports token airdrops.  But the sender pays for rent.  This is basically a nice spam-prevention mechanism.  Worst case for the user is that they hate the token, burn it and reclaim the rent
Yes you can only create a token account as rent exempt, regardless of who first creates it
I think I can send SPL token to SOL account user has provided from SPL token owner account. Is it correct understanding?

Can you expand your first comment that "only airdrop to a user that has created their account for your token already" ? If that's done will it be rent-exempt ?
ty
awesome
spl-token authorize<mint_addres> mint --disable
No worries.  If you look at the spl token account itself, one of the fields it holds is the address of the wallet that owns it.  The token program only allows transfers from a token account when the wallet keypair signs the transfer transaction.   

Each wallet then has a token account, for each kind of token (identified by the token mint), with the wallet as the owner.  Creating new accounts is cheap, and when they are assigned to a program then the program itself has full authority over that account (meaning that the private key that was used to create the account to being with may no longer even be needed ‚Äî that‚Äôs program specific, but it is the case for token accounts)
how would one "burn" the spl token mint authority? im checking the spl token docs and it doesnt seem to mention how you can disable mint authority
So one account cannot hold more than one token?? Since account must preallocate its space in advance, it cannot know the number of wallets it will handle. Sorry I‚Äôm newbie here...
Each token is it‚Äôs own small account, that‚Äôs specific to one user. So instead of one enormous account the model is to have lots of tiny accounts.  This allows the runtime to process all those tiny accounts in parallel - imagine making thousands of token transfers a second.  If there was one account for all token balances then all those transactions would need to be serialized
Okay. Thanks.
But, in that case, how can I handle token program, which cannot predict how many accounts hold my token in advance?
Pre-allocation seems the most straightforward.  And it kinda forces you to think about what you‚Äôre actually storing on chain, which generally should be as small as possible
In my case, I would need to create new account and let it own new version. Is there good transition strategy in general?
You have two choices I think:
- only airdrop to a user that has created their account for your token already 
- pay for account rent, and hope the user doesn‚Äôt just burn your token and reclaim the rent you paid
Same process.  You can supply the vanity address when the mint is created.  The spl-token cli allows this for example
Currently you can‚Äôt resize an account, you need to instead preallocate the max date len at creation time
Hi,
If you are airdropping tokens, How you ensure that recipient have rent-exempt account ?
Can you send locked SOL so that recipient do not sell it mistakenly and also enjoy benefit of rent-exemption account?
whats the best way to grind vanity addresses for spl token mints? `solana-keygen grind` only appears to be for regular solana accounts
Hi,
It‚Äôs about solana program question. I want to replace existing account.data with longer u8 array. My account was initialized with [u8;4] in the first version of the program. But, I need larger space for version 2. 
But, when I try to do account.data.borrow_mut(), it gives me a mutable reference to old data that is too short.
How can I completely erase this old sized one and put new one in place?
So I would suggest sticking with the one Solana supports best, which is Rust.
Theoretically you can hand write bytecodes but that can take you eons to finish a project.
Yep theoretically. However you need libraries provided by Solana to develop fast.
And theoretically, anything compiled to LLVM since there is an LLVM backend for it
You can think about it as a bytecode format like JVM bytecode, WASM, .Net bytecode ...
The program running on-chain uses a language agnostic format, called bpf. Both C and Rust can be compiled to bpf.
As a Rust programmer I would suggest Rust. However it still depend on your time (e.g. if you'd like to finish a project within one month, I think it would be better to stick with C)
Hello everyone, I just finished "On-chain Programs" section of the documentation, but I couldn't get a clue for which language I should pick for developing a program. I am a good C programmer, and I have near zero confidence with Rust, just skimmed The Rust Programming Language a few months ago. Is there an official recommendation? Which language would you recommend?
hey guys, question, is there a penalty for a validator going offline for periods of time?
Is there a good tutorial about adding wallet integrations, for example sollet.io?
Besides: https://docs.solana.com/integrations/exchange
Likely have to walk the tx history of my wallet
Not sure if this is a solana specific thing but I have a number of limit orders placed on Raydium's DEX but they wont' show up in my portfolio (custom app I'm building).  Is there an elegant way to find the orders I placed on a DEX so I can see what the true value is as well?
yep
more or less fetch that `json` file, parse and search for the token
Explorer has no API
yeah that's what I was considering doing anyway but wasn't sure if the explorer offered it as an API
ah, those come from an off-chain list at https://github.com/solana-labs/token-list/blob/main/src/tokens/solana.tokenlist.json
Your app could just load the raw JSON from github
@mvines thanks! I looked there and did not see a "search" method
The explorer is built entirely on the JSON RPC API documented at https://docs.solana.com/developing/clients/jsonrpc-api
<@!455114989397868556> ^^
üëã  quick question here - does the explorer have an API itself? For example, if I want to search for a token's public key from within my app is there an API for the Explorer to do so?
in the token lending program can a single obligation account be used for multiple reserves?
thank you for your answer!
spl tokens are a good example of dis, there is one generic spl program onchain you can use by just defining your own mint authority. whereas on ethereum every erc20 requires its own contract
solana has a clear divide between code and data tho so the pattern you might want to look at is immutable programs that accept the data needed to do whatever they do. for instance the daughter contract example could easily be replicated by having a daughter program that accepts an account with name age etc in it. then you can have a mother program that owns and instantiates new accounts
hes asking if a program can itself create a program. in theory yea, all youre really doing is creating a new account, putting code in it, setting execute bit, and passing ownership to the loader. in practice, the bytecode needs to come from somewhere, a solana program cannot drive a compiler lol
However I found no example of how such an interactive contract could be created.
Solana documentation reads
> An instruction might, for example, tell a program to transfer lamports from one account to another or create an interactive contract that governs how lamports are transferred.
https://docs.solana.com/developing/programming-model/overview
I asked something else, and I don't think it's worth trying again, because I worded my question pretty clearly.
Is there any examples of a program paying out a token from an account that I would have the keypair to. For example If I were to have an spl token in my wallet and I wanted a program to give you the tokens out of the account. If not what is the best approach for this?
If you're asking something else.  Please try again üôÉ
If you're asking if Solana supports Solidity, the answer is, not today.  Solana Program SDKs are only available for Rust or C/C++
hi, one can create a smart contract with a smart contract in solidity https://medium.com/upstate-interactive/creating-a-contract-with-a-smart-contract-bdb67c5c8595 does such or a similar pattern exist in solana?
i was following a guide that uhh upon rechecking is from december so i guess before the cli tools were as mature as they are now ‚ù§Ô∏è
o hell yea tysm
I think the last wave beat me into a minimal detail support mode.  Expand only if necessary
damnit  trent, u beat me
<@!811633301747531786> - for local program development, using the full blown validator is overkill.  Check out https://docs.solana.com/developing/test-validator as an alternative to  `run.sh`
Try `solana-test-validator` instead. https://docs.solana.com/developing/test-validator
id tried that yes but it dies instantly because its attempting to make changes to a systemd service that i dont have. is there a step to set up dev environment i missed? was following this https://docs.solana.com/cluster/bench-tps and assumed the service would only be necessary for keeping a real validator running under root live
Have you followed the instructions here? 
https://docs.solana.com/running-validator/validator-start#system-tuning
im trying to set up a local dev environment and keep getting
```
[2021-05-15T18:41:05.358953712Z ERROR solana_ledger::blockstore] Unable to increase the maximum open file descriptor limit to 500000
thread 'main' panicked at 'Failed to open ledger database: UnableToSetOpenFileDescriptorLimit', core/src/validator.rs:1077:6
```
whether i use `run.sh` or the step by step on the "benchmark a cluster" page. im running as my normal user, with solana cloned and built from github. not sure if im supposed to be doing part of this as root? i have already increased my limit above 500k in `/etc/security/limits.conf` so im not sure what else i should be doing... or, this is on a laptop without a gpu so maybe i should just dev against public devnet?
and will def wait for the metadata
I was unaware of this https://spl.solana.com/name-service, thanks
You can already use the newly launched name service to tie names to specific accounts. A metadata service for spl token that ties more metadata to tokens in particular will be launching in the next few weeks.
or an spl tokenv2 ?
How far away are we from being able to have metadata tied to an SPL token ?


///////////////////////////////////////////////////////////////////////////////////////////////

Aww man, do you know if such a version exist? Or was that just implemented later?
It doesn't, that's just the commit hash you were using before + Serum v3
That's up to you.  Apps are free to choose their own serialization mechanism.  Borsch is popular
each element being i8
actually I am trying to store an array of length 6 inside a struct, so `inside unpack_from_slice()` function how will I serialize and deserailize it ?
I'm not aware of an ubiquitous 6-byte integer encoding.  The elements being signed is also suspicious
<@150787664553967616> Hey Jordan thanks for you help before. I was wondering if the v3 serum dex version you sent me also has cross collateral implemented. Im pretty sure it didn‚Äôt but I want to confirm. Thanks!
Hey, I am unpacking some struct data, but I am confused about converting an array `[i8; 6]` to integer from little endian, don't know if it needs to be converted or not, new to rust can someone help out? for other integers I am using `from_le_bytes`
(it works in python, but not in js..)
Hi guys
I'm tryin to connect my wallet with the following lines: 
let keypair = [10, 654, 54, ....];
let owner = new Account(keypair.slice(0, 32));
but get this error 'bad secret key size'

Also I'd like to retrieve all pools addresses, any idea how please?
Oh okay apologies.
Please don't cross post
Hi guys.. can anyone point me in the right direction: I want to learn all there is to know about Solana clusters. The learning material under the "learn" tab has a previous and next button so I'm not sure how to proceed.
exactly what I needed, thanks üôÇ
building your own index works, but you can also call `getProgramAccounts` with filters: https://docs.solana.com/developing/clients/jsonrpc-api#getprogramaccounts
Is there a way to list programs addresses that match a constraint ? For example if I use the Name service program, how can I list a sample of registered domains ? I feel like the only alternative for now is to use a classic api to store the pubkeys
Like `sysfs` on Linux
They're more like kernel status data structures
sysvar accounts are like crates for a program to use. (Don't have to reply to me üëç  or üëé  will do)
ah ok i got it.
oh come on..
they aren't programs
can i count sysvar accounts as programs? (Don't have to reply to me üëç  or üëé  will do)
ok, thanks. will stay tuned
yep
<@!445425471027544095> thanks... the answer is "its being worked on"?
im pretty sure this is a common question, my experience with UTXO chains is that at the creation of the token, you can add a `message`  or a `description` so that we can add the relevant info to the token.
yeah prolly, at least something we can reply with a link for
I feel like we get this and "how do I register my token" 23489209348209384902x/day
Should we add a blurb to the spl-token docs about this?
<@!752722929397137452> is working on a standard for that, stay tuned
like a link for the file i want to tokenize
so, how can i attach data to a NFT?
ok
`spl-memo` is purely for attaching memos to _transactions_ via NOP instructions
surely
I don't know how you came to the conclusion that it's abandoned.  Seems more like you don't understand it's intentions
but i have to admit, i didn't enjoy the early days when it came to dev work, only started now bc i needed more apis to work with to properly index
all good. more the merrier
can someone help on this?
i am looking for a way to link data to an NFT
?
ok, so basically memo is an abandoned project>
We like the early adopters
There _is no_ binary. It's purely a lib crate.  Feel free to write your own CLI if you like, but memo makes no on-chain changes so I don't really see the utility
understandable tbh
well i joined way before that
It's a bull market, dev capture > PR throughput, unfortunately
<@!445425471027544095> but there is a link to the crates. How can i get the binaries?
all good
alright sorry for bothering u atb! thank you for the review!
haha
click on the red one sir
It's just a program so devnet/testnet deployment can be quick
cause people keep asking me questions in Discord and I can't do work üòâ
why tho
gosh i sound desperate lol
lol it's kinda blocked on my review right now
or is it pending Devnet?
btw mvines, i see that the pr is ready. When is it due for TDS?
We want to launch by 28th. So i'll have to brute my way through, then work out a cron job to handle that
But i don't think i can make it
the journey begins.
thanks bro ‚ù§Ô∏è
<@!161028871095844864> - that program metadata PR above attempts to solve some of this, but for now you simply need to hard code the instruction data decoding based on program id üò¨
because it has no binaries üôÇ
why is installing spl-memo:
``` cargo install spl-memo                                                         
    Updating crates.io index
error: specified package `spl-memo v3.0.1` has no binaries
````
Yes
Meaning to say I really have to pre-seed the programs first inn'it?
https://github.com/solana-labs/solana/blob/master/transaction-status/src/parse_instruction.rs#L104

I am aware this is the best reference, looking for an even more explicit version.
> When given a 'data' property from an instruction, what is the first step?
1.  Look at the program id for that instruction
2. Decode the data based on the program id
Less, the manual program name part which I have to work on.
Once this is solved, i can finally say my indexer is done.
Okay thank you!

Also another question: I now have a structure to dynamically support programs and its instructions.

When given a 'data' property from an instruction, what is the first step? Can't seem to find a code in the source code for a ref. Should I bs58 decode it first or something? It's unreadable (human) as of now; Like I want to find out in human-readable format or whatever the raw code is supposed to show so that I can proceed with indexing that part.
gg
https://github.com/solana-labs/solana-program-library/pull/1621 is probably what will be most useful to you once it's rolled out.  Programs have no on-chain name yet
yup np, feel free to ask more questions if you get stuck, program derived addresses are a really important concept to understand
okay, ill look into that, thanks for the help
"controlled" is probably not the best term to use there, sorry üôÇ
nope, by controlled I meant that the name service program can produce a signature for the account
By controlled, do you refer to "owned" by the program ?
got it, yeah the purpose here is that the newly created account needs to be controlled by the name service program. I recommend you read more about program derived addresses
I'm just confused why the programId is passed here if the intent is to derive a public key for the newly created account from a nonce + seeds
thanks, what part don't you understand?
ohh thanks for that info!
public keys are 32 byte numbers which can be encoded as base58 strings for us humans to use üôÇ
https://github.com/solana-labs/solana-program-library/blob/d4dd97b3b1f6c53d471daf2c56e183a3c252458f/name-service/js/src/utils.ts#L103
but aren't the public keys strings?
can you share a link to what you're looking at?
[u8; 32]
Was looking at the name service SPL example and it's used to find a registered name account public key, so i'm confused with the naming referring to a program.
what is the best data type to store publickeys?
they alllow programs to produce "signatures" for a derived address. Newly created accounts on Solana always require a signature to assign an account to a non-system program to prove you actually own the address
yes it is, `programId` is the scope for the derived program address. That method is used to derive program addresses for a particular program. Read more about derived addresses here: https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses
OK, good idea, <@466984915376799748>. Thanks.
Hey guys, i'm trying to create reproducible public key to create a registry. I'm confusing with this function:
```
static findProgramAddress(
      seeds: Array<Buffer | Uint8Array>,
      programId: PublicKey
    ): Promise<[PublicKey, number]>;
```
Having trouble understanding the usage of `programId` here. Isn't the function just iterating seeds + nonce until a valid key is found ?
for sure, btw <@!661459712604372994> we use property testing in the spl swap program to test for rounding errors and assert certain invariants to protect against flash loan attacks
I got blocked from the <#837170817850015744> channel after changing my username....

But <@!453347985628200960> , previously I wanted some way to have the compute budget returned to me (instead of just having it written to logs), so when I ran fuzz tests I can just assert that all the instructions that got executed did not exceed the max compute budget.

But now we just use anchor. So I think it an RPC call that includes the compute budget would be nice üôÇ

This was the example from ethereum's web3.js library, 
https://discord.com/channels/428295358100013066/837170817850015744/838761745182621776
Thanks. We are porting the Liquity dapp / protocal from Ethereum to Solana and we just need to think more about this.
yup, and re-entrancy is disabled currently too unless a program calls itself
There is a limit, however, as to how deep the CPIs can get ...
yeah, it's a potential attack vector for sure
any defi protocol should consider what happens when their program is called many times with big amounts
I see it as a vulnerability.
flash loans are just a way to get lots of capital
This means we have to look at all the other dapps and make sure that nobody can do a bad flash loan with our dapp in combination with the others.
ha, yeah I would say so. It's a consequence of being able to compose multiple program calls in one atomic transaction
Ah so its a feature!
> whether Solana programs can circumscribe all transactions within a block in the blockchain
I have no idea what this means..
> Basically, does Solana have the same vulnerability as Ethereum where "flash loans" are possible?
Solana can support flash loans, yes
Can cross-program invocations (CPIs) all be circumscribed within one block?
A question I asked which has not been answered yet: whether Solana programs can circumscribe all transactions within a block in the blockchain. Basically, does Solana have the same vulnerability as Ethereum where "flash loans" are possible?
interact with it.
how to i use the program?
once i deploy a program and have the program_id
hello
yes its very much needed in many applications
Greetings! I'm actually trying to seed and parse all names of all programs atm. Am aware that i should use the Name Service SPL.

Still trying to understand how I should be working with it. How do i get a program's name on-chain?
production solution, hope they integrate chainlink soon
yeah no random oracles yet, it would be great to have one
Are you after some production solution or some sort of about random for testing/fun?
There is currently no way i think to get a random number
Ohh, any other way to generate random numbers? the `rand` function from rust does not work so any other oracles?
I am pretty sure this specific thing is not integrated, was trying to use it for the last hackathon
Have a look at this mint: https://explorer.solana.com/address/7TRzvCqXN8KSXggbSyeEG2Z9YBBhEFmbtmv6FLbd4mmd. It seems the website recognized by the explorer, but I'm wondering how to add it and if there's a standard way.
Hey everyone, any way to use Chainlink VRF(https://docs.chain.link/docs/chainlink-vrf/) with solana, I know that Solana has some kind of integration with Chainlink but I am not able to find how to do it?
nope, its your own token right? If it is, the only limits are defined by you

There's a limit to the calls u can do, if you're using one of the public RPC APIs
I keep getting the following error: RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: custom program error: 0xe [5 log messages]
Is there a limit to how many tokens you can mint on the CLI?
Hi I've just deployed a contract which I minted one token and closed the minting function.
And gave this token to an other account.

How do I store metadata or links into the contract ?
Now it's an Empty NFT üôÇ

Thanks in advance
Great
Yes, its working. Thank you üëç
Is it sorted now?
Hi all, not sure where to go with this question which i have been struggling with for days now... (starter developer)

How do i get all transaction history of a publicKey ?

Web3 or Python

Tried:
connection.getConfirmedSignaturesForAddress2(publicKey)

but this only seems to return confirmed signatures from a few hours ago ?
Is this not possible in solana programs?
How would you get the address of the caller of a program?
it was my extremely verbose logging..
Program 9u7uu9kvAkWiXAwzvbcQGoL2efSzuverJerd6gGoMzzq consumed 200000 of 200000 compute units
    Program failed to complete: exceeded maximum number of instructions allowed (200000) at instruction #2825
    Program 9u7uu9kvAkWiXAwzvbcQGoL2efSzuverJerd6gGoMzzq failed: Program failed to complete
hi, running into this issue on devnet
and what are each of these supposed to do?
for token-lending, there are a couple of initializing functions:
- init_lending_market
- init_reserve
- init_obligation

what's the correct order to initialize a new token-lending deployment?
Hey, the new COPE token has the wrong decimals on the token-list, would be amazing if someone can review and merge https://github.com/solana-labs/token-list/pull/194
where to get the message from msg!() macro output in program ?
7 month old, how daring
Also use IDE or even typescript, you would have found out in 5 seconds
I copied the dependency from somewhere else which was pointing to 0.0.13
https://www.npmjs.com/package/@solana/spl-token 0.1.4
What is the latest?
I think this is the problem, i have a older version
This was added 3 months ago but i doubt you have such an old version
Which version of <@832686202074300446>/spl-token is it?
should I do this in the program rather than in the UI?
hi, I'm trying to create (in typescript) an account that was generated from a PublicKey.findProgramAddress() with a seed.  If I use SystemProgram.createAccount() or SystemProgram.createAccountWithSeed() it keeps failing because the transaction is not singed or partially signed by the new account. However the new account does not exist yet, it doesn't have a private key so I can sign it.
I just replaced the same line of code with `createAccount` and it works ü§∑‚Äç‚ôÇÔ∏è
maybe look with a debugger what happened to the mintXXXX object
well i don't know this looks alright
<@831450660146642974> üëÜ
`mintXXXX = await Token.createMint(
    connection,
    payer,
    mintAuthority.publicKey, // mintAuthority is the mint authority
    null,
    2,
    TOKEN_PROGRAM_ID,
  );`
mint was created using this code below
`let userTokenAccount = await mintXXXX.createAssociatedTokenAccount(userWallet.publicKey);`
Yes, let me share
Okay, thanks <@!831450660146642974>.
Solana season hackathon: "Jumpstart your next project on **Solana** & join the fastest growing ecosystem in crypto"
eh, yes?
The question was is using Solana blockchain a requirement for the current hackathon?
I am using this very function myself so must by a tiny mistake on your side
Odd do you have the code snippet?
Guys, I am getting a weird error. I am trying to create associated token account for a given mint and I get this javascript TypeError saying `createAssociatedTokenAccount` is not a function. I have been successfully using `createAccount` function on the same mint object though.

Essentially `createAccount` works but `createAssociatedTokenAccount` is not working.
Maybe do not cross-post and rephrase, what is the question?
Does anyone know if using Solana services are a requirement for the Hackathon?
```
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UiTokenAmount {
    #[prost(double, tag = "1")]
    pub ui_amount: f64,
    #[prost(uint32, tag = "2")]
    pub decimals: u32,
    #[prost(string, tag = "3")]
    pub amount: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub ui_amount_string: ::prost::alloc::string::String,
}
```

Just a curiousity-related qn, why do you guys direct 4 parameters to the same thing in this struct?

Interesting revelation while writing my code
Quick question.
ah sheit. I wasn't using any wallet, that's why it was failing...
Do we have to use the Solana SDK?
Does anyone know if Solana services are required for the hackathon?
That one's not me...  The default wallet one
I've tried absolute path, same. I was following the instructions for solana/break, let me try out the `example-helloworld` and I'll get back to you
How about my suggestion there?
nope
Is this you? https://github.com/solana-labs/solana-program-library/issues/1743
If I use the anchor state struct (https://project-serum.github.io/anchor/tutorials/tutorial-4.html#clone-the-repo), how can I get the seed and nonce for the account of the state so that I can use it on `invoke_signed`?
I'm having trouble with deploying any program to the local node, getting `Error: Dynamic program error: No such file or directory (os error 2)`, although the program is actually there. What am I missing?
Thanks!
https://github.com/solana-labs/token-list#adding-new-token
What's the appropriate way of assigning metadata to an SPL token? Like the icon, website, etc. to be displayed by the explorer as well as various wallets (Sollet/Phantom) ?
do we have to incorporate solana blockchain for the hackathon NFT track?
Hey guys
May I know the difference between Wrapped USDT, USDT and similarily Wrapped USDC and USDC ? 
The mint addresses are different. It is so confusing into what is actually the correct token to use?
its also first thing on https://spl.solana.com/token-swap
I am looking for Dev to join with me on Sol Swap building please let me know if anyone interested
It's like... first thing in the README
Thanks, but I didn't found the swap program id in `project-serum/swap` repo, do you know where can I find it?
Listed in the readme on the git repos https://github.com/project-serum/serum-dex
Morning guys! We are building a multi-chain lending protocol, which has been successfully deployed on ETH BSC Heco and OKExChain with TVL peaked at 1.1B a week ago. We are considering to launch this on Solana. Our code has carefully been audited by Certik https://www.certik.org/projects/flux, and we're welcoming rust dev to join us to bring this to Solana ecosystem. DM me if you are interested!

Recent plans: https://01-flux.medium.com/flux-v2-is-on-the-horizon-could-this-be-the-end-of-the-over-collateralization-era-d018ba452840
Hi, does anyone know the program id of serum swap and serum dex on devnet?
sorry for the ping I'm just adding this so that if other find the issue they can solve it faster
I fixed my issue about `ld.lld not found`. Its similar to this comment im replying to .What happened is that I had to reinstall the solana tools in `~/.cache/solana` For some reson these were missing some binaries present in the tar it downloads.
Hey may i ask how arrayref works?
i don't understand how that works in doc
got it:

```
        let seeds = [
          pk.toBuffer(),
          new anchor.BN(0).toArrayLike(Buffer, 'le', 8),
          new anchor.BN(0).toArrayLike(Buffer, 'le', 8),
        ];
```
Yeah I was using the solana sdk only previously but felt frustrated from time to time.
how would you model this function in javascript/typescript using web3js `PublicKey`? having troubles reproducing the same results off chain:

```rust
pub enum Seed {
    SeedOne = 0,
    SeedTwo = 1,
}

pub fn derive_seed_address(
    authority: Pubkey, 
    program_id: Pubkey, 
    index: u64, 
    seed: Seed,
) -> (Pubkey, u8) {
    Pubkey::find_program_address(
        &[authority.as_ref(), &index.to_le_bytes()[..], &(seed as u64).to_le_bytes()[..]],
        &program_id,
    )
}
```

this produces a differnet result than what i get on-chain

```typescript
    let [key, nonce] = await anchor.web3.PublicKey.findProgramAddress(
      [pk.toBytes(), new anchor.BN(0).toBuffer(), new anchor.BN(0).toBuffer()],
      myProgramId,
    )
```
anything but based rust developer == anchor
i would only bother with solana sdk if you're a based rust developer
anchor 10000000000%
Do you guys suggest using anchor to build the on-chain program or just using solana‚Äôs sdk?
I'd like to try this from C. I can see there's `sol_get_clock_sysvar` etc. in syscalls.rs. What would the C function declaration (e.g. for the clock) look like?
will the start of this be recorded? will be unable to watch the first ~20 minutes
You create a telegram and say how great your token is
how do you assign value to tokens once they've been minted?
Starting in 1 hour!

https://twitter.com/PythNetwork/status/1395436323050192901?s=20
thanks
https://discord.gg/EDvudv6
Serum folks probably know more about this than I do
https://github.com/project-serum/sol-wallet-adapter
I am using the walletAdapter so it's not specific to phantom
let instr = SystemProgram.createAccount({ .. });
const transaction = new Transaction().add(instr);
sign it and sendRawTransaction
Are there any docs for the phantom signing stuff?
hey, I am still not sure how to crack this. I'm signing a single transaction, that's it..
`rm -rf /home/ubuntu/.local/share/solana/install` should do it
Dont worry  I'll try to re-install and pray to god it works
I have this error and no idea how to proceed
error: linker `/home/ubuntu/.local/share/solana/install/releases/1.6.9/solana-release/bin/sdk/bpf/dependencies/bpf-tools/llvm/bin/ld.lld` not found
how do i uninstall solana
cool beans
Great, feedback is welcome
Whatever it is we will test on devnet first
Maybe 1mo
No, maybe 1.5mo
Cool, try it out on devnet/testnet, would like to see a bit more use there before enabling it on mainnet.  Do you have specific timing requirements on mainnet?
Do you know when this might go to mainnet?
Great, I actually don't need documentation if I have this
<@!748249199606497502> In the mean time here is an example: https://github.com/solana-labs/solana/blob/a1a0d6f84b30ecea1fd1b699aa3cd6ab2741db77/programs/bpf/rust/sysvar/src/lib.rs#L32
Amazing thank you. Every account I can avoid passing in is important savings to me
<@!748249199606497502> I'll also add docs to docs.solana.com
Yup, sounds good
<@!453347985628200960> - wdyt about updating https://github.com/solana-labs/solana-program-library/tree/master/examples/rust/sysvar/src to include demonstrations of the sysvar-as-syscall support?
I'm just building for devnet anyway so this is exactly what I was looking for
Ping <@!453347985628200960> a lot üôÇ
How would I find documentation on this?
https://discordapp.com/channels/428295358100013066/517163444747894795/845065502254432288 Can someone tell me if this looks like a dangerous mistake or me hallucinating?
I did put a question mark, which does not warrant for absolute certainty
no it's important to reward speed
ahah thanks, just kidding
hey, was just about to say that!
you can get sysvars "dynamically" now on testnet/devnet
Why does he get "100" i replied 1 millisecond before
soon you won't have to üôÇ
I was trying to avoid passing in the lcock lol
I was hoping to avoid passing in another account
are you the real <@!748249199606497502>, thought you would know that ü§î
yes, from the clock sysvar
https://docs.solana.com/developing/runtime-facilities/sysvars with the sysvar account?
Public and private have had this issue I think
Is it possible to get the current slot from inside a program?
the folder has clang but not ld
Am i missing some dependency
Does anyone know who can help me with this?
No idea how the signing interface on Phantom works, but it sounds like you're signing the wrong payload
```
error: linker `/home/ubuntu/.local/share/solana/install/releases/1.6.9/solana-release/bin/sdk/bpf/dependencies/bpf-tools/llvm/bin/ld.lld` not found
```
I'm getting this error wth both the C hello world and Rust hello world
Any SPL Token multisender?
however I click on Approve on the Phantom wallet so it seems I am signing it
hi, I am trying to create an account using SystemProgram.createAccount and signing the transaction and I am getting "Signature verification failed"
It is fine for light UI usage but for any automation that needs reliability a private node is much better
Because many weird things occur just through its overloading
and are you using the public rpcs?
yes it returns a signature
What is the RPC saying about the transaction? Did you get a signature?
the transaction doesnt fail, looking up the tx on a a block explorer shows "not found"
Go missing where? Is the tx failing?
A search tells me it is referenced only here and in token-test loadProgram, doesn't seem right but maybe I am missing something?
Is this a bug?:
spl ci uploads to cache target/deploy/*.so
but for js-test-token it downoads from target/bpfel-unknown-unknown/release
https://github.com/solana-labs/solana-program-library/blob/master/.github/workflows/pull-request.yml#L156-L160
Will do!  Thanks for pulling it out into its own
<@!453347985628200960>  and <@!814228493302497301> can you take a look at my PR for adding a blake3 syscall please. `https://github.com/solana-labs/solana/pull/17358`. Thanks.
Just figured out the solution to this: run the CLI with `RUST_LOG=debug` prepended
Each transaction I send I fetch a recent blockhash and include that with the transaction, send the tx, sleep for about 250ms, do another such iteration using a different rpc and then sleep for 125ms, repeating this whole process.

Such a pattern in ethereum works fairly flawlessly but it seems highly unreliable in Solana
Does Solana have some problems handling async sends of spl token transfers?

It seems like doing this results in a small % of transactions that go missing
Trying to compile Solana on a 32bit machine would be fun for some laughs and nostalgia I guess.  Why not 16 bit üôÇ
I suppose people may try to use my struct definitions from a 32bit machine and it would be wrong
from within a BPF program, yes
ok so I can safely assume `usize` is 64bits
BPF VM is a 64bit VM, yeah
Is the Solana runtime guaranteed to be 64bit system?
Hmm. So it seems that when you add a custom token to Sollet.io, the recieve address that is shown is not the associated token address
Awesome!  I'm glad  you got it going.  Hopefully your comment can get the SPL Associate Token Account support PR unblocked in the solana-py repo
hi, does my SOL account belong to the token program id? Same program id that I would use to generate a new token?
Thanks, <@!585868308419444749>. After talking to you guys, I managed to figure it out. Left a comment on that ticket as to how I performed a workaround. Everything is working, feeling a huge boost now, thanks for the help, man!
<@!282393099618222080> here's that issue I mentioned at lunch. https://github.com/solana-labs/solana/issues/17106
Yes, it is very possible and the way everything is done.
I've determined the issue is with the destination address. The transaction will go through if I try to send it to myself
Maybe not a strict dev question, but figured a decent place to find pointers. Is there any good documentation on the proof of history stuff? I.e. how it works/is intended to work? I have read the original Solana WP but it's not entirely clear to me just from that, so either I just don't get it, or there is some other doc that would perhaps make things a big more concrete/clear. Short of 'read the entirety of the source code and construct a model in your head of what it does'....which can take some time for any moderately complex system üòõ
Basically, I am doing the following 3 lines:   `this.connection = new solanaWeb3.Connection('https://api.devnet.solana.com');` ` this.token = new Token(this.connection, new solanaWeb3.PublicKey(this.TokenMintAddresss), new solanaWeb3.PublicKey(this.TokenProgId), keypair);` `this.token.transfer(source, destination, account, [account], amount).catch(err => console.log(err));`
if you have questions about the JSON RPC API, feel free to ask too
i can work with this - thanks
`RPC response error -32002: Transaction simulation failed: Error processing Instruction 1: custom program error: 0x2a [10 log messages]`

^ I've identified which error 0x2a is (error 42). There are few places in the program this error can happen, and they all call `msg!` before they error. Would that be in those `[10 log messages]` and is there a way to see them?
Do you like what you see on https://explorer.solana.com/ ?  That source is open, under https://github.com/solana-labs/solana/tree/master/explorer
can you share the transaction details? seems one of the accounts is incorrect
I keep getting this error when trying to transfer tokens.` Transaction simulation failed: Error processing Instruction 0: invalid account data for instruction 
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [1]
    Program log: Instruction: Transfer
    Program log: Error: InvalidAccountData
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 2259 of 200000 compute units
    Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA failed: invalid account data for instruction`
is there documentation for the Token JavaScript API? https://github.com/solana-labs/solana-program-library/tree/master/token/js
Yes. I so serum nft marketplace, but lost the link and can't find it. I want to see if they have standard
Exactly - we need standards - form an ISO committee.
I just wonder if there will be nft marketplace in the ecosystem how will it operate if each guy has his own nft standart
Think you could just use a derived account (mint, 'meta_1') -> meta account address
But if there is a standard way, want to use that.
Same questions, I don't know the answer myself
1) I notice Sollet wallet is showing a "meta data account" against token accounts -- where is that standard defined?
2) Probably you want the meta data against the Mint, rather than the token account -- is there a standard for that?
https://twitter.com/solana/status/1395466687315681287?s=20
Yes, this
yep -- they're using libsodium in python and dalek in rust
what "NFT token"?
Is there a good pattern for attaching metadata such as name, description and imageUrl to the NFT token on solana?
https://github.com/michaelhly/solana-py/pull/56
Relevant to my inquiry -- appears I will have to find a different ed25519 validation algorithm on Python.
Can a Solana program constrain its transactions to all occur in a single block (I mean the blockchain block)? I am looking into whether flash loans can also be possible in Solana.
I'm forking [michaelhly/solana-py](https://github.com/michaelhly/solana-py) to include an interface to interact with SPL Name Service, and running into trouble creating program accounts that are accepted by the smart contract as valid. The issue boils down to ed25519 validation -- it seems if you run the same input against the ed25519 point validation function from the Python repo, it yields different True/False results than occurs in the Solana web3-js library.

Anyone else working with creating program addresses? Seems like I need to find a different ed25519 validation on Python?
Hey.  Is it possible - using the web3 SDK - to have one transaction consisting of two instructions in which the first instruction creates an account that is used in the second instruction?

I'm Asking because I'm running into an error where the account that was supposed to be created in the first instruction gets to the second instruction with the wrong owner i.e. it says its owned by `11111111111111111111111111111111` instead of my program.

Am I thinking about this the right way?
Hey, has anyone tried Figment.io's Solana Node/RPC service? https://figment.io/resources/build-your-solana-application-faster-with-datahub/ I'm trying to interact with some endpoints, but when I provide a JSON object as my parameters, the endpoint tries to parse it using JSON.stringify() and it fails (Unexpected token o in JSON at position 0), and when I provide stringified JSON it complains that I didn't provide an object (TypeError: must be an object, array or omitted)
Is there a query I can make to get the epoch schedule/estimator similar to the one of Solana Beach. I have an idea of what two queries I could potentially use but am unsure on where to begin
Guys, what is native solana token account address?
Gotcha. I'll debug this to understand how it works and maybe make a proposal to improve
ideally the error is more transparent, it's not fun to debug these types of errors
When signing a transaction with several keypairs, I'm getting an opaque `'Transaction::sign failed with error KeypairPubkeyMismatch'`. Running with `RUST_BACKTRACE=1` or `=full` doesn't provide any more useful context. As a general thing, is there a way to see what the expected pubkeys are in order? Then I'd be able to find where the input is wrong


///////////////////////////////////////////////////////////////////////////////////////////////

Guys can someone help.I am a newbie,little help would be appreciated
<@!161028871095844864> - but check out this function, https://github.com/solana-labs/solana/blob/22a18a68e3ee68ae013d647e62e12128433d7230/cli-output/src/display.rs#L160, that `solana confirm -v <tx_sig>` uses to decode instruction data.  This is actually what'll help you I think üôÇ

specifically, https://github.com/solana-labs/solana/blob/22a18a68e3ee68ae013d647e62e12128433d7230/cli-output/src/display.rs#L239-L263, which is pretty close to your screenshot
<@!161028871095844864> - oh damn, I think I mislead you.  You want to decode instruction data, not accounts.
The screenshot you showed is good for that
This is the same crate that JSON RPC uses to decode instructions.  As we add support for more programs over JSON RPC, their instruction decoding would almost certainly be added to this crate
thank u so much i've been wasting 3 days of my lifetime
facepalm dude
this is
Why not use the existing solana-account-decoder crate?  https://crates.io/crates/solana-account-decoder

https://github.com/solana-labs/solana/blob/a7870cda8df2c8e73e7c08c8bfe88d7c0a7de1cd/account-decoder/src/parse_vote.rs#L8
Is this too lean to dynamically parse instructions?

program_account: &crate::models::accounts::Account,
data: &[u8],
accounts: Option<&Vec<Pubkey>>,

1. For accounts, should I take in AccountInfo instead?
lol
You can DM me here or on telegram <@257245326551810048>finance
The runtime will set the `is_signer` boolean for all addresses that signed the transaction.  It's ok for the program to trust the runtime performed the necessary signature verification checks

eg, https://github.com/solana-labs/solana-program-library/blob/ed0389f70857c8f13a806c191e76e1cbe14d8ecd/token/program/src/processor.rs#L758-L760
Hi Guys I‚Äôm looking for a freelance dev to migrate our protocol from Ethereum to Solana
programs have no access to the message signature right? if we want to use it for something we have to accept it as an argument and hope they didnt lie to us?
will check though
you can just copy paste it into the new Account([1,2,3])
hmm I don't think it's that
if you copy your key from the keypair json
so you have those two characters to account for
this ui is removing the [ ] brackets
ok so I figured out that the 88 char string is a base64 encoded format of the private key - however decoding this results in a uint8 array of length 66 rather than 64.
Note I can do this on rust side. My issue is in js side.
If I my program data contains an array of some struct and i use the borsh-js serializer in client side how can I serialize/deserialize an array of some type? Or even without the borsh serializer.
will check that out, thanks!
or, I think you can just do new Account([...bits])
check this https://github.com/paul-schaaf/escrow-ui/blob/master/src/util/initEscrow.ts#L20
why do you need lendingMarketAuthority after all?
hi, can someone explain a little bit what is the difference between the lendingMarket: PublicKey and the lendingMarketAuthority: PublicKey in the token-lending program? Afaik, lendingMarket is just a data account and the lendingMarketAuthority is the master account owner of that entire lending market?
I'm trying to sign a transaction - I've exported my private key from Phantom, and I'm struggling to create a Keypair object from it (it's an 88-character string).  Any hints?!
3 days of reading SPL‚Äôs source code made me realise I was understanding the actual data struct of SPL entirely instead of my goal..
Thank u saviour
yep!  the transaction instruction data is just a binary blob, the struct of that blob is defined by the program that the instruction is for.  To decode it, you just need to read the bits and unpack them according to whatever program it is
I'm still confused about this for the past 2 days.. goodness. forgive me for being slow im just overflooding myself with solana's structs for the entire month.
Just wondering, is there any reason why the delegate of a token account must specified as another token account?
i.e. Could it be changed/implemented to specify a SOL address instead? (for lack of a better word, I mean e.g. the token account's owner)

https://github.com/solana-labs/solana-program-library/blob/26560daae234bc3e00c08a2f2c8d81d1c2f41498/token/program/src/processor.rs#L198
Correct me if I'm wrong, AFAICT it's not possible to send token transfer from a delegate right now because the delegate is checked for ownership, but since the delegate is a token account, specifying the delegate owner != match.
am I supposed to just base58/64 decode to read it?
ok cool!
I realised i was going on the wrong path the moment i read the code multiple times the entire day
My bad mate i realised this 2 hours ago, I'm just trying to interpret ```data```
Thanks , what is rpc and how to make it faster?
not right now. account writes are all or nothing
hm there probably isnt a good way to maintain a mapping that doesnt require writing the entire thing back to the account on any change huh
ah, yep. üòï
nice, I guess the js library is lacking some features re. staking, I also don't see the merge instruction there
perfect, will give that a try, thanks!
Why would you want to?  The runtime does this for the program automatically?  Are you trying to write a test?   There's a MockInvokeContext that can be used for this (but if you use the program-test framework then even then it's unecessary)
yes it's possible.  Here's the rust form of creating such an instruction: https://github.com/solana-labs/solana/blob/master/programs/stake/src/stake_instruction.rs#L280
That'd be a nice feature actually.  You can simulate this though by creating a large stake account (with more than 25% of the stake currently held by the test validator), and delegating it to the test validator.  This'll cause a stake warmup to occur as no more than 25% of the stake can change during an epoch
it would be hilarious if we're congested, crypto might've taken over banks by then
the rpc nodes got overloaded, the chain itself was fine
Dear developers, I have remark and question,

Greetings from Netherlands,

I am sol holder form the start just because of team and tech behind it. However, I hear from Serum and Raydium IDOs, sol blockchain congested. And that was the only IDO at the specific time and date. I thought, SOL blockchain can handle but obviously could not. Please explain me, because while this low prices, I can move my assets to another platforms.

Thanks.
why is `create_account` in solana sdk deprecated? my guess is to encourage the client to create the account and submit it to the program as an argument but doesnt it make more sense to let the program size storage it intends to write to itself?
How do you prepare an InvokeContext to process an instruction?
How come newStake needs to be a new keypair instead of being derived from the same authorized  https://github.com/solana-labs/solana-web3.js/blob/master/test/stake-program.test.ts#L474
Hello guy, I encountered so many error: Transaction was not confirmed in 30.00 seconds. It is unknown if it succeeded or failed. Check signature xxx today. What happen?
is it possible to split a staking account into another account derived with seed? looks like both the cli and the js lib need the new account to be not derived
Hello guys, do someone know why the transfer command are failing on my local with log of `Error: missing signature for supplied pubkey:`
Any answers guys?
is there a way to adjust the warm-up/cool-down periods in the test-validator (I'm already adjusting the epoch duration), everything seems to happen instantly on the next epoch
Is the merge instruction missing from web3.js? https://github.com/solana-labs/solana-web3.js/blob/master/src/stake-program.ts#L395
so you don‚Äôt launch the local cluster, but do you actually run your code?
I dont have to utilise the CLI at all because im writing code all the time
I have my own version of solana's sdk working fine with M1
oh it‚Äôs a different one lol, I‚Äôve opened this one : https://github.com/solana-labs/solana/issues/17406
I opened a ticket:‚ÄØhttps://github.com/solana-labs/example-helloworld/issues/200
<@!161028871095844864> earlier you mentioned you didn't get solana-test-validator to work. So are you just developing with devnet and stuff?
I am building my own app and I "borrowed" the explorer types and it looks alright
I‚Äôll try to build from source
I cannot just reinstall everything right now üôÇ
fresh install of what? solana or my mac? I have two brews as mentioned, and two terminals, one with Rosetta the other without
i have both architectures of macs so i usually jump around
but that would mean that a fresh install is the best option
didn't touch a single Apple Silicon binary
i simply used an intel-based homebrew
yeah I wasted about a whole day too :/
in the documentation it should be mentioned it‚Äôs not compatible with M1 so people don‚Äôt lose time on it like me
:/ hopefully they fix it soon, I don‚Äôt have a non-M1 anymore
would love to use my m1 tho, my non-M1 is super slow when I have too many tabs open
non m1
gave up, you mean switched to non-M1 or gave up on dev solana?
what exactly did you do to make it work on M1?
<@!161028871095844864> I‚Äôm using both brew flavors, and this is indeed with Rosetta 2
Can the staff team disable members and devs from messaging in <#749059399875690557>
<@!564630042693599276> Hey chuck can u ask stuff here instead?
I had this issue too, then gave up lol
thats the easiest way to get it up running. I used to be able to do that when i had my M1 MBP. After switching to a MBA, i didn't install any x86 stuff.
i suggest you install Intel Homebrew
‚ûú  openssl@1.1 git:(stable) arch -arm64 solana-test-validator
arch: posix_spawnp: solana-test-validator: Bad CPU type in executable
for me i only got till here
nope
<@!161028871095844864> are you able to run the "solana-test-validator"?
‚ï∞‚îÄ solana --version                                                                                 ‚îÄ‚ïØ
solana-cli 1.6.9 (src:9e42883d; feat:2960423209)
it says merged but I‚Äôm on the latest version and still getting the error
I found this ticket too, pretty old and no updates: https://github.com/solana-labs/solana/pull/16346
but now I get the illegal hardware instruction error
I solved the openssl issue, by linking it indeed
u need to map your M1 openssl to the /usr/local/opt side

<@!161028871095844864> I‚ÄØcannot build anything on M1, i get the "illegal hardware instruction" error
whats up?
Here
After running solana program show program_id,I get programdata address and other related info.Docs say it is the account associated with program account that holds programs data.What is the program data .And what does program account hold actually then?
Screenshots show I have enough, but I get this error when calling init_lending_market. Any ideas why this might be happening?
I'm running into an issue where an account is created with enough lamports to be rent-exempt, but I still get a rent-exempt error when trying to run program code
Hi..I am just starting into solana .Coming from Ethereum background.I was looking into docs and one place I am confused is the difference between program id and program data account.Whats the difference and which one needs to hold SOL as rent?also I created a program on Devnet and program id and program data account seems to possess balance.Where did that come from?
The computing environment seems to be too restricted to support that properly. See for example https://docs.solana.com/developing/on-chain-programs/overview#heap - much of the C++ standard library assumes that there's a general purpose memory allocator available that can properly free allocated space. It would be nice though if we could use the parts of the library that don't depend on such things to work, for example the <array> header, but they may be too entangled with the rest to isolate them easily.

That said, I think it's better to think in terms of working directly with persistent storage (i.e. account data). A lot of people seem to be stuck in a "deserialize/modify/serialize" mindset; I find this wasteful. In the C++ community, I'm aware of some attempts of people trying to create custom std::allocators to use std containers in persistent storage, but those that have tried have given up eventually and just implemented their own classes instead.
I'd have to dig into the explorer code some more, but I wonder if it only shows "active" stakes and not "activating" stakes
However, for the explorer one i am correctly on testnet
Solved, that was my mistake. I was looking on the wrong cluster for the RPC query
Huh, that's really weird, it should have the same layout since it's `Initialized(Meta)` vs `Stake(Meta, Stake)`.  Very strange ü§î
But in cli
```
Balance: 1 SOL
Rent Exempt Reserve: 0.00228288 SOL
Delegated Stake: 0.99771712 SOL
Active Stake: 0 SOL
Activating Stake: 0.99771712 SOL
Stake activates starting from epoch: 193
Delegated Vote Account Address: 3WNXVMAVmS8LPsyDKGiezvEs9iRZq947F58esZ8CqhVy
Stake Authority: 7Bkt63YhudeqAr2j3rkxvhibtWSoXuA87jMo613fHq7s
Withdraw Authority: 7Bkt63YhudeqAr2j3rkxvhibtWSoXuA87jMo613fHq7s
```
What is this weird bug? in this transaction I delegate https://explorer.solana.com/tx/2XGPRwo3C9VMmqgiSSw8RgG7Wj7f1G4NMDrUTaTFEVDSdQt9akEXYEQ2Z89cawvrFVpihFoJFNgk1D1xzECvQBcd?cluster=testnet
But if i click on the stake account it says "Not delegated"
I'll have to add more filters
So the enum is shifting the things in the account data or something like that
This fails if the stake is not delegated/activated it seems
anyone on MacOS M1 here?
jepp
Looks like you have not installed build-essentials üôÇ
also try sudo apt install build-essential
<@!400907772104802314> make sure you got rust installed successfully
I‚ÄØcannot run the "solana-test-validator" on M1?

Can anyone help with this please (MacOs M1) :
Hi friends
All the samples gave things like ```&mut MockInvokeContext::new(keyed_accounts),```
i spotted that but was confused as to how i should create an InvokeContext
Hello,
I saw your different conversations about nft, so currently nfts are not based on blockchain if I understood correctly? The data (like images) are stored in centralised databases?
Thanks for your answers
Please help I am stuck
How to solve this one ? I have already installed essentials
thank you for the drop lol
You've got SOL
BoKoEncbwHSPakEFzB9nGCHieFVKTZ1e2PcERKf5erYG
Gimme your address
Dunno then
also tried a vpn
no, just attempted to airdrop
Were you abusing it?
It's rate limited.
damn, is there any sort of spam filter on the RPC? maybe my ip is blocked
I'm also not aware of any private ones, but I'm sure there are some üòâ
No public ones that I'm aware of
is there possibly an alternative rpc for devnet?
üò¶
Error: connection timed out every attempt
wfm
Is devnet airdrops having issues?
This is the real one https://github.com/solana-labs/solana/blob/51178ccb33a0663dfc3a1dc8c8d247d9fe57005e/programs/vote/src/vote_instruction.rs#L278
'cause it's a test stub. https://github.com/solana-labs/solana/blob/51178ccb33a0663dfc3a1dc8c8d247d9fe57005e/programs/vote/src/vote_instruction.rs#L341-L366
Its from there, I was wondering why the accounts are being symlinked with sysvar accounts.
https://github.com/solana-labs/solana/blob/51178ccb33a0663dfc3a1dc8c8d247d9fe57005e/programs/vote/src/vote_instruction.rs#L366
Dunno where that's from, but I'm nearly positive that's building accounts for test vectors, not real code
hmmm, you can say so
why do we have to do this before processing an instruction?

```
let mut accounts: Vec<_> = instruction
        .accounts
        .iter()
        .map(|meta| {
            RefCell::new(if sysvar::clock::check_id(&meta.pubkey) {
                account::create_account_shared_data_for_test(&Clock::default())
            } else if sysvar::slot_hashes::check_id(&meta.pubkey) {
                account::create_account_shared_data_for_test(&SlotHashes::default())
            } else if sysvar::rent::check_id(&meta.pubkey) {
                account::create_account_shared_data_for_test(&Rent::free())
            } else if meta.pubkey == invalid_vote_state_pubkey() {
                AccountSharedData::from(Account {
                    owner: invalid_vote_state_pubkey(),
                    ..Account::default()
                })
            } else {
                AccountSharedData::from(Account {
                    owner: id(),
                    ..Account::default()
                })
            })
        })
        .collect();
```
you wouldn't be able to use libraries stated in the restrictions.
So does this mean that rust is encouraged instead of c++?
Im trying to use it but I'm getting compile errors
yes
https://docs.solana.com/developing/on-chain-programs/developing-rust#restrictions
For onchain programs?
Hello guys is it possible to use libstdc++ at all with the makefile?
https://github.com/solana-labs/solana/blob/51178ccb33a0663dfc3a1dc8c8d247d9fe57005e/programs/vote/src/vote_instruction.rs#L366

Can i use this as my base for deriving a vote instruction struct
in token-lending, what's the diff between process_deposit_reserve_liquidity vs process_deposit_obligation_collateral?
C devs are also cool, though it also might get rough bc there are more philosophies into rust's design. golang devs might have friction picking up rust
not really, and yes rust is tough to find but C++ devs are fine as well. Even though i last touched C++ 4-5 years ago, it only took me a few days to pick up rust
So Rust isn't a requirement? Because that's what I was originally planning on hiring for. But it was difficult finding Rust developers
got it, thanks
Not sure if there are more language SDKs.
up to you. You can either hire non-native lang devs to build your own wrapper around the RPC APIs/WS APIs and then build the wallet or use C/Rust or JS to build your wallet.
What programming language would we need if we're trying to hire a couple developers to build a Solana wallet ?
The `Instruction::data` field is the enums serialized to a byte array
gosh
bro i've been 20hours/day at the entire source code for 3 weeks
i think im nuts
i think trent
I don't speak IDE.
They as in the enums
"They" ?
Seems to me they're all accepting VoteInstruction not Instruction tho
Which uses bincode to deserialize here, https://github.com/solana-labs/solana/blob/master/sdk/src/program_utils.rs#L11-L15
thank u so much
nvm on it!
limited_deserialize was exactly why im so confused like I have to figure out how to gather some stuff
damn it
https://github.com/solana-labs/solana/blob/master/programs/vote/src/vote_instruction.rs#L298 here their data is decoded
lol forgive me for being dumb
im stuck there for hours
You can see in the attributes that they derive `Serialize` and `Deserialize` from serde
Vote instruction are defined here. https://github.com/solana-labs/solana/blob/master/programs/vote/src/vote_instruction.rs#L55-L56
im seeing you everywhere. i've been reading hundreds of files for days
how would i come about this? Thanks guys... I indebted to yall

for a start, just to read a vote program's instruction! I'll do the rest on my own
yes thats right
Entrypoint is for execution, not parsing
not sure I follow. All accounts have an owner ‚Äî that is, the program that controls them.  The system program controls accounts by default.
`solana-stake-accounts new ...` on completion does not display anything, I would expect the tx signature like some other commands. Is that normal?
reading the docs again and again, im still not sure how I would be able to read an instruction. Like lets say if I know it belongs to vote program, am i supposed to use the vote program's entrypoint to kickstart?
Ok in retrospect to supporting entities heterogeneously, can I consider accounts to have these types:

1) Normal
2) Program
3) SLS

I suppose thats all right?
Const slot-local-storage would be more accurate
Can i infer sysvars as if they are shared data onchain?
cool, fixed thanks
Give yourself the `Community` role in <#796351569921703946>
I cannot type in <#836969024130777118> is that normal?
It's just one
Oh lol nevermind, ignore me. I misunderstood what was happening
on the command line I can create 100 different tokens and wrap SOL in them. So we can have WSOL-A, WSOL-B, WSOL-C, etc
it just provides a common interface for SPL Tokens and native SOL, so that programs can be written generically to support both
yeh it is just 1? not sure what you mean otherwise
I guess flexibility is always good, but I'm trying to imagine the use-cases
wouldn't we just need one WSOL token for that rather than ability to wrap SOL in any possible token?
Thank you great, yes i have the cli
assuming you got the cli
yeh
`solana address -k <your file>`
I have a private key in a .json, is there a direct cli way to get the public key for this private?
Wonderful, thank you üôè
to use it in programs that work with spl tokens (ie token swap, serum, etc)
https://spl.solana.com/token#example-wrapping-sol-in-a-token
What is the purpose of wrapping SOL inside an SPL token? Never heard of this until I looked at the cli
is the merge-stake operation available in the web3.js lib? I don't see it, but the split operation is there. Thanks
No not at all, thank you for taking the time and fix my issue
sorry to hear you got so stuck on this, fixing this issue should prevent this from happening again: https://github.com/solana-labs/solana/issues/9316
<@!445425471027544095> Cool!, thanks.
Thanks for clarifying
<@!752722929397137452>  is working on an NTF metadata standard
<@!445425471027544095> thanks! I am not really sure what I would use a memo for in practice I guess. I've strolled around Solana explorer and seen people use memos...without really getting the point I guess. Regarding the NFT, what would be a good way to associate some immutable, small, piece of metadata with the NFT? For `ERC721` you have something such as `tokenURI`.
There isn't a full stdlib available, but you can check out the header files in the `~/.local/share/solana/install/active_release/bin/sdk/bpf/c/inc` directory to see what's there.
Let me buy you a SOL beer <@!466984915376799748> , for the effort
thank you very much sir
days <@!466984915376799748> .. days...
mother of god
hmm try https://api.mainnet-beta.solana.com to see if it returns anything
<@!466984915376799748> https://solana-api.projectserum.com
I meant which rpc url are you using?
?
#include "string"
How can I use
memo program is when you want to associate a memo with a specific transaction, such as an NTF transfer perhaps.  It doesn't associate data with an account
What is a good use case for the memo program? Say I'd like to create an NFT with a small piece of metadata. Would that be doable with memo or would I store it in a data account? I'm a noob around here üôÇ
```
/usr/include/c++/9/string:38:10: fatal error: 'bits/c++config.h' file not found
#include <bits/c++config.h>
```
but I get this
```
#include "/usr/include/c++/9/string"
// solana program

```
I'm including the string library
but maybe others
ok
sorry don't know
How can I use stdlib with solana
hi
HI
but both seems to return the same so i am missing a key element here
https://michaelhly.github.io/solana-py/api.html#module-solana.rpc.types
or this one in python
@solana/web3.js@0.92.0/lib/index.iife.min.js
which api are you using?
Balance
{'id': 2,
 'jsonrpc': '2.0',
 'result': {'context': {'slot': 79467186}, 'value': 707826080}}
CONFIRMED Signatures
{'id': 3, 'jsonrpc': '2.0', 'result': []}
because now my response is empty at the moment
i'm sorry <@!466984915376799748>  but could you explain this a little for me .. where do i get the earliest signature from ?
yup, that's it. For `before` you can pass the earliest signature you fetched in the previous response
<@!466984915376799748> thnx for taking some time
after publicKey, {before: } and then..?
so:
                connection.getConfirmedSignaturesForAddress2(publicKey)
                  .then(history  => {
                    console.log(history);
                  });
you can call it again with the `before` parameter
tried that , only seems to return some signatures (of the last hour)
<@!812234039259824149> try this ^
https://docs.solana.com/developing/clients/jsonrpc-api#getconfirmedsignaturesforaddress2
if anyone could point me in the right direction that would be great
Hi all, not sure where to go with this question which i have been struggling with for days now... (starter developer)
Web3
How do i get all transaction history of a publicKey ? (like the solana explorer)
That sounds good
is there any standard people prefer for instruction data encoding? I see the guidance is deliberately agnostic about it
Good insight. Thank you.
OK, that makes sense. So each SPL token can be doing transactions in parallel with other SPL tokens AND any two separate transactions among different pairs of addresses can run in parallel also.
The accounts granularity is a core solana feature that enables parallel transaction execution
puzzled now, what is the correct means to send a delegate token transfer?

AFAICT, the cli does not support them (i.e. `spl-token transfer` cannot be used to send them yet) .
So I've been looking at the javascript api, at `token.transfer`.
Running into errors of either: 1.  `owner does not match` or 2. `MissingRequiredSignature`.
1st error is when specifying delegate account owner as owner/signer.
2nd error is when specifying delegate account as owner, and trying to sign with its owner.

Wondering if anyone has done delegate token transfers and could guide me a bit?
Things like picture, website etc. How do you get it verified?
Hi guys I need some help. Trying to update my token details on solana explorer but can't find any documentation on how!
We can certainly hide the complexity from the user that way, but this is costly not just from a storage standpoint but also from ease of programming standpoint. Is there any reason that this cannot change? It's not what I would want in a mainstream blockchain ...
Using it you can "send" to the user's main wallet by deriving a corresponding token address
The associated  token account program you linked to is our abstraction over the realities of Solana and the utility of a single deposit address
Thanks by the way.
Is it not possible to send any token to the same address where the recipient holds her SOL? I come from Ethereum, where the same address can hold ANY token.
Correct
Sounds right. You can confirm with `Pubkey::create_program_address()`
ah that makes sense
For the same wallet, it seems the user needs a separate account for each kind of SPL token? This is what I understand from this document:
https://spl.solana.com/associated-token-account
Since most apps want to give the user some sort of assurance, you probably want to do this to some extent
It's closer to "wait for confirmation"
lol never mind again, I do not have it working. I was running my tests with the wrong keypairs :p
Should it be `&[&[authority_key, &[bump]]]`?
Hi if my program derived address is from 
```
let (pda, bump) = find_program_address(&[authority_key], program_id);
```, then what will be the `singer_seeds` for `invoke_signed` if I want to let the derived address sign?
should I just leave that to the validator?
so I notice I don't actually have to confirm the tx in javascript to get the logs to appear. What does confirming do?
thanks, that worked! Showed up right away with "solana logs"
plenty of other spam in the validator log but no program logs
https://docs.solana.com/developing/test-validator#monitor-msg-output-from-on-chain-programs
I send and confirm the transaction in javascript and get a txId and a slot number on confirm
I'm using solana-test-validator --log
is there anything special you have to do to get program logs in solana-test-validator? Trying to get a hello world msg! to show up in logs, but nothing appears after I send the tx
the program itself does the instruction data decoding: the runtime hands the program a byte array
True, thank you
Raydium discord is probably more suitable for raydium-specific questions. https://discord.com/invite/6EvFwvCfpx
Another addon question:

I am also right to say that, the program will have a sort-of entrypoint-style function that allows the instruction to be interpreted first, before it runs the exact function within the program right?
any idea why when calling pools from raydium contract ("9qvG1zUp8xF1Bi4m6UdRNby1BAAuaDrUxSpv4CmRRMjL"), i get this for instance:

BTC/USDC
        8SXu9YmNeoME4LW2USj6NQ47ZPYDrdz7Ki9JCVLc2D3g Total Pool Token Supply:     153.61516071
        4HyFLkX6SX4331VR6tNbzqphZiNBYwdPeJcVeKet6E3E [BTC      ] Balance:             0.005985
        7TgGoeagnBsswQo5wytvkEFW2nnUXzTKSj2q1LDJaNWQ [USDC     ] Balance:           223.104832

not Total Pool Token Supply, nor both Balances make sense to me...
yep
that means if you identify a program account, an indexer should have some logic stored to decode it in the program's way right?
The decoder simply doesn't know about all instructions for all programs, so it does what it can and returns binary to the caller if the program is unknown
<@!394537695185076244> try now.  I think there was a conflict between Community and Developer roles here
hey there, in the context of an indexer, when I decode an account's data, I sometimes get gibberish while i sometimes get things like "solana_system_program". Is that what you would mean by "How to deduce what instruction operation" to do?
<@!831450660146642974> - hey, regarding "call" support: I'm working on an addition to the simulateTransaction RPC method that'll allow the caller to request the accounts that the transaction modified in addition to log messages.
Oh yea my bad sorry. Thanks
why don't you try searching for raydium
I found Serum Program v3 but it does not seem to be this contract that register pools
search for raydium in the search bar
How can I find pools contract of raydium in solana explorer please?
Hey, my application needs to store some user data on the chain when they buy certain item and then access it later on for some other functionality. So should I create a new data account for each user, because storing everything in single data account will not be possible with the 10mb limit. And if I store the user data in different accounts then where should I store those data accounts keys, so I can access that data later on?
Here is a gist I created when someone asked same question. Hope it helps: https://gist.github.com/FrankC01/abae44f481c67988820fbb8c2c836c27
Oh nvm I got it working. I was getting errors because I had specified the owner's pk as its token account pk.
If lets say I want to keep a server checking for new events to keep a cache of the data is it possible/necessary with solana?
Guys, is it possible to store hashmaps into account data? Any sample implementations would greatly help.
like solidity
Hi guys is there a way for a program to emit events?
is here anyone can create a token and smart contract for me on solana? Will pay for the work
Does anyone know an example of what a delegate token transfer would look like?
What signatures does it require?
Thank you I will take a look
ohh thanks! I'll try that
The cross collateral code doesn't use Serum for prices at this time. The latest implementation uses Pyth (there's a recent PR open, I'd check it the one with the CLI as it includes the Pyth code)


///////////////////////////////////////////////////////////////////////////////////////////////

is there any size limit on the csv file ?
then I remove the correctly check balance account from csv and restart, then it works
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: ClientError { request: Some(GetBalance), kind: Reqwest(reqwest::Error { kind: Status(429), url: Url { scheme: "https", host: Some(Domain("api.mainnet-beta.solana.com")), port: None, path: "/", query: None, fragment: None } }) }', tokens/src/commands.rs:804:71
stack backtrace:
   0:        0x10190fdd4 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h34f76b2ca42fab41
   1:        0x10192d1ad - core::fmt::write::h8f13d857463c51c1
   2:        0x1019091d6 - std::io::Write::write_fmt::h0a6214ccb1a8468b
   3:        0x101911b59 - std::panicking::default_hook::{{closure}}::hb14d90e928578cc7
   4:        0x1019116e0 - std::panicking::default_hook::h460969f1dc8f738d
   5:        0x10191234b - std::panicking::rust_panic_with_hook::h28bf9d6c3916221e
   6:        0x101911e45 - std::panicking::begin_panic_handler::{{closure}}::h99569328be4adae9
   7:        0x101910278 - std::sys_common::backtrace::__rust_end_short_backtrace::h9a7e5cc6475b496b
   8:        0x101911daa - _rust_begin_unwind
   9:        0x10192ad3f - core::panicking::panic_fmt::h65997884a2662b8c
  10:        0x10192ab85 - core::result::unwrap_failed::h0d8a6fea161e6a5e
  11:        0x1013bad4f - solana_tokens::commands::process_balances::h6b3b04bc3ef12d2c
  12:        0x101301a19 - solana_tokens::main::h01b9b82530b1d174
  13:        0x10131254a - std::sys_common::backtrace::__rust_begin_short_backtrace::hb7ccb4937a3706e5
  14:        0x101304461 - std::rt::lang_start::{{closure}}::h2641e62409d82ff8
  15:        0x1019127a4 - std::rt::lang_start_internal::h1faf79574185df6d
  16:        0x1013021c9 - _main
got this error
when I use this command : ./solana-tokens balances ........
The csv file has 400 addresses to check and it failed after 100 check if I delete the first 100 then it works
Got also error when I tried to check SOL balance of several address with solana balance
Thanks but I did it on mainnet
thank you!
on checking the data length
ohh i see the if else
so the `owned_pubkey` would be a pubkey to a mint account correct?
https://github.com/solana-labs/solana-program-library/blob/b488aee06788a0d1cd0d407a42be054a5a1aa3cf/token/program/src/instruction.rs#L153
(AuthorityType::MintTokens)
Hmm is there an instruction on setting the mint authority?
is `owned_pubkey` pubkey suppose to be a mint?
```rust
    let ix = spl_token::instruction::set_authority(
        &spl_token::ID,
        owned_pubkey: &Pubkey,
        new_authority_pubkey: Option<&Pubkey>,
        authority_type: AuthorityType,
        owner_pubkey: &Pubkey,
        signer_pubkeys: &[&Pubkey]
    )
```
Where can I find the SPL instruction docs again? What is the difference between `owned_pubkey` and `owner_pubkey`?
Thank you.
When I get to it I'll let you know what I find out
Hmm
I checked it doesn't contain how to decode `apy or apr` of the pool.
I'll be working on something similar tonight or tomorrow
I think you need to decode the data value - you can find the shape in the raydium UI code
We just want to get our tokens on the market sooner
I didn't
You checked the checkbox "I will not ping the Discord about this pull request".  Might want to delete that message ^. I understand maybe you didn't check it yourself - but it is clearly a request from the repo owners.  Just trying to be helpful; there's typically an etiquette around PRs.
https://github.com/solana-labs/token-list/pull/168
I have a PR for 8 days,Does anyone want to approve it?üò´
Hi
I'm not sure the SRM mint is deployed on devnet. Switch the url to MB
Thanks..I'll have to check out the redeployment section again
(Then again, the devs would know better why it's the way it is.)
No, it should be allowed to be switched and `--max-len` should be removed altogether.
Also wondering how can on read onchain data in solana.
Hey guys i am trying to read on  current apy of a raydium pool. For it i am using `json-rpc` method of solana. Here is the request i am sending: ```json
{
    "method": "getMultipleAccounts", 
    "jsonrpc": "2.0",
    "params": [
        [
            "DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv" # address of the FIDA-RAY pool 
        ],
        {
            "commitment": "confirmed"
        }
    ],
    "id": "1"
}
``` and here is the response i am receiving: ```json
{'jsonrpc': '2.0',
 'result': {'context': {'slot': 79690196},
  'value': [{'data': ['AQAAAEFXsFgPMcX85EpiWC28+deO51lDoISjk7NQNo0iiZMI0M0SHroCAAAGAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==',
     'base64'],
    'executable': False,
    'lamports': 1461600,
    'owner': 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
    'rentEpoch': 184}]},
 'id': '1'}```
Makes sense .I hope the program data account doesnt allow to be switched,otherwise max length stops making sense.Thats gotta make things more confusing
Glad it helped. The question keeps popping up, so I've had a few opportunities to tweak the answer. ;)
Thank you for your great reply
(Tracking bump seeds is like using a surrogate key.)
It reminds me a bit of the question whether one should use surrogate keys or natural keys in database design.
Well, *someone* has to deal with tracking those seeds, right? If it's the user, that likely makes the UX needlessly complicated. If it's some other account, then the question becomes whether you're actually buying anything by doing so, since you need that extra logic.
Do you think I am over-engineering by bothering with passing around bump seed? None of the built in or SPL programs bother with it.
I don't know if it's checked in invoke_signed. Should be easy to do a quick test with a bump-seed that fails a `sol_create_program_address` syscall; (Or just using 255 where `sol_try_find_program_address` gives a bump seed lower than that.)
Hi. 
Can I run solana cli on Raspberry Pi (Ubuntu 20.10)?
I get this error:   
sh: 156: /tmp/tmp..../solana-install-init:   Exec format error 

https://stackoverflow.com/questions/67647148/solana-cli-installation-on-ubuntu-20-10-raspberry-pi-results-in-sh-156-tmp
Not me...more of a C++ person. I still have a long way to go until I'm reading Rust fluently. ;)
Who wants to take one for the team and dig into BPFLoader code? üôÇ
My guess is that it was originally intended to work that way, but that someone hit a problem implementing it, so they they just said "ahh, nevermind then, let's give the user a `--max-len` option and reuse the same program data account". Again, it's just a guess. Perhaps one of the devs could enlighten us.
Could it have something to do with the buffer account process?
That's what I meant by _indirection_, yes. Well, what is it that we buy with this "abstraction"? As <@!99911938955309056> and I would have expected, this could be done so that the program data account can be switched out. That would've made total sense. But if this doesn't work, then it's just introducing yet another account that's confusing users. ;)
or is there just a lot of lag between a transaction being confirmed and it appearing in the explorer?
if I want to make sure the the transaction has been accepted, should I be using 'finalized'?
It depends a bit on what triggers a score-change. Typically, on Solana, when wanting to use a Hash Map, one would put each value of the Hash Map into a separate account. So you'd have a bunch of "user accounts", one per user. To find those accounts, one can create them with a specially chosen public key, e.g. one that's the output of a hashfunction applied to the username (or the user's wallet pubkey). The username (or the user's wallet pubkey) would then be the "Hash Map key". Check out https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses
(This may all seem a bit obscure at first (it did to me ;) but it's actually quite similar to how mappings in Solidity on Ethereum work internally - except that on Solana you have to know, at the beginning of the transaction, which accounts will be accessed. That's part of what makes Solana faster, because it constrains memory accesses, whereas on Ethereum they are unconstrained.)
I'm submitting transactions with commitment='confirmed' - but they don't always show up
By indirection do you mean deferring the shared data to program data account instead of the program itself ?so that's just for abstraction
Question: when I invoke a system instruction in my program, I should also include the system account into the accounts parameter of invoke function, right ?
Hi @mvines - I rebased but I still have the same problem with the test validator startup error.
Question regarding Hash Maps:
I want to assign a mutable score to each user of my dApp. Would it be smart to do this via a Hash Map (just like I would do this in Solidity via mapping) or are there better ways to do this on Solana?
is there any example of a staking program? if I have a thousand users staking some amount of SOL, how can I credit each of them with a reward on a regular basis? I can think of a naive way of looping over all of the accounts but I would expect to run out of compute units if I do that
Yeah realized this last night and didn‚Äôt call myself out. On that note, does invoke_signed check to make sure the address is off the curve? I have another place I‚Äôm doing similar and want to pass the bump seed (not ata related - custom relation and I don‚Äôt care if it‚Äôs truly unique)
Does someone has an example code snippet for sendAndConfirmTransaction()? For example sending 1 SOL
hello, I have a question üôÇ is using `enum_dispatch` for versioning the recommended way to build an upgradable program? Are there other approaches you have considered when e.g. building the token-swap?
I may have just figured it out: I was just missing the `--force` option. This is not mentioned anywhere in documentation or --help, so I will try to open an Issue about it, since I can't really code in Rust myself.
Hello, with web sdk (web3js), from transaction signature, how do I get from address and to address of a transfer?
I'm trying to run a command such as `spl-token authorize TOKEN_ADDRESS owner AUTHORITY_ADDRESS`
Can anyone help out with changing token account owner authority? The docs mention that in multisig usage for spl-token (https://spl.solana.com/token#multisig-usage) but I keep running into this error: ```Error: attempting to change the `owner` of an associated token account of `--owner` ```
I thought working at a regulated crypto company was tough, but turns out its no different from any other business. Moving out of it and starting my own one felt good rlly, so much to learn.
you dont need solid technical background in blockchain tbh, once you're in blockchain for awhile, things become crazy simple. It's just over-hype...
Ideally, working on it through the bear market and be ready with the prototype for the next bull
if someone is interested, we can jump on a call and see if there is a potential for collaboration (it‚Äôs a game)
and btw, even though I‚ÄØhave a solid technical background, I‚Äôm only playing with it to see if solana can cover one of the use cases I have in mind for a project üôÇ
I'll work on it once im done w my indexer
ok roger
Lol.. i sound like a joke, let me take back this qn. I found it
and for now, it‚Äôs the only one not working in my case, even through roseta
you can find it in the same folder as other executables (solana, logs etc.)
yes it‚Äôs one of the executables that get compiled (cli)
i doubt so right
solana-test-validator is on solana's main repo?
Bumping this qn!
thank you I‚Äôll try that
Its a small fix tbh, simply replacing num_cpus fixes most of the SDK problems
https://github.com/nozomi-ai/solana/commit/4b25107b8e653f1d84950a57f6f301c2b413336e
what about the test val?
it‚Äôs good enough for now, I‚Äôll see what happens in next few versions
I‚ÄØdid that, but can only use it to run the local cluster, my machine is M1
I have my own forked version of solana in my own git so that I can work with the entire SDK without hindrance. Since my production machine is x86_64, i can simply ignore rosetta or whatever and just implement ASi support on my own
seems it does not work with SRM
I suggest you fork SOL's git and work on a local version on your own. Beats better than spamming trial and error for your machine.
Actually multiple usages of "token", but isn't the stake program dealing only with lamports?
https://docs.solana.com/staking/stake-accounts#delegation-warmup-and-cooldown
"The withdraw authority keypair holds more control over the account as it is needed to liquidate the **tokens** in the stake account" What is "token" doing in this sentence?
What is the best way to update spl-token-cli?
Because then the caller could pass any seed that gives an off-the-curve address. If you wanted to check if the caller passed _the first_ bump seed that works, you'd have to run the loop anyway. (And the whole point is to get an address that's fully determined by the wallet's pubkey, without having to know additional seeds.)
I‚ÄØdon‚Äôt know, I‚ÄØsuspect there is still something missing for solana-test-validator, it‚Äôs the only one I‚Äôm unable to run in rosetta mode
It seems related to the ATA program, but I'm not sure.
Do you guys know how I might query the chain for the following information?

> Total number of unique addresses interacting with Solana DeFi apps, grouped by app
That's what I first thought as well, but apparently that's not what's happening. If that were the case, upgrades wouldn't be size-constrained and there'd be no need for `solana program deploy`'s `--max-len` parameter. It looks like upgrades are written to the same account and the indirection is essentially useless?!
So, SPL Tokens have become the de facto token standard.
Makes sense.
swap, lending, staking...
I meant that they are meant to be stdlib-like utilities, and likely were the first ones created on top of the Solana blockchain (and were a means of testing the network).
but then this would close the door to all programs consuming the standard
Yes, you could make your own standard, like you could steer away from ERC20 on ETH
Hm, maybe PoC was the wrong phrase to use.
They are not PoC, they are battle tested standard implementation for most
Such a thing is possible, right?
In which case these new tokens would not be SPL tokens, but would be Solana-based tokens.
Because, I see people talk about SPL tokens, for example, a lot. But, another program could define a process for minting and transferring tokens.
Other programs can be created for Solana blockchain and released independently of SPL, right?
They're like a set of examples generated by the Solana core developers as PoC covering common use cases?
SPL programs are reference programs, right?
Is there a way to convert UiVoteState to VoteState? Doesn't seem to have a conversion function.
Thanks <@!469776019784466442> . I really appreciate it.
Hi Solana devs, it seems there is a bug with 'solana-tokens spl-token-balances' , when i checked for my address I got this message 'Associated token account not yet created' but my token account is created and hold the token
yeah. `SystemInstruction::Allocate`is just some data telling the runtime "hey you should allocate some space for this address"
You mean because it calls `SystemInstruction::Allocate` (which probably points to the code you linked me)?
The runtime one is the code actually doing works
This one only encodes the instruction and sends it to the runtime.
I think a storinator will solve that problem indefinitely. hehe
https://github.com/solana-labs/solana/blob/master/runtime/src/system_instruction_processor.rs#L64
13.8TB.. how much a month is that?
I understand completely.
Thanks!
https://docs.rs/solana-program/1.6.9/src/solana_program/system_instruction.rs.html#340-347
Got it.
Sorry.
I want to see the implementation of `allocate`.
<@!469776019784466442> I see. Still learning `rust` so could you point me to where the `system_instruction` crate is defined?
https://github.com/solana-labs/solana-program-library/blob/master/associated-token-account/program/src/processor.rs#L79
Oh, so there's an actual provision of a resource?
ATA will allocate the space for the account, transfer SOLs into that account
So, validators can approve transactions sent to "new accounts" just by pre-calculating the appropriate address if an account *would otherwise* exist.
I guess technically no account is "allocated". It's just that the protocol guarantees that the address is verifiable and deterministic.
Two steps, first step is to generate the address of the account (which at this stage it is not `allocated` yet), next ATA will allocate the account and transfer SOL to that account to keep it alive
Got it. Totally makes sense.
And, afterward, such an account will exist with those funds that were sent.
So, the funds can safely be deposited, even though no prior account existed.
And, the account address that the validator will compute will match the ATA-generated one.
The first send will trigger a validation of the recipient's address, since no account exists, yet.
Ahhhhh
So, the process of deterministically generating an address *is like* creating an account.
`In addition, *it* allows a user to send tokens to another user even if the beneficiary does not yet have a token account for that mint.` the `It` here refers to `ATA`
Ahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
I'm not sure it's your English.
but with ata, it can automatically open the account for the recipient
Both sentence are correct in that: you need to open an account for the recipient in order to transfer the token
Sorry for my poor English, please feel free to send a PR to clarify.
That's how it concludes.
Oh I read the whole page and got what they want to say
> If the recipient must fund it first, it makes things like airdrop campaigns difficult and just generally increases the friction of token transfers. [This tool] allows the sender to create the associated token account for the receiver, so the token transfer just works.
So, the second sentence really confused me.
Because the context is regarding a utility that you can use to send people tokens even if they don't have an account with that mint, yet.
I actually thought it was the first sentence.
From my understanding on the code, the next sentence is correct `Unlike a system transfer, for a token transfer to succeed the recipient must have a token account with the compatible mint already, and somebody needs to fund that token account.1
So, which is it?
The next sentence says "a token transfer to a recipient won't succeed *unless* they already first have an account with that mint".
The first sentence says "it allows sending tokens to a recipient *even if* they don't have an account with a certain mint.
Hey, all, quick question. From https://spl.solana.com/associated-token-account:

> In addition, it allows a user to send tokens to another user even if the beneficiary does not yet have a token account for that mint. Unlike a system transfer, for a token transfer to succeed the recipient must have a token account with the compatible mint already, and somebody needs to fund that token account.
Thanks for the analysis <@!831450660146642974> <@!445425471027544095>
Yeah I think that's the only reason
your instruction data is probably bad somehow
yep
looks like only one location: https://github.com/solana-labs/solana-program-library/blob/58221fc9ae05e258ee903b49c5e8f5abbeb7796c/token/program/src/instruction.rs#L372
Next step is to find where in the program it did throw this
Ah ok invalid instruction, still not so much info..
Thanks!
Yes, 0xc => error 12 => https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/error.rs#L48
Is it possible to know what exactly error it is?
Basically I called the SPL token program using invoke_signed and from the log it says custom error 0xc
Hi I have a question about getting the error message
Yeah.  There's a BigTable instance for online access to the ledger, and a couple offline copies in cloud storage
You used singular but you have backup and replication, don't you?
Gosh I realised I can't PM u..
We need it for business purposes tho.
Validators do not require actually the entire ledger to make progress.  They boot from a snapshot from another node, and only retain a day or two of transaction history locally
Is there any research made into lowering this growth ? Such a growth rate could become an obstacle to decentralization (i'm thinking about snarks like Mina for example)
Our BigTable instance, that holds all transactions since genesis (March last year) is currently 13.8 TB
How much does the chain grow YoY in TB?

Asking due to indexing maintenance costs..
yes, literally the first thing that's checked by the runtime are the transaction signatures (for spam mitigation)
Or it's checking after the program ran and the runtime has to run bpf instructions
When a key is signed and passed to the program, is the runtime checking before the program is ran whether the signatures are valid ?
oh man, you're killing me
just cut the size of my pack/unpack by at least 5x
it really making the process much faster
I'd love to pivot to borsh.  I feel like I spend half my time coding pack and unpack for states and instructions
amazing, thanks for the help
Here are your array length options with Borsh: https://github.com/near/borsh-rs/blob/3223286bae05d29162eaf37512966b9fa7d9cfdb/borsh/src/schema.rs#L168
Thanks, will look into that
<@!326820727649075200>  I can't directly answer your question, but I can suggest digging through a search for "borsh" in the SPL code.  Surely theres an example of what you're looking for: https://github.com/solana-labs/solana-program-library/search?p=2&q=borsh
I'm looking in borsh instead of doing manual serialization, is there a way to unlock the maximum length of static array like with serde ? It's seems to be capped at 32 right now
üòÜ now the program runs! Thanks all you guys help <@!99911938955309056> <@!445425471027544095> . It literally took me three whole days to make it run.
I tried env_logger::init() and it also worked.
Thanks for the help! Now I can continue the debug
Ah I think that's the reason!
ah, did you initialize the logger from your rust client?
eg: https://github.com/mvines/solana-cli-template/blob/81d6bee79f7eff1f2e6c008550a69155228903f6/src/main.rs#L150
I get nothing printed out though
you want it to cough up these `debug!()` logs: https://github.com/solana-labs/solana/blob/8664b2cc3968346fc5c0087182071031950c9b01/client/src/rpc_client.rs#L285-L288
the client rust program
this is for the rust program who sends transaction to the on chain program or for the validation node?
Yeah that sounds right
One less parameter the caller needs to provide, that was the logic at least.  I hear you that if the caller could provide the bump seed then the program woudl require less compute though
In this case I'm guessing I would need to transfer into an account owned by the program, and then transfer from the program into the reserve
<@!445425471027544095> Do you know why ATA doesn't accept the bump seed as an argument, so that the risk of exceeding runtime can be eliminated?  I'd think exposing the ability to specify calculated bump seed is a better design for any usage of program derived addresses.
`export RUST_LOG=solana=debug` to reveal those log messages
That I don't know.  I assume anchor gives you access to AccountInfo somehow
It would also nice if I can see the hidden `[6 log messages]` to debug.
Does this also works for `anchor`? I actually already did it just like the ATA example, except for using `anchor`. I'm not sure if anchor supports `AccountInfo` which is not allocated yet because my call failed with `Transaction simulation failed: Error processing Instruction 0: Program failed to complete [6 log messages]` and I don't know the reason.
once again, i take back my qn. solved
Got it
yes you can.   The reason ATA doesn't use `create_account` is that create account will fail if the account already exists
Thanks <@!445425471027544095> <@!99911938955309056> . BTW just to confirm, I can make the `transfer`, `allocate` and `assign` calls in the ATA example into one `create_account` call right?
Yeah, you could do this, and then the program owns the collateral on the user's behalf. This kind of mechanism could also make sense for managing obligations in general for users
Now if only we can get more wallets and other programs to actually USE the ATA program, we'd have less garbage dupe mint accounts and necessary merges!!!
ah okay that makes sense. i wanted to have a program hold onto the collateral tokens on behalf of a user, however i guess it doesn't matter really if those tokens are held in the program or by the calling user. ty!
<@!99911938955309056> actually already did.  I was going to link to the same ATA example actually üôÇ
The user transfer authority authorizes the transfer of the tokens and so is the owner of the collateral received in return. Think of these like pool tokens, redeemable for the deposited amount. What would it mean to have someone else own them on deposit?
roger that... thanks (suggestion, add this same sentence to the docs)
That would be great! The reason for me asking is that I saw what people usually do (like the spl-token) is that they generate a throwaway keypair `A` and then allocate the space for `A` and then let the on-chain program to do the initialization for `A`. I cannot do that because the account `A` I want to create should be a program derived address so that I can call `invoke_signed` with `A`'s seeds in the on-chain program.
explorer will show any valid address, **with a zero balance**, if  the account doesn't exist on-chain
Well, it has no history.  I'd assume that means it has never been used.
but why is that showing up in the Solana Explorer if no Account has been issued? Is there a way to validate account creation through the exploere?
let me guess, full intel-based libs?
The ATA program does almost exactly that: https://github.com/solana-labs/solana-program-library/blob/3d04aa010986d7ea15c45f19b2825df430b40aec/associated-token-account/program/src/processor.rs
Thanks for the tip! Facing some parsing issues atm..

```
let parse_vote_result = parse_vote(data);
                    if let Ok(vote_result) = parse_vote_result {
                        match Some(vote_result) {
                            VoteAccountType::Vote(uvs) => {}
                            _ => {}
                        }
                    }
```
<@!469776019784466442> yes.
yep, want an example?
Can I put an unallocated address into the AccountMeta and then I call `invoke_signed(system_instruction::create_account` in the on chain program to allocate space and transfer necessary lamports to that account?
A public key that the wallet has a private key for.
A public key.
so if the account is not yet "created", what is it that wallets such as Phandom "create" when they give users an address?
It'll create the account if you send SOL
when you go to deposit reserve liquidity, is it not possible to have the destination collateral token account be an account that isnt owned by the user transfer authority? attempting to have that account be owned  by a different authority returns:

```
Error: owner does not match
```
so, you are telling me if I send some SOL to that account it will, what... go to ethereum (bad joke)?
It showing up on explorer does not mean its in the ledger.
Why do you think it is there?
It's  not there.
```
~/code/solana/dapp-scaffold$ solana config set -u d
Config File: /home/redacted/.config/solana/cli/config.yml
RPC URL: https://devnet.solana.com 
WebSocket URL: wss://devnet.solana.com/ (computed)
Keypair Path: /home/redacted/.config/solana/id.json 
Commitment: processed 

~/code/solana/dapp-scaffold$ solana account HnHar1KmLYj7YmxbXds2Ruwxc3avVv9JpL5KJRuNvs8q
Error: AccountNotFound: pubkey=HnHar1KmLYj7YmxbXds2Ruwxc3avVv9JpL5KJRuNvs8q
```
but they are there
yes, it is... and I expected it to be deleted (according to the docs)
It's empty on both mainnet and devnet:  
* https://explorer.solana.com/address/HnHar1KmLYj7YmxbXds2Ruwxc3avVv9JpL5KJRuNvs8q?cluster=devnet
* https://explorer.solana.com/address/HnHar1KmLYj7YmxbXds2Ruwxc3avVv9JpL5KJRuNvs8q
`Error: AccountNotFound: pubkey=HnHar1KmLYj7YmxbXds2Ruwxc3avVv9JpL5KJRuNvs8q`
HnHar1KmLYj7YmxbXds2Ruwxc3avVv9JpL5KJRuNvs8q
<@!401407513209208832> whats the pubkey of this account on devnet that you say continues to exist.  I've never validated what the docs say is actually happening.
- Mainnet and devnet are completely separate.  full stop on this train of thought.
- The docs actually state that if you create an account with 0 lamports it'll be erased immediately.
- Wallets create associated token accounts by funding them with rent from the main account.
so that means I should see my account being removed from DEV and still accessible in Mainnet... however is not happening like that... the 0 SOL dev account has gone through dozens of epochs by now, and is still there
Oh sorry.
Confirmed that the --decimals option exists
devnet and mainnet are completely different clusters, they don't interact in any way
did you run `spl-token create-token --help` ?
How to specify decimel(ex 6 ) in spl-token cli?

**spl-token create-token**
(sorry for the long question)
hello folks... I have been in a scavenger hunt trying to get answers to account RENT related questions... after running some test in Devnet and Mainnet, they still remain unanswered... so here it goes. 

AXIOMS: Given that a newly created address is mirrored in Mainnet and Devnet, AND their respective epoch's are different (2 days vs 54 mins)

QUESTION: If I fund my Mainnet Account, but leave at 0 SOL my Devnet account, does it mean that my Devnet account will be removed due to lack of funds to pay rent?

POSIBLE ANSWERS
a) will Solana collect rent from the funds in Mainnet address?
b) will Solana garbage collect only the Devnet address, and leave the Mainnet one? meaning they are trully detached from the environments?
c) is Solana documentation innacurate about what it does if rent is unpaid? (aka remove the accounts)

I have run test in both environments with and without SOL and after many epochs on the different environments the balances don't change. Furthermore, the docs state that you need to initiate an account with some Lamports otherwise they get marked for removal on the next epoch... how then, wallets like Phantom create accounts (are they supposed to pay for that initial amount for their clients?)
Public RPC endpoint has history back to block 0.  Note that transaction logging didn‚Äôt exist at all back then so earlier transactions will have no logs
and the public validators typically start pruning history up to how long?
As far as the validator has history
<@!445425471027544095> when the flag enabled, do you know how far back i can go and retrieve logs for on the validator?
There‚Äôs a validator command-line flag to enable this logging.  The public RPC servers set this flag though
what does `omitted if log message recording was not yet enabled during this transaction` mean?
> logMessages: <array> - array of string log messages or omitted if log message recording was not yet enabled during this transaction
Are `msg!`, `sol_log` and `sol_log_64` guaranteed to be returned to me in log_messages in `getConfirmedTransaction` RPC calls?
Cool...gonna do the same.I was feeling like missing something when going over the program section,couldn't find something that specific anywhere
Highly suggest you read those over and over.  Took a while for some concepts to sink in - but after a couple months and a couple hundred read throughs I think I've retained most of it!
I've spent a _lot_ of time in those docs.
Got it .Getting hang of it now.You have been really helpful
<@!363601274911981569> Similar to a "router" type program, it's just routing instructions to the latest version of your program.  It stores the update authority, the last slot deployed in, and the address of the current version of the program.  Just as you see in it's output.
<@!363601274911981569>  since its upgradable, it likely loads the new program in a new data address, validates, then swaps the programdata reference.
No. 10 uniques. If you deposit USDC twice, they just get combined
A reference to the account holding the bytecode.
Just one dumb question.What is inside the program if shared object is on another account in case of upgradable BPFLoader
üëç
Thanks for the resource.Will check it out
If you deploy using `solana deploy` instead of `solana program deploy`, it'll directly use the BPFLoader and not be upgradable.  That must be how the Token program is.
Actually, look at the addresses of the BPFLoader.  Yours is using BPFLoaderUpgradable.  
Take a look at this: https://docs.solana.com/cli/deploy-a-program#immutable-programs
Read it like 25 times.
<@!150787664553967616> for the token lending program with regards to the limit on obligation deposits + borrows, if we deposit 10 USDC collateral, followed by another 10 USDC collateral in two separate transactions, this would occupy 2/10 available slots right?
I wasn't aware of this programdata address.  No clue
So the token program stores shared object in itself without needing another account to hold it?I am new and struggling with some concepts.Which one has to be paid the rent?the program id or the programdata account .If programdata account stores the shared object,what does program id hold actually?sorry bothering with a lot of questions
It might be because the Token program is marked as finalized?  I'm totally guessing here
Like this..why some fields are missing for token program.The above is for the token program

ah ok, i understood it totally wrong, sorry!
Thanks for the answer .So token program is a executable program right,but why dont I see its program data address.So for example the helloworld program I deployed ,running the solana program show programid via cli,gives me an associated programdata address where it keeps the shared object
so i am either doing something wrong or missing something
so i created a multisig account, sent some tokens on it, i cant sign a transfer from it no matter what i try. Then i tried creating a new keypair and transfering ownership of underlying token accounts to the multisig and again i cant do it
well everything tbh, no matter how i go at it i hit the wall and the explanations i found are only for minting. Let's say I want an account to hold some tokens and that any transfer from that account has to be signed by more people. Does it work that way or do i need to create another account and give the ownership of a token account to the multisig account? Because I tried both, first way i hit a wall with "presign error", second one I just cant transfer the ownership
There‚Äôs no cli command for this.  The explorer can do it though, using the JSON RPC api
This channel works, what‚Äôs the exact problem you‚Äôre having with multisig?
The getProgramAccounts RPC method could do this for you
i am not sure if i understood you correctly, but it seems like you're looking at the owner in one case and at the token account in the other case?
Try rebasing on master, should be fixed now
Why token program has the data in itself as seeing on explorer whereas the ones I  create with cli has separate associated program data.I am struggling with this minor details and I am not finding good resources to get the concept.Can anyone help
I need some help with multisig, thought <#774014770402689065> should be the the place to ask but no write perms there. Is there anyone here who could help me figure some things out? If not multisig than at least creating a non-associated token account because it seems like i can't get authorize owner to work with an associated
Hi - how do I get my re-queue my pull request when I get a failure that is unrelated to my change? There is the failure `"TestValidator startup failed: Custom { kind: Other, error: \"Discover failed\" }"', core/src/test_validator.rs:312:14`. Here is my PR `https://github.com/solana-labs/solana/pull/17358`.Thanks.
Hi, we building a platform wich will check for user's token in order to give them some features, is that what is consider an Security Token?
Hi, how do I count number of accounts for a certain program, for instance the vote program or stake program?
How can I see all token holders and their amount held via the solana-cli tools?
https://github.com/solana-labs/solana-program-library/blob/58221fc9ae05e258ee903b49c5e8f5abbeb7796c/token/program/src/processor.rs#L198

Could someone check me on this?
I think `if authority_info.key == delegate`  is wrong, it should be something like `if authority_info.key == delegate.owner`.
Oh if I `cargo test-bpf` it 
`Program failed to complete: Access violation in stack frame 1 at address 0x200001d90 of size 8 by instruction #2424` 
So the error/(warning) was useful
the create account rust function requires you to input a pubkey for the account, when can be generated from the program id and an arbitrary seed
Yes
Can you explain.I am a little confused too on this.You have to create the account beforehand?
ty i think i understand now
oh wait i just wnat to supply an arbitrary program derived address then
It is like creating a new entry in a database, you create a new account, and say, "write rights to owner"
to_pubkey, some new account
i mean, i know the program has to call `invoke` but
owner: your program
no
oh so for the program to create an account id put the program id in both `to_pubkey` and `owner`?
this instruction actually go to the system, it allocates the account for you, to_pubkey is which account is it allocating into
im just trying to do something simple like "client calls into program with a username string, program allocates a new account paid for by the client and stores the string in it"
im guessing the extra `to_pubkey` param on `solana_sdk::system_instruction::create_account` functions means the flow for a program to create an account is... the client is supposed to generate it and pass it in for the program to allocate? im not really sure how this is upposed to work
run it with curl for a quick instant reply
how do you guys do the `postBalances` and `preBalances` returned from the RPC call for SPL tokens?
does the `getBalance` RPC method return the balance denominated in lamports by default?
Yes
You're probably right - just from a UX perspective, I like to have the TX to present to the user, then later get the confirm.
ohhh there is `logMessages`
oh it's actually possible to access the logged values via RPC?
I think you can do that in one go with `await.sendTransaction(bla, 'confirmed')`
<@456226577798135808> did u ever resolve this? https://github.com/octopus-network/solana-flux-aggregator/issues/30
ah I had skipPreflight on, which meant that it wasn't running a check that would have told me I did a bad
`cargo build-bpf` gives me
`Error: Function _ZN15my_program9processor9Processor7process17ha015d4443fa30fefE Stack offset of -4720 exceeded max offset of -4096 by 624 bytes, please minimize large stack variables`
But still a return code of 0, so is it a big deal or not?
basically, after you send, you wait on confirmation
hmm interesting - thanks
perhaps this code snippet will help:

```
  if (awaitConfirmation) {
    const status = (
      await connection.confirmTransaction(
        txid,
        options && (options.commitment as any)
      )
    ).value;

    if (status?.err) {
      throw new Error(
        `Raw transaction ${txid} failed (${JSON.stringify(status)})`
      );
    }
  }
```
I'm sending with commitment = 'confirmed'
You can set the committment level and such on the endpoint.  Let me look at the doc real quick
right - because it hasn't come up in the explorer does that mean it's failed?  Is there a better way of figuring out what's going on?
It means that node processed the tx.  Nothing more.
if I call sendRawTransaction and get an id back, what does that mean in terms of the transaction?  I'm not seeing it come up in the explorer
I just went through the solana docs and some other resources and still can't figure out which account needs to be funded for rent.The program id or the programdata address.Developing on Devnet , both seem to have been funded by the program deployer.Any resources specifically talking about this?
Does anyone know whether the solana client for python supports async calls?
That's interesting those errors are actually invalid the install works fine.
when i use --version 1.6.9 I get another error failed writing body. my local runtime is not running
Does anyone know how to update the local runtime on macs. Getting error Error: Please specify the release to install for x86_64-apple-darwin using the command from docs
But we need help.
We have half million accounts and 11000 daily active members.
https://www.swiftdemand.com/stats
Dear great Sol developers, 

I am here behalf of Swift Demand. We are loking for a platform to migrate. I am insisting to have Sol based tokenization. 

Is there anybody could help us? We need guidance and support. If I am allowed, I eould like share our statistics. We have no value at all and no where to buy, so please do not consider this as marketing speech. We need help!
the idea is to be sure to install everything in x86_64-apple-darwin mode. I‚Äôve also updated the ticket here: https://github.com/solana-labs/solana/issues/17406
the rest, you just follow the readme for hello-world, and the step where you need to run "solana-test-validator" you instead clone the main repo (solana) and ./run.sh (it will start the local cluster)
and then, you get rid of everything (brew, rust, nvm etc.) and reinstall brew, rustup, nvm through the rosetta terminal
first create a terminal for Roseta, you go to applications and duplicate Terminal (or iTerm2 in my case) and right click get info, and set it to run in Roseta
sure, it‚Äôs pretty straightforward now that I‚Äôve lost 10h on it üôÇ
oh awesome! can you share the steps?
Okk i will thanks
Sounds like you need the Serum support discord
I traded on serum for some tokens for like 6 dollars and my 60 dollars were missing
I didnt
How did you create that transaction?
This it the transactiondetails
4ZDn8ZZGhkwTyLrdiRk89nc6rqCT1HHHbC9YLMqRe37oB3R6jXf2bJ1RZpEDFyFn63g9u6a9p3UgwAMyanbXrRPW
I dont know how to be more specific
<@558969137842487316> - can you be more specific
I lost 65 dollars on that
Can you please tell me what initialize account is
<@445425471027544095> i need help.

I managed to use the 1.6.9 release for everything else except solana-test-validator, and the main cloned repo for the actual cluster with ./run.sh
<@!161028871095844864> and <@!839208443695988786> I finally managed to run the cluster on M1. Both 1.6.9 release and compressed source have an issue (long story short)
The buffer-layout npm package is an option too, just requires more manual work to declare the layout.  Anchor wraps up account decoding for you I think, maybe that‚Äôs an option too: https://github.com/project-serum/anchor/tree/master/examples
I don't have to use borsh. I just need to get my account data to be deserialized and my instructions to be serialized somehow. Do dm them how do I contact them?
<@!539801435571748868> or <@!752722929397137452> might be able to suggest something for the borsh-js side.  I've not used it much myself, I've been mostly hiding in Rust recently üôÇ
On the javascript side I am using borsh but am having trouble serializing an array of some type. Is there a sample on how to do this or perhaps a different library. I'm also using borsh on rust program side, but that is working.
Cool man ..will go through the video once.Just coming from Ethereum background is making few things not make sense at first sight.Any other resources other than the docs would be welcome
hello <@!585868308419444749> last question, i can now extract the full holder list of a specific token, but how to extract the full list of SOL holders ?
you're asking quite a generic question, I recommend going through this https://www.youtube.com/watch?v=X4YWxgrnuHU and https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/


///////////////////////////////////////////////////////////////////////////////////////////////

Hey thank you, this is all really helpful. I will indeed go over the tutorials again.  Thank you!
<@!811633301747531786> Better .bss reporting: https://github.com/solana-labs/rbpf/pull/180
I think you've seen the two most important tutorials; I don't have recommendations for others, although if you come across some dapp you're curious about, you'll usually find the code on GitHub.
What I would recommend is re-reading those two (hello world and escrow) until you feel like you've really grasped all concepts. There isn't much more to know than what's presented there and if you're otherwise comfortable writing something like a tic-tac-toe game in a classical programming environment, you should then see how you'd translate it to run on Solana. Just very briefly:

* Any state you'd want to track (who the two players are, the Xs and Os on the board, whose turn it is, whether it's game over) is stored in an account. It's your responsibility to figure out a format to store it. The board could be an array of 9 unsigned integers that take values 0, 1 or 2, for example. You'd initialize that account when creating a particular instance of the game, e.g. when someone invites someone else (whose public key they know) to play.
* The logic is in the program you write, e.g. you'll want to provide something like setX and setO functions that check to make sure they are called by the right player, on that player's turn, while the game is still ongoing.
* Players would authenticate themselves by signing the transaction that calls setX and setO with their private key.
* In another message you asked whether the game could be paid for by someone other than the players. Yes, that's possible, but in many cases it's most natural to let users pay for their own activities.
Looks like `HashMap` depends on static read-write data in the ELF which we don't allow.  We used to have better detection and reporting for this condition, must have gotten lost in recent changes, i'll put that back in place
I am ready to pay for simple code for executing swaps. Just want to clearly understand how solana api works
Hey could you add me as a friend on discord and shoot me a DM please üôÇ
> By the way, what should be passed as signer_seeds
The docs on program derived addresses should explain this: https://docs.solana.com/developing/programming-model/calling-between-programs#program-signed-accounts
The concept is that a program derived address is generated using the program id and a bunch of seeds, and has no private key associated with it.  Because of this, it's technically impossible to sign for that pubkey.  The runtime, however, allows a program to "sign" for that pubkey by proving that it was generated using its program id and a set of seeds.  The only way to prove that to the runtime is to provide the pubkey and the seeds, and allow it to re-derive the same pubkey
I don't understand this. Can someone give me a hint for solving this problem?

`$ spl-token create-token
error: could not read keypair file "${HOME}/my-solana-wallet/my-keypair.json". Run "solana-keygen new" to create a keypair file: No such file or directory (os error 2)

${HOME}/my-solana-wallet/my-keypair.json
[50,205,52,183,182,63,135,123,165, ... ]`

Permissions and groups are ok.
> What does the third argument mean?
That's the authority / pubkey that is allowed to create / mint new tokens
Regarding ```MintTo``` instruction. It says:
```
[writable] The mint.
[writable] The account to mint tokens to.
[signer] The mint‚Äôs minting authority.
```

What does the third argument mean? By the way, what should be passed as `signer_seeds`? (third argument of `invoke_signed`).
Hey guys. My program fails to complete. What can be a potential problem? 

https://github.com/Gravity-Tech/solana-adapter/blob/feature/ports/src/gravity-core-adapter/port/src/ibport/processor.rs#L263-L280
I think he just has the 1 but I've found just going through the code in all of the different Solana related public repos that he has is super valuable learning how to do stuff.
Nice this is very timely thanks
We also have this one that is a great getting started tutorial:

https://www.youtube.com/watch?v=gA7hFdq2h9Q
üëÄ
There are few other tutorials. One community driven one that is just getting started is sol hack

https://solhack.com/
Same. The only tutorial I know about from him is the Escrow Tutorial. Are there others?
This is great, and I agree very useful for anyone new coming into the ecosystem.
not me, but that would be grand. the tutorials done by Paul Schaaf are the closest thing atm for me
Is anyone working on a book (yet)? Feels like a lot of us are going through the same motions to learn this architecture and these concepts.
Thanks - really appreciate that. Also for directing me to Whimsical, I will check it out. I am always on the lookout for better diagramming programs üëå
love your diagrams... you should check out Whimsical... it has changed my life as an Architect
*** fully on chain in the sense that there is some metadata as well
Did this other one that was an attempt at a potential fully on chain NFT architecture using the SPL program 

*** disclaimer that this is a repost
Thanks üòå  --- Hope it is helpful. Will post the txn one again if I get a chance to update the bottom bit for instructions
wow very cool <@!534797043412238366>
Very nice one... for detailed stuff this is very useful
Trying to draw out the different ownership relations like this with the SPL contract went a long way to help me understand the way the smart contract game works.
‚è´ needs some upgrades to add in the instructions
Some more technical fan-fiction - transaction structure visualised:
<@!401407513209208832> might also be nice to include the BPFLoader and SystemProgram loader in their accs. to help with the bigger architecture picture
Hi <@!401407513209208832> agree cool and helpful. Would be great to see a post along with it? I'm new to this and would gladly read.
Cool picture. Such things definitely help get the understanding out there üëå .

Might be worthy to:
- include some info about how the smart contract itself is stored in an account (since the way it is atm. it may seem as though accs. and programs are different things)
- indicate that the program may own other 'data' accs. and that only those owned by the program can be changed by it
It's a paper wallet, I want to just use the one I created with Phatom
Hi, maybe I'm stupid but how do I connect the solana cli to an existing wallet? Do I just run `solana-keygen pubkey prompt://`, put in the seed phrase, and that's it?
I know this may be obvious to some, but new developers might find this diagram I did useful... the "not very obvious" ways Solana Programs (smart contracts) interact with Solana and the Apps that leverage it. Any feedback is also appreciated. I hope some folks find it useful. Enjoy!
Looking to work with oracles in your Solana apps? Come check out this Technical workshop start in 5 minutes!

https://twitter.com/solana/status/1397936099134042114?s=20
I've been wondering the same thing. I'm very (very) new to this space, but where I am going to start exploring is that some users might "fund" some amount of interactivity so others don't need their wallet. Right now I'm thinking about a simple game (say tic-tac-toe).  If I "start" a game, I would have to fund the account, and any transactions required for another user to play.  I'm so new I'm not even sure this is possible, but thats where my head is at.
Really good points. Then what might be a good way to structure a dapp with a fair amount of data saving, without introducing a centralized server? Even if I use something like arweave or ipfs to store the bulk of my data. I would still need to save those txid into solana so that I could later reference back into arweave, which causes the same issue. Is there a way to do this sort of thing with a nicer flow for the user? How on earth are people creating dapps?
Batching is a good idea, but I don‚Äôt know of any wallet that support that, and typically your transactions would be dependent on the results from the prior. So the use case would have to be such that the UI understood that. Could get confusing quickly.
That‚Äôs wallet functionality. Many wallets have an ‚Äúauto approve from this site‚Äù option. You‚Äôd have to be insanely trusting to enable such a thing though.
In terms of building decentralized apps on solana does anyone know of more pleasant ways of using solana where submitting transactions does not always cause an approval popup from the wallet app? I suppose one could batch submit updating data so that the confirmations happen less frequently. Any other ideas?
Hello! I want to use python api for swapping. I found solana-py project (python version of solana-web3.js) but faced a problem. I don't understand how to generate a transaction instruction. I made a transaction with the
pyserum library, but it can be used only for placing an order, so i need to make instruction directly from keys, program_id and data. Could someone explain how to fill in these fields? (I understand that keys is a list of  AccountMeta objects, but I have no idea what keys need to be passed. And is data a list of transaction params?)
The detailed guide for the solana-web3.js (or even solana JSON RPC API) will also be useful to me, but I have not found any. https://docs.solana.com/developing/programming-model/transactions did not help me.
I would be grateful for any help.
Please ignore the above issue.
Upgrading <@832686202074300446>/web3.js to 1.14.0 solves the issue.
The versions I am using are 
"@solana/web3.js": "^0.71.9",
"<@832686202074300446>/spl-token": "^0.1.4",
This command works totally fine
`curl https://api.devnet.solana.com -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0", "id":1, "method":"getTokenAccountBalance", "params": ["D8uBCypxXkSm4jcPtUq6xgWJjZJir54asrU8UQMkbnpJ"]}`

with output 
`{"jsonrpc":"2.0","result":{"context":{"slot":58759267},"value":{"amount":"1000000000000","decimals":9,"uiAmount":1000.0,"uiAmountString":"1000"}},"id":1}`

while following node js line throws error
`const connection = new web3.Connection(web3.clusterApiUrl('devnet', true), 'max');`
`await connection.getTokenAccountBalance(new web3.PublicKey("D8uBCypxXkSm4jcPtUq6xgWJjZJir54asrU8UQMkbnpJ"))`
is there any guidelines on what space an account should be, for example, just a generic newly created account is `8 + 8` but what size should an SPL token account be?
Hey, shooting this question again - We're looking to hire a full time Solana developer. Feel free to DM me for more informations üëç

Scope is quite challenging üôÇ 

We're planning to migrate ALL our capabilities onto Solana chain. 

Services available here : https://unicrypt.network
i'm not sure what that means
It‚Äôs for a setup fresh start
thanks <@!539801435571748868> I'll take a look.
depends on what type of contact you want -- if it's technical, we can keep chats going here
they're for making sure that enough rent is deposited in an account, to make sure it stays rent-exempt.  for example, token accounts must be rent exempt, so during initialization, the token program needs to check that the provided account has enough lamports to stay around for good
I'm not sure if we have better tutorials at the moment unfortunately, but you can take a look at the programs in https://github.com/solana-labs/solana-program-library.  the `token`, `feature-proposal`, and `record` programs can be a good places to start
Hi guys, who should I contact for a protocol transition from BSC to Solana?
What are rent instances used for? I need to use one in another invocation as well
That's it!
Thanks alot
hey guys, I've followed the hello world tutorial, and a bit of the paulx escrow tutorial, but still having trouble figuring out how to think about getting started on my own project. Those projects feel a bit too simple to get me thinking about "real" projects. I started to think about something pretty simple like tic-tac-toe, and even that left me scratching my head a bit. Are there open-source apps I can see, or other tutorials out there that are a bit more in depth? thank you!
that looks right, you probably didn't include the sysvar account in the instruction sent to the program
Hi everybody,
I encountered an error while developing a program
I think I misunderstood something about how to create a rent instance from an account_info
This piece of code
```
use solana_program::{
    account_info::{next_account_info, AccountInfo},
    entrypoint::ProgramResult,
    pubkey::Pubkey,
    sysvar::{rent::Rent, Sysvar},
};

pub struct Processor;

impl Processor {
    pub fn process(
        program_id: &Pubkey,
        accounts: &[AccountInfo],
        instruction_data: &[u8],
    ) -> ProgramResult {

        let account_info_iter = &mut accounts.iter();
        let rent = &Rent::from_account_info(next_account_info(account_info_iter)?)?;
        Ok(())
    }
}
```
Produces this error
```
Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 1: invalid program argument
```
Does anyone know how I could solve this?
Until we get an on-chain solution, you'll have to put in a PR to https://github.com/solana-labs/token-list
Hi guys  I made my token. But how do I add token name and symbol for it?
ok thanks jon
You can take a look at the source code at https://github.com/project-serum/sol-wallet-adapter/blob/master/src/index.js and see what's happening.  that `_network` isn't really used the way you think it is. If you have more questions, the serum discord will have more specific support
Thanks for the answers
You can have as many accounts as you need!
You'll use the JSON RPC API to fetch the account and its data: https://docs.solana.com/developing/clients/jsonrpc-api#getaccountinfo
Not on-chain, but off-chain you can subscribe to account changes using the websocket api: https://docs.solana.com/developing/clients/jsonrpc-api#accountsubscribe
Account data is like any data from a service or database -- up to you to decide the caching!
Hi, I am connecting to Solana SPL Token Wallet  - `using await wallet.connect();   environment.solanaRestUrl = wallet._network;` from my JS application and this works fine when I select "http://devnet.solana.com".  But wallet._network always seems to pass back "http://devnet.solana.com" even when I switch to MAINNET BETA - "https://solana-api.projectserum.com". Q1 - How can I pass back the selected environment URL? Q2 - How can I pass back the walled name? Thanks.
hackathon submissions are due June 7, actually
can i have more than one account
If each account has letssay a song name and song title
Can a user have  more than one account with a program
Also another more important question
Should I have a separate server polling the account data/ or is there some event to listen to ?
If I have a program where users can store their favourite songs, then as more users add their songs the account data will get bigger. How should one handle fetching this data for display?
Does the program emit some kind of event when data is changed?
Does anyone know to cache account data from a program?
Hello
Thank you Jon
Yeah thanks, just found it
```
export const PACKET_DATA_SIZE = 1280 - 40 - 8;
```
You are capped in how much data can be sent per transaction at 1232 bytes. You may need to 'chunk up' the data across multiple transactions before the program operation can continue...
It's still very much a project in progress! check out <#778656605453156376> and https://solang.readthedocs.io/en/latest/index.html
You can check that yourself using `solana fees` and `solana rent <SIZE_OF_PROGRAM>`, connecting to devnet vs mainnet (spoiler because I checked: they're the same)
```AssertionError [ERR_ASSERTION]: Transaction too large: 1284 > 1232
    at Transaction._serialize 
scripts\node_modules\@solana\web3.js\lib\index.cjs.js:1090:34)
    at Transaction.serialize 
scripts\node_modules\@solana\web3.js\lib\index.cjs.js:1064:17)
    at Connection.sendTransaction 
scripts\node_modules\@solana\web3.js\lib\index.cjs.js:4423:41)```

The transaction is too large vs what?
im really enjoying this c programming in solana
idk
What happened to the guys making solidity contracts work on solana, is that a thing now?
Quick question, are fees on the devnet reflective of mainnet? For example, in the helloworld example, it costs near 1 SOL to deploy the contract, does mainnet have the same cost?
thanks for the clarification, fixed length + taking into account encodings will be the solution
The solution I can come up with is you pre-allocating the account size to the maximum length of the string
No, afaik Solana accounts are not growable
Thanks that answers my question.
<@!359403268453171201> programID will always be `spl_token::id()` if you created your token using the SPL library
How do you set programID for a newly created token on Solana devnet?
with a fixed lenght
an arbitrary user string
what is a token program id? Are these some bunch of constants predefined by Solana? Or it is generated when you create a new token?
Where would the pointer point to ?
HI 

```
typedef struct User
{
    char id[8];
} User_T;

```
I have this struct as account data. But I would like to know if its possible to store an unknown length char*
I cannot find compatibility between the seed phrases of the Solana Tool suite with other wallets and between the wallets with each other, different public keys are derived
> If I do  this, the transactions actually get executed multiple times.
This would only occur if you use a different recent blockhash and re-sign the transaction multiple times
Hey there, sometimes when I send out transactions the RPC node is not responsive and the transaction doesn't end up in the chain. 

One of the temp solution is to have multiple connections and send the transactions twice. If I do  this, the transactions actually get executed multiple times. (This is different from ETH where transaction with same nonce after signed will only get executed once if broadcast to multiple nodes)

What would be a more appropriate ways to ensure transaction arrives on Solana?
there are 64 numbers, no letters
Does anyone know in what format the private key is stored in keypair.json? I need to create the json file using a private key exported from exodus wallet in common format
also if you have questions about it the serum discord should help
this looks helpful, thanks!
I am no expert but this has been achieved here: https://github.com/project-serum/stake
What is factor here? And I assume you want to represent the pool share a user by a token held by that user?

Suppose that at reward period 1 you have N users in the pool. At reward period 2 (recall we are doing rewards at regular periods) some of those users remain in the pool, having not claimed their rewards, and K new users add more into the pool. How do you back out the total reward for users who have staked for periods 1 and 2? It can no longer be the simple share of the pool.

Some options I see:
1. Mint tokens to each user that currently has tokens, which seems infeasible.
2. Create a new set of tokens for period 2, and have period 1 tokens also count for period 2 and any further periods (assuming they unstake after the end of period). However if we let M be the number of reward periods, it seems like we would need to store M token holdings in user state or hold M different tokens, which means M accounts passed to any instruction to claim rewards - and these seem like they would run into scaling issues as well if M is large
<:facepalmmario:614610110341447681>
nvm
the hackathon ends tomorrow yea?
<@837029397528707134> thanks, I am going to install the .9 version.
It's in the v1.6.10 release notes
Thank you I will check this out üòú
it is a problem of version 1.6.10 It would be nice if someone warns the developers
then C:\solana-install-tmp\solana-install-init.exe v1.6.8
try with 1.6.8 version here curl https://release.solana.com/v1.6.8/solana-install-init-x86_64-pc-windows-msvc.exe --output C:\solana-install-tmp\solana-install-init.exe --create-dirs
I run Ubuntu 20 on Windows' wsl2.
The `Tally` instruction for that same program, https://github.com/solana-labs/solana-program-library/blob/94350d0e8e0ef22cb62ea64be0176bba6d24fef4/feature-proposal/program/src/processor.rs#L290, is again something similar but not exactly what you're asking about.  `Tally` is a permissionless instruction, takes in the clock sysvar and will make a decision based on the current clock
Thanks <@818203379469778988> I will look into it. Really appreciate your help.
You can also try using the windows Linux subsystem. That way you get best of both worlds
Okay, <@818203379469778988> thanks. I actually like to prefer windows over Linux. I will try to solve this issue, if I will be able to do it in couple of days or I will setup Linux on my PC.
Honestly would recommend using Linux.
I have the same problem
reward = factor * period * share of the pool
Share of the pool = user pool tokens / total pool tokens
All of this does not require the full map but only the bits that belong to the user
Do you also know where I can find a good example of using the clock to payout tokens. For example every minute or block send 1 token.
somebody can tell me please if there is a way to create a keypair.json file from a pre-existing key pair?
Hi I know this is the most noobest question but I am not able to install solana, is their any chance I can do it manually?

Cheers for your help man üôÇ
Thank you I will check it out üòÑ
Great.  It was probably the CPU load that was just timing out the RPC requests that drive the test-validator dashboard.   We don't really have a formal minimum RAM requirement for the `solana-test-validator`, it just depends mostly on what you do with it while it's running
The SPL feature proposal program does similar things, not exactly but there's probably code in there that would be helpful to look at:
https://github.com/solana-labs/solana-program-library/blob/94350d0e8e0ef22cb62ea64be0176bba6d24fef4/feature-proposal/program/src/processor.rs#L182-L197
The "acceptance token account" is an example of a SPL Token account that's owned by a program
Omfg I think that did it, closed a bunch of apps and I think that freed up the neccessary RAM - works now!! What's the min RAM required for running the test-validator?
Hello guys. Can I talk to someone from support ?
are you seeing your CPU maxed out?
Thank you! Do you know where I can find a good example of this? I take it I would be able to create the PDA in the program and then send tokens to it after it‚Äôs deployed?
```
‚ûú solana-test-validator
Ledger location: test-ledger
Log: test-ledger/validator.log
Failed to get validator identity over RPC: error sending request for url (http://127.0.0.1:8899/): operation timed out
Failed to get validator identity over RPC: error sending request for url (http://127.0.0.1:8899/): operation timed out
```
Is essentially what I'm getting

Weird, what kind of machine are you running it on?
The timeout error prints every so often whilst the command is running
Nope, literally just wanting to run the test validator by itself in the one console, and it says initializing then times out after 30secs with that error msg
You've got `solana-test-validator` running in one console, and you're doing what exactly in the other console?
Hi! I'm trying to run `solana-test-validator` (or any other solana commands that try to use RPC) but keep hitting the following error: ```Failed to get validator identity over RPC: error sending request for url (http://127.0.0.1:8899/): operation timed out```. Any suggestions on what might be happening?
You'd like a program to take ownership of a a token account for a time, right?  That's doable.  A program-derived address can be used for this, because when the program wants to transfer the tokens back to a user it needs to be able to sign for the token transfer (which it can with a program-derived address)
Any help would be greatly appreciated ü•∞
Or simply from another wallet/account that I have the keypair to
Hey is it possible to send tokens in a rust on chain program using a keypair? For example I want my program to own x tokens and than send the tokens my program owns to the user.
probably not yet if it‚Äôs unresolved. I‚Äôll check
what do you mean? do you mean (1) hold the entire map off-chain (how to prove/check the correctness of the map then?) (2) hold an account to store the info for each user, derived via some seed (how to ensure account updates are atomic then when reward holdings must be updated?)
Discouraged, provide the mapping logic off chain (PDA) then problem solved
Are these `epochCredits` in the `getVoteAccounts` rpc the rewards earned by the validator via commission?
Hi, just a question. If a token is airdropped and I didn‚Äôt add the token address to my wallet, is it possible that I don‚Äôt receive the airdrop ?
are maps encouraged/discouraged at all for account state? in particular for storing data for everyone who interacts with a program. ex: at regular intervals, i want to distribute a reward to all users who have staked into a program-owned token account. the total reward amount is fixed, and each user earns a piece of the reward based on their fractional ownership of the total in the program-owned token account.

typically in a solidity contract you would hold a mapping of user account address -> rewards, which would be updated at each time the fixed reward is distributed.

can we do the same with solana accounts, in particular given that (A) the map size will be dynamic and (B) the size limit on solana accounts?
If I can get some rest I'll try downgrading to 1.6.6 and see whether it works.
hehe nevermind. looks like you already found me! others might find it useful though.
Hey <@!123887120346644482> IDK if you're interested but I added my script to your issue. It uses some simple regex to pull program and token IDs into bash variables to make the command easier to run between tests. https://github.com/solana-labs/solana-program-library/issues/1805#issuecomment-849220529
Any docs show how to run a solana-validator as an RPC node only (no validation)?
thank GOD it's not me. Pounding my head into the wall with this one.
Should I just assume the associated token accounts are already created by letting the user to take care of creating the associated token account?
Is it an anti-pattern to have one instruction that takes an unallocated associated token account, and then initialize the the associated token account and do transfer to it?
<@!445425471027544095> <@!585868308419444749> here it is, what you asked for yesterday, full steps for multisign failing with presigner error every time:

https://github.com/solana-labs/solana-program-library/issues/1805

also, more people commenting on the gist i showed yesterday encountering the same problem:

https://gist.github.com/bonedaddy/31eec8f0b57af1e630cfec2ba12d87e8
Correct üôÇ
Doing it by rpc is not so bad. It only needs to be done when there is no other activity.
Thank you, btw.
You mean we will have to trigger the function call from rpc?
there is no internal callback mechanism, this would have to be initiated from the client side.
This may be a silly question from a newbie, but please somebody reply:

Can we do timer-based function calls in Solana, say call a function in a program once every "block" or once every epoch. We are thinking of spawning a "thread" (whatever that means in Solana) and call the function in a loop that is throttled by thread::sleep().
Would that work?
If this is supposed to work, would the owner of the thread be charged compute cycles while asleep?
which i assume is this https://docs.rs/solana_rbpf/0.1.28/solana_rbpf/ebpf/enum.EbpfError.html#variant.AccessViolation
in case its of any help
o yea i just call hashmap new in the entrypoint
```entrypoint!(dispatch);
fn dispatch(
    program_id: &Pubkey,
    accounts: &[AccountInfo],
    instruction_data: &[u8],
) -> ProgramResult {
    let x: HashMap<String, String> = HashMap::new();
    Ok(())
}```
```/home/hana/work/hana/blog-testbed/node_modules/@solana/web3.js/lib/index.cjs.js:1253
    throw new Error("Transaction ".concat(signature, " failed (").concat(JSON.stringify(status), ")"));
          ^

Error: Transaction 4CPoW1NWAYy4MxXTj2xNdknK6vvZjWX9YQjGnNTi7xm2widTA185e9kwAzNqx4GALw2i7oq2zUbNUtzBqbXqAcVQ failed ({"err":{"InstructionError":[0,"ProgramFailedToComplete"]}})
    at Object.sendAndConfirmTransaction (/home/hana/work/hana/blog-testbed/node_modules/@solana/web3.js/lib/index.cjs.js:1253:11)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at async Object.ping (/home/hana/work/hana/blog-testbed/main.js:60:19)
    at async /home/hana/work/hana/blog-testbed/main.js:85:5
```
```Transaction executed in slot 3614:
  Signature: 4CPoW1NWAYy4MxXTj2xNdknK6vvZjWX9YQjGnNTi7xm2widTA185e9kwAzNqx4GALw2i7oq2zUbNUtzBqbXqAcVQ
  Status: Error processing Instruction 0: Program failed to complete
  Log Messages:
    Program AbBrxmZKUJdn5ezmUUQSjefwojspSNSFwUDCHajg8H79 invoke [1]
    Program AbBrxmZKUJdn5ezmUUQSjefwojspSNSFwUDCHajg8H79 consumed 1189 of 200000 compute units
    Program failed to complete: Access violation in program section at address 0x10000b808 of size 8 by instruction #1216
    Program AbBrxmZKUJdn5ezmUUQSjefwojspSNSFwUDCHajg8H79 failed: Program failed to complete```
<@!792782891196874792> Know if we have added support for rust's `pow`?
Third member of the instruction enum üôÇ
https://github.com/solana-labs/solana-program-library/blob/94350d0e8e0ef22cb62ea64be0176bba6d24fef4/token/program/src/instruction.rs#L105
Yeah, no source of entropy but I would not expect it to crash the program.  did you see that error bu just calling `HashMap::new()` from within a program, if so I'll try it out
hi how do i serialize a struct with fix size char array?
btreemaps seem to work, close enough
hm i get basically the same error switching to ahash with compile time rng. ebpf doesnt like hashmaps i guess?
hi all, got a question - I'm calling some code that calls the `f64::powf` (will move to fixed point in the future, just testing something) but pretty much when I iterate over a vector and call `powf` I get 
```
ELF error: Unresolved symbol (pow) at instruction #441 (ELF file offset 0xce0)
```
Which I recognise to be the error for when float operation is not supported. Yet, if I just don't iterate over a vector and just do them individually, it works fine. So wanted to know if its some other issue. (Not sure if that error should be saying pow instead of powf either)
If this is supposed to work, would the owner of the thread be charged compute cycles while asleep?
Can we do timer-based function calls in Solana, say call a function in a program once every "block" or once every epoch. We are thinking of spawning a "thread" (whatever that means in Solana) and call the function in a loop that is throttled by thread::sleep().
Would that work?
Come join he Orca Workshop happening in 50 minutes (4pm PT / GMT -7).

https://twitter.com/orca_so/status/1397405848633180161?s=20
I am using Token program :))
where can I find the different types of instructions types ? e.g. instruction 3 is a transfer instruction.
Would that work?
Can we do timer-based function calls in Solana, say call a function in a program once every "block" or once every epoch. We are thinking of spawning a "thread" (whatever that means in Solana) and call the function in a loop that is throttled by thread::sleep().
https://github.com/solana-labs/dapp-scaffold/tree/main/src/wallet-adapters , you can find here different types of wallets implemented
`Program failed to complete: Access violation in program section at address 0x100016a60 of size 8 by instruction #4495`
im guessing `HashMap::new()` segfaults because theres no entropy source on solana?
Is there a js/ts modal for solana web3 providers anywhere ?
thanks, will take a look and try to port to js
`Invalid Option representation: 20. The first byte must be 0 or 1" }` what does this error represent?
<@!812822220598018158> - here's what this looks like: https://github.com/solana-labs/solana/blob/54f0fc9f0f9bd7e4c9261ed5327e7a81e9ad8265/cli/src/cluster_query.rs#L1687-L1706
Anyone using buffer-layout in js? I'm having a strange issue in this code      const archive_id = lo.cstr("archive_id");
    const created_on = lo.cstr("created_on");
    const dataStruct = lo.struct(
      [archive_id, lo.seq(lo.u8(), 3), created_on, lo.seq(lo.u8(), 3)],
      "ChatMessage"
    );
    const ds = lo.seq(dataStruct, CHAT_MESSAGE_ELEMENTS_COUNT);
    const messages = ds.decode(sentAccount.data);     Basically it's able to deserialize the data mostly correctly but it skips index 0 of array and elements start at index 1. Any ideas why? Do I need another padding somewhere? I'm using Rust in my program.
getProgramAccounts with a filter
great, what's the rpc call
yeah, `solana stakes` does exactly this
Is there a way to get all the stake accounts delegated to a specific voting account?
Would you think a sub organisation model would be sustainable for this? Just wondering! Just in case if that‚Äôs viable I might be able to ask my team if they wanna go this route and offer our code out as a sub foundation (if possible)
I don't disagree
Yes, but the thing is: if this was standardized, more people would be running these mutually compatible "browser-entrypoints", vs everone coming up with their own.
Certainly possible.  You'd want a front-end in front of RPC regardless for load balancing of any real load, so at that point you already have a separate server
A question for the Solana devs: have you thought about adding a plain HTTP GET endpoint to the RPC spec, one taking an account's pubkey (or a name from https://spl.solana.com/name-service ) as a parameter and which simply returns the account's data? That way, one could retrieve that data with the browser and therefore build a web directly on-chain without requiring separate servers to host the web-frontend. (Is it crazy to encourage people to put HTML files on-chain? It'd certainly help decentralization.)
Anyone know how SystemProgram::CreateAccountWithSeed works? What does the basePubKey do, and why does it accept a newAccountPubkey if it's derived from the seed?
yes because everything has a cost, but once testing is done at least it can be removed.
haha, watching that only right now, very helpful video!
That also costs units
I tell you and other newby questions in my video  https://www.youtube.com/watch?v=gA7hFdq2h9Q
Use sol_log_compute_units to determine how much you have left.
I'm writing a test where I mark an account readonly via `AccountMeta::new_readonly`. However, in my test I write to the account and was expecting the transaction to fail but it succeeds. Is this an issue with `solana_program_test`?
that is what `msg!` does, yes
Does outputting a message to the log have a cost?
<@!792782891196874792> Thanks for taking care of https://github.com/solana-labs/solana/issues/17301 so quickly! I've run a quick test and the fix seems to work for me!
That I have done at rust end, but how to send data using web3.js
As per <@!394537695185076244> as far as seeing the message but FYI - `msg` without formatting is 100 Execution Units per... if you format a string it gets even costlier so heads up
What don't you just create a struct type as your container and have multiple fields
Hello, I want to pass multiple data to `instruction_data` so how can that be achieved?
you have to use command solana logs -u <cluster>
Where does the solana msg!() macro output messages?
https://docs.rs/solana-program/1.6.10/solana_program/macro.msg.html
`Print a message to the log`
Print a message to the log?
Yeah, maybe I'll check it out once I have more time (the main reason why I have not really started yet)
Shameless plug try my solana getting started videos https://youtube.com/playlist?list=PL41Cw3fN3CfdbmhgxADwyDyIoDrxc22v2
Although, I do have quite broad development experience if you have specific questions
I haven't started on developing yet, but I am just relaying the answer I got for asking the same question üòÜ
By way while i have your attention do you use buffer-layout or borsh-js for serialization within javascript?
That I do not know, but basically this pull request will be shipped with 1.7:
https://github.com/solana-labs/solana/pull/16346
Sweet but is it native or does it still require rosetta?
1.7 should fix (most) issues as far as I am aware, which is planned to be released in about a week


///////////////////////////////////////////////////////////////////////////////////////////////

I am trying with SystemProgram.createAccount() and then I try to initialize it, but I get invalid account data for instruction
hi, what's the best way to create an associated account for SOL? say I want to have an escrow account for SOL for a user
Not really sure what you mean, I'm sorry.
Oh So for example if I want to make some contract interaction which changes the ownsership of temp token account, so that `temp_token_account` cannot be generated inside the contract and has to be passed through entrypoint after generating it from client? <@!445425471027544095>
Oh right Ill add update it
Thanks!
That's nice
`getBalance` or `getAccountInfo` of the `Connection` object will do it.   An account with a 0 balance doesn't exist
how do you check if an account exists yet (in js?)

a token account specifically, but generally would be good to know too
Except we are soon exposing the ability to query a subset of the sysvar accounts at runtime.
yep that's correct
Makes sense, will keep an eye for this. Also can you confirm whether this statement is correct was going through a tutorial where I saw this ?

https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/
<@!347689664855015424> the instruction cap is currently per top-level instruction, so CPI instructions inherit the parent's cap.  We are in the process of moving to a tx wide cap
some of the tests that generate accounts are legacy, and don't use the `solana-program-test` crate.  Newer program unit tests can interface with the program via transactions instead, which is more natural and aligned with  real world usage
Is there any particular reason then why every example in solana-library generates the account outside and then passes them in the transaction ?
yep it's possible
Hi, is it posssible to create an account like a token / token holder account or any other type of account in a smart contract ? or is it necessarry to create all of them on client side and then pass into the contract as accoutns
huh idk how I didnt see that line thanks! ill have a look
maybe one of your instructions consumed the max
that is correct, in your log there is:
Program MEReMsLsumR8KtHAEwKpbXcPtmcgYzzKrpmdmJgNoDM consumed 200000 of 200000 compute units
the file is called process_instruction after all, not process_transaction
yeah but the docs say that's the limit for each instruction, not the entire tx
https://github.com/solana-labs/solana/blob/master/sdk/src/process_instruction.rs#L190
I believe 200k is max combined between BPF instructions and system calls
is there a way to name a token without making a pool request on GitHub?
I think you checked a box that says you wouldn't ask here
hi there! I have this failing tx. https://explorer.solana.com/tx/5iGQbfFLRbC8yfNBv2oUZinim6LXmA3sqyzAzCf9oVpq5ZgxvfFk2PsnsfFEcRicyfV7xcSFRBdd7hCFRf3M2ccC?cluster=devnet

I wasnt aware these is a maximum amount of instructions/tx. Where can I find this number. Also is this bpf instructions or instructions as in the parts that make up transactions? If it's bpf instructions, the docs only show bpf ix per ix https://docs.solana.com/developing/programming-model/runtime#compute-budget
Im using Wallet connect... but in the document they dont specified anything about accepting transaction with private keys
Yes
Super! Thank you.
To `token-list`?
>  Does this mean that the same program can be executed from different concurrent threads?
Yes, it's very common in fact
> If so, is it possible to get the list of all data accounts owned by a program?
the getProgramAccounts JSON RPC  method can do this
Sadly no.  Circle only provides a testnet faucet right now.  Ask them to provide a devnet faucet üôÇ
In Solana, programs reside in each of their own accounts or addresses. These accounts are marked ‚Äúread-only‚Äù. Does this mean that the same program can be executed from different concurrent threads?

Also, can a program own any number of mutable data accounts? If so, is it possible to get the list of all data accounts owned by a program?
Is there a faucet for devnet USDC?
I would probably need a little more detail. Which wallet are you using and are you receiving an error?
Hi <@!455114989397868556>  Im having a problem with the following: Im able to connect my iOS wallet to a Dapp using Wallet Connect but I cannot accept any transactions by signing in with a private key. Any suggestions ?
Is it possible with `@solana#1400/web3.js` to send transaction to random address? I am creating transaction with `new Transaction().add(SystemProgram.transfer())` and then `sendAndConfirmTransaction` but fails on confirmation step of transaction with error `Error: Signature verification failed` ?
Hi, I have a quick question regarding wallet integration of custom SPL tokens. Im currently trying to learn anchor and am trying to build an spl token from scratch, meaning I dont use the `solana-token-program` to create the mint and accounts. Am I still able to add these tokens to sollet or an equivalent wallet? Or is it a requirement to be created with the  `solana-token-program`? Im also running the explorer locally and when looking at the mint account, its not recognised as such, even though the same fields are present. Any help would be appreciated!
Wonderful, thanks
The calculations are in the document I shared
Great, thanks. Is there a way to know what is the current rent balance balance required for storing 10MB on mainnet?
How long do pull requests take?
https://docs.solana.com/developing/programming-model/accounts#creating
10MB
What is the maximum size of the data we can store in an account space?
Hi everyone Im having a problem with the following: Im able to connect my iOS wallet to a Dapp using Wallet Connect but I cannot accept any transactions by signing in with a private key. Any suggestions ?
you need to pass account of the program you are calling (i believe)
Hey guys why I get `{ InstructionError: [ 0, 'ProgramFailedToComplete' ] }` as soon as I construct a Message `Message::new(&[instruction], None);` in the program ?
I guess I need to check it again
https://github.com/solana-labs/example-token/blob/v1.1/src/client/token.js#L407
maybe account ordering of your transactioninstruction is wrong?
This worked when I was using React but with node.js got this error
which instruction?
yes
Are you trying to do an SPL-token call? <@!668473703855685664>
Hello everyone, I tried to do a transaction from web3.js using node.js and got this error, how can I fix it?  ```
Transaction simulation failed: Error processing Instruction 0: invalid account data for instruction 
>      Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [1]
>      Program log: Instruction: Transfer
>      Program log: Error: InvalidAccountData
>      Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 1517 of 200000 compute units
>      Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA failed: invalid account data for instruction
```
Hey ya''
import { TOKEN_PROGRAM_ID } from '<@832686202074300446>/spl-token';
Hm I just a bit misunderstood, here https://spl.solana.com/associated-token-account you need to provide `ProgramId` so I though I need some Token Program..
to interact with the token program use the npm package <@832686202074300446>/spl-token
But all I need is to store data in data, issue different tokens with different amount and so on
Yes, I want to interact with token program and wasn't sure do I need to build my own
do you want to interact with the token program?
then i don't understand what you want to do
Cool, then I will just use hardcoded ProgramId from repo and work with this program without creating another one? Thank you..
if you are issuing smart contracts, as in deploying smart contracts then yes you can do this from js. But there is no way to write contracts in js
Hm, sorry if I wasn't clear. I want to build an app which will be issuing smart contracts on demand, like `solana` CLI for but web. My question is only is it require to be built Rust program or it is possible to use solana-token program what I linked above?
Is the question: "can i use the javascript library to interact with tokens?"
Or this is bad practice and better to write from scratch?
Hello Solana community, can I issue a Program (Smart contract) using Solana published program https://github.com/solana-labs/solana-program-library/tree/master/token , without writing my own with Rust and just write nodejs up on it to control accounts and data stored in this contract?
Yea, the airdrop works fine. But deploying upgradeable programs is giving me that error intermittently. It worked once, then is failing again.
Hm, I just tried `solana airdrop .1` on devnet and it went smoothly, maybe it was bogged down right at that point
I'm getting
```
Error: Data writes to account failed: error decoding response body: operation timed out
```
while deploying programs to devnet. I'm using `https://api.devnet.solana.com` as my cluster URL. Anybody else facing similar issues?
Yes
ah yes, must be
was that the generated code?
https://github.com/solana-labs/solana-web3.js/blob/aa5e806871ddcc5bbfd2b35014d06c18dcb73e9e/src/util/url.ts
I have fixed my ignorance
here's how

I never looked how
Yeah web3 is getting the websocket right by itself
Seems to be working now. Thanks <@!831450660146642974>
And web3 will get ws on 8900 automatically? I'm digging into web3 source and still trying to figure this out
<@!445425471027544095> v1.7 works great on the M1 chip - everything running as expected. Any idea when this might be getting released? Can't run Anchor and other packages because they all depends on 1.6 üò¢
the public one has a proxy in front so it does the routing for you. But if using your own RPC directly you need the 8899 port
let connection = new solanaWeb3.Connection("http://localhost:8899);
Hi buddy, I've been running my own validator now. And I'm also running some web3 script on the same machine. However when I change the script endpoint to my own validator, there's a connection error.
```
FetchError: request to http://localhost/ failed, reason: connect ECONNREFUSED 127.0.0.1:80
```
the web3 code is like this:
`let connection = new solanaWeb3.Connection("http://localhost");`
And of course I'm running the validator with `--rpc-port 8899 \` arg
Do I have to run something like a reverse proxy to enable :80 connection? Since I can connect to domain name without port when using official API, 
`let connection = new solanaWeb3.Connection("https://api.mainnet-beta.solana.com");`

in which :8899 for http and 8900 for websocket are both working fine.
This looks a lot better üòÇ
Or use the `unix_timestamp` field instead
I see. So in my program if I wanted to do an action once a day I should go for 216000
216000 if we're hitting the slot target, 0 if we're stalled.  Most days are somewhere between
Thank you! Also do you know how many slots there are per day?
Slot history is maybe doable, but it contains a `BitVec`
Hey everyone , do you have typescript version of this file https://github.com/solana-labs/example-token/blob/v1.1/src/client/token.js ?
I'd store the current slot in an account.  Then next time the program instruction is invoked, compare the stored slot against the current slot from the clock sysvar and if the distance is greater than 100 perform the action
I see. Was SlotHistory omitted because of that? Cause it looks like a rather plain struct to me at first glance.
Some of the sysvar's data/struct don't fit with the `get` model.  No plans at the moment to expose those, will need a different mechanism.
I've been using `sol_get_clock_sysvar` and `sol_get_rent_sysvar` in C++ on a 1.6.9 solana-test-validator, so far without issue. I've also implemented `sol_get_epoch_schedule_sysvar`, but haven't verified the correctness of the values yet. Will add Fees today; I don't see calls for the others (e.g. SlotHistory) in syscalls.rs yet. Are these going to be added later?

Also, I'm not sure how the `Instructions` sysvar would work in C. Looks like it's only a dummy struct.
I guess I could get the current slot initially and than just keep everything 100 slots from there to do the task
<@445425471027544095> so I was taking a look at the tally thing you sent me yesterday and I am a little confused. I see how you can get the current slot. But in a rust program what would be the best way to do something say every 100 slots for example.
You can get some info from the clock sysvar: https://github.com/solana-labs/solana/blob/53c91ee89efb6ae9297bb2f7c4c37c032ac74f55/sdk/program/src/clock.rs#L105
Hey guys, Is there any way to get block number
ok thanks, make sense for the locking part!
because a program only has access to the accounts referenced in the transaction.  This is a core assumption made by the runtime, that allows non-overlapping transactions to be parallelized without needed to deal with locking (at least at the program level)
thanks. Any reason why we cant do something like AccountInfo::fromPubKey(&Pubkey, is_signer: bool, is_writable: bool)?
yes that's right
You can issue new instructions from within a program via cross-program-invocation but still the top level instruction must be passed all the accounts required, so you will still run into your current limitation
and it can only be sent from off-chain right?
<@!784363803001356288> - seems like you'll need to break it up into multiple transactions.  A transaction currently will only hold about 30 addresses max
I was hopping there was a something like AccountInfo::fromPubKey(&Pubkey, is_signer: bool, is_writable: bool)
The problem is if I have to send back to dozens of people, I will not be able to have it in one instruction (from TS let's say)
no. let's say I have bunch of token account pubkeys (saved into a data account which I pass to the instruction) to which I would like to send back some token (the program owns a token account from which it will be debited). I can always, via the SDK, pass this token account own by the program, and a list of AccountInfo to which I need to send back tokens (I can read the data account containing the list of pubkeys).
How are the sysvars via syscalls stuff working out for you?
Are any of those syavars?  If so, you may be able to query them at runtime rather than pass them in as accounts on testnet/devnet
And another one, If you need to get a Smart Contract calling another contract, you will need to provide from the outside world the account infos?
thanks. so if we have a LOT of accountInfo to pass, we need to cut in several instructions isnt it?
if you wanted to propose a protocol standard similar to the ERC/EIP proposals, is there a formal place to push said standard such that the community can vote/improve/comment on it?
yes saw that, so cannot do without
The sha256 update function IIRC
Has to be because it calls some other async function
I could do my own testing but do we really need https://github.com/solana-labs/solana-web3.js/blob/cf588e64a1c2845d936c1f8baf10194aa166adac/src/publickey.ts#L163-L183 `findProgramAddress` to be Async? How much time does it take average/max?
Shame, good to know tho - thanks
that's it. would be nice to have a `solana-install uninstall`, doesn't exist today though
On a more serious note - is there a recommended way to uninstall solana cli other than just `rm -rf /Users/xxx/.local/share/solana/install/active_release/bin`
I'm just here watching my rust tests fail in 4K üòÜ
Haha love that
You guys must have eagle vision, I have a 40" monitor
Ah that makes sense tbh - I just switched from a 2019 Macbook pro 16" so definitely was a much bigger fan of the screen there. Eagerly awaiting that 16" M1 üôè
I sit outside on patio furniture all day, external anything just doesn't cut it for me anymore.  Too much hassle to bring it in at night
I'm waiting for the 16" too - but tbh 13" + external monitor works pretty great
yes, click on the link, there is one dependency as well
that is python3?
an example if you need it for sollet
https://twitter.com/skynetcap/status/1333962602414632962
Hello, does anyone know how you do to encode the private key of the keypair.json file to the standard private key format with letters and numbers, I think it is base58 but I'm not sure
heh, desktops are a little too heavy to rest comfortably on my lap.
aside from browsing instagram
What can one do with a laptop? I use to have one but always used it as a desktop machine
When apple ships a 16" M1 MBP, I'll get one.  That tiny 13" screen is a deal breaker
Early adopters pay the price sometimes
You could partner with apple to open the solana genius bar and charge the same
üí∏
I would say one every 2 hours üôÇ
Have you taken note of how many users reported this issue?
All on-chain data has to be passed through the instruction accounts, so I would say no. The only on-chain info you can get elsewhere are sysvar or a few other things
build from source on the v1.7 brach hopefully will work for now.
Hi guys, when we know a pubkey from an account, is it possible to generate the AccountInfo directly from the smart contract? (and supplying is_signer and is_writable)? I have checked the doc but it seems like no (https://docs.rs/solana-program/1.5.1/solana_program/account_info/struct.AccountInfo.html) Thanks
https://spl.solana.com/associated-token-account I am wondering if this should be changed for a simple `Token.getAssociatedTokenAddress`? with a link to the underlying js of course.
nice, where to pay to get it? üòÑ
tunes in to the entire chain
yup
so there is an indexer behind?
yes
the technology name is not the point, its the metaphor tho
ty! sorry my brain is tired after work üôÇ
The RPC server doesn't do TLS.  Just use `http://...`
An analog technology name for a fully digital world
OK thanks!<@!585868308419444749>
That native account data field is just program-defined bytes.
Assuming that's what's actually stored in the account
What does this error mean? Error: RPC request error: cluster version query failed: error sending request for url (https://localhost:8899/): error trying to connect: record overflow
got it! Need to import sysvar::{Sysvar} otherwise the trait will not be inherited in compiler
<@!585868308419444749>  OK I get it! A generalized question to follow is: Can I deserialize the data field to get any possible info as defined in various programs? like Token's Account, Token-Lending's Market/Obligation/Reserve...?
Rent::get() also apparently doesn't work :/
How can I instantiate a Rent instance? Rent::from_account_info(&acct) is not compiling for me (solana-program 1.6.10)
In that case deserialize the native account's `data` field to an SPL Token `Account` then read its `amount`(?) field
<@!585868308419444749> Thanks for your reply, but I was not to check the (native) SOL token balance, but the balance of a specific token created by the spl-token program (e.g USDT)?
Just load the account like normal and read the `lamports` field.
Sorry for the seemingly stupid question, I'm quite new to Solana
Hi, could anyone tell me how to get the balance of a specific Pubkey for a specific token in solana programs? We noticed a "getAccountsByUser" method in frontend code (web3.js), but were not able to find a counterpart in "backend" Rust codes that are to be deployed on chain. Many thanks!
thank you guys!
Hey <@!445425471027544095> , I'm trying to run solana and anchor on a new M1 mac and running into issues with `ring` deps as well as `openssl` for `solana-test-validator`. I see you have a merged PR here but still not super clear on how to resolve these issues (https://github.com/solana-labs/solana/pull/16346). Should I be building from source or?
Same. I have the tab open though.  Might get a chance to take a look later this evening
I noticed your issue, yep.  No time today to dig into it unfortunately
hey <@!445425471027544095> and <@!585868308419444749> sorry for the ping again, but if i could at least get any confirmation you guys noticed my message that would be awesome, thanks!
a good portion of my time is spent debugging my own copy/paste errors.  and thats no good
this boilerplate code is so tedious - serialization for rust and js state and instructions.
contemplating restarting using anchor
cant wait! haha, we don't have a choice here on the other hand, looking to make a really good tool for everyone and to the Solana team..
I'm working on some interesting onchain stuff, but keeping it low key for now.
thatd be cool - happy to take a peek but I don't really have a use case for that right now.
will share graph access very soon.
thanks mate wbu
haha i saw that
can't wait to... tune in.
Solana FM

Something that covers the broad spectrum (the metaphor)
haha way different mate
Solgrapha?
SolQL?
Grapholana?
GranolaQL? <- _my personal fav_
it is
But 6.10 is the latest right?
noice
We even got a nice name
Soon you will
Not that I know of right now
download 1.6.9 instead
How can I fix this?
Getting this error when downloading Solana.
<@!445425471027544095> Sorry to alias you, have you stumbled upon a team opening a GraphQL to the entire blockchain's data?
yep, it's just an instruction with the programId set to the memo program id [1].  In the instruction data, add any UTF-8 encoded text you want

[1] https://github.com/solana-labs/solana-program-library/blob/9df31b10c04db522cc01b442e073119f41ce786e/memo/program/src/lib.rs#L21
Any idea what it would take for me to do this myself?
I don't think we have this nicely bundled up in web3.js yet
With test-validator, you can get it to skip slots at startup but not during operation
but that's just for program unit tests
oops, wait.  I lied.  With `ProgramTest` you can üòï
Good point.  In my case I can actually test what I'm looking for with a unit test as well - by mocking up slothashes account.
You can do it programatically from an integration test
Hi folks, I'm looking to send a memo from a web transaction. I see the cli has a nice `--with-memo` option, but is there any option in the web3.js tools or something like that?
I'd like to test some skipped slots.  Ideally forks too, but that might be asking a lot.
Any idea how to make test-validator skip some slots?
It will show up in the explorer if the freeze authority is something else than None
https://github.com/solana-labs/solana/blob/8a574baae23ef767d6f73f2584e937caad117f97/explorer/src/components/account/TokenAccountSection.tsx#L160-L167
Hi folks, trying to build the hello-world example locally on OS X 10.13, however I'm running into issues with the precompiled rust bpf binaries when attempting to compile it, error is `dyld: Symbol not found: ____chkstk_darwin Referenced from: ~/.rustup/toolchains/bpf/bin/cargo (which was built for Mac OS X 10.15)` Is there a version of the toolchain thats distributed that supports older releases of OS X?
No, I didn't. I did see that the testing-framework that's there for C didn't work out-of-the-box for C++, but I personally prefer tests that run end-to-end, i.e. running actual transactions on a test-validator.
Hey good to hear if you don‚Äôt mind me asking. Is there something you did to make tests work with c++?
Yeah. But I gotta give props to the Solana core developers. They've helped me immensely by smoothing out the rough edges of Solana's C support in the past few weeks. I feel like it's on a level now where I have access to all the functionality I need.
Although I should add that since Solana itself is mostly written in Rust, you can get more insight into the inner workings by at least knowing how to read Rust; something I'm currently still struggling with a bit, being someone who's writing programs in C++.
Once you go to C++ (over plain C), I feel like you can get most of the type safety you'll need.
Agreed. Supports from the ecosystem is also a big factor
Rust is more widely used. If you want to interact with other programs, it's easier to use the interface definitions. You'll find more Rust tutorials. The C SDK is very basic and you'd have to build low-level abstractions yourself.
That said, if you're the type of developer who really wants to understand what's happening under the hood, and who wants maximal efficiency, writing programs in C might be for you.
Where you get safety if you write the contract in Rust
Basically this boils down to the advantage of Rust over C
Hello is there any advantage of writing on chain programs in rust rather than c?
How can you tell if a min address has freezing authority? For example, how can i look at SRM or any other token to check its freezing authority status?
It worked üôÇ
ow thanks
install 1.6.9 please, there are no windows build artifacts in 1.6.10 due to a temporary issue
cmd panel says cannot execute  the specified program
solana-install-init.exe v1.6.10 say the file unreadable and corrupted, what would be the reason? thanks.
I'm not aware of any examples, and not really sure about the specifics of the implementation you are describing. I was only commenting in theory that this should work.
I am currently struggling with builing correct CreateAccountWithSeed instruction. Is there a repo where I can find some inspiration? Basic example of cross-program invocations doesn't help - I keep getting "Cross-program invocation with unauthorized signer or writable account" error. I would be able to eventually find the problem myself but redeploying the program while debugging takes too much time. Is there a way to invoke CPI in unit-tests?
Just copypasta from sollet
No.  You can use the bip39 and ed25519-hd-key(?) packages to get there though
This idea is definitely feasible. Our team is working on NFT metadata specs so that it can be consistent across all NFT related projects on Solana, but it's not ready yet.
is there any way to do the same in web3js
Hello! We are working on a game, relying heavily on NFT with project-specific metadata. We've read that this feature is in development now, so we decided to simulate it somehow
Our current plan looks like this:
1) Program creates new token account with mint rights owned by it's derived address
2) Program mints 1 token of according type, transfers it to user account and closes further minting
3) Program creates new account with deterministic seeded address using system_instruction::CreateAccountWithSeed, based on our program_id and new token mint account_id, owned by our program
4) Whenever program wants to use NFT metadata, it can generate that address again and access the account. 

Is that a viable idea? If not - what is the best suggested way to simulate nft metadata for now?
Ok
Please don't cross post
Hey does anyone know if Solana is FIPS 140-2 compliant? What encryption is used?
Thank you very much for your clear explanation. I got it. It is little bit costly for many "new" recipients therefore, I was chasing the cheapest solution. I will check out sollet.io then.
Some wallets, like sollet.io, allow the user to explicitly create a token account for a given type.  Other wallets, like TrustWallet, explicitly disallow this and assume the sender will fund the creation of their token.
The general rule is that if the token account doesn't exist, the sender is expected to fund the account
how can recipients create their accounts without coding? which wallet they need to use? Thank you very much.
wow üôÇ Thanks
We are prototyping with Web3 and building a simple yet-another-wallet dashboard. We are able to connect to our Sollet wallet and can see the number of Sol tokens in the response. However, we also have a few other tokens in Sollet (RAY, OXY, SRM) but the web3 response does not inlcude any info about these 3 coins. Does anybody have any tips on how to get a list of all the holdings in a Sollet wallet?
there will be around 8K to 10K recipients, we would like to migrate from digital currency to -sol based -spl token
Yep
Thank you, so without SPL token account, recipient can not have the token then? Fund recipient cost more SOL then transferring it. Is there any way to recipient pay the funding costs?
The recipient needs an SPL Token account to receive the tokens that you want to send them.  So if you really want to send them tokens and they haven't created their account yet, the sender can fund the creation of their account
Hello, I have question on fund recipient. Can I send and SPL token to any Sol address (non exchange)  without fund recipient. What is the main purpose of fund recipient?

Thanks

example:
spl-token transfer --fund-recipient AQoKYV7tYpTrFZN6P5oUufbQKAUr9mNYGe1TTJC9wajM 50 vines1vzrYbzLMRdu58ou5XTby4qAqVRLmqo36NKPTg
Transfer 50 tokens
what is the possible margin of error in the `unix_timestamp` value of the clock sysvar?
Try `solana-keygen recover prompt:?key=0/0`
thanks
when you restore your wallet on sollet it shows which derivation path its using
How can I check the derivation path of sollet.io
Our CLI does not use the same derivation path as sollet
I generated wallet via sollet.io
I used the keyphrase with Phantom App and it recovered the same address.
But when  I use following command and paste the same key phrase it generates a different address
`solana-keygen recover`
See the fifth bullet point here. https://docs.solana.com/developing/test-validator#advantages
<@&842166341217288252> why does my local node (`solana-test-validator`) delete transactions after certain time?
Is it me doing something wrong if the Rust RpcClient::send_transaction does not report an error but the transaction is missing on Solana Explorer?
I am working on putting together an on-boarding tutorial series in collaboration with some community members and I will make sure that everyone knows about them and where to find them when they are complete


///////////////////////////////////////////////////////////////////////////////////////////////

hey how do i find the seed of a deterministic address created in sollet?
1.6.10 isnt out yet for windows. Try to install 1.6.9
Account's owner could only be program. Maybe what your can do is to store user info  (e.g. user pubkey) in the account as the user space owner.
I got this error: "Blocked a frame with origin "http://localhost" from accessing a cross-origin frame." when I try to connect sollet.io wallet from my SSR page based on Nuxt.js.  However, for my SPA VUE page all things work well. Can anyone help me sort out ?
Does anyone know the solution to my problem?
I am unable to install solana on my windows pc. When installing via .exe file, i got error from windows saying that the file is corrupted or unreadable.  I also tried installing via source code. In that, the build failed
Does anyone knows a program where each user has an user account which stores some data? Im looking to implement something like that but currently strugle with how to create those accounts and assing them to a user
anyone know where i can get some help with anchor?
Thanks <@!814228493302497301>
It may mean your account is out of funds
Any Golang devs out there? Have some questions about Subscription web-socket methods.
Not at this time, the transaction budget is fixed at 200_000 execution units
My program fails to run with "Program failed to complete: exceeded maximum number of instructions allowed (200000) at instruction #29900". Is it possible to raise the instruction limit for a program?
F
guess i got to write my own rust tests then...
damn
What does this error mean? `Error: Deploying program failed: Error processing Instruction 1: custom program error: 0x1`
hey guys, I'm playing around with localnet account generation and recovery, and there is a mystery. I can create a local account and airdrop to it vi CLI. I have the recovery seeds.  When I go to sollet.io, and select localhost, and use the recovery seeds, the account recovered is different than the account created from CLI.  I would have thought it would recover the same keypair given recovery seeds (mnemonic). Furthermore, I can "export mnemonic" from sollet.io and I get the same recovery seeds displayed when I created the first account via the CLI. Is my question clear, and does anyone know whats going on?  Thank you!
Thx sir, for token list just clone the github code,submit details token and commit right??
Has anyone dealt with a lifetime issue with rust??? I am just trying to invoke a system_instruction::create_program command, but I am getting lifetime issues from the entrypoint.rs variables :(((
Hi all, my friend and I have come up with a project idea we'd like to make it into a reality. We're looking at doing it on Solana because of the TPS and low fees. It also involves a lot of NFTs and trading them and it seems we can mint those for free on Solible. Would it be possible to mint 1000+ NFTs?
I figured it out. `let mut rawKey: [u8; 32] = [124, 240, 106, 127, 180, 132, 73, 71, 188, 111, 58, 6, 127, 54, 45, 48, 208, 22, 180, 149, 84, 223, 16, 32, 21, 60, 159, 177, 91, 216, 103, 115 ];
        let adminKey = Pubkey::new_from_array(rawKey);

        if *passedAdminAccount.key != adminKey {
            return Err(..);
        }` basically I can get PubKey by converting string address to bytes using javascript `(new PublicKey("gew452rgKu2LCvtMj4TG6Hhb85SN3fZ79Gg12JVei")).toBytes()`, then passing these bytes to the  Pubkey::new_from_array constructor. After that you can compare it with the passed account key
Maybe. I waited a couple of days
3days sir?
Patience‚Ä¶
Maybe someone has a better idea ?
You need to set a static seed to generate the same Pubkey over and over.
Pubkey::create_with_seed
https://docs.solana.com/developing/programming-model/calling-between-programs
Thanks for tip, but for me it seems like a verbose workaround for such a simple thing as hard-coded account address
If you want to change the account data later, you can create a pda that owns the account.
Okay, i see, as far as i tried ( which did work ), you can create an account that holds the info ( admin account ), program generates the account pubkey and checks whether it matches the passed account.
No, I don't need admin account to be signed, I just need to get admin account into my program anyhow, so I can send SOL to it.
So you want to be able to check whether the admin account is the same as the tx signer ?
doesn't work either, pubkey doesn't have from_str function
I pass admin account to the program and then send sol to this account . So, I need to know if the passed account address is correct, because user can pass anything
I think best practice would be passing the address in accounts field.
oh my bad. maybe something like `let program_id = Pubkey::from_str("BPFLoader1111111111111111111111111111111111").unwrap();`
It's in javascript I can get it like this. But how to get it in rust program..
Thanks <@366095190261235736> , yes then I got Node js installed. Will follow examples page hello world program now
new PubKey(stringAccount)
How to convert string account address to PubKey in Rust program?
to get more data from failed simulations
is there an equivalent to `export RUST_LOG=solana=debug` for the js client?
For make an app for Solana blockchain wih android studio it is better use Rust or C?
https://nodejs.org/en/download/
that is nodejs
Not a stupid question
by Node what did he mean, we need a solana node running , rust installed or node js? Sorry if this is a stupid question..
Hi everyone. What must be passed as third argument to invoke_signed? And what is the role of bump seed.
Thank you <@366095190261235736> , I am following David Choi, however he has got Mac. He did mention that we need to install Node to be able to proceed , because only client side framework is solana web3.js ..
Hello, how to load account by public key in the program?
You can also follow this video
https://www.youtube.com/watch?v=gA7hFdq2h9Q
<@!742586091890016308>
If yes, just follow the readme in that repo
Did you clone the helloworld example from Solana?
https://docs.solana.com/developing/on-chain-programs/examples
Can someone please guide?
Hi, i am  new to solana, i installed SOLana CLI on my windows laptop, created a file wallet, got airdrop of 1 SOL. Now i want to develop first Hello world program using Rust, i have rust installed, env variable set, but dont know where to write rust program, is there any GUI tool, SDK for writing rust program for solana in windows.. also what do you think is better to use, windows or ubuntu (linux)?
is there any way to integrate solana-cli with python ?
Nevermind, used the "stable" keyword instead of 1.6.10 and it worked
hi
Can any one confirm how we can create associated token account using CLI I need to get below  https://spl.solana.com/associated-token-account
Hi guys ! I have a quick question regarding installing the Solana dev tools on my mac. Tried to download from terminal but get the following error: curl: (22) The requested URL returned error: 403 
solana-install-init: command failed: downloader http://release.solana.com/v1.6.10/solana-install-init-x86_64-apple-darwin /var/folders/_9/kmqlwsw148xchfy7c6f78yr80000gn/T/tmp.hfxgLKu4/solana-install-init
Not sure which channel i should address this in, as I dont have permissions to write except here
sir  already submit my projects to token-solana-registry how long waiting for accepted ?
any help appreciated!
anyone else see their logs printed twice ?
my listener to the log statements is then firing twice, causing an order to be created twice...
in my local solana cluster every log statement is printed twice.
hi all, asking again because now my bug is more of a blocker....
I don‚Äôt know, just thinking aloud
‚ÄúUTI‚Äù
Unique Token ID‚Ä¶
Maybe NFTs on Solana could be called something else
This is potentialy a great opportunity to change the unfortunate naming‚Ä¶
One more thing‚Ä¶
Maybe we are just waiting for someone smarter to build an NFT smart contract
Happy to maybe team up with someone looking to build the same thing and help each other. DM me if that sounds good, we can pool our resources.
I'd rather see it open source though... And integrated in wallets like the mobile version of Metamask
Either that or it's a massive race to be first to launch a Solana-native NFT marketplace...
Attaching metadata¬†(any kind of metadata) to an SPL... I'm currently looking at building an NFT marketplaces for a couple of projects I'm working on, but even large projects like Star Atlas seem to encourage users to set up markets on serum to simply trade NFTs (!!?). I love the efficiency, speed, and cost of SPL tokens... But surely there is a better way
I have the same question
in documentation The current maximum size of an account's data is 10 megabytes.
Back to this üòÇ seems like this one little thing has all my solutions
The `Tally` instruction kinda does this too: https://github.com/solana-labs/solana-program-library/blob/a3dbf08998011957750dc3c4b765dcd9369c657f/feature-proposal/program/src/processor.rs#L338-L345
Are there any current examples of a program checking how many tokens a user owns by getting information from the token account?
have just started to get HTTP 429, too many requests, from the API endpoint. Has there been some changes there? Really not pushing hard, and its occurring with requests from multiple IP addresses, so actually seems like it may be an error? Anyone else seeing similar?
I did but then also it fails
what do you get for `activity_account.publicKey`?
const activity_account = new Keypair();
Or actually, 1
two newly created Keypair
What is your `Signer`?
Solana web3.js v.1.15.0
I'm trying to write an integration test, but whenever I sign a transaction, it crashes with the following:
    TypeError: unexpected type, use Uint8Array

      at checkArrayTypes (node_modules/tweetnacl/nacl-fast.js:2165:13)
      at Object.<anonymous>.nacl.sign (node_modules/tweetnacl/nacl-fast.js:2269:3)
      at Function.detached (node_modules/tweetnacl/nacl-fast.js:2290:24)
      at forEach (node_modules/@solana/web3.js/src/transaction.ts:511:35)
          at Array.forEach (<anonymous>)
      at Transaction._partialSign (node_modules/@solana/web3.js/src/transaction.ts:510:13)
      at Transaction.sign (node_modules/@solana/web3.js/src/transaction.ts:472:10)
      at Connection.sendTransaction (node_modules/@solana/web3.js/src/connection.ts:3396:21)
      at Object.sendAndConfirmTransaction (node_modules/@solana/web3.js/src/util/send-and-confirm-transaction.ts:29:21)
Sorry if this has been asked before, or if this is the wrong channel, but I'm curious if there is an idiomatic way to associate metadata with an NFT. I understand how to create a non-fungible token with the token program. I can also envisage a program that mints the NFT, and in the same transaction also creates a new account for a program that stores the metadata for the NFT, and you could always look up the transaction the NFT was minted to verify this metadata account, if that makes sense. This feels bespoke though, so I wonder if the dev community has figured out a more standard way to do it?
I see u üëÄ
I suppose it doesn't matter which program it is, I somehow need to get some keys to proceed with the deployment. wallet integration might be a part of a web3 website that talks with my program... or... dunno.
I'd just for love someone experienced to go over this step by step (not a 5 minute video that skips over everything like I saw so far)
You should probably be using the CLI tools, not a web wallet.  AFAIK there's no webwallet integration for the helloworld example
hm. `helloworld-keypair.json` seems to be responsible for that... but how to get that value out of my public address from my wallet?
yes, but I'm not quite sure how to connect my wallet (sollet or phantom) to my deployment. local deployment happened kinda automagically
Did you airdrop yourself some devnet SOL before starting?
hey
dunno if this is the right channel - if it's not, please redirect me to a better one
that said - here comes the problem:
I've followed the readme from the `example-helloworld` repository and deployed the rust program locally. the `npm run start` script runs and returns the result as expected
but when I try to switch to devnet `solana config set --url devnet` + `solana program deploy dist/program/helloworld.so` - I get the following:
```
==========================================================================
Recover the intermediate account's ephemeral keypair file with
`solana-keygen recover` and the following 12-word seed phrase:
==========================================================================
12 words, but each time they are different anyway
==========================================================================
To resume a deploy, pass the recovered keypair as
the [PROGRAM_ADDRESS_SIGNER] argument to `solana deploy` or
as the [BUFFER_SIGNER] to `solana program deploy` or `solana write-buffer'.
Or to recover the account's lamports, pass it as the
[BUFFER_ACCOUNT_ADDRESS] argument to `solana program close`.
==========================================================================
Error: Deploying program failed: Error processing Instruction 1: custom program error: 0x1
```

I wouldn't want to mess something up and all of the above is very new to me, so here comes the question:
is there any documentation that I missed explaining step by step how to deploy something to the devnet (or any other environment)?

cheers
ok, just wanted to confirm it wasn't us. would love to dive in and learn more if you need any help.
thanks
If transferring lamports probably system program, if transferring spl tokens then probably spl token program
I've reproduced it a few minutes ago.  Will investigate further here shortly
<@!585868308419444749> I know y'all are busy, is there anything we can do to confirm <@!123887120346644482> and my issue with the multisig issue? I was going to see if I have the same problem with prior versions: https://github.com/solana-labs/solana-program-library/issues/1805
or the system account?
hi, if I want to transfer SOL, what program ID do I need when I run invoke_signed? is it the token program Id ?
It worked like a magic. üíØ
Thank you
Use 1.6.9 instead of 1.6.10 on mac.  CI let us down for MacOS/Windows releases in 1.6.10
`cargo-bpf` is unrelated to solana.  Our cargo plugins come with the CLI tools https://docs.solana.com/cli/install-solana-cli-tools
System Mac Darwin
How to solve the following error with cargo-bpf? Any alternative approach? cargo install cargo-bpf
error: No suitable version of LLVM was found system-wide or pointed
       to by LLVM_SYS_110_PREFIX.

       Consider using `llvmenv` to compile an appropriate copy of LLVM, and
       refer to the llvm-sys documentation for more information.

       llvm-sys: https://crates.io/crates/llvm-sys
       llvmenv: https://crates.io/crates/llvmenv
   --> /Users/cryptogod/.cargo/registry/src/github.com-1ecc6299db9ec823/llvm-sys-110.0.1/src/lib.rs:486:1
    |
486 | / std::compile_error!(concat!(
487 | |     "No suitable version of LLVM was found system-wide or pointed
488 | |        to by LLVM_SYS_",
489 | |     env!("CARGO_PKG_VERSION_MAJOR"),
...   |
496 | |        llvmenv: https://crates.io/crates/llvmenv"
497 | | ));
    | |___^

error: aborting due to previous error

error: could not compile `llvm-sys`
I see a few errors related to bpf, but none was due to llvm
Absolutely, you are free to pass whatever account you like.
Is it possible to call a program with someone else's account?
I'm not all the familiar with solong. If you can recover the keypair with the CLI tools, it should work
Like this? https://docs.solana.com/developing/on-chain-programs/debugging#monitoring-compute-budget-consumption
is there as quick way to see how much cpu ive used via print statement at different parts of my code
Sorry for rambling.
But it is using ed25519-dalek internally! How does it do that?
I guess the sdk's keypair is ed25519 so I could use that
I'm not tied to ed25519. Is there another assymetric crypto crate that definitely doesn't create huge stack frames?
Seems 4k frames are a hard limit.
After adding ed25519-dalek to my solana program, I get non-fatal build errors like

> Error: Function _ZN209_$LT$curve25519_dalek..window..LookupTableRadix256$LT$curve25519_dalek..backend..serial..curve_models..AffineNielsPoint$GT$$u20$as$u20$core..convert..From$LT$$RF$curve25519_dalek..edwards..EdwardsPoint$GT$$GT$4from17h1e9be112f934ec3bE Stack offset of -15848 exceeded max offset of -4096 by 11752 bytes, please minimize large stack variables

And these seem to manifest as access violations when running the program. How can I deal with this? Can a tell the compiler to give me bigger maximum stack frames?
basically simple question is, is it still updateable?
ok this is going to sound super dumb to you - but i minted using solong wallet xD. Can I still access it and update it via code in the terminal?
See `spl-token authorize --help`  you need to disable the mint authority (after you have the supply where you want it!  this can't be undone)
Can anyone advise me on how to do so? or link me to some docs that do?
Hey guys - I need some help. I minted some SPL tokens, but I'd like to make it a fixed supply
Oh thanks, but then what is meant in the documentation under 10 mb for the account.? And other chain wax) no limit memory for data)
Thanks <@!469776019784466442> and <@!585868308419444749>
Set the envvar `RUST_LOG=solana_client=debug
so a private key by definition cannot exist
program derived addresses are specifically chosen to not reside on the ed25519 curve
oh, no its literally impossible to sign offchain
yea thats what i normally do but im running into a weird signing issue trying to create an account on chain so was wondering if i could just work around that for now by creating it off-chain
using `invoke_signed`
this lets you generate the same address on both ends. you need to pass the address in the accounts array but this lets you allocate it on the server
i do like `let (addr, ctr) = Pubkey::find_program_address(&[seedword], program_id);` in the program and `(await w3.PublicKey.findProgramAddress([Buffer.from(SEEDWORD)], PROGRAM_ID))[0];` in the client
call `solana_logger::setup_with("solana=debug");` before your program starts
makes sense, thanks
ah ok
For any account, if it is
1. an address with private key: you sign the transaction off chain using e.g. `Transaction::new_signed_with_payer`
2. an program derived address: you can only sign the transaction on-chain using `invoke_signed` with the seeds and the bump seed. (you can think of the seeds and the bump seed are the "private key" for a program derived address)
Since you need to have both the funder and the new account as the signer, it is not able to create account off-chain if one of the account is program derived address
In both case you don't have space limits.
On other chains like Ethereum, you do `map[address1] = value`. In Solana, you put the `value` into another account with `address=derived address`.
Hello, in documentation I read max size on data account 10 mb, I can increase this? Other blockchain not have limit for data program . Just buy ram. Maybe organise chain accounts data? 3 account summary 30 mb? Account have pointer to next account data, this solution work? Thanks)
for `SystemProgran.createAccount` is it possible to do this off-chain with `newAccountPubkey` being a program derived address? everytime i try to invoke this function with a program derived address as `newAccountPubkey` i get `Error: Signature verification failed` as when sending the transaction that includes that instruction, you need to include `newAccountPubkey` as a signer
When I try to submit a transaction to my program, I see the error

> RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: incorrect program id for instruction [4 log messages]

How can I see those "4 log messages"? The don't show up in my 'solana logs' output.
Hey, i am trying to get some data from a data account to my react front-end, the data contains `u32` `[u32;4]` `bool` `[u8;32]` data types, I tried using borsh-js but to they don't provide `[u32;4]` deserialisation, any way to do this?
I did, that creates an account for an spl token, not sol
Thank you
Seems like your `curl` is broken, it can't TLS
How to resolve the error associated with SSL-Connect on Mac?
Downloading feature-proposal 1.0.0
+ curl -L --retry 5 --retry-delay 2 --retry-connrefused -o spl_feature-proposal-1.0.0.so https://github.com/solana-labs/solana-program-library/releases/download/feature-proposal-v1.0.0/spl_feature_proposal.so
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
curl: (35) LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443
Solana compiled successfully "Finished dev [unoptimized + debuginfo] target(s) in 6m 04s"
Hey! Maybe someone has met with such an error
`{'code': -32002, 'message': 'Transaction simulation failed: Error processing Instruction 0: Provided seeds do not result in a valid address', 'data': {'err': {'InstructionError': [0, 'InvalidSeeds']},' logs': [ 'Program 675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8 invoke [1]', 'Program log: process_initialize: InitializeInstruction {nonce: 9}', 'Program log: process_initialize: associated_address: 5Rkuvrx4RQKNQZReDeSj2H59Y1BuAJ8gYZ743BQiQuK7, bump_seed: 255' ' Program log: process_initialize Error: Associated address does not match seed derivation ',' Program log: Error: InvalidSeeds ',' Program 675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8 addressfumed 20215 of 200000 seedsUt1Mp8 consumed 20215 of 200000 compute units ]}}`
when requesting to send a transaction. Here the account `5Rkuvrx4RQKNQZReDeSj2H59Y1BuAJ8gYZ743BQiQuK7` appears, but this account is generally empty and does not belong to anyone.
<@!693486673606082580> have you seen the escrow tutorial?  I think might describe exactly what you want to learn.  

https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/
I am not sure what is the program that needs to own it, is it my own program? since I plan on using it just for SOL, how much space does it need?
ok, that logic is fine, I just need to know how to create the account
Any account can hold SOL.  Your program should describe the account's data however it needs to describe the release criteria
Do you guys know if/when the compute limit is going to go from being instruction wide to transaction wide?
which holds sol temporarily until my program releases it to the user‚Äôs main sol account
yes, like an escrow account for my program
So you want a native SOL account associated to another SOL account?
no other spl token
I want an account that can hold SOL
if you're trying to create an SPL you should be using this program.

https://spl.solana.com/associated-token-account


///////////////////////////////////////////////////////////////////////////////////////////////

https://docs.solana.com/developing/programming-model/accounts
Could someone clarify if an account is created with enough lamports to be rent exempt, is it still charged rent on this first access? 
This means that if I needed to "move" to a different account for purposes of "changing" account data size (as mentioned here https://discord.com/channels/428295358100013066/517163444747894795/707504038756745226), it would only be charged rent on creation, and not again when I transfer all the lamports to the new account, right?
<@794602437440569364> so you were able to decrypt the message from blockchain?

Can you list down steps if possible?
Are there any smart techniques for debugging an access violation in a solana program? Right now I'm just commenting out code and msg! debugging to try to identify what code is causing it.
<@848016768152240158>
Can't seem to find the parser logic for BPFLoader1111111111111111111111111111111111.. BPF Upgradeable is fine tho
Could you please give an example?
What do you mean by deploy token? You can mint a new token & give it to an account in a single transaction
Hey!I need help with getting information about liquidity pool parameters. So basically to create swap transaction using API u need 15 pool keys (ammId, ammAuthority, ammOpenOrders, ammTargetOrders, ammQuantities, poolCoinTokenAccount ...).Please, give me the source, which contains pool keys for every pool that has been created on Serum, or way to get this information by token smartcontract (token address). The pool I am interested in has not yet been created, but soon I will know the address of the token
Thanks!
I mean the bounty is kinda dead in the water without them... right?
Does that mean that those are planned????
The NFT Wallet bounty mentions "The wallet service needs to support monitoring Solana‚Äôs ERC20-equivalent tokens and **721-equivalent & 1155-equivalent‚Äôs NFT**. See solana-labs/solana-program-library"
quick question, which programs are the most utilised till date?
getting blockhash error sometimes when sending transaction. Is there a way to not get this ?
Hello, I'm using both a file system wallet and Sollet, and I tried to generate accounts on both of the services using the same mnemonic phrase, but I'm not getting the same result. 
I suppose this is due to the different derivation paths used, but I haven't found any information to choose it using Solana CLI. Do you have any information about that ?
Hey ! Did RPC rate limits recently changed on `https://api.mainnet-beta.solana.com/`? 
With my script I'm getting ratelimited when before it was not the case
I make 9 requests per second to avoid being ratelimited
There is one NFT wallet bounty up for $10k... https://github.com/solana-labs/solana/issues/15766
Can anyone help me understanding the tokenswap program better? They way i currently understand is that you can initialise a new pool. The function in processor.rs to do that is this one: `pub fn process_initialize` right? 
Why do i need this: `let initial_amount = swap_curve.calculator.new_pool_supply();` ?
Whats the initial supply good for if theres no liquidty yet
Like is that going to be international arts law? Swiss arts law?... It feels overbaked for what we actually need... (Rust version of ERC 751?)
The people over at All-Art Protocol is apparently trying to set up a standard, which I think he hopes people will adopt, but it seems they have other concerns they want to bake into the contract, such as arts law (sic?)...
Hello, why I can‚Äôt use my paper wallet, when I try to execute commande it‚Äôs write me ‚Äúerror: could not read keypair file : ‚Äúxxx/xxx/xxx/xxx‚Äù. Run ‚Äúsolana-keygen new‚Äù to create a keypair file
So in short... It's a diabolical non-approach...
Regarding the ERC 751s... Those are all on OpenSea as per usual. On Ethereum....
Regarding their SPL token NFTs... their OFFICIAL ADVICE... in trading them is to set up a new Serum market for the single NFT... (kek again)
Their "standard" is two pronged... 1. SPL token "NFT" as per docs (headless SPL token) and 2. ...an ERC 751 (kek)
By the way is it possible to deploy token inside program instruction?
<@!397517635937501186> what is Star Atlas's standard for NFTs? Why can't we just adopt theirs?
$100k
"ERC 751 in Rust or bust"
Slap a bounty on it üëçüèªüè¥‚Äç‚ò†Ô∏è
I couldn't see Solana on Gitcoin... Maybe that's an Ethereum/politics thing (although there is Zcash and Zil on there...)
My concern is only for divergent standards...
If the issue is lack of resources, this would be the perfect thing for a bounty...
Like... Will there be an "SPL-token" and an "SPL-nft"
And again, if this is the wrong place for all this please somebody let me know that too
Again, all valid options... but probably not ideal in terms of user outcomes
Or do we add support to the wallet for custom json lists to include NFT SPL address lists for various NFT marketplaces...
Like I guess you could kinda do that now... Fork Sollet, keep a centralised list of NFT addresses along with their metadata, display in a different tab... But my god, how long will that last? That's going to be so confusing...
What I'd hate to see is we let this play out with no plan and we end up in a situation like Tezos, where NFTs and tokens are all mixed up in the same wallet as the same basic type... and then multiple contracts with multiple trackers and patchy wallet support
At the moment Solana is great for defi, dex etc... and SPL token program is honestly best in class... jaw to the floor amazing... but we need a common format/standard for NFTs that includes the expectations now established for artists working in the space
also curious on how to implement this!
Or to have a native standard come along in a few months...
And it would be a shame to spend a bunch of time coding up a contract, only to have some bigger entity come through and steamroll our efforts with their standard
Again, I am not saying either approach is good or bad, I'm just seeking some clarity from someone who is more familiar with the roadmap and what's going on, because we need to make some hard decisions about which direction to take 2 Solana projects here
This is kind of a huge deal... I'm sorry, I don't know if this is the right place for it...

What has been tremendous for Ethereum is being able to display ERC 721s and ERC 1155s in wallets as distinct from ERC20s...
So if that means coding a smart contract to handle it, that's fine too, but I feel like if that is the current plan (to outsource it to the broader dev community) then I can't help but feel many devs will be essentially implementing the same thing and we will have conflicitng standards...
But for our art platform it would be ideal if we could emulate or recreate the royalty features of ERC 721...
For our video game the current SPL situation is fine... (clunky maybe, as existing dex interfaces are not really suited to trade a single token, but fine)
But in the meantime all we need to proceed (with various NFT projects) is just some solid advice on which path to take
If that kind of token behaviour is going to be implemented natively then that's another thing
I do beleive NFTs work different on Solana compared to EVM blockchain. If i understood everything correctly you are very limited on what you can do with NFTs becasue of the lack of  NFT standards
Now if we are just wating on someone who knows Rust better than us to code that into a smart contract then that's one thing...
A single SPL with a burned mint is not a viable solution to recreate the expectations for royalty payments that ERC 721 and ERC 1155 have established...
Can we please get some guidance on NFts?
I can't deploy program onchain in mac env.
https://github.com/solana-labs/example-helloworld/issues/226 today i came across this issue. anyone have same experience? [close][resolved]
hey, guys!
is it possible to clone & up node without ledger?
also interested, not working on that now but been wondering, please post here if you figure it out? üôè
Hi guys, for those building out there and looking for an easy way to recover token prices on Solana, Sonar released an public API for that : 
https://twitter.com/Sonarwatch/status/1398994234145923072
yeah, let's cooperate!
hi, just a quick question here, is solana still not supporting apple m1?
working on this v soon! i'll ping ya if i figure out soon üôÇ ... pm me if you figure out too üôÇ
Hello, is there any example on how to pass fixed/non-fixed sized string to the program instruction?
Is there a canonical way to generate random numbers? Or do I just use sysvar::clock time & a pubkey as a way to seed a RNG?
Hola gm s‚åæl searchers
ok thank you mam
How can I create wallets and send transactions of Solana using python?
I can't find such functionalities in the Solana python lib, might I be misusing it?
Start developing, sink your teeth into it. You learn it by doing it
i have a question for devs. I am freshman on computer engineering and of course they dont teach us blockchain, dApps, Web 3.0 etc. What should i do to become a Blockchain or dApps developer? What do u suggest me to do? is there any roadmap for beginners to become Blockchain Dev.
I had same issue, launched docker Image using centos.
It's not compatible with M1, please try on Ubuntu or rhel
i installed `spl-token-cli` but when i run the command `spl-token --help` it throws an error `[1]    61324 illegal hardware instruction  spl-token`

I'm on mac M1 chipset

Can anyone please guide me how to create SPL token?
Interesting, it blows up in my code on:
`connection.getRecentPerformanceSample(360)`

"Error: failed to get recent performance samples: Invalid parameters: Expected from 0 to 1 parameters."
but a curl post gets it just fine
there is a token list repository on the solana github. You have to make a PR with token information.
What is the correct way to convert a `std::option::NoneError` into a `ProgramError`?

I tried defining `From` for a custom error type (which also has a From into `ProgramError`), but I'm getting the following error:
`use of unstable library feature 'try_trait'`

I saw that the associated issue is closed https://github.com/rust-lang/rust/issues/42327 , but not sure what the next steps should be for my program and feel like I'm going down a bit of a rabbit hole üôÇ Any advice is appreciated!
How to give a token name . I know its a noob question but i m getting lil confused
You are the best! I will check these out
We have a number of more complex examples...
A pretty simple program that stores data in accounts:
1. The name service program: https://github.com/solana-labs/solana-program-library/tree/master/name-service/program/src
2. Even simpler, this registry program that holds basic validator information on-chain: https://github.com/solana-labs/stake-o-matic/blob/master/program/src/instruction.rs#L15

We don't have such a basic thing in the examples area yet unfortunately: https://github.com/solana-labs/solana-program-library/tree/master/examples/rust
I will probably write out the Unix time
Cool thanks! I just tried it out an I was able to get the time! Do you know where I can find a good example of writing info to an account?
<@!837069646413955084> - if you're not yet familiar with working with accounts from your program, I'd get a little comfortable with the general concepts first.  But yes, you can get the time from the clock sysvar and store it into a writable account that your program owns.

Here's a simple example of reading the clock: https://github.com/solana-labs/solana-program-library/blob/master/examples/rust/sysvar/src/processor.rs#L21
Sorry if this a noob question üòÇ
Thank you! So when I get the information from the clock how exactly can I put that data into an account. And once I put the data into an account will it be mutable?
I forgot that this was shown on the home page of the explorer ><
You can probably steal that code from the explorer even
I was thinking of using this if I had to estimate, thanks! Everything confirmed now
yep for sure.  You can get the current time from within a program using the clock sysvar: https://docs.solana.com/developing/runtime-facilities/sysvars#clock
The explorer estimates using https://docs.solana.com/developing/clients/jsonrpc-api#getrecentperformancesamples
Hey is it possible to store clock data in an account? For example if I wanted to put in an account the last time a user did an action.
ok so estimation like above, with average slot performance
from a client
ah, I see. You can only estimate since the future hasn't arrived yet
so it gives a "Block not available for slot 80784000"
Yep i tried getBlockTime but I want to get it for the end of the current epoch
From within a program or from a client?    `getBlockTime` [1] works for the latter.  Within a program, only the timestame of the current slot is available via the clock sysvar

https://docs.solana.com/developing/clients/jsonrpc-api#getblocktime
I can calculate the start and end slot for an epoch with getEpochInfo, but how would i get the production timestamp for this end slot? Do I need to get an average production time per block then multiply than by the number of blocks remaining in the epoch?
Ok thank you very much. This clears my confusion üòÑ
Let's say Bob deposits 100% of the initial liquidity and receives 100% of the share of pool tokens. Sally comes along and deposits the same amount, receiving the same amount of pool tokens. Now they each have 50% of the share of the total supply of pool tokens. Their shares are worth the same amount, even if Sally deposits later.
There isn't a time component like you're thinking of it as
Thank you for the calcification. So lets say Bob Deposited 3 tokens on Monday and Sally deposed 3 tokens on Tuesday. The part I guess I'm not understanding is how would it know to give proportional more to bob because he deposited deposed before? Or are they just minted / given more tokens?
The collateral tokens represent a claim to a share of the liquidity. As the liquidity increases (say, from interest being paid to it) the value of each depositor's share increases
It's helpful to think of it as a liquidity pool. When you withdraw from the pool, you cash in your collateral (pool) tokens for the underlying asset, and the amount is subject to the reserve collateral exchange rate at the time of withdrawal, which is effectively `collateral tokens / total liquidity`
The obligation accrues interest over time, and let's say it's eventually paid back with interest to the reserve. When reserve collateral token holders redeem their collateral tokens and withdraw their liquidity from the reserve, they receive liquidity proportional to the value of the collateral, which includes accumulated interest.
thanks for help!
<@!150787664553967616> Thank you for your help.  I understand the refreshreserve updates the interest, but how does the program know which accounts should have tokens credited to them?
The associated token account program is a pretty simple example of this: https://github.com/solana-labs/solana-program-library/blob/master/associated-token-account/program/src/lib.rs#L68
Sounds great. Is there any example on how to do it?
Yes, but same constraint.  The derived address must be specified in the transaction
Then is it possible to create program derived address inside instruction, then set data to it?
Only for account addresses that are provided to the program instruction. You can‚Äôt access accounts that aren‚Äôt specified
Is there any way to load accountInfo by PubKey?
<@!528068680337326081> can you help my project list to solana token registry sir ? i have been waiting 3days, and still dont update on solana explorer, i have a mistake when commit to git hub ?
Hello. I have a question if "rand" is not available in solana programs, how can I get a random number?
There is a requirement that the Pyth program account you provide to initialize the lending market owns the product and price accounts, but this is also mocked in the test
makes sense, thanks
We pull data from the Price account, then manipulate the price and valid slot for testing
This is actually done to a limited extent in the test in that branch
do you know if theres some sort of restriction which would prevent one from creating mock accounts to use locally?
ah okay
https://pyth.network/developers/consumers/accounts
The product and price accounts come from Pyth
yup! one question, how do we go about creating the product account? im a bit uncertain what values to supply to hte product account
thanks for the shout ‚ù§Ô∏è, now let's get back to it
Just keep in mind that this is subject to change, being a PR still in review :)
The rust tests are passing
makes sense
Yes I think you can use it. The test that's failing appears a JavaScript test that was never changed to support the new data structures
Try https://docs.solana.com/developing/test-validator
<@!150787664553967616> is it safe to use the latest commit for https://github.com/solana-labs/solana-program-library/pull/1757 ? it looks like the token lending test is failing due to unpacking issues

https://github.com/solana-labs/solana-program-library/runs/2698177560
How do I run a solana blockchain locally
pyth isnt on mainnet yet right
Hello guys I've released the third video in my series on programming for Solana.  https://www.youtube.com/watch?v=Jz5v_u75xk8
Anyone have advice for me wanting to chain 'spl-token transfer' commands to include multiple recipients?
Explorer issue filed. It's just related to the pubkey information displayed for a certain Serum instruction: https://github.com/solana-labs/solana/issues/17598
History looks the same Oo
Like for web3js there is another repo but it looks like the same thing, not sure how it works
Thank you!!
Try the `no-entrypoint` feature.
e.g.: https://github.com/solana-labs/solana-program-library/blob/f59e43757b68f840c4792ae2178248c7227b174d/associated-token-account/program/Cargo.toml#L16
Explorer is in the monorepo
Ok, I'll report it there thanks
It is on the monorepo solana
Issues aren't available on that repo.
Github
Anyone know how I'd report a bug with the official Solana explorer?
I don't think tests are included in binaries built for release. You shouldn't need to delete tests to build, run, or deploy a program from SPL
And do people deploy to the mainnet with all this test stuff included or is it only for Dev-/Testnet
I currently study the Solana program libary. Just to make sure, everything would still work if I would delete the whole `mod tests {...}`, wouldnt it?
Is there a feature I can turn off in one of the crates?
How do i deal with `global_allocator` conflicts between the spl_token and solana_program crates?
thanks
ah right
Allowed borrow value is the value at the weighted average LTV of the collateral reserves, and unhealthy borrow value is the value at the weighted average liquidation threshold of the collateral reserves
Unhealthy borrow value should always be higher than allowed borrow value (assuming the constraint that loan_to_value_ratio < liquidation_threshold)
<@!150787664553967616> for the lending program if `unhealthy_borrow_value` is higher than `allowed_borrow_value` does that mean you can never get into n unhealthy borrow? <a:aPES_Think:493353113332219924>
and below that cancel and approve buttons
Is there a way to get a "nicer" looking message when approving transactions with sollet?
I'm getting a message that looks like this:
```
Unknown instruction:
Program:
Data: 3DTZbgwsozUF
```
since for sollet I've been having to `signTransaction`, and `sendRawTransaction`
looks like `simulateTransaction` takes a `Transaction` and `signers`, does that mean I can't simulate a transaction signed by a wallet like Sollet?
Yeah `sendTransaction` does simulate by default (you can turn this off), but calling `simulateTransaction` explicitly just gives you easier access, currently, to the logs on failure
oooh thanks for the callout, I wasn't gonna try simulate since I figured it was happening under the hood anyway
(otherwise yeah there needs to be a flag plumbed into the `Connection` object somewhere/somehow to dump the logs on `sendTransaction` failure)
Those logs are returned to the caller but they aren't surfaced nicely in solana-web3.js yet.  You could also try calling the `simulateTransaction` method directly in this case: https://solana-labs.github.io/solana-web3.js/classes/connection.html#simulatetransaction
in the past when debugging a rust script, the $RUST_LOG flag helped, but here I'm running stuff from the browser
I'm trying to debug a non-descriptive error, only get `invalid account data for instruction` in the chrome console, trying to get more info like where is it actually coming from
Is it possible to get `msg!` logs to show up for failed simulated transactions?
Is this possible ? Also, would be great if someone could give a NFT contracts sample
In case there are any C# Devs in the room. This is community built. I plan to check it out next week.

https://github.com/bmresearch/Solnet
Can we write data to a Program derived address ?
Yes, It is a bit tricky to make NFT's on solana
I am looking for exactly the same thing üòÇ
We have a nft project, and it's not viable to create a market id for each nft. I try to code on my side but I don't have enough knowledge to create a marketplace :/
hmm maybe im not understanding right - if i want to sign a tx to move spl tokens, whos signature do I need?
I dont know, but if you are on Windows and need/want 1.6.10, you can install a Windows subsystem for Linux. Thats what I would recommend in gernal if you work with Solana
What's the difference between CreateAccount instruction and AllocateAccount instruction?
Why there is no binary available for windows and mac  of Solana-toolkit v1. 6.10?
But I can mint it
Hello, someone know why when I try to burn token it‚Äôs write me ¬´¬†Account could not be parsed as token account :pubkey=xxxxxxxxx¬†¬ª
Hello can someone please tell me how to reset the local runtime solana-test-validator back to 0. It seems to be taking large amounts of disk space. Or how can I uninstall it?


///////////////////////////////////////////////////////////////////////////////////////////////

https://github.com/solana-labs/solana-program-library/blob/master/token/program/src/error.rs
Returned errors out of a set of custom errors can be helpful. One way to learn how to do this is to check out the way this is done in the SPL Program.

See:
if it still doesnt work after that then copy paste their imports from their lib.rs
you just need to be systematic. think of possible things that could be wrong and then eliminate them as possibilities to isolate the problem. next step is `rm Cargo.lock; rm -rf target` and copy the Cargo.toml from the dapp project into your current project and add the extra things you need by hand. this eliminates against typos you might have or build artifacts left over
how do you guys handle errors in programs btw? is it possible to make your own errors with actual error messages? im just returning types from `ProgramError` but in most cases they would be inscrutable or meaningless
Hey! I tried installing version 1.6.9, but still got the same error
clone and try to build this https://github.com/solana-labs/dapp-scaffold if it works the problem is your project, if it doesnt the problem is your environment
Darn, I was hoping it would be that simple. You might also double check your crate organization: lib.rs in right location, etc
isnt wsl just a ubuntu vm?
I went down the route of using web3.js but I get an error with regards to signing ```tx = new Transaction({
    recentBlockhash: blockhash,
    feePayer: wallet!.publicKey,
    signatures: []
  }).add(
    SystemProgram.transfer({
      fromPubkey: tokenAddress,
      lamports: stakeValue * 1000000000,
      toPubkey: new web3.PublicKey(SPL_POOL_ADDRESS),
      basePubkey: wallet?.publicKey!,
      programId: new web3.PublicKey(SPL_MINT_ADDRESS),
      seed: "<how would I know this if for example account was added through sollet?>"
    })
  );  ```
hey what library should I be using to transfer spl tokens in js? is it the web3.js lib or spl-token lib?
I've seen the lock file mysteriously not update on occasion.  If you can tolerate other crates potentially being updated, try deleting `Cargo.lock` and rebuild
np!
i dont actually know rust so i jst started from the program template thing they mentioned on stream and going from there lol
```use solana_program::{
    account_info::*, entrypoint, entrypoint::ProgramResult, msg, pubkey::Pubkey,
    clock::*, program_error::*, system_instruction::*, pubkey::*, program::*,
    sysvar::rent::*, sysvar::Sysvar,
};```
```[dependencies]
solana-program = "1.6.7"
serde = { version = "1.0.*", features = ["derive"] }
serde_json = "1.0.*"
uuid = { version = "0.8.*", features = ["serde", "v5"] }

[features]
test-bpf = []

[dev-dependencies]
assert_matches = "1.4.0"
solana-program-test = "1.5.0"
solana-sdk = "1.6.7"```
Do you also have 
`[dependencies] `
`solana-program = "1.6.10"`
in you Cargo.toml and
`use solana_program::{...}`
at the top of all your rust files and everything works for you?
oh wait nevermind i have `solana-program` too lol
you have funds on mainnet but you are on devnet
i dunno if one is an alias for the other or whatever but seems to work fine
i have it as `solana-sdk` in my Cargo.toml
And I'm saying your don't actually want to do that
oh. Actually I just want to construct message from instruction. but seems it's not possible.
Correct.  There is nothing sane to be done with a `Message` from within a program
Hey <@!585868308419444749>, That means I can't use `Message::new` in the program?
Hi guys, I have question regarding spl token listing and bot/whale control. Since token is generate via spl token program, is there anyway can be done for it. Thanks in advance. Let me know if I am not supposed to ask this question here.
Is it `solana_program` in the Cargo.toml (with underscore)? Because it needs to be `solana-program` with hyphen there
Also, is there a way to make the test-validator use a voting account?
Is there a way to delete a voting account on-chain?
Issue sorted. This happen because the sender doesn't have sufficient fund to create associated account info. I think Solana API must throw better error for this.
Has anyone built a eth-scan contract for Solana? (https://github.com/MyCryptoHQ/eth-scan)
what could be the reason?
Hey guys, why I get `{ InstructionError: [ 0, 'ProgramFailedToComplete' ] }` as soon as I construct a Message `Message::new(&[instruction], Some(payer));` in the program ?
this is one to follow üëå
***see last comment
Good news!! ü•≥ . Looks like standardised meta-data may be on its way:

https://github.com/solana-labs/solana-program-library/pull/1544#issuecomment-851506823
Hi, I want to ask, I have withdrawn Solana from Binance and the status in explorer is successful. but why when checking my Sol balance is still 0 ?  my tx id : 4CwFkKijLAhWEkzBRu5YVrCowgEv7ygWzqtKGDavjrJRCU5cGfwnEsg2z3qZTt39w7RUQoSocyhy8yXmXnEKsf2b

thank you in advance
I am expecting getOrCreateAssocaitedAccountInfo will create new associated account for the receiver if they don't have the associated account for a token.
Why does getOrCreateAssociatedAccountInfo is failing?

Error: Failed to find account
    at Token.getAccountInfo (/root/TipBot/node_modules/@solana/spl-token/client/token.js:767:13)
    at processTicksAndRejections (internal/process/task_queues.js:85:5)
    at Token.getOrCreateAssociatedAccountInfo (/root/TipBot/node_modules/@solana/spl-token/client/token.js:573:16)
For one, it's a Rust convention to put unit tests in the source file and integration tests in the `tests` folder.
For `example-helloworld` what you see in the integration test is that it loads the `solana-test-validator` to actually run the program to test.
Unit tests are not BPF compiled...
If you are deploying your own custom token program you could do a similar thing to make it possible to show current supply, however the explorer is not going to display it the same way as it does for the SPL mint
That information for an spl-token is stored in the mint account itself. The explorer parses the state of said mint account to make that view possible.
```
pub struct Mint {
    /// Optional authority used to mint new tokens. The mint authority may only be provided during
    /// mint creation. If no mint authority is present then the mint has a fixed supply and no
    /// further tokens may be minted.
    pub mint_authority: COption<Pubkey>,
    /// Total supply of tokens.
    pub supply: u64,
    /// Number of base 10 digits to the right of the decimal place.
    pub decimals: u8,
    /// Is `true` if this structure has been initialized
    pub is_initialized: bool,
    /// Optional authority to freeze token accounts.
    pub freeze_authority: COption<Pubkey>,
}
```
How can my on-chain program show Current Supply, Mint Authority, Decimals similar as it is shown for the token created by spl-token ( https://explorer.solana.com/address/AcawNTRdU9EiVGWbXNt6MGz6tNwNdbvfJfnEeaM8iuEQ?cluster=devnet )
I think it would involve doing something like this for my token but I don't know how to do this either
How would I create an API similar to this for my own token?
in the hello world  rust program is there a reason why there is tests in both files `src/lib.rs` and `tests/lib.rs`
I haven't been able to determine if this has gone anywhere
Making a sort of annotation account seems to be the only full on chain way to go until this potential PR/feature lands:
https://github.com/solana-labs/solana-program-library/pull/1544
yeah - https://docs.solana.com/developing/programming-model/accounts#rent
does storage of any arbitrary data onchain requires rent?
Yeah, not at all. See related discussion here:
https://discord.com/channels/428295358100013066/428295358100013069/846700084769849364
These arbitrary data could be URL to NFT image etc.
I would like to store arbitrary data into NFT. I don't think that is possible by SPL .
https://spl.solana.com/token#example-create-a-non-fungible-token
The docs describe how to use it to create an NFT
There is only a standard token program (SPL)
thanks
***up to 10kb
You can store arbitrary data in the data field of a non-program account (i.e. non-executable account)
I am thinking to make a Solana NFT by writing Smart Contract in Rust (On Chain Program). Is there any standard of Solana NFT, as Ethereum has like EIP-721?
whats the matter
hello , when I use sendTransaction api , return {"jsonrpc":"2.0","error":{"code":-32002,"message":"Transaction simulation failed: Blockhash not found","data":{"err":"BlockhashNotFound","logs":[]}},"id":1}
can I store a few bytes of text data on chain , will that be in instruction data of the program or where will it be stored?
Good day, I am trying to create new token with solana-token-library but receiving `Error: Signature verification failed`
What could be a problem, I am using command 
```
import { Token, TOKEN_PROGRAM_ID} from '@solana/spl-token'

const token = await Token.createMint(
        connection,
        myAccount,
        myAccount.publicKey,
        myAccount.publicKey,
        8,
        TOKEN_PROGRAM_ID
    )
```
Where TOKEN_PROGRAM_ID is solana token program id from https://github.com/solana-labs/solana-program-library/tree/master/token
whats the difference between these and tests/lib.rs tests
on the src/lib.rs we have sanity tests
Whats the difference between the tests in src file and the test file
Hello everyone, can I use solana-web3.js on node.js? for transfer ?
Hello <@!455114989397868556>  <@!585868308419444749>  <@!178096425509453824>,
I am using wallet connect ios sdk. I can do connection with different dapps. but, I am not able to successfully sign the transaction eth_signTransaction and send it back to dapps with valid transaction result. There is not example to approve eth_signTransaction transaction on github repo example, Can anyone help? or share any example to figure this out?

Hi guysÔºå I also encountered this problem. Have you solved it?
ok.. i will try.
Works for me, most likely your connection. Try a different wifi or use a hotspot
hi. i am  getting " error sending request for url (https://api.devnet.solana.com/): error trying to connect: tcp connect error: Connection refused (os error 111)" while trying " spl-token create-token --decimals 9" command. Can anyone help me please?
is there any way to make sure that two instructions are always executed in the same transaction? I had to split up my instructions (due to the limit on the number of accs) and wanted to make sure that no one could call those instructions separately
Hi Team. I am really starting out with Solana & Rust and this is a veru novice question. I have an account key like "Emhq1cSKtNi9NooqBD4nP9z38E5HWexSQCXGRQD8GgDw". I want to make a public key out of it. How I can do it in Rust code.
Hi I am wondering if there is any guide on setting up my own Solana RPC node on local machine or AWS?
found out
ah nvm
anyone knows the difference between BPF Loader and BPF Loader V2?
so now i just need to create a token using cli, create a PR in tokenlist repo, and that's it, right?
you have to make a PR to the token list on solana's github
the name and symbol are not stored on chain
actually i'm lil confuse, (maybe because i came from eth background), 
i'm thinking it like deploying a ERC20 contract. we pass name and symbol to the constructor there.

My goal is just to create a SPL token and give it a name, symbol and decimals.
What are you trying to do that you cant do with the CLI?
actually i want to create and deploy a SPL token. so can you tell me what are different ways to do that, i don't want to go by `cli` method
What is your reason to deploy your own version of token program?
can we deploy the token program (https://github.com/solana-labs/solana-program-library/tree/master/token) manually like ERC20 to `devnet`  instead of creating a SPL token from cli? please share the documentation for it. üôè
Oh I see, thank you for the information
Elements of Account Inputs
- TransactionHash : <String> The hash of a specific transaction
- Account: <String> The hash of a specific account
- TokenId: <String> The hash of a specific Token
- PreBalance: <Float> The Pre Balance of an account in Lamports
- PostBalance: <Float> The Post Balance of an account in Lamports
- CreatedAt: <Float> Time (in epochs) it was created at

You can work with this, API will return a list of ^

<@!837069646413955084>

API will only return the latest input for that account specific to that TokenId.
I suggest u work on mock results first
roger. Will add that as a todo
sky's the limit, working on it
Is it possible to create a voting account providing the address instead of having to provide the key file? Is it a signer of the transaction and therefore needs to be present?
I'm trying to get the voting account to be derived from cold storage
I guess I‚Äôm looking for something similar to getTokenLargestAccounts but gives all not 20
I am getting above error, why is it showing `Allocate: requested 10767992, max allowed 10485760` ?
```Loading program...
Unable to fetch minimum balance for rent exemption
Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3
    Program 11111111111111111111111111111111 invoke [1]
    **Allocate: requested 10767992, max allowed 10485760**
    Program 11111111111111111111111111111111 failed: custom program error: 0x3
(node:14086) UnhandledPromiseRejectionWarning: Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3```
xD I‚Äôm really surprised this isn‚Äôt something you could get from the JSON RPC. What is the limitation? <@161028871095844864>
our seeding is really slow
give me 3 days!
yeah sadly
Awesome! So I take it there is nothing available rn?
Alright working on that API
Yes! I would like to see people who hold the token and how much
Owners you mean people who hold that token?
I have one here
Trying to figure it all out also
Sorry, bad joke. Not sure!
Make a scraper for explorer.solana ü•∂
What is the best way to return all the owners of a token and what there balance is using the JSON RPC. And if the JSON RPC is not capable of this what is my alternative
makes sense, tyvm
Check the ReserveLiquidity struct -- only the price account pubkey is stored. The product account is only needed on InitReserve to validate
<@!150787664553967616> im guessing each reserve will have its own pyth product and price accounts associated with it yea?
You need to brute force the first characters, look for vanity keypair in the doc
e.g. VscrowegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
How do I deploy a program with a specific public key?
Like something off chain
Is it possible to access an external data base inside your solana program?
actually one second i misread where the error is coming from
I'm afraid that's not enough context for me to know what's wrong. What branch / commit are you on, and what code is producing this?
im running into an issue trying to setup a custom price and product account when initializing the lending market:

```
    Program 11111111111111111111111111111111 invoke [1]
    Program 11111111111111111111111111111111 success
    Program EBhqfinC8TVso7EirP3fgt8QsEEQ6RcLmfERvnj8joGj invoke [1]
    Program 61BpFKn2ZXUuh76t9VmZQ1Fqgvb2nbyDonCCaTgncSx2 invoke [2]
    Program log: Instruction: Init Reserve
    Program log: libstd rust_begin_panic
    Program log: panicked at 'called `Option::unwrap()` on a `None` value', src/processor.rs:1744:39
```
if that works a simpler scheme would be to just give every data structure two permanent addresses and backbuffer lol
i was thinking abt ways to like, provide pointers to buffers whose addresses can change dynamically to support sizing up but
altho now that i think about it, can you clear an account by zeroing its balance and then reallocate it with a different size after?
its impossible to reallocate accounts, you choose a size at initialization and its fixed forever. ive thought  alot about reallocation schemes and i have a couple ideas but this would all be abstractions _over_ the system as given
Not sure where to look this up but it seems there is a fixed account data size constraint and it's not going away, so is this workaround still something I should try or is there other recommended approaches? I'm curious how it's done generally, is this a common approach? I don't see people talk about dynamic account data size, is there something I'm misunderstanding here? Or is it more common just to pre-allocate a large amount so this doesn't come up often? I plan to go with the first approach you mention if it's still recommended üôÇ


///////////////////////////////////////////////////////////////////////////////////////////////

Sounds like a plan! Once again I really appreciate the help
For sure, I'm going to be looking at it anyway to understand why it's not working, I'll let you know when I find something
Aww man, thanks anyway for your help. If you think of anything else I can please let me know üôÇ
I don't know, unfortunately
I have already changed it to the deployed serum dex on my local net.  This is what I deployed https://github.com/project-serum/serum-dex . Is the oyster version that‚Äôs online from the repository you sent?
hehe you rock
I'm not _too_ familiar with how Oyster Lending uses this yet. My involvement so far has been removing it to support the latest version of the lending program
You may need to edit this also: https://github.com/solana-labs/oyster/blob/6a0821991a1d3a1f3bb6c52f45945f050cc12f7f/packages/lending/src/models/dex/market.ts#L21
So, I don't know if it matters, but use https://github.com/solana-labs/oyster/blob/main/packages/lending, all the Oyster repos got Lerna'd
Yes, a design proposal or a pr with a sufficient description to help us understand the motivation and what is trying to be accomplished
<@150787664553967616>  Also for oyster lending just using https://github.com/solana-labs/oyster-lending
Sure here is the hash 7d666b86ceb0daa5f20a16fc99cb522fa9dd9f09
The only docs that really exist for it are the examples and the help command. It basically boils down to running `cargo build-bpf` inside a docker image with pinned dependencies.

You can use this feature with or without anchor. With anchor, you can run `anchor build --verifiable` and it will generate a build inside a docker image corresponding with the anchor version, outputting the artifact into the normal `target/deploy/program.so` location.  

Alternatively, you can use the docker image directly (without anchor) by running `cargo build-bpf` inside it.

See https://hub.docker.com/r/projectserum/build.
Can you clarify what commit hash of lending you're using? Want to make sure I look at the same
So, to submit our changes to `syscalls.rs` should we first submit a design proposal? The changes are to make OpenSSL BigNumb capabilities available to BPF programs as well as a `hash_to_prime` function.
Hey <@150787664553967616>  so I was able to get everything setup again and I attempted to update the dependency for the serum dex by removing the ‚Äúrev version‚Äù in hopes that it would just use the newest but that did not change anything. I created the markets on the newest version of serum dex and created the reserves as normal. Also on oyster I edited the token.json file and added my new address that I created on local net. I don‚Äôt think that really does anything besides add the token name and images. I did notice that the fake USDC token I created as the quote token does not show the price as 1 on oyster. Maybe I‚Äôm suppose to specify somewhere else on oyster that this is the quote token? And just as a check when I view my prices on local net on the serum-dex-UI they show there. As a note I had to add &collateral_fees_receiver_keypair as a signer in main.rs to get the reserves to deploy properly"
yep
<@!700244911101837352> The feature has been marked for activation at the next devnet epoch (~1 1/2 days)
```BkPcYCrwHXBoTsv9vMhiRF9gteZmDj3Uwisz9CDjoMKp | activation pending          | Retain updated data values modified after realloc via CPI
```
You can monitor its status via `solana feature status`, make sure you are pointing the tools at devnet
i assume it doesnt change the default number of 9 -- just sets it to 0 for that mint
spl-token create-token --decimals 0 would be 0 then?
`spl-token create-token --decimals 9`
Run `spl-token create-token --help` for more details.  I'll update the example at https://spl.solana.com/token#example-creating-your-own-fungible-token to include this, it came up yesterday as well
hi everyone. wanted to ask when during the minting process i set the decimals and if there is any example i can see
https://github.com/michaelhly/solana-py/pull/56/files/8ed8e153b664df53908f8af30264c2d8d52cb5f5#
hey,does any one use python to create associate_token_account ?
I am trying to see the code behind a program, and have been able to successfully dump to a file with the solana program dump command.  Does anyone have any suggestions on how to clean up the file and make it more human readable?
For sure, hope we can get it figured out quickly
Thank you I really appreciate the help üôÇ
Could it be the case that the issue is in the UI and not the program? I'll take a look at how that's using the dex today too
I will give it a go in just a bit and let you know! Have to shower first üòÇ
That might work, please let me know if it does! Since this also affects the deployed lending markets, <@466984915376799748> has the ability to update those.
So if I wanted to fix it I would just need to update to the newest dex version? üòÑ
Ah, it sounds like it might be the case then that the dex is outdated. And yeah, USDC is the token the other prices are quoted against, so it's just equal to itself.
So the Oyster website that‚Äôs live right now has the same issue. With the exception of USDC having a price. But I assume that is because the you can assume the price is 1
Let me take a look at what the old tests that reference the dex are doing. Does the Oyster UI on MB still seem to be working?
Before you released the newest version I was able to deploy it to my local net and create the reserves. I was able to get all of my fake tokens to show up on the UI and I could deposit and withdraw but borrowing seemed to not work. So I just assumed that it was a problem with the prices as there were none lol.
I don't know, it could be. The lending program with all the changes hasn't been redeployed to dev/test/mainnet beta yet, so it's not that for sure
we're using own deployed node. Everything is working fine. Except this tx
I see thanks! I was also just messing around with oyster-lending UI and noticed that the prices have been broken. I assume the version that‚Äôs deployed has an outdated serum dex. Do you think this is the case?
Hey there! We ended up deciding to remove it because it was a bit out of date and incompatible with the cross collateral changes we wanted to get in, but I'll be working on a CLI for lending to create the market and add reserves. There isn't such an interface yet though
<@150787664553967616> Hey, I have been messing around with token-lending for the past few days and I just noticed you made a major update by adding the flux aggregator. It also looks like you removed the client folder that contained main.rs that you would use to create the lending market and reserves. I attempted to update that file but had no luck. Is there suppose to be another way to create the lending markets?
Hi all, has anyone seen this error when airdropping on devnet?

```$ solana airdrop 1
Error: unrecognized signer source
```
So, I had experience using web3 python in eth and bsc and I was to interact with smart contract by importing abi, and contract address. Does anyone have a resource for that for SOL ecosystem?
Do the public API gateways (e.g. https://api.mainnet-beta.solana.com) support the subscription websockets? Or do I have to run my own node if I want to use websockets?
what RPC are you querying? is it a node with the rpc tx status enabled?
That feature hasn't been activated yet on devnet
Please add the ladder!
<@!439209823201132558> Question pls, we have a tx whose data can be seen on Solana explorer at here: 
https://explorer.solana.com/tx/CAwkQb7zrFYf3hDNygR6oFjFWZ7XFZJrwYrz9Zzb4GbS6EncJrNk4s5WGGQYw3mNmxjBWcpo8jgcGL368Q8Fvnh

However, when querying the tx data as below

connection.getParsedConfirmedTransaction(
      txSignature,
    )

We get only "null" returned:

{
    "jsonrpc": "2.0",
    "result": null,
    "id": 1
}
Are there any developer can help on this?
How should I print the private key that applicable on Sollet wallet??
I am using the mnemonic word from SDK and input this into sollet wallet. But the public addresses in sollet is different to the one in SDK...
How could I print a private key from SDK that applicable on sollet wallet?
<@!453347985628200960> Hey bro, the 1.6.7 is mostly dominating the number of clusters (~62%), however, the bug, which creates an account by a CPI call to Associated Token Account Program, is still representing. Any idea about that?
Hi Jon, I have written a short explanation. Would love to discuss in depth as well. https://gist.github.com/0b01/08fa0dcd0166375033ce863b2418323f
You can start at https://docs.solana.com/developing/programming-model/overview and make your way down! or just read the code in the monorepo üôÇ
Thanks a lot! Where can i read more about the entire system model: runtime level vs program level, sysvars, etc
Great thanks!
Yep, definitely, and here's the project: https://github.com/project-serum/anchor
I see. What is anchor? I think this feature is important because right now the smart contract in Solana is like a blackbox where only the creator knows the code
kind of -- it's done at the runtime level, from the bank.  every time we pass an epoch boundary, the bank checks all of the stakes and vote accounts, tallies up how many rewards were earned, and then distributes them to state / vote accounts. you read up at  https://github.com/solana-labs/solana/blob/34599ad57d76164a88e4df16a1a8d2bb816fa556/runtime/src/bank.rs#L1850
does the stake program mint SOL?
every epoch, for both
not at the moment, but if a program is built with anchor, you can do a `verifiable` build.  i don't see any documentation for that though... maybe <@!501570363566587905> can point out how to do that?
> During redemption, the stake program counts the points earned by the stake for each epoch, multiplies that by the epoch's point value, and transfers lamports in that amount from a rewards account into the stake and vote accounts according to the vote account's commission setting.
are stake rewards paid every slot, or every epoch? what about validator rewards?
hi there, yep! take a look at the src and tests for: https://github.com/solana-labs/solana-program-library/tree/master/examples/rust/cross-program-invocation
we can eventually add syscalls for zksnark-specific functions, or allowing for transactions to go past the compute budget with a higher transaction fee.  the first one would probably be easier, but we'd have to see how these are reusable.  what sort of estimates are you doing, and what have you found?
Hi, does anyone know how to read code for a deployed smart contract in Solana? In ethereum, etherscan shows detail code for a verified contract. I am wondering if Solana has similar thing
hi guys , have InnerInstruction demo ?
Hi team. I'm writing a zksnarks based mixer for Solana. I have implemented the logic but have trouble porting to Solana such that it fits the compute budget. My estimates shows it's impossible. Ethereum circumvents this by adding precompiled contracts for zksnarks: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-197.md. Do you have any suggestions?
Ah ok thanks I get it now
here's an example: https://github.com/solana-labs/solana-program-library/blob/1f36ca301b4c7456af976f7b16831364de30fb4f/feature-proposal/program/src/processor.rs#L327
Does anyone have an example of how to get the unix timestamp on chain? I'm a bit confused as to how to get it from the clock module
does anyone knows how to create_associated_token_account with Python
Thank u
Okay thought there might be an existing one for that use case
(in general at least)
yes it would
Would that require a smart contract to rely on?
The second transaction would need to inspect some on-chain state left by the first transaction to determine if it should execute successfully not
Sorry I wasn‚Äôt very clear . What I meant is that transaction b should only execute when transaction a was successfully executed
I think "one" is a transaction
this happens by default.  the second instruction in a transaction will only execute if the first instruction succeeds
Is there a an instruction I could add to a transaction to make it only execute when a previous one executed successfully?
or any price oracles really?
When will chainlink oracles be live?
does anyone know how to diagnose stack variables for Rust?
Hello, How to achieve Access control on solana?https://docs.onflow.org/cadence/language/access-control#gatsby-focus-wrapper
What's a good std::collections::HashMap alternative for Solana?
Can't load account üò¶
I‚Äôll try again
`programId` is the SPL Token Program ID, not the mint

I dunno about everyone, but works for me
Is airdrop working on the test-net "https://testnet.solana.com" for everyone ?
Potentially with some post-processing
Runtime doesn't really know that much about the program
I wonder if that could be achieved with some rust mechanism, macro...
https://github.com/stableswap/stable-swap-program/blob/9cc807f7827ef87f57117d44aac328faf62c4d75/src/processor.rs#L799-L858 this seems to be a common approach, which is a bit sad.
https://spl.solana.com/token has all of the steps
how do I get wrapped sol on devnet?
Mmmh i don't get it, but https://github.com/solana-labs/solana-program-library/blob/master/.github/workflows/pull-request.yml seems more straightforward, i'll borrow that
here is an example:
<https://github.com/michaelhly/solana-py/blob/master/tests/integration/test_token_client.py#L110>
I don't get how the CI works for https://github.com/stableswap/stable-swap-program/blob/master/.github/workflows/main.yml
<@!539801435571748868> 
Mine is using the cargo github action and fails because some dependency like pkg-config are missing on build
Thanks for the hints
I'll see if I get to that, this could be a test helper
Program ID of instruction 1 (0-indexed).  Find it's error enum, look at variant 10 (also 0-indexed).
I'm getting a lot of timeouts when deploying contracts to the testnet recently.
I am wondering if program test could be more pallatable on program error
"thread 'test_exchange' panicked at 'assertion failed: `Err(TransactionError(InstructionError(1, Custom(10))))` does not match `Ok(())`', tests/functional.rs:413:5"
Is there a way to know which underlying program threw the error?
Is there a way to get from a Custom error to the original enum field?

if to both of those questions the answer is yes, I think we can make writing program a much faster process
okay thanks
Ideally.  They can also create an auxiliary account in your stead
Associated token account right ? :)) <@!585868308419444749>
Sender can create it for you, if they choose to
can I receive any SPL token to my solana account ? without creating any token account
hi guys... to learn writing solana smart contracts, what's the best resource to start with? i have about a year of solidity experience + 10years web development... never done rust or c tho üò¶
The string format is just a base58 encoding
gentles, how can I convert Solana address like **GtUVs......** into Uint8Array format like that?

`publicKey: Uint8Array(32) [
      236,  15,   4,  84, 139, 194, 238,
      ...
      ...
]`
The tx/instruction references the program id, sounds like the program it is referencing is not an actual program on-chain
I tried devnet as well
but I'm getting an error `Failed to connect to https://testnet.solana.com`
hey can I use the testnet on the dex.projectserum UI? I'm trying to add it as such
ok so just abandon this token address, and create a new one and register it again in the registry?
The mint itself cannot be closed, it's forever.  Instead you'll just need to create a new token
cos this was a mess and need to clean it up
the `close` subcommand can close the token account right?
anyway so i need to destroy the token and recreate it?
cos if i read the docs as a newcomer to solana i would not know
or include that in the docs
that should be in the mint i think
`        --decimals <DECIMALS>             Number of base 10 digits to the right of the decimal place [default: 9]
`
thanks
really the docs could be better with examples
and it gave an error that i need blockhash and signer
i tried this before `--mint-decimals`
`spl-token create-token --help` is your friend
The number format doesn't have any control over the mint
You need to pass `--decimals 8` to `spl-token create-token`
pretty sure thats 8 decimal places
100000000000.00000000
please see what i entered cli
That needs to be an 8
same shit
<@!585868308419444749> here:
```
spl-token mint 667SDyj7oNYUqhwRV4SNur7wxN9ZfhKVJbumXwkfLGTs 100000000000.00000000
Minting 100000000000 tokens
  Token: 667SDyj7oNYUqhwRV4SNur7wxN9ZfhKVJbumXwkfLGTs
  Recipient: KMtGdGnybqSYBNczq33Cgi74JKaf75uUKd2pWL7JNzG
Signature: KNZfXRfEB8oJP97Ce8URoQziwqucycSwfURwAxopAWV22niLT71sEuSZhio4da6JWLgF5T9xrTZfuicedoMcUFV

‚ûú  spl-token supply 667SDyj7oNYUqhwRV4SNur7wxN9ZfhKVJbumXwkfLGTs                    
18446744073.709551615
```
have to delve into that, thanks
you're looking at the transfer instruction, here's the layout: https://github.com/solana-labs/solana/blob/master/web3.js/src/system-program.ts#L556-L562
That's the system program.  All system program instructions are defined here, https://github.com/solana-labs/solana/blob/master/sdk/program/src/system_instruction.rs#L57
thanks mate
Yes
If this is about program #11111111111111111111111111111111, so how we can encode a custom data? I understand only orange part
so just put 100,000,000,000.00000000
Ok. Well it's nonsense
im quoting exactly the above
no was someone else who mentioned it
I said you needed 8 decimals to be able to fit 100B in the integer portion
"Hence for your case if you want exactly 100b you need to choose 8 : 184,467,440,737.09551615 = 100,000,000,000.00000000"
lol but thats what someone said
You clearly minted far more than 100B tokens there
Not a big fan of reply hijacking...
for 100,000,000,000 tokens
hey trent, sorry to bother, can u just comfirm if i did this right??

```
spl-token mint 667SDyj7oNYUqhwRV4SNur7wxN9ZfhKVJbumXwkfLGTs 184467440737.09551615                      
Minting 184467440737.09552 tokens
```
You'll have to check the corresponding program.  Solana does not enforce a serialization scheme on instruction or account data fields
figured it out üôÇ
I understand that 40420f is a reverse hex amount for send, but what about the rest data? how is it arranged?
hey guys, how can I compose instruction data for a transaction like this one?
None stated. Or I don't know where to look. Since it is sending a token, it must be either the token transfer or the creation of the assoc token account.
it's always good to have that.
I assume I would need the solaan tool suite as well?
Thank you, I will start looking.
It sounds like you will be using RPC calls, there is an API guide here https://docs.solana.com/developing/clients/jsonrpc-api
Most of which can also be accessed via their JavaScript module if you prefer that https://solana-labs.github.io/solana-web3.js/
Obviously, you can use the blockchain explorer, but I am wanting to do something a little more presentable and possible include information on taxable events, etc.
Hi Guys,  I cannot find a tool that compiles your transaction history from a wallet.  So I am thinking of making one, is there a place to "get started" so I can learn what I need to know to build this?
anyone?
Every account (read or written) needs to be specified, this allows parallel transaction execution, the reason Solana has higher tps.
2 questions

1. why does every public key need to be explicitly included in the transactions, even if they're not used to sign stuff?
2. as a developer building an application on top of solana, what's the benefit to marking accounts as read only? just better node performance for the whole network? or does this benefit my own application too?
i dont want to mint it incorrectly again and it gets truncated by uint64 position


///////////////////////////////////////////////////////////////////////////////////////////////

Error: ELF error: ELF error: Failed to parse ELF file: malformed: Invalid DT_GNU_HASH: buckets_num=8 min_chain=0 bloom_size=3952
Anybody ever seen this when trying to deploy?
Thank you <@!445425471027544095>
Clever
yeah that's about right.  You'll eat up about 30GB after that first snapshot is unpacked, and then 500GB of head room for operations going forward
https://docs.solana.com/running-validator/validator-reqs#hardware-recommendations 

I'm following this docs which suggest to use at least 500GB in ssd
wait, 10 mins? how much is the solana blockchain taking in space?
That depends on a ton of factors.  A well-setup machine on a fast connection, maybe 10 minutes from scratch.  50% of that to download a new snapshot, the rest to unpack it and catch up from there
<@!445425471027544095> Whats the estimated sync time of a full node on solana?
New nodes always start from a snapshot from another node on the network, syncing from 0 isn't required.  Although the current snapshot sizes are ~6.4GB
Guys if i would like to have a node of solana to support the infra. can you guys provide me with a link to a backup of the datadir so i dont have to start sync from 0?
It is. There's a static 128B accounting for the base account non-data-field space. Which I'm assuming accounts for the confusion
does solana have any oracles yet?
Is there a way to get the transaction ID from within a program and is there also a websocket lister to watch when a specific transaction is finalized?
you can run `make notebook` to run the notebook locally
there is an exapmle in this notebook:
<https://github.com/michaelhly/solana-py/blob/master/notebooks/SendTransaction.ipynb>
Submitted `draft` PR (#17082) for your review although it's the first time I've ever submitted a draft PR
How to use solana.py to transfer sol from one account to anotherÔºü
@team
failed to send transaction: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x4
How to add supply token on SPL Token UI?
I can't mint token on SPL Token UI
thanks it worked
ok i'll try again with more
it may not have enough to create all of the required accounts though... i'm seeing that the only test in the upgradeable code that has a custom program error of `1` is something testing that the account has enough funds
its has funds
your account may be out of funds
This tripped me up too -- you can take a look at https://docs.solana.com/developing/programming-model/accounts#calculation-of-rent which explains the account overhead, so that 1 byte of data isn't just 2 x rent per byte-year
Folks, can somebody advice about how to fix `PoH is slower than cluster` After 14h success blocks processing my node crashed with error: `PoH is slower than cluster`
or any ideas what can cause it to be fine on localhost but not on devnet?
Hi, I have a program that deploys fine on localhost but on devnet fails when finalizing transaction. I get ```Error: Deploying program failed: Error processing Instruction 1: custom program error: 0x1``` Is there any way to get more info on the error?
i thought Rent exemption = 2xRent per byte-year
per byte?
I had lots of problems with llvm and bpf on windows and moved to linux. Not an expert tbh and don't have details on the problem you face, but it worked for me after switching
Hey guys I have a developer working on a solana project for me because I don't have time yet. He is an experienced rust developer but is having trouble deploying my code on the blockchain. He thinks it is something to do with him being on windows? Is this a problem any of you have faced? It doesn't seem right to me
Example not 0.000000000 but 0.0000
decimal not 9 but 4
how to remove decimals from a spl token?
After a healthy amount of debugging, it seems the regardless of the Connection commitment settings for the wbe3 `onLogs` listener, this function picks up all program logs, not just logs from program runs that have been finalized.  Is there a way to do such filtering on the `onLogs` method?

What resolved my problems was to ensure that my connection commitment was `finalized` (rather than `singleGossip`) for the connection object issuing the instruction in question

edit: this still does not seem to resolve the problem I am seeing (more than a single log being propogated over the websocket listener per run)
Will do, thanks
When an transaction takes an account as writable, that account is locked and other transactions that want to access that account (for read or write are queued for later).  A best practice to allow for as many concurrent transactions as possible is to reduce the amount of writable accounts to a minimum and structure the writable accounts so that they‚Äôre unlikely to conflict (ie, an account per user instead of a single large account used by all users)
No reason beyond that‚Äôs code that doesn‚Äôt exist yet.  It could technically
Hi all, can a single program execute concurrently pls? If yes how is it possible and is there any safety to prevent data races on the same account? If no how should one structure programs to make more concurrent pls? Thanks!
Hello, when i deploy the helloworld example writen in rust to devnet, the deployment failed with the error `Error: Deploying program failed: Error processing Instruction 1: custom program error: 0x1` . However the example writen in C is OK.
is there a reason why there is no getMultipleAccounts websocket for an rpc call?
thanks
Amongst other things, yes üôÇ
oh wait that is the system program id right?
Thats comforting to know. Thanks.
It's overloaded
is `11111111111111111111111111111111` a restricted address?
It's not too expensive though, we make use of it in various places
Interesting points made there, specifically about the cost of using it. Also warns of the risk of exceeding the compute budget.
That'd be a nice addition to the cli though üòï
ah okay
no, that's not a program address unfortunately.  That's just a "normal" derived address
~~is there a way to generate program addresses from the cli using `solana`~~ `solana create-address-wtihs-eed`
trying to learn about this curious beast
still poking and prodding at it
or if i comment out a large block of code i can make it go away
maybe moves it lower down
what's cool is if I do a msg!() above it where i clone something, like store_info, it changes where it blows up
at destination_info

right now it's blowing up here:
i am honestly at a loss as to why
but it's also been seen blowing up when calling methods, etc
right now here it's blowing up when pulling an account out of the accounts iterator, the 3rd one to be exact
i can actually move where it happens around by changing irrelevant bits of code or commenting out irrelevant bits of code and then it will blow up in a different part of execution
it is not due to any particular logic
Been dealing with this for the past 8 hours
https://explorer.solana.com/tx/4CfZQpiFeKu7jWY7iueh37nFEMDvfL3TRLUNDRtcyn2EnFi1kW8m5EWh7bh8y8gmC6TgD244qF16iF8VUJP4EURP?cluster=devnet
Has anybody seen an Access violation in stack frame before?
Thanks, will check it out.
ahh ok that makes sense i was trying to look in the md files on the token program dir for token i guess it makes sense it would be in the docs dir, thanks
some info here that might be interesting to read: https://github.com/solana-labs/solana/blob/d4aa7d512c19917dd1260055ab6fb079069a122a/sdk/program/src/pubkey.rs#L167-L189
fixed, thanks!  https://github.com/solana-labs/solana-program-library/commit/00eb81707315af15dc8db4d73af5965ac64db2cf
I saw it return a random address when I passed incorrect name to it. It was on local and it didn't have any program with that name. Curious to know how this works.
acccount üòÖ

hey I saw a typo in the docs for the token spl, uhh didn't see them on github or anything so just gonna post this here
I've never seen it fail
How reliable is `Pubkey::find_program_address()` ? Is it advisable to use this in general?
Checkout `@solana/spl-token` https://github.com/solana-labs/solana-program-library/blob/master/token/js/client/token.js#L1226
Hello, do you guy have any example code about transfer from 1 SPL Token (e.g. USDC SPL) account to another address of same type with Web3.js SDK?
I was looking over the validator requirements and noticed that it was mentioned GPU's weren't necessary, but in the future high end GPU's are suggested
And earlier SOL ecosystem seemed to have been overwhelmed by all the projects coming online and new users
This got me wondering if it is possible to make a PoW project on Solana to help mitigate that by  taking advantage of other available GPUs?
I'm still new to SOL and learning about it, not fully aware of what is and is not possible on it
Thanks, I'll take a look at that
oh I see
Solana. https://github.com/solana-labs/example-helloworld
The web3.js readme has a mix of "how to use this" and "how to contribute to this" that's probably not obvious
like rust helloworld?
Helloworld might be more appropriate
The statement above said "Use solana-test-validator from the latest Solana release" and i was able to run that. I don't know much about how this works, I was trying to get something up that I could poke at from javascript
Um I'm not really sure. I was following the instructions for a dev environment on web3.js. It said "Use cargo build-bpf from the latest Solana release"

which I assume meant running `cargo build-bpf`
ok that's all fine.  what are you `cargo build-bpf`ing?
also this is my rust version
```
‚ûú rustc --version
rustc 1.51.0 (2fd73fabe 2021-03-23)
```
These are the instructions I'm following https://github.com/solana-labs/solana/tree/master/web3.js#bpf-program-development
this is what I see 
```
‚ûú cargo --version
cargo 1.51.0 (43b129a20 2021-03-16)
```
I suspect that your rustc or cargo is older?  Here's what I'm driving:
```
$ cargo --version
cargo 1.51.0 (43b129a20 2021-03-16)
```
this is the last person who had the problem: https://discord.com/channels/428295358100013066/517163444747894795/837263102076125184
Hey all, I'm having some issues running `cargo build-bpf`. I get an error saying "no `catch_unwind` in `panic`" I looked in the history and the solution to the last problem was to use solana-program instead of solana-sdk. I'm not familar with that. Is that a different repo I should download?
Just the input arguments
Whats the difference between Transfer instruction(instruction 3) and TransferChecked instruction(instruction 12) at spl token program?
Is there a beginner guide for understanding how to use the solana web3 library? I'm trying to do some basic things like get the balance of each token in my account but am struggling a bit. I see the RPC functions in the connection object, with things like `getTokenAccountsByOwner` but not sure exactly how to use it.
Fyi <@!206445134122844170>, that bip32 PR was released in v1.6.7
Hopefully it‚Äôs something simple üòÖ
<@!818203379469778988> btw, I recalled that this was done after that: https://github.com/solana-labs/solana-program-library/pull/1435

It could be just an issue with Oyster Lending then. In any case I'll find out
It was a wild goose chase but glad I found something üòÇ
For sure, thanks again for hunting down the likely cause
<@150787664553967616> awesome thank you for spending time on this üôÇ
It could be a bit before we have support for cross collateral in the UI and CLI, and if the Serum update breaks the current stuff on MB we should fix that
Thanks for digging into this. I'll create a branch, update the lending program to use v3, test, and then involve someone to upgrade it
and the way that I checked oyster was by taking the program ID and plugginign it into Solana explorer. It came back with Serum Dex 2
So it looks like the lending program is using https://github.com/project-serum/serum-dex/commit/991a86e so I'm pretty sure this is v2 since v3 was released on feb 28th
Hmm, that's good to know. Is the lending program using the same version?
<@150787664553967616> So I did some digging and I‚Äôm almost certain that oyster is using SerumDex v2 currently. I thought that there could be some differences between v2 and v3 but I‚Äôm not entirely sure what are.  I though running serum dex v2 would be a good place to start but I‚Äôm running into issues creating the dex markets.
you can start with me üôÇ
Anyone know how to run `solana-test-validator` on Mac M1?  I get an error:

```Ledger location: test-ledger
Log: test-ledger/validator.log
‚†Å
[1]    17354 illegal hardware instruction  solana-test-validator```
Should I be naming any of y'all as reviewers?
Makes sense
No. It adds runtime complexity that far outweighs any minor convenience
Could you see a use for stake accounts to pay fees? I know some other types of protocols do something similar, such as when using an AMM the fee comes out of the input amount.
Yes, you do need a bit of SOL for transaction fees.  Only system accounts can pay fees
I was wondering if I needed to submit an improvement proposal, but it sounds like not
System account rent-exempt reserve
```
$ solana rent  0
Rent per byte-year: 0.00000348 SOL
Rent per epoch: 0.000002439 SOL
Rent-exempt minimum: 0.00089088 SOL
```
The reason I've been asking is because I did this; I'm unable to withdraw my undelegated stake into my main account though due to insufficient balances in my main account to pay the transaction.
It's a pretty low bar to achieve though
All accounts are subject to rent that hold a balance below the rent-exempt reserve
You can only withdraw undelegated stake and to withdraw to zero (where the account would be reclaimed) you have to withdraw the full rent-exempt reserve at once
Is rent currently being charged to primary/non-staking accounts?
Yeah that's why the stake program enforces rent-exemption
Keypair is an off chain thing that controls on chain things.  Account is where data is stored on chain.  In the case of system accounts, the keypair's public key is also its account address.
Okay, that makes sense. It would be a pretty big boon imo if someone were able to stake their account into non-existence
Try to think of the keypair separately from the account.
But yes it will be reopened upon deposit
It will never lose access to the stake accounts
So if the main account is reclaimed, then deposits are sent to it, it will open again and give access to the same stake accounts?
Yes, system accounts are created upon deposit if they don't already exist
Otherwise the stake account wouldn't be able to move its SOL
So if the main account gets reclaimed by runtime, would the account still be able to receive deposits from external sources?
probably‚Ä¶ i‚Äôll check
right
Ehem... aside from being unable to pay fees üôÇ
The main wallet balance can freely go to zero without affecting the stake accounts though
It's the main wallet on solflare AFAIK.  Solflare derives the stake account address (where the stake account data is stored on chain) from the main wallet pubkey and a seed string.
When I create a staking account in SolFlare, it just tells me the seed for the stake account but no other information.
So what is the keypair for the staking account?
Does.  The stake accounts themselves are what's important on chain and the stake program ensures that they remain rent-exempt.  Any authorities on a stake accounts merely need to exist as a valid keypair off chain.  Whether they hold a SOL balance or not is irrelevant
So if the main account has 0 SOL, but it owns a stake account with a non-zero SOL balance, the main account does or does not get reclaimed by runtime?
Nothing.  Stake account authorities aren't required to hold SOL.  You just can't lose the keypair
What happens to any staking accounts it owns?
Runtime reclaims it and its data
What happens to an account if it has a balance of 0 SOL?
<@!792782891196874792> looks like we have a missing builtin?
Thanks!
you get the new account data in the callback, but no information about the transaction that caused the change
<@!453347985628200960> might know
is this a know issue?
Hi, I am having this error trying to use the modulo operator (%) in a rust program.  Program failed to complete: ELF error: Unresolved symbol (__moddi3) at instruction #701 (ELF file offset 0x1500)
I had a few quick questions about the onAccountChange and onProgramAccountChange methods in the solana-web3.js library. Is any information passed to the callback or recorded? Specifically, can you see the account change or transaction that caused the change? Or the program account that was changed? Or would you have to call a get method in the callback to see what changed
That depends on what you mean with "work". Memory corruption bugs are very unlikely compared to C/C++ and Rust obviously has a way better type system, which means it is easier to prevent logical bugs. But like with every language, you have to use the type system properly.
there's less ways for you to write unsafe code in Rust than C for sure, which generally means less surprises at run time
Specifically I'm making my program compile and battling type and error propagation issues.... If it compile is it likely to work? Ie compared to c / CPP ?
Hi, more of a rust question, and slightly qualitative... If a program compiles, ignoring programmatic errors do the programs generally work?
awesome, thanks for the response!
what is the max number of confirmations to be sure the tx is ok?
Can i quik DM you
What‚Äôs your issue lol
Can someone help me


///////////////////////////////////////////////////////////////////////////////////////////////

The gist is that in order to transfer an SPL Token, *somebody* needs to pay the transaction fee but it doesn't need to be the token owner.  So any gas station can do it
Awesome! Thanks! I'll look into it.
Here's a project that seems to be trying to address this for users.  Disclaimer: I know nothing of this project beyond this twitter post: https://twitter.com/sol_meta/status/1387453035455021056
Hey guys, <@!472537211884011530> told me it would be a good place to share, Satellite is seeking a few Rust / Solana devs! Would love to hear from some people passionate about the space https://ipfs.io/ipfs/QmYUo8etgXrUifunap1VKaDxRzSQDJug9qamDaG6fpvj54
Exactly. Coming from Ethereum, it's been a bit hard to wrap my head around the whole rent thing. Especially how to deal with users that know very little about the blockchain in general. I mean, when they transfer an SPL token, they will have to pay the fee in SOL (as far as I understand it). I'm looking for a way to not depend on users themselves to keep their accounts funded with SOL.
Right.  It's more the notion of the _owner_ needing to be funded that's new.
I manage a non-custodial wallet and people want to use BRZ (not really SOL right now). I'm trying to figure out the best way to have BRZ - how many accounts will have to be funded, and maybe monitored, so that their funds never get below the rent exempt limit.
I wonder what's instigating the interest ü§î
I've seen this question from three places in the last two days
Great, thanks!
no issues, the main account doesn't need to be funded (but you better have the private key!).  It's fine for the main account to be a paper wallet even
Hey guys, I have a very basic question: supposing someone transferred an SPL token to me and I funded my associated token account with enough to be rent exempt, what happens to my associated token account if I forget to pay rent for the main account? Do the SPL tokens get wiped? And is it possible to reactivate an account that was wiped because it didn't have funds to pay rent? In case it is, will the SPL tokens be there?
If you are in fact querying older accounts and falling back to BigTable (which would be transactions in slots older than https://docs.solana.com/developing/clients/jsonrpc-api#minimumledgerslot), then asking the RPC node to contact BigTable more, in parallel, is unlikely to improve the situation
Sounds good. Do you think it makes sense for my use case to do the approach of multiple HTTP requests?
The concurrent requests into RPC might be contending for BigTable bandwidth, just a guess
Obviously, on a slower internet connection I could be leaving performance on the table as well by firing off more requests
Probably it, but also why would querying individual transactions in bulk be faster? Are those lookups easier?
might be falling back to BigTable for some accounts that havent been touched recently
So some accounts query super fast, particularly ones with lots of transaction history, but transactions that are farther apart might be querying slower
It does work on both public RPC and private, but performance wildly changes depending on the accounts being queried
yeah it's backwards üòÜ
I guess it's the opposite :)) thanks ‚ù§Ô∏è
ü§î you're using the public RPC endpoint?  It may be rate limiting you here, idk for sure
yeah but backwards means to the top or the opposite ? :))
"before" is exactly that, no?
well there is only ``before`` and ``until`` can't seem to find start from certain signature :))
Yeah, you can keep as much ledger around as you like, if you control the RPC infra
Calling in `@solana/web3.js` the `getParsedConfirmedTransactions` function, which batches multiple RPCs into one web request
yeah I feel the docs are clear on this already
wdym by batch?
So it's a configuration that can be tuned on the nodes?
```before: <string> - (optional) start searching backwards from this transaction signature. If not provided the search starts from the top of the highest max confirmed block.
until: <string> - (optional) search until this transaction signature, if found before limit reached.
(optional) Commitment; "processed" is not supported. If parameter not provided, the default is "finalized".``` is there like ``start from`` parameter
1000 at a time and I add what ? :))
More like a "if your usecase needs this, then you've outgrown the public infrastructure," issue
So an indexing and caching issue with underlying architecture?
My money would be on reaching deeper into history than the RPC server is retaining locally and the query falling back to bigtable
Obviously, on a good internet connection, etc
versus 50 RPC calls in one request
If I do 50 separate requests with one RPC to `getConfirmedTransaction` I get better performance
Poor performance occurs when I batch `getConfirmedTransaction` RPC requests
yeah by asking for 1000 at a time.  This limit is in place to protect the server from an excessive request
Nothing come to mind offhand, better characterizing the poor performance might help though
<@!445425471027544095> any thoughts on this one?
but max is 1000
I used ``getConfirmedSignaturesForAddress2``
is it possible to get all the confirmed signatures from a certain address ?
Hey everyone, I am getting slow performance calling `getParsedConfirmedTransactions` in `@solana/web3.js` with certain accounts. I am querying for 50 transactions, not sure if there is a major performance impact over a certain threshold of transactions (I can see that it is loading a lot of data, but do require that for my use case). Would it be better to do multiple requests rather than trying to batch all the RPCs into one request?
I think there‚Äôs also a social aspect to it. For example seeing individuals who are also working towards the same goal in learning Rust is motivating. Also being able to share the same frustrations and growing together.
Any reason you don't feel comfortable asking here?
I agree I‚Äôm also starting to learn. Would be great to have a channel for us noobs
<@!748249199606497502> if you have the ability to avoid write locks you should definitely do so.  As you scale up, conflicting write locks will likely become your bottleneck
can we make a new channel "new-devs"? have a few folks learning rust and might be better to keep the discussions separate for resources/blog posts/basic troubleshooting. lmk and thanks!
Right. I can just avoid shared write by default, but it trying to get a sense of if it's worth it
That's all about avoiding shared writeable data
I'm not much worried about compute in an instruction. I'm just trying to understand how much I need to avoid single threadedness. Our app might require 1000s of tps at peak load. And each "transaction" will probably have to be sent across multiple transactions
Hi <@!748249199606497502> The compute units up until this point are used as a cap to ensure that programs don't hog the pipeline.  They have been based on a trade-off between pipeline load and developer need.  We are in the process of reworking that system and analyzing the compute unit <--> load relationship with the goal of extending fees to compute cost.  From very basic level, you can think of a compute unit as a single bpf instruction (which it currently is measured that way).  There are other operations where we approximate a load based on the nature of the operation (syscalls, cpi calls, logging) where the bpf program calls out to the native runtime.  If you are optimizing you might want to focus in complicated logging (formatting can be expensive), large or unnecessary memory moving, etc..., pretty much the normal things you would keep in mind when optimizing a program.
Regarding single threaded compute units per second, I came up with an estimate. (65k tps / 24 threads) * 200k compute
You could also deploy to the non-upgradeable loader via `solana deploy ....` (not the lack of `program` in the command
Does anyone know why in the dapp-scaffold project the solflare wallet connection does not work? There is no error given, the solflare popup just dies. Sollet.io is working and I also tried adding the solflare.com url to allowed on chrome's popup blocker. It just shows for a sec and disappears without errors.
any good oracle solution that I can use for solana?
https://www.wormholebridge.com/
Hi. Is there any way to use Wormhole bridge to move ETH tokens to Solana? Does it have a UI deployed somewhere?
dmed, thanks for the help
basically you arent giving all the accounts that are required imo
https://github.com/project-serum/anchor/blob/master/spl/src/token.rs#L111-L125
like this part
i meant just the invoke
It will be a huge file (hundreds of lines) since there are plenty of accounts to set up.
it'd be easier to debug if you share the code snippet here for the invoke
probably missing accounts in the invoke
Sorry for the many questions, but anybody knows what can be the causes of:
```
‚ÄúProgram log: Error: InvalidAccountData‚Äù, ‚ÄúProgram 8n6FnDSuomxSjEoqWx9n7UxsmJqxViJUvaQJVJY6LJ99 consumed 10809 of 200000 compute units‚Äù, ‚ÄúProgram 8n6FnDSuomxSjEoqWx9n7UxsmJqxViJUvaQJVJY6LJ99 failed: invalid account data for instruction‚Äù
```
? This is quite strange given that the error is rather abstract and I am not sure what goes wrong...
ha, ok.
hmm not sure then
we were getting that error but was because we were using anchor incorrectly which resulted in us getting wrong `nonce` in the program

simplest thing to do wud be to just log the `nonce` on the client side and in the solana program 
and see if they dont match
no I am not using anchor, I am writing plan solana program.
Are you using anchor and providing nonce as input arg
yeah i guess there is probably a way to figure that out from the mint addr and the sol account addr?
or hmm
figure out the account associated with main account that is usdc account
ah then i guess to use that you need to uhh
I had found out Token.getAccountInfo on <@!832686202074300446>/spl-token,
i think you can filter in the request to just the one you want i just hadn't tried
yes I did used `Pubkey::find_program_address()` on the client side, but I also supplied a `seeds`. Sorry for not being clear. 

However, in the program it did check again if the provided seed is valid or not by comparing the result of `create_program_address` with the client supplied value. I'd assume it is less of an issue?
Maybe?  You didn't answer my question clearly
right so I guess it's more likely that it's a client side error caused by `find_program_address` ?
That message means the address generated by the provided seeds resulted in a byte string that represents a point on the ed25519 curve.  Which is an illegal PDA
I don't think so, I think it's more likely related to `invoke_signed`.
Did  you grind a bump seed with `Pubkey::find_program_address()` on the client side?
Any idea on how to trouble shoot this?
hi I am wondering has anyone seen this error from Solana program before: `Could not create program address with signer seeds: Provided seeds do not result in a valid address`?
uhm... Have any other API that I don't need to fetch all Token Program accounts first?
it's the account(s) with `EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v` as the mint
getProgramAccounts with `TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA` and it's in there somewhere
Hello, with web3 js sdk and @solana/spl-token, how do I find amount in USDC (SPL) from an provided USDC address?
Does anybody know how to fix this problem

Thank you so much trent!
if i wanted to interact with the jsonrpc endpoints in python has anyone made a library for decoding the data responses? (been having difficulty decoding the buffers)
thanks
When a program is upgraded, the new ELF binary is loaded into a new _Program Executable Data Account_.  Then the program data address is swapped out of the _Program Account_
_Program Executable Data Account_ is an account that holds the ELF binary data for the program.  The level of indirection you've observed is required  to support upgradeability
Latter is the definition of  a cluster.  Former is instantiations of a cluster.
I would like to understand what is a "Program Executable Data Account"?
From this link https://explorer.solana.com/address/27haf8L6oxUeXrHrgEgsexjSY5hbVUWEmvv9Nyxg8vQv
I would assume that this is an address for a program or program id. Then, I spotted an attribute labeled as "Executable Data" which link to another account here https://explorer.solana.com/address/D9Kh6CzoNb2gj7EDsP7fNZpbhLq8r9LoLgambqPKoF4z saying it is a Program Executable Data Account. What is it? I have not found any mention of it in the documentation.
I would like to clarify what a cluster really is? 

According to this link:https://docs.solana.com/clusters,
it appears that there are just 3 main networks for different purposes for different users.

However, according to this link:https://docs.solana.com/cluster/overview,
a cluster is defined differently. From my understanding, each cluster is a network of validators that maintain a ledger. 

Hence, i am not entirely sure what the is difference between the 2. Thank you!
works thank you so much
i was trying with base64 and super confused lol
thanks will try it out soon and let you know!
Presumably the `_bn`s are `Pubkey`s?  `base58` encode them, if so
hewwo, I am trying to use getMultipleAccounts and I am missing a step in my javascript manipulation that I am unsure how to solve.

After I decode the data, I get a bunch of ._bn's that work with the web3 library but break with the json rpc library. Wondering how to convert ._bn's into a string so i can use the json library.

Code sample:

```      const loadMarkets = async (accounts, options) => {
        const { data: accountsData } = await axios.post(ENDPOINT.url, {
          jsonrpc: "2.0",
          id: "1",
          method: "getMultipleAccounts",
          params: [accounts],
        });

        const getAllMarkets = accountsData.result?.value.map((item) => {
          const { data, owner } = item;

          const myBuffer = Buffer.from(data[0], "base64");

          console.log(myBuffer, data);
          const decoded = _MARKET_STATE_LAYOUT_V2.decode(myBuffer);

          const baseMintDecimals = 6;
          const quoteMintDecimals = 6;

          return new Market(
            decoded,
            baseMintDecimals,
            quoteMintDecimals,
            options,
            serumMarket,
          );
        });

        return getAllMarkets;
      };

      const loadOrderbook = async (askAccounts, bidAccounts, numberOfItems) => {
        // fails here because askAccounts isnt a string, but a bn
        const data = await axios.post(ENDPOINT.url, {
          jsonrpc: "2.0",
          id: "1",
          method: "getMultipleAccounts",
          params: [askAccounts],
        });
      };

      const loadedMarkets = await loadMarkets(marketAccounts, {});
      loadedMarkets.forEach((items) => {
        bids.push(items._decoded.bids);
        asks.push(items._decoded.asks);
      });
      await loadOrderbook(asks, bids, loadedMarkets);

```
does solana support wax?
How change decimal at the spl token?
Hello, we are looking for a rust dev to develop something on solana. If the dev can also have solidity knowledge it‚Äôs a plus ! Pm me if interested
hello, 
we are from waterfallbot team, multi-chain tracking services
https://t.me/CENTRALwaterfall

we have a plan to support tracking SPL token on Solana blockchain

so, can anyone help to tell me, is there any websocket to listen all swap trades events on SerumSwap / Raydium ?
much appreciated
<@!554934877267689472> ‚òùÔ∏è
Solana Program Library: https://github.com/solana-labs/solana-program-library
Serum Anchor Framework  examples:  https://github.com/project-serum/anchor/tree/master/examples
One more thing. My team is looking into the possibility of developing a Leveraged Yield Farming product on Solana. 
We have checked out and completed this tutorial here https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/
which really gave us some standing ground on building on-chain program on Solana.

However, we would like something more advanced, some intermediate example or tutorial. We tried looking into some of the launched DeFi projects but most of them do not open source their program code.

Could anyone point us to some directions or give us some hints? Thanks a lot.
Awesome thanks!
Got it now thanks.
Correct.  Upgradeable is default.  You explicitly set non-upgradeable.  Sorry I can't really speak to the solidity/Ethereum details
I believe it is set by default for now. If you would like your program to not be upgradable, you will need to specify a parameter `solana program deploy <PROGRAM_FILEPATH> --final`
Or is that the default
Sorry if this is kind of a noob question, but how do you set your program to be upgradeable?
Cool bro. I have read those part of the document and tried deploying some tutorial program to my localnet myself in which I could redeploy the program to the same address. So, is that all for the upgradable program? I meant you just don't mark your program as immutable and your program will always be upgradable. No additional fancy steps like Solidity?
Then if you follow the link to learn about deployment, you can get the gist of how it works
It's kinda hinted at here https://docs.solana.com/developing/runtime-facilities/programs#bpf-loader
We don't seem to have much in the way of high-level docs for it, yet ü§ï
That's pretty much what the upgradeable loader is
Is there like a transparent proxy pattern around in Solana to facilitate a more reliable way to upgrade program? (equivalent to Openzeppelin's in Solidity https://blog.openzeppelin.com/the-transparent-proxy-pattern/)
I think the technical term is the user would get "rugged" üôÇ
Basically it's the responsibility of the program upgrade authority to not do this, and users may chose to not interact with a program that is upgradable for this reason
I have a question about risks concerning upgradable program. What will happen if I altered the new program so that is not backward compatible with previous program, what will happen to the user? Is there any best practice or example on maintaining upgradable on-chain program? thanks.
<@!445425471027544095> thanks!
problem resolved, thank you! very nice support!!!!
Try `solana decode-transaction --help`
anyway to decode params? transaction made by my own keypair

Hi, guy, is there anyway to resolve transaction params from rpc?
ah, gotcha, that makes sense. thank you! loving this community! üôÇ
Usually it kicks them out of the pool a little faster
Yeah.  You caught us during a DNS migration which was confusing the load balancer a bit
hey completely off topic but I noticed when sending transactions the other day that one node kept rejecting me because it was significantly behind on the chain.  I was kind of surprised it wasn't jailed. have you had any discussions around that?
yesss, awesome, thank you! you guys are rockstars!
So as a bit of a hack you can...
```
$ solana address --keypair ask:?key=0/0 <<<"you how ever many words seed phrase here

"
```
üôÉ
On devnet every time I deploy my program it gives the same program ID. How do I make it generate a new one?
Got it.  cc/ <@!213083996689661953> , potential non-interactive seed phrase input use-case ü§î
I do
So you have seed phrases for those wallets?
Ha!  Yeah, I wish it crossed out the replaced string though üòï
also I just learned right now that you can use s/ in Discord. awesome. üòõ
We generated 1k wallets for the Raydium/Media staking and distributed the seed phrases to our team already. I'd like them to keep their existing private keys but get the derivated public address for use with Sollet but nicely organized in their spreadsheets. If I can generate them in bulk, and then import into Sollet somehow, it would save us a lot of time.
Not today.  We actually kicked around some ideas about that today, but couldn't really think of any viable use cases.  What are you trying to do?
is it possible to pipe the seed phrase into the command itself? alternatively somehow using the full solana repo?
drr I thought I had upgraded but it hadn't. not enough coffee. thank you!
I can recover my sollet keypair with `solana address --keypair ask:?key=0/0`
You're using v1.6.7 of the CLI tools?
Hi. I'm trying to generate ASK 44/501 public keys from my existing wallets without derivation so they can be compatible with Sollet. I found the github discussion at https://github.com/solana-labs/solana/pull/16942/files#diff-74038ef7d737ad7ebedf6ddb1f940e6f15337de6cba7d331a3621cccdd81cd3aR123 but I'm not having any luck.
can you show me how to debug this project in VSCode - https://github.com/solana-labs/dapp-scaffold ?
thanks
Sure I will give it a try!
Hello, can I ask a question about the RPC method getConfirmedBlocks(https://docs.solana.com/developing/clients/jsonrpc-api#getconfirmedblock?) Can someone confirm for me that if a block is not confirmed, this method will indicate that by setting BlockTime to null? the docs say something else but from testing it myself this is what i get
(also, shouldn't it use sol_try_find_program_address instead of sol_create_program_address to avoid the error in the first place?)
In the C CPI example here: https://github.com/solana-labs/solana-program-library/blob/ea4b7e62fc540516e5e43be267a0364a32da8e94/examples/c/src/cross-program-invocation/cross-program-invocation.c#L25 - why does it return an error on SUCCESS? The solana_sdk.h #defines SUCCESS as 0 and syscalls.rs seems to return 0 on success as well: https://github.com/solana-labs/solana/blob/da81ad0c41e0ee0798ac6aedfd2926fb82e1be6d/programs/bpf_loader/src/syscalls.rs#L796
Want to give using these locally a shot?

https://github.com/solana-labs/solana-program-library/commit/118eda49145be93c0a52026a7d3c21cf2da00fdd
https://github.com/solana-labs/oyster/commit/2a7baf79c357a7c9e4ccad86d3959888536ae977
on etherscan:
trying to look for the first tx..
Can we add pagination to the explorer?
I'm not sure but I deleted it and ran `solana-test-validator` again and it was all good üôÇ
The instructions are here: https://github.com/solana-labs/token-list#adding-new-token
right, a program stores data in accounts and can read from them too
so a program can't store data, it needs a data account, in this case we can read data from data accounts right ?
data from where?  From another account or instruction data, yes!
<@!445425471027544095> is it possible to read data from a program ?
<@!453347985628200960> is a good person to answer this, he's not around today though
I don't have a good sense of how the compute units translate to CPU ops. And just knowing the order of magnitude of compute units per second would be helpful in determining what I should try to optimize and what I can ignore.
Jstarry asked a question on my behalf in the <#439194979856809985> channel about the amount of single threaded compute units per slot. It seems nobody there answered it, but I'd like to bump up that question.
Open a PR here https://github.com/solana-labs/token-list.
We're working on transaction cost model adjustments to help mitigate this, writable accounts should be more expensive than read-only accounts
Suppose there is an Account that all the instructions for my Program access as read-only. This doesn't hurt performance because all of these instructions can still be processed in parallel. 

But suppose someone starts sending in that Account as writable in some spam instructions that will always fail. Will that hurt the performance of my Program as it now must be single threaded? Or do Solana validators have an intelligent way of filtering out such spam instructions?

I worry that this may be a kind of DDoS attack, but I don't know enough about how solana validators process transactions.
Why ?
https://media.discordapp.net/attachments/818237158620004365/824367499498749982/703813169205739631.gif
does that means they are not active ?
```jsonrpc    :    2.0
    result        {2}
    current        [572]
    delinquent        [33]
id    :    1
```
delinquent are the one who didnt vote or something ?
Is there any sample code to connect to the solflare wallet programmatically?
Does solana airdrop only work when the validator is down? I did an airdrop of 1 sol and it seemed to work but RPC doesn't see it and it does not show up in solana-validator monitor either
does it give all the validators at the current epoch ?
I mean does what is a voting account exactly ? üòÆ
yeah, all validators vote
voting validators? how is a voting validator different from normal one ?
Damn super strange, I tried all three confirmation levels and still don't see the updated amount that I see on the server and here: https://explorer.solana.com/address/Dh8CGS28V6B86JqBVgYrfffbjgD289oqotWeu6Sr9DJz?cluster=devnet
Question on account fees: Which account is the transaction fee payer? For example is it the sendAndConfirmTransaction function's signers or in createAccount is it the fromPubKey?
https://docs.solana.com/developing/clients/jsonrpc-api#getvoteaccounts provides the list of voting validators
yep ,but also subject to the confirmation level you use: https://docs.solana.com/developing/clients/jsonrpc-api#configuring-state-commitment
weird, what `tar` do you have?  We exec out to the system tar to create snapshots currently.  It seems like your `tar` made a weird directory called `accounts/GNUSparseFile.0`
Hey quick RPC question. How often does the RPC data update? Like if I airdrop a sol onto my devnet validator should I be able to see that change in realtime on the getBalance RPC call?
<@!472537211884011530>
What kind of data?
hey which json rpc method should i use to get a list of validators ?
cust
when will cuda and rust merge?
on localnet
when running `solana-test-validator`
im getting this error

solana_ledger::bank_forks_utils] Loading snapshot package: "test-ledger/snapshot-100-GQUZByYWv8QH1x1EeGwWp7grjAuBchj1FUDTvc3z3ntR.tar"
thread 'main' panicked at 'Load from snapshot failed: UnpackError(Archive("extra entry found: \"accounts/GNUSparseFile.0/100.168\" Regular"))', ledger/src/bank_forks_utils.rs:74:18
stack backtrace:
   0: _rust_begin_unwind
   1: core::panicking::panic_fmt
   2: core::option::expect_none_failed
   3: solana_ledger::bank_forks_utils::load
   4: solana_core::validator::new_banks_from_ledger
   5: solana_core::validator::Validator::new
   6: solana_core::test_validator::TestValidator::start
   7: solana_core::test_validator::TestValidatorGenesis::start_with_mint_address
   8: solana_test_validator::main
hey
is it possible to read data from a program ?


///////////////////////////////////////////////////////////////////////////////////////////////

not sure if this is right place to ask, but i send fund to one of my address but it wasnt reflected and tx was successful, anyone knows whatsup
This is the error im getting ```$ solana-validator \
>   --identity ~/validator-keypair.json \
>   --vote-account ~/vote-account-keypair.json \
>   --rpc-port 8899 \
>   --entrypoint https://api.mainnet-beta.solana.com:8001 \
>   --limit-ledger-size \
>   --log ~/solana-validator.log
error: Invalid value for '--entrypoint <HOST:PORT>...': Unable to resolve host https://api.mainnet-beta.solana.com:8001: failed to lookup address information: nodename nor servname provided, or not known```
does solanabeach have an endpoint ?
So if the entry point is `--entrypoint <HOST:PORT>...` in this case I do https://api.mainnet-beta.solana.com/8899?
When I run `solana --help` I don't see documentation for the entry point
In this case the `--entrypoint` has to be the mainnet?
```solana-validator \
  --identity ~/validator-keypair.json \
  --vote-account ~/vote-account-keypair.json \
  --rpc-port 8899 \
  --entrypoint entrypoint.devnet.solana.com:8001 \
  --limit-ledger-size \
  --log ~/solana-validator.log```
Hey all, I'm trying to connect my validator
Ok, so `key` means _address_ in that context. I which case no, no two token accounts with unique mints will have the same address
swap_source and swap_destination must have different mints..
i'm trying to figure out if this is a bug:
```rust
        if *swap_source_info.key == *swap_destination_info.key {    // XXX: Is this a bug? Can these two have the same keys?
            msg!("Error: Swap source cannot be the same as swap destination");
            return Err(SwapError::InvalidInput.into());
        }
```
What do you mean by _have_?
does that mean no? üòÖ
Account addresses are always unique (and many of them are identified by an ed25519 public key, but not all)
So if I create an account for token A and another account for token B? Is it possible for these two accounts to have the same public key?
Filtering for the transferChecked and transfer instructions should work then
I just start using anchor for a few day here, I'm not expert but I might have your answer.
https://project-serum.github.io/anchor/tutorials/tutorial-1.html#defining-a-program
Please refer to this tutorial and check out the `#[account(init)]` syntax there. That is how anchor enforces that the account passed into that param must be initialized.
Maybe a stupid question.. but I'm interested in making a based on a PoS Token with Solana. 
Any advice from where to start and how it works would be very welcome.

Another question would be maybe also relevant, is creating a own token difficult or not with Solana? 

Thank you for your help!
Compute budget is not dynamic today
```transferChecked``` used this
I am trying to filter transfer token transactions only
well is there like a unique way to identify a transfer token tx when using get confirmed transaction
your mainnet validator would use `--rpc-port 1234` to expose an RPC port, and then from your site connect to it's IP address:port number
Quick question lets say I'm running a site locally that is running on PORT 3000 `http://192.168.1.102:3000/ ` but I want to connect it to use my mainnet validator. Is there documentation in how to connect both endpoints?
<@!445425471027544095> when I switched to main net I was able to see the balance
thanks for the help
```$ solana config set --url https://api.mainnet-beta.solana.com
Config File: /Users/stevenaguilar/.config/solana/cli/config.yml
RPC URL: https://api.mainnet-beta.solana.com 
WebSocket URL: wss://api.mainnet-beta.solana.com/ (computed)
Keypair Path: /Users/stevenaguilar/validator-keypair.json 
Commitment: confirmed 
stevenaguilar ~
$ solana balance
0.01 SOL
stevenaguilar ~```
Binance withdrawals occur on mainnet, not devnet
sorry I'm not really sure what you're looking.  could you please try to rephrase?
Hi all, I set up a validator following the Solana documentation. I start running the validator node using the following command ```solana-gossip spy --entrypoint entrypoint.devnet.solana.com:8001``` . I then tried to send myself some tokens which shows successful in Binance but when I checked the Solana explorer it showed a "null" signature error. When I tried testing the wallet I runned ```solana airdrop 1 47G97T5Tt3LzQ8g9r6fXXXXXXXXXX --url https://devnet.solana.com
Requesting airdrop of 1 SOL``` and it returned one SOL. But when I transfer from binance and then I run `solana balance` I get `0` althought I transfered from Binance. I wonder if is because I'm using `devnet` entry point. Any guidance on this matter will be highly appreciated
<@!445425471027544095>
https://github.com/solana-labs/solana/pull/17124
Found it, thanks. Pull request is on the way. :)
Yes please!  https://github.com/solana-labs/solana/blob/master/sdk/bpf/c/inc/solana_sdk.h
Yah. Found the answer:
Is it hardcoded in the Solana node software, or is it dynamically determined by the network, kind of like block gas limit?
Hey guys, I've a question here: I found that in this page https://docs.solana.com/cli/usage#deploy-program the doc says `Upon a successful deployment the account that holds the program is marked executable and its account data become permanently immutable. If any changes are required to the program (features, patches, etc...) the new program must be deployed to a new program ID.`. But here's a `Redeploy a program` section https://docs.solana.com/cli/deploy-a-program#redeploy-a-program talking about how to upgrade my program. After some tests on the test validator the program could be upgraded by redeploying. So, my simple question is: Programs on Solana are allowed to be upgraded or not?
I guess better way to ask this : what makes a transaction of sending unique ?
I am using solana RPC but fetching thousands of transactions a lot of them are similar
what's the best way to get a transaction that basically says sending from person X to person Y mint A
hi, i'm looking into developing something that primarily will be swapping tokens. Im can seem to find and resources that explain or walk you through this process either by the CLI or web3.js. Can anyone help point me in the right direction to get me started?
Question: is the `compute budget` hardcoded, or is it determined dynamically by the network/cluster?
or should i be on the serum discord for that ?
is it ok to ask anchor questions here?
in anchor how would i check if an account exists
If someone could point me to solana_sdk.h's GitHub page, I'd like to send a bugfix; I just can't figure out which repository this file originally comes from.
Well, it took an afternoon, but I solved it. Turns out, some functions in solana_sdk.h, such as `sol_create_program_address` are declared `static` and because of that, clang++ ignores the `extern "C" {}` block and mangles their names. Removing `static` does the trick; I don't see why it would be needed (also for C, without the ++).
That is an error being called in the/your program
Please check if the seed you are passing to `invoke_signed` is same as the one you used in `find_program_address`
I‚Äôm having the same issue guys
Same issue
need help, i'm getting this: `RPC response error -32002: Transaction simulation failed: Error processing Instruction 0: custom program error: 0xe [5 log messages]
`
Okay there is definitely something broken with the C++ toolchain. Using one of the official examples (https://github.com/solana-labs/solana-program-library/blob/master/examples/c/src/cross-program-invocation/cross-program-invocation.c), it works when compiled as C (after fixing two unrelated bugs), but fails with the same `ELF error: Unresolved symbol (_ZL26sol_create_program_addressPK13SolSignerSeediPK9SolPubkeyS4_)` when renamed to .cc, and hence compiled as C++.
Hi! How can I estimate the amountOut Price of the token swap program? https://github.com/solana-labs/solana-program-library/blob/master/token-swap/js/client/token-swap.js
Hi, has anyone tried the Raydium API?
I'm calling the solana_sdk.h's sol_create_program_address from C++. It compiles fine, but when running the transaction (during simulation to be precise) I get:
`ELF error: Unresolved symbol (_ZL26sol_create_program_addressPK13SolSignerSeediPK9SolPubkeyS4_) at instruction #126 (ELF file offset 0x308)`
Any idea what needs fixing? :)
Issue created https://github.com/solana-labs/solana/issues/17121
I think the transaction cost is the same at this time? Not 100% sure.
is it possible for a program to know how much the transaction is costing the person who called it?
Hi I am wondering has anyone encountered: 
```
Could not create program address with signer seeds: Provided seeds do not result in a valid address
```
when calling `invoke_signed` ?
Thanks buddy
Cool
I'm signing off, good luck!
oh, I'm not sure. You can probably ask in <#809905639391363122>
How to get a staking from the foundation
How and when can I get delegated stakinng from foundation
like how to do it or how it works?
Delegated staking
great
what type of info
How can I get the up-to-date info on staking program? I'm almost ready for being a validator
try signing up here: https://solana.com/validators/#signup
that easy xD thanks!!
you can use accounts[1] directly
I have faith in SOL
If I had the delegated staking, it would worth it.
hopefully worth the cost depending on what you're trying to build
the only but one thing between me and a validator
yup network bandwidth can be pricey
Hey Is it possible to send buffer data as input to the program function?
I suppose it needs the same network bandwidth as a "real" node
the rpc load will impact your validator voting behvaior if it's usage is too high
because actually you don't want to run rpc on a voting node
I checked through the forum and didn't find anything on currently open programs
which just provides rpc api for now
but in any case, you can start with a non-voting node
I'm probably out of the loop on that
oh, maybe it has?
Great to hear about that but I heard the foundation has paused some rewards program.
so the idea is that not every node needs $200k or whatever that break even point is
and there will be some sort of stake protocol in the future that would spread stake out
the foundation will stake your node if you go through some steps
yeah there's some break even point where the inflation rewards you get from voting balances out the transaction fees required for voting
which is the only thing prevents me doing that
It is said you need to stake some 200k USDT worth SOL to get to balance point when it comes to running a validator
but it's the same `solana-validator` binary, just a few different cli flags
"running a node" was implied to mean setting up an node with rpc api enabled which does not vote
So a little insite on this, I want to be able to specify the key in AccountInfo
very similar. Running a validator means that you're actively voting on blocks to contribute to consensus
it's just that our rpc endpoints use a load balancer with many different nodes behdin
Is it the same "run your own node" as being a validator?
sweet, I suggest that then
Up to do that. I also want to be a validator
you could also run your own node
it's just that some nodes may return state for an earlier block
Currently I'm using this workaround.
it's the same cluster
Different cluster thinks different about account balance
we're going to fix that issue at some point
Yeah I suppose so.
could you just retry a few times if you get that error?
account_info_iter = &mut accounts.iter(); so is there any easy way to specify like iter number 1. If I wanted to hardcode the account. Like for the program to use the 1st account info it sees
sometimes the node you connect to is a little behind
hmm probably means that you're connecting to different rpc nodes
yes
which leads to "Insufficient funds" sometimes.
great, but you're still getting insufficient funds?
Yeah I've been using that.
cool thanks
```js
const connection = new Connection(url, "confirmed");
```
This guy's in the right TZ to help you. üôá‚Äç‚ôÇÔ∏è
JS
"confirmed" takes about 3s under normal conditions
are you using rust or js?
<@!817241470057971773> you'll want to configure your client to use the "confirmed" commitment level for everything
Could you kindly get me some keywords to google for?
Any hint please?
okay thanks üôå 
But it doesn't print hex representation value of `log::sol_log_slice(vec.as_slice())`
And, it does print all log with `!msg`
it's been helpful
No.  I just don't want to deal with telling you you need to drive state on chain to do what you're trying to do correctly
Thanks for your help
Sorry 0130 here ü§∑‚Äç‚ôÇÔ∏è
It looks a "real" problem hmm
sad
Hmm, you're going to need someone who's not about to fall asleep to thinking through that with you üí§
real on chain error
Real error or "transaction simulation" ?
I got that. What about transactions in a sequence?
So I suppose it needs a "finalized" state if I need to carry on to the next transactionn
That' s the client waiting for the TX to be sufficiently buried by other blocks.  It's in a block with in a second or so
I would like some insight on how Accounts created during some business process should be handled.
https://github.com/project-serum/anchor/tree/master/examples/cashiers-check
From the link above, this is an example of cashier check app provided by Serum Anchor Framework.
The process flow of this program would be like this:
Let's say Alice want to create a check for Bob to cash it.
1. Alice create 2 accounts which are check account and vault account (to store token for Bob) and call "createCheck" instruction of the program.
2. Bob wants to cash the check, he would supply the check account and vault account given by Alice to the program and call "cashCheck" instruction of the program
3. All is done, Bob would get the token and the check would be burned.

However, in real-life scenario where we would like to create a DeFi App, how would an end-user maintain the check account and vault account in this scenario? Does Alice need to make note of the check account and vault account addresses every time Alice created a check? Or is there a way to programmatically derive the said addresses for later use by Bob? Or would this need an off-chain solution by keeping those addresses persistently for later use?
Thanks.
However when it is not "finalized", it errors "insufficient fund"
Yes, you're confused
That's a good point. I tried multiple options
You're probably just confused by client "confirmation level"
Sometimes it turned out to be 30 secs for my transaction
How can I get a faster speed then?
Sad
No.  That doesn't exist on Solana.  TX fees are deterministic
I checked through the doc and found nothing
Don't.  Use `solana logs` in a separate terminal
Hi everyone, is there a way to specify transaction fee when I send transaction? I need faster confirmation when network is congested.
hey, how to see `sol_log_slice` in the logs? 
I have used this for logging rn. 
```export RUST_LOG=solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug```
Ok.  Thanks for the information.  It seems like I need to do a little more research.  Are there any resources you could point me in the direction of to learn more about the runtime and AccountInfo in general?
8am on Saturday for me - the pull of Solana is too strong!
Yes, impossible üòì.   
There may be workarounds, but let's chat next week.
I just realized it's late Friday night and I'm chatting on dev support in discord.  Need to AFK for a bit üòâ
It just won't work.  It won't be backed by any valid account, so the runtime wouldn't apply any changes made to the account when your program terminates
I see.  At that point would it be valid to create an AccountInfo with data supplied manually or would that be ill advised?
Hi all, I'm trying to create a data account with a program address, and hitting a signing issue.

Initially I was creating the account as an inner instruction, i.e. in the program that owns the program address, but this limited me to a size of 10kb:

"data size limited to 10240 in inner instructions"

So I tried to create the account via a client, using SystemProgram.createAccount. However this gives me a "Signature verification failed" error unless I sign with the new account secret key, which I don't have, because it's a program address. Is what I am doing impossible?
It doesn't quite work like that.  An existing SPL Token account could be provided as account to your program, and then the runtime will create an AccountInfo for it automatically
Thank you, I appreciate the response.  Is it possible for me to make an AccountInfo in that way for an account that I would like to use as a place to store spl tokens for my program?
Hey so you should never have to populate an `AccountInfo` struct yourself.  The runtime will provide it as input to your program
I'm trying to use account info struct as seen here https://docs.rs/solana-program/1.5.1/solana_program/account_info/struct.AccountInfo.html to transfer tokens with a onchain program. Is this is something I can autogenerate with keypair? Or do I have to do all the fields manually?
using anchor how can one do a cross program invocation of something that isn't using anchor? https://project-serum.github.io/anchor/tutorials/tutorial-3.html#defining-a-puppet-program
Programs are free to choose their own serialization format. Borsch is popular
Is there a standard way to deserialise &[u8] into some struct that i've defined?
Ah!  Grinding right down to the wire.  Carry on then! üèñÔ∏è
oh it starts tomorrow, I have a lot going on today still! Doing a tutorial live stream later tonight
Get outta here!  Enjoy your vacation! üòÇ
that example is unmaintained, I would recommend learning from other examples
I am trying to build https://github.com/solana-labs/example-tictactoe, but I am getting the following error: https://pastebin.com/8Fh4AU5k. How can I fix it
Hello
I couldn‚Äôt find an exact match...so I suspect there is probably a little modification somewhere..
Yeah I dunno what the JS one is up to either.  I think it's copypasta from elsewhere
The variable names don‚Äôt help either lol....
My crypto skillz are weak üò¶
.....the method jack implemented has a lot of low level magic that I can‚Äôt understand
Also not sure what PDA stands for...
Right. But doesn‚Äôt the standard tweet nacl/pynacl libraries already have methods checking this? It looks like you guys wrote your own ‚Äòis_on_curve‚Äô checker....
Over all valid 256bit addresses, some are valid ed25519 public keys, some are not.  PDA give meaning to this notion
The _address_ space
This is the current implementation of `create_program_address` <https://github.com/michaelhly/solana-py/blob/815802fbfa6fa5f7c5c1ab1c481b7a7ce3666b2e/solana/publickey.py#L71> which uses `crypto_core_ed25519_is_valid_point` from the python nacl lib. Which I guess is wrong for BPF programs ...
And would be great if someone from Solana could help me with ^. I'm getting quite a few feature requests on implementing `find_program_address` and `associated_token_account` related helpers. But we can't seem to get it right, I suspect it has something to do with "separating the space between keypairs and program addresses". Here is the PR we're having issues with:
<https://github.com/michaelhly/solana-py/pull/56>
that will work! awesome, thank you very much, I didn't see that option! üôÇ
hey <@!453347985628200960>. In this PR, https://github.com/solana-labs/solana/pull/11355, what does "separate space" mean?
> To separate the space between keypairs and program addresses force all program address to be off the curve.
Thanks starry. I will redeploy with the line removed.
bummer, you can use that command repeatedly as long as you request the next batch using the `--before` argument and pass the earliest transaction signature from the previous results
```
OPTIONS:
        --before <TRANSACTION_SIGNATURE>    Start with the first signature older than this one
```
your program will work once the following feature switch is enabled on mainnet:
```
7411E6gFQLDhQkdRjmpXwM1hzHMMoYQUjHicmvGPC1Nf | inactive                    | Provide sysvars via syscalls
```
found using `solana feature status --url mainnet-beta`
yeah I think so, could you write up a new issue for that? https://github.com/solana-labs/solana/issues/new
Yeah it, after I do cargo build I simply copy and paste the command it gives
Does anyone know where `sol_get_clock_sysvar` come from? Just deployed my code to the mainnet, and got 

`Program failed to complete: ELF error: Unresolved symbol (sol_get_clock_sysvar) at instruction #17519 (ELF file offset 0x22290)`

on one of the instruction. The instruction involves getting epoch from Clock. Am I not using the supported version perhaps?
Sorry to bother everyone again but I'm wondering the best way to get an wallet's entire transaction history as I see "solana transaction-history" is limited to 1000 transactions even when specifying a higher number. Need to do an audit :/
I resolved, my bad, I haven't install mocha yet üòÑ
hello I try to run 

```anchor test```

at https://github.com/project-serum/anchor/tree/master/examples/tutorial/basic-0

and I got error message 

```‚ûú  basic-0 git:(master) ‚úó anchor test
BPF SDK: /Users/lamle/.local/share/solana/install/releases/1.6.6/solana-release/bin/sdk/bpf
Running: rustup toolchain list -v
Running: cargo +bpf build --target bpfel-unknown-unknown --release
    Finished release [optimized] target(s) in 0.12s

To deploy this program:
  $ solana program deploy /Users/lamle/Development/Solana/hackathon/dapp/anchor/examples/tutorial/basic-0/target/deploy/basic_0.so
Failed to run test: mocha: No such file or directory (os error 2)```

please help, thanks a lot
Okay cool stuff, thank you!
maybe <#805977964822134835>
is there anywhere on this server where I can look for developers for hire on solana?
you can still send transactions with javascript only
something that is a program in the blockchain
Great, so you only need rust if you want to make something that interacts with solana
yes, typescript
so mainly javascript?
No need to write rust solana program since you are only interacting with the blockchain (read)
npm packages <@832686202074300446>/web3.js <@832686202074300446>/spl-token <@832686202074300446>/spl-token-swap should be enough to gather all the data required
<@!466984915376799748> should https://github.com/solana-labs/solana/tree/master/explorer/src/validators be in web3.js? Otherwise people are left with a spaghetti to work with when they get a result from `getParsedAccountInfo`
Hello guys, I'm a Data scientist looking to get into development, thank you for your time, I want to know what would I need to learn in order to implement a charting application  based on solana-based swap platforms, do i need to learn rust for that or is it interacting with something else? thank you!
Are you using the deploy command listed at the end of the `cargo build-bpf` command?
You mentioned `cargo build` before so I wanted to make sure it was actually `cargo build-bpf`
Yeah
Are you doing `cargo build-bpf`?
are there any particular zksnark liraries would be supported by solana programs?
Im simply just doing cargo build and than deploying.
Not sure, have you tried something obvious like a new `msg!` and then checking the logs to make sure?  how are you building and deploying your program?
Exactly. :)
Yes, but pubkeys are byte arrays, so.... üòâ
Thanks! That syscall check happens here if I'm not mistaken: https://github.com/solana-labs/solana/blob/da81ad0c41e0ee0798ac6aedfd2926fb82e1be6d/programs/bpf_loader/src/syscalls.rs#L346 - so if I call sol_try_find_program_address from C, I better make sure the pointers (to program_id for example) are multiples of whatever alignment Rust expects for "Publickey", right?
Exactly that lol
Do you mean that you make new changes, compile, and deploy to devnet but the behavior is the same as before the latest deploy?
Is there any reason why when I redeploy my program on dev net nothing changes?
Being the programs are run on x86 architecture, unaligned accesses are handled gracefully (though potentially slowly) by the hardware.  But that doesn't mean software libraries you may call will.  We've made efforts to ensure that the address of the data passed into the programs are aligned and we do enforce that addresses passed out of the programs (syscalls) are aligned before being used by the runtime.  Within your program it is up to you.  Just be aware that some 3rd party libraries may make assumption about alignment that you might not be aware of.  In general, rust requires "a value of alignment n must be stored at an address that is a multiple of n" https://doc.rust-lang.org/reference/type-layout.html
Seems like some attempt at a vendor lockup
I see that some wallet create stake accounts with weird seeds like `seed:0`, `exodus:12314` 
Should they be using the basic index seed like the cli? So they can still be used cross wallets?
Considering the thing was developed to work on network packet data it might actually make sense for it to be alignment-agnostic.
_can't believe there's no shovel emoji_
Thanks, I'll see if I can dig something up!
FWIW we use the rbpf userspace vm with JIT
I guess I should really dig into the BPF instruction set documentation and see what that says.
Or it might be that an interpreter is fine with it, but a JIT-compiler crashes.
Well it's one of those things that might seem to work at first, but then fails once in a blue moon when the conditions are just "right".
You can always just try on testnet and see what happens.  Worst case you win an accidental bug discovery bounty üôÉ
Alright, I'll wait for his input then. In the meantime I'll assume it's something I'll have to watch out for, thanks!
I believe so.  These are <@!453347985628200960> questions though
I'm not sure that's true.  Generally initialize instructions have to be unauthenticated, so the only way to allocate and initialize an account is atomically, in the same transaction
Well what if I intentionally instruct the compiler to pack structs tightly, or move around bytes by hand? (I'm doing some low-level stuff here.) Do BPF instructions require e.g. uint64_t data to be aligned?
it would useful to provide a program id and account size and generate an account for a program
I'm not sure how useful that would be in the solana CLI?  Usually an account needs to be atomically initiallized in the same transaction.  We won't be accepting initialization instructions for any third party programs
I believe alignment is enforced at compile time for the program and at the entrypoint by then loader program during load
when things calm down if it is still not available I will do a pr
(assuming I pass the correct address of course, just an unaligned one)
Does alignment matter for Solana's BPF programs? Is it possible that some instructions generated don't work if the data is off by 1 byte?
You can write your own CLI tools to do whatever you like, of course
So long as _a program_ is _System_, _Stake_, or _Vote_, yes
Can the CLI create an account for a program? from the help menu it doesn't seem possible
You're probably going to have to post code
if i set receiver's token meta-address - everything is fine, but i want to create a sender-funding transaction
when i try to send tokens to the native sol address via **solanaWeb3.Transaction() **i get  

`Transaction simulation failed: Error processing Instruction 0: invalid account data for instruction`
wow that worked, Thanks again!
Thanks ‚ù§Ô∏è
Something like that, yeah.  I don't know the JS field names
sorry bit noob üòÖ
so something like this ? ```{filters:[{offset:0,bytes:'mint'},dataSize:165]``` <@!585868308419444749>
It pays for the SPL Token account's rent is all
Assuming you use the ATA program to create the account, just pass a sender-controlled SOL native address as the funding account
So you'll want to filter on data size = 165 and memcmp offset = 0, bytes = "mint address"
This field https://github.com/solana-labs/solana-program-library/blob/f0b1cec4d824e2a2f90e7a11f1b8f18a42c92b15/token/program/src/state.rs#L88
It's still under SPL Token program
I  _think_ the RPC server can detect that query and use the optimized index
program is the mint in this case ?
I guess you'll have to do it via `getProgramAccounts` with an appropriate filter in that case
i'm guess avoiding `format!` should be cheaper?
https://github.com/solana-labs/solana/blob/ec2b06d81dcfebb8bc49556831518bad6503d0c4/sdk/program/src/log.rs#L46
Oh... weird.  WTF is the secondary index for, then üòÜ
maybe somewhere else you were referring ?
Right, there's no getTokenAccountsByMint here https://docs.solana.com/developing/clients/jsonrpc-api
Sorry I don't really keep track of video tutorials
<@585868308419444749> I am not work with this programming language before . 

Any video do you can provide  ?,
It requires a _mint_ address. But I assumed you had that since you want a "certain token"
is it cheaper to string interpolate inside a program or just call `msg!` twice (or multiple times)
oops, sender-funding i mean

https://spl.solana.com/token#example-transferring-tokens-to-another-user-with-sender-funding
hmm doesn't that require an address ?
Eh... kinda.  getTokenAccountsByMint or something like that
solanabeach does it but I don't know how they do it
What do you mean by "self-funding"
<@!585868308419444749> is there a way to get token holders of certain token ?
Yep
hey guys, is it possible to send a sender-funding token transaction using **solanaWeb3.Transaction()** in js?
That seems unlikely.  Our docs are well SEO'd
Can anyone please help me ? 
I need a help . I want to know how to create my  coin in solana blockchain ? 

I am searching many time in many way but nothing is get to internet. 
& what is the fee of make coin in solana blockchain  ?

Can you please give me a video ?
does solanabeach have an endpoint for their rpc server ?
Do these two functions behave differently?
https://github.com/solana-labs/solana-web3.js/blob/62513cdee2ca0c4f350e811a982ca13731201a9f/src/publickey.ts#L173
vs
https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792
thanks sir üòÑ
The _address_ yes.  But the actual `AccountInfo` struct is only ever allocated by the runtime, then passed to your program
you mean it always need to pass from client sir ?
Not directly.  The new PDA address needs to be specified in one of your instructions to signal the runtime to load it
Can we create new AccountInfo struct from PDA pubkey in rust sir ?
There is nothing in that /bin/ folder
I have cloned the `example-helloworld` project and run `npm install` but when I run `npm run build:program-rust` I get the following error:

Running: rustup toolchain link bpf /Users/cameron/.local/share/solana/install/releases/1.6.7/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust
error: not a file: '/Users/cameron/.local/share/solana/install/releases/1.6.7/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust/bin/rustc'
We don‚Äôt have that.  You need to rm -fr a couple locations manually for now
are the account keys from ``getConfirmedTransactions`` are the same when we use ``accountIndex`` ?
So I can do a fresh install
and remove all the data associated w it
Is there a command to uninstall solana?


///////////////////////////////////////////////////////////////////////////////////////////////

