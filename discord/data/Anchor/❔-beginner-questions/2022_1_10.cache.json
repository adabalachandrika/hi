{
    "total_results": 109,
    "messages": [
        [
            {
                "id": "930166461534728242",
                "type": 0,
                "content": "lemme try increasing the size",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:29:26.087000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166442928771122",
                "type": 0,
                "content": "isn't it supposed to show another error then ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:29:21.651000+00:00",
                "edited_timestamp": "2022-01-10T18:29:47.695000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166382719557633",
                "type": 0,
                "content": "could you be running out of space on the account?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:29:07.296000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166296748908605",
                "type": 0,
                "content": "oh sorry",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:28:46.799000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166279686459413",
                "type": 0,
                "content": "hmmm - maybe the objects get changed by the first call somehow?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:28:42.731000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166269414617088",
                "type": 0,
                "content": "it worked before i've no idea what i messed up",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:28:40.282000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166219896672266",
                "type": 0,
                "content": "adding an item to a list",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:28:28.476000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166162870915072",
                "type": 0,
                "content": "ya",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:28:14.880000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166147192619128",
                "type": 0,
                "content": "and calling from js?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:28:11.142000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166084269649962",
                "type": 0,
                "content": "no they are the same calls",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:27:56.140000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930166020415561748",
                "type": 0,
                "content": "your error - I mean just guessing - maybe you added something to it the 2nd time that prevented serialization?  what changes between invocations?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:27:40.916000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930165856342773792",
                "type": 0,
                "content": "^^ oh its definitely better -- but direct solana rust dev is always available to us as a reminder \ud83e\udd13",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:27:01.798000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930165578944098375",
                "type": 0,
                "content": "it abstracts many stuff so i kinda feel very hard to debug \ndon't take my word i'm just a beginner `:P`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:25:55.661000+00:00",
                "edited_timestamp": "2022-01-10T18:26:08.267000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930164995952623617",
                "type": 0,
                "content": "I heard the term the other day on the solana podcast -- I think anchor in general has reduced the amount of glass chewing so I'm not complaining - just nice to know others feel it too \ud83d\ude42",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:23:36.665000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930164636521734185",
                "type": 0,
                "content": "chewing glass ? i never saw it xD",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:22:10.970000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930164463989051433",
                "type": 0,
                "content": "is there a chewing glass emoji?  :chewing-glass:  \ud83d\ude42",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:21:29.835000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930164389397553234",
                "type": 19,
                "content": "Ok weird - changing the seed seemed to fix it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:21:12.051000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930162390702629005"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930164379247341588",
                "type": 0,
                "content": "i mean it worked on the first one but keep getting error this `0xbbc` error after that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:21:09.631000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930164257969020928",
                "type": 0,
                "content": "No one had this error ?\nhttps://github.com/project-serum/anchor/blob/4422902e86fbfe2118d0e9fe8ec26596fc312e94/lang/src/error.rs#L115\nI'm getting this error when i do the rpc call two times",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "369053912117805067",
                    "username": "Edward Kenway",
                    "avatar": "23d66e1a73738971d6330fae6153b7d0",
                    "discriminator": "4735",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:20:40.716000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930163440327229470",
                "type": 0,
                "content": "you dont have to do anything to set that up",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:17:25.775000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930163408496631828",
                "type": 0,
                "content": "every account not declared in the validation struct but passed into the tx will magically appear in `ctx.remaining_accounts`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:17:18.186000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930163110222889042",
                "type": 19,
                "content": "you dont add remaining accounts, they appear automatically on ctx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "691933164909756466",
                        "username": "cocopus",
                        "avatar": "fa5e5dd4cdec87fdf19db32d40d55b60",
                        "discriminator": "8139",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:16:07.072000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930161658381369454"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930162390702629005",
                "type": 19,
                "content": "I have another program working fine - almost same -- in the same workspace etc.  -- could it be that the PDA is off?  probably something stupid - i'll try and make a new seed and see if it matters",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:13:15.525000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930161474389819413"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930161729860669471",
                "type": 0,
                "content": "hovering over it, it says: `invalid type`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691933164909756466",
                    "username": "cocopus",
                    "avatar": "fa5e5dd4cdec87fdf19db32d40d55b60",
                    "discriminator": "8139",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:10:37.968000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930161658381369454",
                "type": 0,
                "content": "but idk why there exists this error on `&`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691933164909756466",
                    "username": "cocopus",
                    "avatar": "fa5e5dd4cdec87fdf19db32d40d55b60",
                    "discriminator": "8139",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:10:20.926000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930161590274236476",
                "type": 0,
                "content": "Hey folks! I am trying to add remaining accounts to my struct to be consumed from the context. The params are being passed correctly as per https://docs.rs/anchor-lang/0.4.5/anchor_lang/struct.Context.html",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691933164909756466",
                    "username": "cocopus",
                    "avatar": "fa5e5dd4cdec87fdf19db32d40d55b60",
                    "discriminator": "8139",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "930161590320390144",
                        "filename": "Screenshot_2022-01-10_at_11.38.37_PM.png",
                        "size": 72400,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/930161590320390144/Screenshot_2022-01-10_at_11.38.37_PM.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/930161590320390144/Screenshot_2022-01-10_at_11.38.37_PM.png",
                        "width": 974,
                        "height": 334,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.rs/anchor-lang/0.4.5/anchor_lang/struct.Context.html",
                        "title": "Context in anchor_lang - Rust",
                        "description": "Provides non-argument inputs to the program."
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:10:04.688000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930161474389819413",
                "type": 0,
                "content": "for \"The given account is owned by a different program than expected\" is this an error in anchor validation or was it rejected by the program?  is there a way to find out which account -- ?  I assume it is the PDA account b/c its the only one passed in that is mutable - or marked as such",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:09:37.059000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930159481617256509",
                "type": 19,
                "content": "checkout the tests/events folder in the anchor repo",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "904797780214710354",
                        "username": "wooden_spork",
                        "avatar": null,
                        "discriminator": "3415",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:01:41.945000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930158418919047179"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930159138087006260",
                "type": 0,
                "content": "and this is what my event looks like on the program ```emit!(TestEvent {\n            data: 6,\n            label: \"bye\".to_string(),\n        });```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "904797780214710354",
                    "username": "wooden_spork",
                    "avatar": null,
                    "discriminator": "3415",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:00:20.041000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930158418919047179",
                "type": 0,
                "content": "hi everyone, I'm just getting started trying to use Event Emitters in Anchor. Does anyone have an example about how to listen for events on the frontend? This is what I tried on my front end ```createEventManager()\n  .then(listener => {\n    listener.addEventListener(\"TestEvent\", (event) => console.log(event))\n  })\n  .catch(err => console.log(err))\n``` but ran into this error ```throw new Error(`Could not find program invocation log line`)```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "904797780214710354",
                    "username": "wooden_spork",
                    "avatar": null,
                    "discriminator": "3415",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T17:57:28.578000+00:00",
                "edited_timestamp": "2022-01-10T17:57:39.029000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930149733538885632",
                "type": 0,
                "content": "Hey everyone,\n\nJust had a quick question about using Vecs of tuples in a struct. For example, I wanted to have the following:\n```\npub struct ExampleStruct {\n    pub a: Vec<(u8, u8)>,\n}\n```\nThis is able to build and deploy but running anchor test gives me a `User defined types not provided error`. I'm assuming that this means that Vecs of tuples aren't currently supported in the IDL.\n\nIs my understanding here correct? If so, is there a workaround so that I could do something similar to this? I was thinking maybe `enum`s but that might be expensive. Thanks!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "392800475608776705",
                    "username": "katana9",
                    "avatar": null,
                    "discriminator": "7798",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T17:22:57.822000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930146969396064338",
                "type": 0,
                "content": "is there any way to re-run tests every time a file is saved? like a `anchor test --watch` flag or something similar?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "921108725853462598",
                    "username": "corrupt",
                    "avatar": "29a7182d2abce7290889b127f04a6d20",
                    "discriminator": "5613",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T17:11:58.799000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930145830441209876",
                "type": 19,
                "content": "is my seed maybe colliding with an existing program?  seems unlikely",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T17:07:27.251000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930137185653493830"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930140342278295613",
                "type": 19,
                "content": "The size matters, 1232 bytes is max",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "194280119710253068",
                    "username": "MinatoTW",
                    "avatar": "558459eb7c113a70373eb53b0218d687",
                    "discriminator": "9698",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "130415586080587777",
                        "username": "charlieyou",
                        "avatar": "9404f23c4de62d0aca2bee8f698bed89",
                        "discriminator": "0720",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:45:38.771000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930133522839138324"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930139140991889419",
                "type": 0,
                "content": "anyone have a code example on how to close an account?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "161709591220977664",
                    "username": "Spacemandev",
                    "avatar": "7abd2bb15c961f859827f5a34be8e879",
                    "discriminator": "6256",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:40:52.362000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930137185653493830",
                "type": 0,
                "content": "`The given account is owned by a different program than expected` --- did I maybe generate the PDA incorrectly?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:33:06.173000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930133785138298920",
                "type": 19,
                "content": "but that also means from the clientside on a dapp, the user will have to approve 3 transactions correct? hmmm",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:19:35.427000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930132471599730738"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930133522839138324",
                "type": 0,
                "content": "what are the limits around number of instructions in a transaction?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "130415586080587777",
                    "username": "charlieyou",
                    "avatar": "9404f23c4de62d0aca2bee8f698bed89",
                    "discriminator": "0720",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:18:32.890000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930132471599730738",
                "type": 0,
                "content": "hmm no but mb someone else does",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:14:22.255000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930132102702329908",
                "type": 0,
                "content": "interesting, do you have any resources I can learn more to implement this?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:12:54.303000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930131873647181894",
                "type": 0,
                "content": "and you also might have to use 3 tx and use delayed randommness cause otherwise your randomness can be gamed",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:11:59.692000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930131779975774209",
                "type": 0,
                "content": "you can add checks to your program that prevent that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:11:37.359000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930131241049661481",
                "type": 0,
                "content": "I'm not sure, I'm still learning solana programs tbh",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:09:28.869000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930131141166526504",
                "type": 0,
                "content": "transaction 1 returns account to sent token to, transaction 2 sends it to that address\nIsnt it possible for somebody else to just call my transaction 2 knowing my program_id",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:09:05.055000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930130755558973441",
                "type": 0,
                "content": "im not following",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:07:33.119000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930130558921605212",
                "type": 0,
                "content": "right, but how do I prevent anybody from sending the second type of transaction which specifies the account",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:06:46.237000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930130399848460310",
                "type": 0,
                "content": "yea I meant that you choose it onchain from the list of addresses in the first tx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:06:08.311000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930130131249426492",
                "type": 0,
                "content": "its why I want to determine the recipient account onchain to prevent malicious intent from clientside",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:05:04.272000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930129858183446539",
                "type": 0,
                "content": "was thinking about that before but could it be a security issue if someone directly calls the second tx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:03:59.168000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930129455756755005",
                "type": 19,
                "content": "but you could do it in two transactions. first, you send a tx that randomly chooses address key from the list you have stored in an account somewhere. you save that address in the tx. then in a second tx, you send tokens to that address",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "283811168085344258",
                        "username": "relena",
                        "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                        "discriminator": "3744",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:02:23.222000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930127116861837373"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930129160783941702",
                "type": 19,
                "content": "if your list is small, you can do this but if it's large it's not possible in a single transaction because all accounts have to be passed into the transaction and the tx has a size limit",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "283811168085344258",
                        "username": "relena",
                        "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                        "discriminator": "3744",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:01:12.895000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930127116861837373"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930127116861837373",
                "type": 19,
                "content": "Like I have a program account that stores an array of addresses and I randomly select which to transfer to when the program runs",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "171442868190314497",
                        "username": "poprer656sad",
                        "avatar": null,
                        "discriminator": "4566",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T15:53:05.586000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929989823433932802"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930114076196098079",
                "type": 19,
                "content": "and the reason for there being two options is that sometimes, you want an account to sign that is not a Signer type. then you can use the signer contraint. we might deprecate this constraint completely and add types like `AccountSignerMut`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T15:01:16.449000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930099135145721856"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930110486001877012",
                "type": 19,
                "content": "Type Signer is the more up-to-date way (although they do the same thing)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "915682383905316864",
                    "username": "man0s",
                    "avatar": "5db087ee6a952e5be7da6b90f06b8585",
                    "discriminator": "8230",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T14:47:00.480000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "930099135145721856"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930099135145721856",
                "type": 0,
                "content": "so if my instruction takes an account and i wanna check if its a signer what is the preferred way to do it ? define its type as Signer or use #account(signer) ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T14:01:54.225000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930076793329819688",
                "type": 0,
                "content": "Can someone pls tell? \nI have the account as a parameter in the form of \n#[account(mut)]\n pub service_account: AccountInfo<'info>\n\nAnd I want to first see how much balance of a mint this service_account has\nAnd then debit the particular token",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T12:33:07.521000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930076792650346496",
                "type": 19,
                "content": "yes. really struggling with architecture here",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "873914057671983124",
                    "username": "oxDiablo",
                    "avatar": null,
                    "discriminator": "1522",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "175770682599276544",
                        "username": "Kriptikz",
                        "avatar": "f99a6b232f5b1255846cae6580a24ada",
                        "discriminator": "4490",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T12:33:07.359000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929830154681851934"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930050639319420938",
                "type": 0,
                "content": "<@!915682383905316864> <@!161709591220977664> <@!831450660146642974> <@!248066053161222144> can you guys pls help?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "161709591220977664",
                        "username": "Spacemandev",
                        "avatar": "7abd2bb15c961f859827f5a34be8e879",
                        "discriminator": "6256",
                        "public_flags": 0
                    },
                    {
                        "id": "248066053161222144",
                        "username": "donderper",
                        "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                        "discriminator": "9738",
                        "public_flags": 0
                    },
                    {
                        "id": "915682383905316864",
                        "username": "man0s",
                        "avatar": "5db087ee6a952e5be7da6b90f06b8585",
                        "discriminator": "8230",
                        "public_flags": 0
                    },
                    {
                        "id": "831450660146642974",
                        "username": "Pikachoo",
                        "avatar": "3778d8c6025afe096468846a546f4bfe",
                        "discriminator": "4505",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T10:49:11.919000+00:00",
                "edited_timestamp": "2022-01-10T13:43:32.545000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930042292885135430",
                "type": 0,
                "content": "How do I read the amount of another token knowing its mint, (say SRM) in rust inside the smart contract?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T10:16:01.974000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930006947011366922",
                "type": 0,
                "content": "Hey guys, I just tried `anchor test` but, there's some error. So I tried `sudo anchor test` and I got an error too. I'm practicing on Ubuntu 20.0.4 LTS and each version is below. I want to learn how to develop with anchor and solana. Please somebody help me \ud83d\ude2b \n\nnodejs - 16.13.1\nnpm - 8.1.2\nrustup - 1.24.3\nrustc - 1.57.0\ncargo - 1.57.0\nsolana-cli - 1.9.1\nanchor-cli - 0.20.0\n\n```\nnewmynixx@LAPTOP-JSMKVSS3:~/myepicproject$ anchor test\nBPF SDK: /home/newmynixx/.local/share/solana/install/releases/1.9.4/solana-release/bin/sdk/bpf\ncargo-build-bpf child: rustup toolchain list -v\ncargo-build-bpf child: rustup toolchain link bpf /home/newmynixx/.local/share/solana/install/releases/1.9.4/solana-release/bin/sdk/bpf/dependencies/bpf-tools/rust\ncargo-build-bpf child: cargo +bpf build --target bpfel-unknown-unknown --release\nerror: failed to create directory `/home/newmynixx/myepicproject/target/release`\n\nCaused by:\n  Permission denied (os error 13)\nnewmynixx@LAPTOP-JSMKVSS3:~/myepicproject$ sudo anchor test\nError: No such file or directory (os error 2)\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "863606770440863775",
                    "username": "kierstudio",
                    "avatar": "3d4d7dc1c78d79a8a1f931e3a20388b4",
                    "discriminator": "1097",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T07:55:34.861000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929996518004490241",
                "type": 19,
                "content": "8 is the minimum, max for CPI initiated calls (accounts created with init) is 10kb (10,400 bytes to be exact)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "161709591220977664",
                    "username": "Spacemandev",
                    "avatar": "7abd2bb15c961f859827f5a34be8e879",
                    "discriminator": "6256",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "341992802265202699",
                        "username": "NAK1998",
                        "avatar": null,
                        "discriminator": "6602",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T07:14:08.392000+00:00",
                "edited_timestamp": "2022-01-10T07:14:44.398000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929995651218022481"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929995813084622898",
                "type": 0,
                "content": "I need it to be really big. My account contains 4 fields, each being a vector of size 100",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T07:11:20.326000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929995651218022481",
                "type": 0,
                "content": "What is the maximum value of space= that I can use?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T07:10:41.734000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929989862323544106",
                "type": 0,
                "content": "phantom wallet always shows the TokenAccount as long as it has a balance and the owner is the wallet address?\neg: if its not the ATA PDA, any custom PDA, as long as the owner is the wallet address and it has some balance, it will show right?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "171442868190314497",
                    "username": "poprer656sad",
                    "avatar": null,
                    "discriminator": "4566",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T06:47:41.554000+00:00",
                "edited_timestamp": "2022-01-10T06:48:03.909000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929989823433932802",
                "type": 19,
                "content": "who are you transferring to then? its like wanting to pay someone money. only not knowing who someone is.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "171442868190314497",
                    "username": "poprer656sad",
                    "avatar": null,
                    "discriminator": "4566",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "283811168085344258",
                        "username": "relena",
                        "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                        "discriminator": "3744",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T06:47:32.282000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929964560604098600"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929989683637813318",
                "type": 19,
                "content": "if its a seed constraint error, it will throw seeds violated. its likely your signer priviledges arent correct when invoking cpi. check that if you're calling cpi, all accounts that need to be signers are signers",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "171442868190314497",
                    "username": "poprer656sad",
                    "avatar": null,
                    "discriminator": "4566",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "495764464604413972",
                        "username": "irvinxyz",
                        "avatar": "b2214e6e893b4ec457b0ed82dee54b38",
                        "discriminator": "1448",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T06:46:58.952000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929978447915257868"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929978755248717834",
                "type": 0,
                "content": "is it possible to have different migration files kick off for different networks? when running `anchor migrate` ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341381788620423168",
                    "username": "utx0_",
                    "avatar": "9d9ba5056960dab985f4fec61f07dbd6",
                    "discriminator": "4298",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T06:03:33.421000+00:00",
                "edited_timestamp": "2022-01-10T06:03:51.394000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929978447915257868",
                "type": 0,
                "content": "Hit a roadblock on a CPI calls to a contract pre-deployed locally. \nI have another contract using a PDA for `invoke_signed`, with correctly matching seeds. \nBut, I keep on getting the `signer privilege escalated`\nI also have the `#[account(mut)]` constraint set on the PDA\n\nAre there other reasons for getting this error besides mis-matching seeds? \nAppreciate your help in advance \ud83d\ude4f",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "495764464604413972",
                    "username": "irvinxyz",
                    "avatar": "b2214e6e893b4ec457b0ed82dee54b38",
                    "discriminator": "1448",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T06:02:20.147000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929964560604098600",
                "type": 0,
                "content": "Is it possible to do a token transfer in my program without passing in the recipient? I want to randomly token transfer to an account and it's not feasible to pass in all possible accounts from the client side",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T05:07:09.154000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929952391166578738",
                "type": 0,
                "content": "is the owner the same as the authority?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "171442868190314497",
                    "username": "poprer656sad",
                    "avatar": null,
                    "discriminator": "4566",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T04:18:47.734000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929952371520458794",
                "type": 0,
                "content": "for a TokenAccount",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "171442868190314497",
                    "username": "poprer656sad",
                    "avatar": null,
                    "discriminator": "4566",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T04:18:43.050000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929945435794198578",
                "type": 0,
                "content": "**What am I doing wrong here? There is no error here when i call the create instruction but the arrays seam to be empty id: [].\nhow should I fill them?**",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T03:51:09.444000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929945087394332732",
                "type": 0,
                "content": "**I have a struct **\n`#[account]\npub struct Ledger {\n    pub id: Vec<String>,\n    pub amount: Vec<u64>,\n    pub time: Vec<String>\n}`\n**And I want to initialize them to an empty vector in the create method. **\n`#[derive(Accounts)]\npub struct Create<'info> {\n    #[account(init, payer = user, space = 8 + 64 + 64 + 64 + 64)]\n    pub ledger: Account<'info, Ledger>,\n    #[account(mut)]\n    pub user: Signer<'info>,\n    pub system_program: Program<'info, System>,\n   \n}`\n`**In this create function i am doing the following**\n    pub fn create(ctx:Context<Create>) -> ProgramResult {\n        let ledger = &mut ctx.accounts.ledger;\n        bets.id = get_id();\n        bets.amount = get_amount();\n        bets.time = get_time();\n        Ok(())\n    }`\n\n**All these get_ functions return an array of size 20 which are empty\nfor eg: -**\n`pub fn get_id() -> Vec<String> {\n    let mut id_vec: Vec<String> = Vec::new();\n    for _ in 0..10 {\n        id_vec.push(DUMMY_TX_ID.to_string())\n    }\n    return id_vec;\n}`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T03:49:46.379000+00:00",
                "edited_timestamp": "2022-01-10T03:50:14.510000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929916843316097054",
                "type": 0,
                "content": "<@!134416332509675520> \nWould you like to share the code that is using the spl_math library's U256?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "712332112128376885",
                    "username": "bejaxer",
                    "avatar": "797946a8430b2f71855026966069e403",
                    "discriminator": "9328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:57:32.466000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929913546857390171",
                "type": 0,
                "content": "youre welcome \ud83d\ude42 theres more on its way",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:44:26.529000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929913389864583209",
                "type": 0,
                "content": "the test repo is a super useful way of understanding the ts side of anchor (the 0.20 docs.rs stuff has been super great for the rust side) so thanks for putting them all together",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "115602460210495492",
                    "username": "NalaTheLioness",
                    "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                    "discriminator": "2140",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:43:49.099000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929913076352958547",
                "type": 0,
                "content": "iirc I created the public key there manually instead of importing it from solana/web3 cause they actually hadnt added it by then",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:42:34.352000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929912892717924362",
                "type": 0,
                "content": "correct!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:41:50.570000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929912702007140422",
                "type": 0,
                "content": "\ud83e\udd26\u200d\u2640\ufe0f thank you that makes so much more sense",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "115602460210495492",
                    "username": "NalaTheLioness",
                    "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                    "discriminator": "2140",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:41:05.101000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929912613595410442",
                "type": 0,
                "content": "OH but not of bpf-upgradeable-state (the program from the anchor test); it's an actual *solana* internal",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "115602460210495492",
                    "username": "NalaTheLioness",
                    "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                    "discriminator": "2140",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:40:44.022000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929912341330554880",
                "type": 0,
                "content": "it has nothing to do with the program except for generating the programdata address in the tests",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:39:39.109000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929912210199810058",
                "type": 19,
                "content": "thats the key of the upgradeable bpf loader",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "115602460210495492",
                        "username": "NalaTheLioness",
                        "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                        "discriminator": "2140",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:39:07.845000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929911900127510618"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929912109658161213",
                "type": 0,
                "content": "unless it was used to gen `bpf_upgradeable_state-keypair.json` and that's why it's not in the repo?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "115602460210495492",
                    "username": "NalaTheLioness",
                    "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                    "discriminator": "2140",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:38:43.874000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929911900127510618",
                "type": 0,
                "content": "`BPFLoaderUpgradeab1e11111111111111111111111` is used only in the findprogramaddresssync call and nowhere else in the repo",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "115602460210495492",
                    "username": "NalaTheLioness",
                    "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                    "discriminator": "2140",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:37:53.918000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929911689137229884",
                "type": 0,
                "content": "the anchor.toml file and the declare_id have a different key than the one used in the test in the code I shared above",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "115602460210495492",
                    "username": "NalaTheLioness",
                    "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                    "discriminator": "2140",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:37:03.614000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929911684519325767",
                "type": 19,
                "content": "yes the way to get the `programdata_address` is the same for all upgradeable programs",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "115602460210495492",
                        "username": "NalaTheLioness",
                        "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                        "discriminator": "2140",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:37:02.513000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929904015913943111"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929911533377581088",
                "type": 19,
                "content": "> the BPFLoader key isnt the one actually used\n\nwdym?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "115602460210495492",
                        "username": "NalaTheLioness",
                        "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                        "discriminator": "2140",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:36:26.478000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929904015913943111"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929904015913943111",
                "type": 0,
                "content": "odd internals question:\n``` const programDataAddress = findProgramAddressSync(\n    [program.programId.toBytes()],\n    new anchor.web3.PublicKey(\"BPFLoaderUpgradeab1e11111111111111111111111\")\n  )[0];\n```\nThis is from the anchor `bpf-upgradable-state` test. The `BPFLoader` key isn't the one actually used to deploy the program, but I'm assuming the test passes (since this is from the github). Is the seed used to find the program data address always the program id? And why is that different from the second input (which the api lists as `programId` but here is a public key that isn't used anywhere else).",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "115602460210495492",
                    "username": "NalaTheLioness",
                    "avatar": "f3f2e3e7290508b7d28c087c9e825387",
                    "discriminator": "2140",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T01:06:34.175000+00:00",
                "edited_timestamp": "2022-01-10T01:06:47.287000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929883988338827356",
                "type": 0,
                "content": "and could this be used for a vault program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "208018035007684619",
                    "username": "JoshB",
                    "avatar": "2c32fc8d0bf174af34ab2dfb4c9fd0e6",
                    "discriminator": "8219",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T23:46:59.229000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929883933275996190",
                "type": 0,
                "content": "what does the anchor_spl::token::Approve function do?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "208018035007684619",
                    "username": "JoshB",
                    "avatar": "2c32fc8d0bf174af34ab2dfb4c9fd0e6",
                    "discriminator": "8219",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T23:46:46.101000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929851479483891762",
                "type": 0,
                "content": "Anyone know why my transaction is failing to confirm on devnet? Using custom rpc as well. Keeps timing out after 30s",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "929851478766657556",
                        "filename": "c768dc1820c7911d8d875bc2f7a48cc4.png",
                        "size": 27891,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/929851478766657556/c768dc1820c7911d8d875bc2f7a48cc4.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/929851478766657556/c768dc1820c7911d8d875bc2f7a48cc4.png",
                        "width": 1524,
                        "height": 78,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T21:37:48.514000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929836049834860594",
                "type": 0,
                "content": "for sure",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:36:29.799000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929835987733987348",
                "type": 19,
                "content": "One sec let's dm \ud83d\ude06  I want to get the source and try running on my end and play with it a bit",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "440712201070968834",
                        "username": "mojo",
                        "avatar": "9238a49db81beceb0ff8f56883ad8414",
                        "discriminator": "7892",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:36:14.993000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929835879458037801"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929835879458037801",
                "type": 0,
                "content": "sorry this is missing where some of the vars are initialized lemme send that too",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:35:49.178000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929835739557031986",
                "type": 0,
                "content": "```\n it('It lets you deposit', async () => {\n\n    const offer = anchor.web3.Keypair.generate();\n    const [escrowedTokensOfOfferMaker, escrowedTokensOfOfferMakerBump] = await anchor.web3.PublicKey.findProgramAddress(\n      [offer.publicKey.toBuffer()],\n      program.programId\n    )\n    let offerMakerCurrentCowAmounts = (await cowMint.getAccountInfo(offerMakerCowTokenAccount)).amount.toNumber();\n    console.log(offerMakerCurrentCowAmounts)\n\n    await program.rpc.deposit(\n      escrowedTokensOfOfferMakerBump,\n      new anchor.BN(2),\n      {\n        accounts: {\n          offer: offer.publicKey,\n          whoMadeTheOffer: program.provider.wallet.publicKey,\n          tokenAccountFromWhoMadeTheOffer: offerMakerCowTokenAccount,\n          escrowedTokensOfOfferMaker: escrowedTokensOfOfferMaker,\n          kindOfTokenOffered: cowMint.publicKey,\n          tokenProgram: spl.TOKEN_PROGRAM_ID,\n          systemProgram: anchor.web3.SystemProgram.programId,\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY\n        },\n        signers: [offer]\n      }\n    );\n    console.log(\"Starting Withdraw\")\n    await program.rpc.withdraw(\n      {\n        accounts: {\n          offer: offer.publicKey,\n          whoMadeTheOffer: program.provider.wallet.publicKey,\n          whereTheEscrowedAccountWasFundedFrom: offerMakerCowTokenAccount,\n          escrowedTokensOfOfferMaker: escrowedTokensOfOfferMaker,\n          tokenProgram: spl.TOKEN_PROGRAM_ID,\n        },\n      }\n    );\n    \n    //assert.equal(2, (await cowMint.getAccountInfo(escrowedTokensOfOfferMaker)).amount.toNumber());\n    //offerMakerCurrentCowAmounts = (await cowMint.getAccountInfo(offerMakerCowTokenAccount)).amount.toNumber();\n    //console.log(offerMakerCurrentCowAmounts)\n    //let cook = (await cowMint.getAccountInfo(escrowedTokensOfOfferMaker)).amount.toNumber();\n    //console.log(cook)\n\n\n\n  });\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:35:15.823000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929835198764433428",
                "type": 19,
                "content": "Can I see the client side test as well",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "440712201070968834",
                        "username": "mojo",
                        "avatar": "9238a49db81beceb0ff8f56883ad8414",
                        "discriminator": "7892",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:33:06.888000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929834961672994856"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929834961672994856",
                "type": 0,
                "content": "let me know if you need anything else!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:32:10.361000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929833826476236900",
                "type": 0,
                "content": "Here is the source code for the instruction:\n```\nuse anchor_lang::prelude::*;\n\nuse crate::state::*;\nuse anchor_spl::token::{Mint, Token, TokenAccount};\n\n#[derive(Accounts)]\npub struct Withdraw<'info> {\n    #[account(\n        mut,\n        constraint = offer.who_made_the_offer == who_made_the_offer.key(),\n        close = who_made_the_offer\n    )]\n    pub offer: Account<'info, Bank>,\n\n    #[account(mut)]\n    pub who_made_the_offer: Signer<'info>,\n\n    #[account(mut)]\n    pub where_the_escrowed_account_was_funded_from: Account<'info, TokenAccount>,\n\n    #[account(\n        mut,\n        seeds =[offer.key().as_ref()],\n        bump = offer.escrowed_tokens_of_offer_maker_bump\n    )]\n    pub escrowed_tokens_of_offer_maker: Account<'info, TokenAccount>,\n\n    pub token_program: Program<'info, Token>,\n}\n\npub fn handler(ctx: Context<Withdraw>) -> ProgramResult {\n    anchor_spl::token::transfer(\n        CpiContext::new_with_signer(\n            ctx.accounts.token_program.to_account_info(),\n            anchor_spl::token::Transfer {\n                from: ctx\n                    .accounts\n                    .escrowed_tokens_of_offer_maker\n                    .to_account_info(),\n                to: ctx\n                    .accounts\n                    .where_the_escrowed_account_was_funded_from\n                    .to_account_info(),\n                authority: ctx\n                    .accounts\n                    .escrowed_tokens_of_offer_maker\n                    .to_account_info(),\n            },\n            &[&[\n                ctx.accounts.offer.key().as_ref(),\n                &[ctx.accounts.offer.escrowed_tokens_of_offer_maker_bump],\n            ]],\n        ),\n        ctx.accounts.escrowed_tokens_of_offer_maker.amount,\n    )\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:27:39.709000+00:00",
                "edited_timestamp": "2022-01-09T20:28:08.850000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929833425232359516",
                "type": 0,
                "content": "thank you for your willingness to help!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:26:04.045000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929833349873299546",
                "type": 19,
                "content": "sounds good, here is the error message:\n```Transaction simulation failed: Error processing Instruction 0: custom program error: 0x65 \n    Program FZUqSDoE9P4PUEmiwgDSUKfE4cLp3KxfA8Z5ocbRrFS4 invoke [1]\n    Program log: Custom program error: 0x65\n    Program FZUqSDoE9P4PUEmiwgDSUKfE4cLp3KxfA8Z5ocbRrFS4 consumed 2567 of 200000 compute units\n    Program FZUqSDoE9P4PUEmiwgDSUKfE4cLp3KxfA8Z5ocbRrFS4 failed: custom program error: 0x65\nTranslating error SendTransactionError: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x65\n    at Connection.sendEncodedTransaction (/Users/michaelgiardino/Desktop/animal-trading-farm-public/node_modules/@solana/web3.js/src/connection.ts:3689:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at Connection.sendRawTransaction (/Users/michaelgiardino/Desktop/animal-trading-farm-public/node_modules/@solana/web3.js/src/connection.ts:3649:20)\n    at sendAndConfirmRawTransaction (/Users/michaelgiardino/Desktop/animal-trading-farm-public/node_modules/@solana/web3.js/src/util/send-and-confirm-raw-transaction.ts:27:21)\n    at Provider.send (/Users/michaelgiardino/Desktop/animal-trading-farm-public/node_modules/@project-serum/anchor/src/provider.ts:114:18)\n    at Object.rpc [as withdraw] (/Users/michaelgiardino/Desktop/animal-trading-farm-public/node_modules/@project-serum/anchor/src/program/namespace/rpc.ts:24:23) {\n  logs: [\n    'Program FZUqSDoE9P4PUEmiwgDSUKfE4cLp3KxfA8Z5ocbRrFS4 invoke [1]',\n    'Program log: Custom program error: 0x65',\n    'Program FZUqSDoE9P4PUEmiwgDSUKfE4cLp3KxfA8Z5ocbRrFS4 consumed 2567 of 200000 compute units',\n    'Program FZUqSDoE9P4PUEmiwgDSUKfE4cLp3KxfA8Z5ocbRrFS4 failed: custom program error: 0x65'\n  ]\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "175770682599276544",
                        "username": "Kriptikz",
                        "avatar": "f99a6b232f5b1255846cae6580a24ada",
                        "discriminator": "4490",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:25:46.078000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929833011464269904"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929833011464269904",
                "type": 19,
                "content": "Lets keep it on here I think in case anyone else runs into this issue. If it gets to be a lot though we can maybe dm.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "440712201070968834",
                        "username": "mojo",
                        "avatar": "9238a49db81beceb0ff8f56883ad8414",
                        "discriminator": "7892",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:24:25.395000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929832740638036048"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929832740638036048",
                "type": 0,
                "content": "for sure, can I send you a dm or should i send it here?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:23:20.825000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929832487906078822",
                "type": 19,
                "content": "Ah, custom program errors are fun \ud83d\ude06  are there any logs above that error? Gnna need to see some code to help out though.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "440712201070968834",
                        "username": "mojo",
                        "avatar": "9238a49db81beceb0ff8f56883ad8414",
                        "discriminator": "7892",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:22:20.569000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929831898522472528"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929831898522472528",
                "type": 0,
                "content": "Can anyone help me with debugging a `Program log: Custom program error: 0x65` issue. I am attempting to call the spl transfer instruction and im having a hard time figuring out where to look for the issue.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "440712201070968834",
                    "username": "mojo",
                    "avatar": "9238a49db81beceb0ff8f56883ad8414",
                    "discriminator": "7892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:20:00.049000+00:00",
                "edited_timestamp": "2022-01-09T20:20:39.790000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929830154681851934",
                "type": 19,
                "content": "I'm also curious if you would even want multiple different PDA's for different accounts. I don't really see an obvious reason for needing many different PDA's. But I'm new to this stuff too.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "873914057671983124",
                        "username": "oxDiablo",
                        "avatar": null,
                        "discriminator": "1522",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:13:04.285000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929732293768142888"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929829075919446016",
                "type": 19,
                "content": "I'm currently playing around with making vaults owned by a PDA that users can deposit sol to and then withdraw from. Basically create a PDA, then you create the vault which is a SystemAccount for that PDA so the program will have authority over the vault account. You will also need your own transfer_sol function in your program that does a CPI using invoke_signed. You create the the transfer instruction using the system_instruction::transfer function. You will then need also include the signers_seeds, the ones you used when creating the PDA, with the invoke_signed call so the runtime can verify the program calling this invoke_signed with the transfer instruction is the proper authority for transfering sol.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "611755787617959948",
                        "username": "parallax",
                        "avatar": "e01bf2c09c501819c0dffd5a83c39f44",
                        "discriminator": "3030",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:08:47.088000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929820290136047746"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929826429498171412",
                "type": 19,
                "content": "What do you mean by close PDA? Do you mean close the PDA Account? I haven't got to closing accounts yet, but anchor has a functions and attributes for closing accounts. The PDA (Program Derived Address) will always exist as far as I know, as it's just the program_id with some seeds hashed with it for allowing programs to sign transactions. If you know the seeds you can always generate the same PDA, you can't close an address. But you can close accounts associated with addresses.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "616045157925650453",
                        "username": "khalilnafis.sol",
                        "avatar": "f10d3461f04fffe83b9bcce52e7c56ff",
                        "discriminator": "1303",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T19:58:16.132000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "929678933664874577"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929824430107021323",
                "type": 0,
                "content": "What are the negative implications of only using one seed/bump for a PDA for different users accounts and just hardcoding it in, rather than saving the seed/bump in an account just taking up extra space?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T19:50:19.440000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929820290136047746",
                "type": 0,
                "content": "I'm trying to create a basic \"vault\" program that keeps a record of balances owed to different people in SOL, and they can deposit and withdraw. Struggling on architecture , PDA, CPI and account types / ownership....\n\nHow can I make a vault account that holds sol and is owned by the program that changes its balance?\n\nWhat additional accounts types would I have to have for add / withdraw?\n\nTrying to make sense of Neodyme's examples: https://github.com/neodyme-labs/neodyme-breakpoint-workshop/blob/main/level0/src/processor.rs",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "611755787617959948",
                    "username": "parallax",
                    "avatar": "e01bf2c09c501819c0dffd5a83c39f44",
                    "discriminator": "3030",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/neodyme-labs/neodyme-breakpoint-workshop/blob/main/level0/src/processor.rs",
                        "title": "neodyme-breakpoint-workshop/processor.rs at main \u00b7 neodyme-labs/neo...",
                        "description": "Solana Security Workshop for Breakpoint by Neodyme - neodyme-breakpoint-workshop/processor.rs at main \u00b7 neodyme-labs/neodyme-breakpoint-workshop",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/51e5106408d7c3e19014e53c0bbda1e379edb340f9cd2d24511b12e26a4ea317/neodyme-labs/neodyme-breakpoint-workshop",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/i1GMQTMqh58An-Tw4R-69UNGEdzS0n4_wr6T2Z83E7Y/https/opengraph.githubassets.com/51e5106408d7c3e19014e53c0bbda1e379edb340f9cd2d24511b12e26a4ea317/neodyme-labs/neodyme-breakpoint-workshop",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T19:33:52.394000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "5a65a4ac1232b0b0160277427ca27a9b"
}