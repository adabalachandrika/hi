{
    "total_results": 126,
    "messages": [
        [
            {
                "id": "937414184763817994",
                "type": 0,
                "content": "```loki:~ Loki$ solana-test-validator\n--faucet-sol argument ignored, ledger already exists\nLedger location: test-ledger\nLog: test-ledger/validator.log\n\u2834 Initializing...\nIdentity: BgxTwrAaQg2iNu29vxozFCZkNKpANLubBsgpK892eZ1F\nGenesis Hash: 2uZLUtvTUABvsLr29HjjWMr3FYVYAPGyscjYBY1cMd54\nVersion: 1.9.5\nShred Version: 57039\nGossip Address: 127.0.0.1:1024\nTPU Address: 127.0.0.1:1027\nJSON RPC URL: http://127.0.0.1:8899\n\u2812 00:00:56 | Processed Slot: 3079 | Confirmed Slot: 3078 | Finalized Slot: 3047```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "211490267285422080",
                    "username": "Boxer",
                    "avatar": "aec7efbc0094954757fc8bdff33b5261",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:29:17.961000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937414171937620028",
                "type": 0,
                "content": "I restarted my solana-test-validator as well",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "211490267285422080",
                    "username": "Boxer",
                    "avatar": "aec7efbc0094954757fc8bdff33b5261",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:29:14.903000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937413785751265362",
                "type": 0,
                "content": "on the command line",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "211490267285422080",
                    "username": "Boxer",
                    "avatar": "aec7efbc0094954757fc8bdff33b5261",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:27:42.829000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937413768470753352",
                "type": 0,
                "content": "maybe im doing this wrong?\n`ANCHOR_WALLET=\"SolanaWallet/my-keypair.json\" node client.js `",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "211490267285422080",
                    "username": "Boxer",
                    "avatar": "aec7efbc0094954757fc8bdff33b5261",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:27:38.709000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937413627932180540",
                "type": 19,
                "content": "yes",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "211490267285422080",
                    "username": "Boxer",
                    "avatar": "aec7efbc0094954757fc8bdff33b5261",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:27:05.202000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937396537280041040"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937413524290928660",
                "type": 0,
                "content": "I'm trying to make an Account like:\n```\n#[account]\npub Protocols {\n   solend: Solend\n   larix: Larix\n   ...\n}\n```\n\nI want each protocol to implement the same traits (e.g. all implement `deposit()` but have different implementations and parameters).\n\nI want to be able to just do something like `protocol.deposit()` and it would call the relevant protocol\n\nI'm not sure how to structure my data, though",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:26:40.492000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937407861322039357",
                "type": 0,
                "content": "So basically the `instructions: []` parameter client side runs those first and passes the data into my program",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:04:10.335000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937407277504282735",
                "type": 0,
                "content": "Thanks a million man!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:01:51.142000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937407161171083265",
                "type": 0,
                "content": "I was just looking that up! the 300 is the size override! Hooray!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:01:23.406000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937406949107048478",
                "type": 0,
                "content": "It's talking directly to the system program, not your program",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:00:32.846000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937406911006011432",
                "type": 19,
                "content": "Ah, ok. Might help to see the source for `createInstruction`: https://github.com/project-serum/anchor/blob/master/ts/src/program/namespace/account.ts#L284",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/project-serum/anchor/blob/master/ts/src/program/namespace/account.ts",
                        "title": "anchor/account.ts at master \u00b7 project-serum/anchor",
                        "description": "\u2693 Solana Sealevel Framework. Contribute to project-serum/anchor development by creating an account on GitHub.",
                        "color": 1975079,
                        "reference_id": "937406911006011432",
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/dab646e8e08a666a032535fefc4161058d17d14dbc87423e59d7e7f794339a56/project-serum/anchor",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/kaOQy7nmT3M_gX_iFsifYc4hxuXkiAaiCWGcjvd56ko/https/opengraph.githubassets.com/dab646e8e08a666a032535fefc4161058d17d14dbc87423e59d7e7f794339a56/project-serum/anchor",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T18:00:23.762000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937405531579117679"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937406399468687382",
                "type": 0,
                "content": "Unless the `createInstruction(check, 300)` is actually creating the account? and the 300 is the space",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:58:21.802000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937405531579117679",
                "type": 0,
                "content": "Right, but I'm not sure where the space for the struct is allocated?\n\nThe `createInstruction(check, 300)`, I assume this is calling the `pub fn accounts(ctx: &Context<CreateCheck>, nonce: u8)`\n\nIt would know now how big the check struct is because everything is static, how much space the Vec would need say if I had a Vec<Pubkey> and needed it to hold say 40",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:54:54.881000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937404747688857652",
                "type": 0,
                "content": "Ah, yeah ^",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:51:47.987000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937404718077083709",
                "type": 0,
                "content": "In the JS file I image that first instruction is \n\n```\n      instructions: [\n        await program.account.check.createInstruction(check, 300),\n        ...(await serumCmn.createTokenAccountInstrs(\n          program.provider,\n          vault.publicKey,\n          mint,\n          checkSigner\n        )),\n      ],\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:51:40.927000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937404716890083339",
                "type": 0,
                "content": "Why are you trying to use `account(zero)`?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:51:40.644000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937404679107792977",
                "type": 0,
                "content": "No, I mean you're apparently going to use a separate instruction from the client",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:51:31.636000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937404221144301618",
                "type": 0,
                "content": "Is this the previous instruction?  The impl?\n```\n#[derive(Accounts)]\npub struct CreateCheck<'info> {\n    // Check being created.\n    #[account(zero)]\n    check: Account<'info, Check>,\n    // Check's token vault.\n    #[account(mut, constraint = &vault.owner == check_signer.key)]\n    vault: Account<'info, TokenAccount>,\n    // Program derived address for the check.\n    check_signer: AccountInfo<'info>,\n    // Token account the check is made from.\n    #[account(mut, has_one = owner)]\n    from: Account<'info, TokenAccount>,\n    // Token account the check is made to.\n    #[account(constraint = from.mint == to.mint)]\n    to: Account<'info, TokenAccount>,\n    // Owner of the `from` token account.\n    owner: AccountInfo<'info>,\n    token_program: AccountInfo<'info>,\n}\n\nimpl<'info> CreateCheck<'info> {\n    pub fn accounts(ctx: &Context<CreateCheck>, nonce: u8) -> Result<()> {\n        let signer = Pubkey::create_program_address(\n            &[ctx.accounts.check.to_account_info().key.as_ref(), &[nonce]],\n            ctx.program_id,\n        )\n        .map_err(|_| ErrorCode::InvalidCheckNonce)?;\n        if &signer != ctx.accounts.check_signer.to_account_info().key {\n            return Err(ErrorCode::InvalidCheckSigner.into());\n        }\n        Ok(())\n    }\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:49:42.449000+00:00",
                "edited_timestamp": "2022-01-30T17:50:37.427000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937403962594840597",
                "type": 19,
                "content": "Yeah, sounds like you're planning on doing that in a prior, totally separate instruction (that's what account(zero) is for)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:48:40.806000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937403832445579314"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937403838653153391",
                "type": 0,
                "content": "So you don't need to do `space =` at all (you've already allocated the space, in that previous instruction)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:48:11.256000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937403832445579314",
                "type": 0,
                "content": "I guess it's a a disconnect. I assumed the size of an account needs to be initialized so it can be rent exempt",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:48:09.776000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937403781891637359",
                "type": 0,
                "content": "If this is account(zero) then you'd be creating the account (allocating its space) in a previous instruction",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:47:57.723000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937403487237586975",
                "type": 0,
                "content": "Not sure how to answer that\u2014why does it matter where the space is allocated?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:46:47.472000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937403354265571348",
                "type": 0,
                "content": "Not totally sure what you're asking about in terms of where the space is allocated\u2014can you say more?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:46:15.769000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937403198627512401",
                "type": 0,
                "content": "Pubkeys take up 32 bytes",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:45:38.662000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937403176146063380",
                "type": 19,
                "content": "Why 40 times KEYCOUNT?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:45:33.302000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937402270822305812"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937402744686411877",
                "type": 0,
                "content": "I'm basically modifying the Cashier's check program, but need enough space for KEY_COUNT PubKeys. I don't see how that is init'd where the space is allocated.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:43:50.434000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937402270822305812",
                "type": 0,
                "content": "So normally I'd use the `[account(init, payer = owner, space = 40*KEYCOUNT]` however the program I'm working on has to have the `[account(zero)]` in it and I'm not sure where the space is actually allocated",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:41:57.456000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937401846178410517",
                "type": 0,
                "content": "How much space does each pubkey take?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:40:16.213000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937401812510720020",
                "type": 19,
                "content": "What have you tried so far?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:40:08.186000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937401723570499624"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937401735859810315",
                "type": 19,
                "content": "About your null point, indeed, if you use a static array, each element will be all zeros",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:39:49.911000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937400197489758248"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937401723570499624",
                "type": 19,
                "content": "How would I do that? Say I wanted a Vec<Pubkey> and I needed space for 100",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:39:46.981000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937401220631515227"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937401220631515227",
                "type": 19,
                "content": "You would need to decide how much space is \"enough\". Borsh serializes a Vec<Foo> as 4 bytes for the length, and then serializes each Foo one after the other.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:37:47.071000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937400197489758248"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937401061302485055",
                "type": 19,
                "content": "You can use static arrays, yes (annoyingly though, some lengths don't work for annoying borsh reasons)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:37:09.084000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937400197489758248"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937400197489758248",
                "type": 19,
                "content": "Actually - I think I know why, there is no 'null' in rust. So a static array would have to have initialized data.  Second question, if I were to use a Vec, how would I reserve enough space for them out of the gate? I can't seem to use `[account(init, payer = owner, space = 40]` in a setup like the Cashiers Check example.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:33:43.135000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937381857077641246"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937398846714155028",
                "type": 0,
                "content": "Is it possible to have static length arrays in a data account? \n\nlength 1 works, but some others throw an error, thoughts?\n```\n#[account]\npub struct TreasureChest {\n    pub nonce: u8,\n    pub coach: Pubkey,\n    pub lamports: u64,\n\n    pub vaults: [Pubkey; 1], //bk k0 k1 k2 tc rt ac\n    pub counts: [u64;    1],\n\n    pub bomb: u64,\n\n    pub hunters: [Pubkey; 1],\n    pub winners: [Pubkey; 1],\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:28:21.085000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937396537280041040",
                "type": 19,
                "content": "Are you running your local `solana-test-validator`?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "211490267285422080",
                        "username": "Boxer",
                        "avatar": "aec7efbc0094954757fc8bdff33b5261",
                        "discriminator": "0001",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T17:19:10.473000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937389554648887306"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937389554648887306",
                "type": 0,
                "content": "Would anyone know why I'm having this issue whenever i run the client.js on the basic_0 tutorial?\n```bash\nloki:basic-0 Loki$ ANCHOR_WALLET='SolanaWallet/my-keypair.json' node client.js \nRunning client.\n/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@solana/web3.js/lib/index.cjs.js:5965\n      throw new Error('failed to get recent blockhash: ' + e);\n            ^\n\nError: failed to get recent blockhash: FetchError: request to http://localhost:8899/ failed, reason: connect ECONNREFUSED ::1:8899\n    at Connection.getRecentBlockhash (/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@solana/web3.js/lib/index.cjs.js:5965:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Provider.send (/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@project-serum/anchor/dist/cjs/provider.js:82:31)\n    at async Object.rpc [as initialize] (/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@project-serum/anchor/dist/cjs/program/namespace/rpc.js:31:31)\n    at async main (/Users/Loki/code/src/github.com/anchor/examples/tutorial/basic-0/client.js:26:5)\n\nNode.js v17.4.0\nloki:basic-0 Loki$ ANCHOR_WALLET=\"SolanaWallet/my-keypair.json\" node client.js \nRunning client.\n/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@solana/web3.js/lib/index.cjs.js:5965\n      throw new Error('failed to get recent blockhash: ' + e);\n            ^\n\nError: failed to get recent blockhash: FetchError: request to http://localhost:8899/ failed, reason: connect ECONNREFUSED ::1:8899\n    at Connection.getRecentBlockhash (/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@solana/web3.js/lib/index.cjs.js:5965:13)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Provider.send (/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@project-serum/anchor/dist/cjs/provider.js:82:31)\n    at async Object.rpc [as initialize] (/Users/Loki/code/src/github.com/anchor/examples/tutorial/node_modules/@project-serum/anchor/dist/cjs/program/namespace/rpc.js:31:31)\n    at async main (/Users/Loki/code/src/github.com/anchor/examples/tutorial/basic-0/client.js:26:5)\n\nNode.js v17.4.0\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "211490267285422080",
                    "username": "Boxer",
                    "avatar": "aec7efbc0094954757fc8bdff33b5261",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:51:25.684000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937386800509501460",
                "type": 19,
                "content": "This is an example that answers the question: https://github.com/samuelvanderwaal/solana-whitelist/blob/main/programs/whitelist/src/lib.rs",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "932665458690244619",
                    "username": "Philippe Chevalier",
                    "avatar": null,
                    "discriminator": "9854",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/samuelvanderwaal/solana-whitelist/blob/main/programs/whitelist/src/lib.rs",
                        "title": "solana-whitelist/lib.rs at main \u00b7 samuelvanderwaal/solana-whitelist",
                        "description": "Basic Solana whitelist implementation using a 10 MB account. - solana-whitelist/lib.rs at main \u00b7 samuelvanderwaal/solana-whitelist",
                        "color": 1975079,
                        "reference_id": "937386800509501460",
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/711df0d7701c8a7e1f7deb77bd2a69102ae491d709009cb1475d1585a14ea482/samuelvanderwaal/solana-whitelist",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/VuXGlP4zG6Vu5meNKQ8JTDFvHsvKrGBOa_G0pZnt9_0/https/opengraph.githubassets.com/711df0d7701c8a7e1f7deb77bd2a69102ae491d709009cb1475d1585a14ea482/samuelvanderwaal/solana-whitelist",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:40:29.046000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937385351817883759"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937385351817883759",
                "type": 0,
                "content": "Hey! The standard way of creating accounts with Anchor is via CPI, e.g.:\n```#[derive(Accounts)]\npub struct SaveData<'info> {\n    #[account(init, payer = sender,```\nHowever, I need to create an account with a direct call to the system program to get around the size limitation of 10KB. How do I that?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "932665458690244619",
                    "username": "Philippe Chevalier",
                    "avatar": null,
                    "discriminator": "9854",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:34:43.651000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937382964642332722",
                "type": 19,
                "content": "i'm a beginner, I just saw a function taking enum as argument, I thought that was what you need. sorry, i provided a wrong info",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "895020565293826060",
                    "username": "pramitgaha",
                    "avatar": "6323ad64fc1dd30a28275624dd6caebe",
                    "discriminator": "9369",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:25:14.504000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937382487347322950"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937382487347322950",
                "type": 19,
                "content": "no worries! I'll just use u8 instead of enum \ud83d\udc4d",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "895020565293826060",
                        "username": "pramitgaha",
                        "avatar": "6323ad64fc1dd30a28275624dd6caebe",
                        "discriminator": "9369",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:23:20.708000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937382416232882236"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937382416232882236",
                "type": 19,
                "content": "sorry.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "895020565293826060",
                    "username": "pramitgaha",
                    "avatar": "6323ad64fc1dd30a28275624dd6caebe",
                    "discriminator": "9369",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:23:03.753000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937381131131715605"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937381857077641246",
                "type": 0,
                "content": "Hey! I'm reading through the cashiers check example from the github. I have a question, where does the space get allocated?\n\nI am used to the `#[account(init, payer = owner, space=40)]` where, in the following do they reserve the space for the Check struct?  What happens if the check struct has a variable length?\n\n```\n#[derive(Accounts)]\npub struct CreateCheck<'info> {\n    // Check being created.\n    #[account(zero)]\n    check: Account<'info, Check>,\n    // Check's token vault.\n    #[account(mut, constraint = &vault.owner == check_signer.key)]\n    vault: Account<'info, TokenAccount>,\n    // Program derived address for the check.\n    check_signer: AccountInfo<'info>,\n    // Token account the check is made from.\n    #[account(mut, has_one = owner)]\n    from: Account<'info, TokenAccount>,\n    // Token account the check is made to.\n    #[account(constraint = from.mint == to.mint)]\n    to: Account<'info, TokenAccount>,\n    // Owner of the `from` token account.\n    owner: AccountInfo<'info>,\n    token_program: AccountInfo<'info>,\n}\n\nimpl<'info> CreateCheck<'info> {\n    pub fn accounts(ctx: &Context<CreateCheck>, nonce: u8) -> Result<()> {\n        let signer = Pubkey::create_program_address(\n            &[ctx.accounts.check.to_account_info().key.as_ref(), &[nonce]],\n            ctx.program_id,\n        )\n        .map_err(|_| ErrorCode::InvalidCheckNonce)?;\n        if &signer != ctx.accounts.check_signer.to_account_info().key {\n            return Err(ErrorCode::InvalidCheckSigner.into());\n        }\n        Ok(())\n    }\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:20:50.440000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937381131131715605",
                "type": 19,
                "content": "In this tutorial, it looks like they're not assigning the enum to the actual state of their Account",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "895020565293826060",
                        "username": "pramitgaha",
                        "avatar": "6323ad64fc1dd30a28275624dd6caebe",
                        "discriminator": "9369",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:17:57.361000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937378978136743986"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937378978136743986",
                "type": 19,
                "content": "create your personal token with rust smart contract.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "895020565293826060",
                    "username": "pramitgaha",
                    "avatar": "6323ad64fc1dd30a28275624dd6caebe",
                    "discriminator": "9369",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:09:24.047000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937378720690360370"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937378720690360370",
                "type": 19,
                "content": "Thanks! Which one is it? There are 10+",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "895020565293826060",
                        "username": "pramitgaha",
                        "avatar": "6323ad64fc1dd30a28275624dd6caebe",
                        "discriminator": "9369",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:08:22.667000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937362074374406275"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937376861124710452",
                "type": 19,
                "content": "Basically you can't\u2014this is why solana has \"program-derived addresses\", as a way for programs to sign for an address in a secure way",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "876238940586250280",
                        "username": "alby",
                        "avatar": "a4aa4661e07583acfd47d35aa2d57121",
                        "discriminator": "3381",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T16:00:59.312000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937366886696497243"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937368939372097596",
                "type": 0,
                "content": "you need to do a CPI via a PDA within a program",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "725857328150085702",
                    "username": "hawk",
                    "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                    "discriminator": "5203",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T15:29:30.619000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937366886696497243",
                "type": 0,
                "content": "How can I load a keypair inside the program to make transactions from it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "876238940586250280",
                    "username": "alby",
                    "avatar": "a4aa4661e07583acfd47d35aa2d57121",
                    "discriminator": "3381",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T15:21:21.223000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937362673841111091",
                "type": 0,
                "content": "You can coerce an enum variant as an integer, and that integer is typically what's stored on the account",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "725857328150085702",
                    "username": "hawk",
                    "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                    "discriminator": "5203",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T15:04:36.800000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937362074374406275",
                "type": 19,
                "content": "there is a tutorial in startonsolana.com. you can check it.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "895020565293826060",
                    "username": "pramitgaha",
                    "avatar": "6323ad64fc1dd30a28275624dd6caebe",
                    "discriminator": "9369",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T15:02:13.876000+00:00",
                "edited_timestamp": "2022-01-30T15:04:04.667000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937351788217114674"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937362063716679700",
                "type": 0,
                "content": "index",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "725857328150085702",
                    "username": "hawk",
                    "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                    "discriminator": "5203",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T15:02:11.335000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937357209585717258",
                "type": 0,
                "content": "How do I store an enum value into my Account \ud83d\ude26",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T14:42:54.020000+00:00",
                "edited_timestamp": "2022-01-30T14:43:02.654000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937356383534317608",
                "type": 0,
                "content": "also which version of anchor are u using",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T14:39:37.074000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937356333487906857",
                "type": 19,
                "content": "convert it to decimal and look in the appropriate repo. Have you defined your own error codes?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "725857328150085702",
                        "username": "hawk",
                        "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                        "discriminator": "5203",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T14:39:25.142000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937355505033175060"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937355505033175060",
                "type": 0,
                "content": "how do we decode custom errors? e.g. `0x12d`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "725857328150085702",
                    "username": "hawk",
                    "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                    "discriminator": "5203",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T14:36:07.623000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937351788217114674",
                "type": 0,
                "content": "How do I pass in my enum from the client side through the context of an anchor program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T14:21:21.465000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937341136471748680",
                "type": 19,
                "content": "screenshot from tutorial I'm currently working through\nhttps://app.buildspace.so/projects/CObd6d35ce-3394-4bd8-977e-cbee82ae07a3",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "937341135838392351",
                        "filename": "unknown.png",
                        "size": 283698,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/937341135838392351/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/937341135838392351/unknown.png",
                        "width": 1511,
                        "height": 1342,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://app.buildspace.so/projects/CObd6d35ce-3394-4bd8-977e-cbee82ae07a3",
                        "title": "buildspace",
                        "description": "Start building cool web3 projects, earn NFTs, access secret work opportunities in crypto.",
                        "color": 16777215,
                        "reference_id": "937341136471748680",
                        "thumbnail": {
                            "url": "https://api.typedream.com/v0/document/public/bdb974e8-f2d7-4ceb-ac6d-8e7ba6f664ca_Group_7_1_png.png",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/QGuqYeZP8UIXNPk1zabyTJbrn2SjzAz8YOPI5xpQ0SI/https/api.typedream.com/v0/document/public/bdb974e8-f2d7-4ceb-ac6d-8e7ba6f664ca_Group_7_1_png.png",
                            "width": 1200,
                            "height": 630
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "309301433008783361",
                        "username": "spacemonkey",
                        "avatar": "145c480e09aed7567963019a2a4d3791",
                        "discriminator": "7468",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T13:39:01.891000+00:00",
                "edited_timestamp": "2022-01-30T13:39:52.453000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937292789601931305"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937335213065904139",
                "type": 0,
                "content": "What are the remaining option to reduce stack overflow when all accounts are already boxxed/accountInfo? (currently using 31 of them, + a u64 and u32 parameters)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "443079510053748743",
                    "username": "Acammm",
                    "avatar": "e5c0f2305d711a7c3ac8b1ee080d0958",
                    "discriminator": "3260",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T13:15:29.641000+00:00",
                "edited_timestamp": "2022-01-30T13:16:31.776000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937329074123194428",
                "type": 19,
                "content": "yea, idk what they mean but that. But generally, use `#[account]` when you plan to use the type as a type param in an `Account<'info, T>` type. I presume that `ItemStruct` is not used in an `Account<'info, T>` anywhere so using `#[account]` would implement too much for it. I think it would work anyway but it's just not necessary",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "737915190045311067",
                        "username": "Hi_I'mJohn",
                        "avatar": "ae9c37d449836e55aead84d00c4633aa",
                        "discriminator": "2906",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T12:51:06.003000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937327811780304927"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937327811780304927",
                "type": 0,
                "content": "Could someone explain when its appropriate to use #[derive(Debug, Clone, AnchorSerialize, AnchorDeserialize)] instead of #[account]?\nThe tutorial mentions its \"since we're creating a custom struct\", but aren't all structs custom structs?\n\n```\n// Create a custom struct for us to work with.\n#[derive(Debug, Clone, AnchorSerialize, AnchorDeserialize)]\npub struct ItemStruct {\n    pub gif_link: String,\n    pub user_address: Pubkey,\n}\n\n#[account]\npub struct BaseAccount {\n    pub total_gifs: u64,\n    // Attach a Vector of type ItemStruct to the account.\n    pub gif_list: Vec<ItemStruct>,\n}\n````",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T12:46:05.037000+00:00",
                "edited_timestamp": "2022-01-30T12:46:46.208000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937292789601931305",
                "type": 0,
                "content": "Hi guys, a beginner question please:\nWhat does declare_id do exactly? left it as the default Fg.. and I can still deploy to local/devnet and call from JS/TS using the ID I see after deployment is done.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "309301433008783361",
                    "username": "spacemonkey",
                    "avatar": "145c480e09aed7567963019a2a4d3791",
                    "discriminator": "7468",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T10:26:55.099000+00:00",
                "edited_timestamp": "2022-01-30T10:27:08.598000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937284694075125760",
                "type": 19,
                "content": "1. \"Apple: 1\" -> \"Apple = 1\"\n2. you need to implement the *Clone* Trait, if you want to use the enum together with an account. \n3. the arg in your method change_fruit, needs to be strictly typed imo (e.g. to the enum)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "400974938124713984",
                    "username": "Manzgoeggel",
                    "avatar": "90432d34fb25c0c9b0ff09276d2ba840",
                    "discriminator": "3798",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T09:54:44.975000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937194751604715581"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937247154567802891",
                "type": 0,
                "content": "Hi I am trying to Send SOL from PDA to user \n```\ninvoke_signed(\n                &transfer(\n                    house.to_account_info().key,\n                    user.to_account_info().key,\n                    transfer_amount,\n                ),\n                &[\n                    house.to_account_info(),\n                    user.to_account_info(),\n                    _ctx.accounts.system_program.to_account_info(),\n                ],\n                &[&[\n                    PREFIX.as_bytes(), \n                    _ctx.accounts.house_admin.to_account_info().key.as_ref(),\n                    &[_ctx.accounts.house.bump],\n                ]],\n            )?;\n```\nI get an error saying EpQgcT3Ue5D16Wb8wRQa7LZkQjU5KRzzw7XvdyHnVLfK's signer privilege escalated This Public Key belongs to the house (PDA)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "594851438560149505",
                    "username": "arunavo4",
                    "avatar": "ca40df3829c53f74462fb2a64e3ca045",
                    "discriminator": "3028",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T07:25:34.859000+00:00",
                "edited_timestamp": "2022-01-30T07:25:43.829000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937244486793322576",
                "type": 0,
                "content": "Hi, just run `anchor verify`  on a mainnet deployed program,\nit give `Error: Account not found` , what does it imply?\nI'm sure the program id is correct.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "443957524585250841",
                    "username": "cnek",
                    "avatar": null,
                    "discriminator": "4190",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T07:14:58.812000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937194751604715581",
                "type": 0,
                "content": "I am having trouble making my enum a simple ass number between 0 and 3 lol. \n\nI just wanna do this:\n```rust\npub enum Fruit {\n  Apple: 1,\n  Banana: 2,\n}\n\n#[account]\npub struct Table {\n  pub fruit: Fruit,\n  ...\n}\n\n...\npub fn change_fruit(new_fruit) {\n  my_table.fruit = new_fruit;\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T03:57:21.019000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937178068240445440",
                "type": 19,
                "content": "Solution:\n\n```\n#[repr(u8)]\npub enum Fruit {\n    Vault = 1,\n    Solend = 2,\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T02:51:03.395000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937161562312024074"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937161707913105470",
                "type": 0,
                "content": "google rust code playground and  see how big an enum is there",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:46:02.789000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937161562312024074",
                "type": 0,
                "content": "Not sure how rust does it, but my guess it\u2019s a u8. I\u2019d double check",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:45:28.075000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937161395047366676",
                "type": 0,
                "content": "I want to do something like this but idk how",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:44:48.196000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937161378878324786",
                "type": 0,
                "content": "```\npub enum Fruit {\n  Apple\n  Banana\n}\n\npub struct Table {\n  pub fruit: Fruit,\n  ...\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:44:44.341000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937161323240886343",
                "type": 19,
                "content": "i meant to ask about enum",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:44:31.076000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937160674600157205"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937161293662666803",
                "type": 0,
                "content": "Ohhh wait sorry i sent the wrong question",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:44:24.024000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937161032630157412",
                "type": 0,
                "content": "u8 = 1\nu16 = 2\nu32 = 4\nu64 = 8\nPubKey = 40",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:43:21.789000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937160674600157205",
                "type": 0,
                "content": "a u8 is 1 byte, so space = 1",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:41:56.428000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937160402901549087",
                "type": 19,
                "content": "gotcha, and how much space does it take up?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:40:51.650000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937158852909101098"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937158852909101098",
                "type": 19,
                "content": "`// ???` should be `#[derive(Debug, Clone, AnchorSerialize, AnchorDeserialize)]`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:34:42.103000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937156549674168421"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937157440485597195",
                "type": 0,
                "content": "```rust\nuse anchor_lang::prelude::*;\n\ndeclare_id!(\"Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS\");\n\n#[program]\npub mod my_smart_contract {\n    use super::*;\n    pub fn initialize(ctx: Context<Initialize>) -> ProgramResult {\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\npub struct Initialize {}\n\n```\nIs the id the same thing as the address of the smart contract? And is this something that `anchor` generated when I ran `anchor init`?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "915278081952997376",
                    "username": "matteosantama",
                    "avatar": null,
                    "discriminator": "9262",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:29:05.355000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937156549674168421",
                "type": 0,
                "content": "How do I pass an enum to an account? Like this:\n\n```rust\n#[account]\npub struct Car {\n  pub engine: Engine\n}\n\n// ???\npub struct Engine {\n  pub num_parts: u8\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T01:25:32.969000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937140629723545651",
                "type": 0,
                "content": "And you're right, real RNG is hard to accomplish!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T00:22:17.357000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937140358133981266",
                "type": 19,
                "content": "I agree 100% I'd love to know the answer too! Actually, here is where you'd find the real answer (https://github.com/solana-labs/solana/blob/master/keygen/src/keygen.rs) the actual source code. I might peek through it at some point.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/solana-labs/solana/blob/master/keygen/src/keygen.rs",
                        "title": "solana/keygen.rs at master \u00b7 solana-labs/solana",
                        "description": "Web-Scale Blockchain for fast, secure, scalable, decentralized apps and marketplaces. - solana/keygen.rs at master \u00b7 solana-labs/solana",
                        "color": 1975079,
                        "reference_id": "937140358133981266",
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/b30893a555d039060cdcceea4430f5f01c5bf24347a4f76a39aac949ac6f3c99/solana-labs/solana",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/QbW6Ro5x-b-tokLifFEI4doUq3dWzAl_pdoCWJPFW14/https/opengraph.githubassets.com/b30893a555d039060cdcceea4430f5f01c5bf24347a4f76a39aac949ac6f3c99/solana-labs/solana",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "221877670290522112",
                        "username": "raven",
                        "avatar": "105e701c1bf5edab4b034bc1771c3705",
                        "discriminator": "1111",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T00:21:12.605000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937138656412581888"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937138656412581888",
                "type": 19,
                "content": "Understandable. I know there is an unreal number of possibilities for private keys and would take forever for computers to find them out, but i was curious more about how is it generated on machine - cuz its a local and instant procedure. \n\nSome kind of random number combined with many other components to ensure it? \n\nIt has to be something checkable such that no address with that pkey was already generated.\n\nAnyway, its interesting nonetheless and would like to know a more exact answer \ud83e\udd1d thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "221877670290522112",
                    "username": "raven",
                    "avatar": "105e701c1bf5edab4b034bc1771c3705",
                    "discriminator": "1111",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T00:14:26.883000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937134241769193503"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937138503282753628",
                "type": 0,
                "content": "How do I leave extra space at the end of my anchor program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-30T00:13:50.374000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937134658355884042",
                "type": 0,
                "content": "I have a question? How does phantom wallet know what the transaction will do before you sign it? Does it run the program in a sandbox first to give you the info?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T23:58:33.672000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937134241769193503",
                "type": 19,
                "content": "It's not a very small chance, it's a zero % chance. A private key is 32 bytes, so the total amount of possible combinations is 256^32. This is 1.1e77. If a computer  tried to match a private key at 1 trillion keys per nano second, it would take 2e41 universe lifetimes (13.8 billion years * 2e41) to match. Now this is assuming, no other keys were created and that the RNG is true RNG, but yeah, it's a 0% chance. However, I get what you're saying, I image they do a simple check before they allow something to be created.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "221877670290522112",
                        "username": "raven",
                        "avatar": "105e701c1bf5edab4b034bc1771c3705",
                        "discriminator": "1111",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T23:56:54.350000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937102246255140894"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937123418745221230",
                "type": 0,
                "content": "hey guys, can someone help me to understand how we can call the functions of our on-chai program via AnchorPy, if we'd call them from our off-chain program",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "705697273480478762",
                    "username": "Pierre",
                    "avatar": "f8162e2c9540f51efa8f3d9b18883ced",
                    "discriminator": "7374",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T23:13:53.940000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937105000507793518",
                "type": 0,
                "content": "How do I make a state field an enum? And how do I make the enum exported in the idl?\n\nLike ...\n```\npub enum Fruit {\n  Apple\n  Banana\n}\n\npub struct Table {\n  pub fruit: Fruit, \n  ...\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T22:00:42.690000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937103171132743691",
                "type": 0,
                "content": "sorry m8 i am not sure about that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:53:26.533000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937102246255140894",
                "type": 19,
                "content": "i can imagine there is a very very small chance to ever get the same address. but i m curious on the mechanics \ud83d\ude04",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "221877670290522112",
                    "username": "raven",
                    "avatar": "105e701c1bf5edab4b034bc1771c3705",
                    "discriminator": "1111",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:49:46.025000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937102031569707068"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937102031569707068",
                "type": 19,
                "content": "the chance of generating the same wallet address is 0.0000000000000000.....1%",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "221877670290522112",
                        "username": "raven",
                        "avatar": "105e701c1bf5edab4b034bc1771c3705",
                        "discriminator": "1111",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:48:54.840000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937101896244686868"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937101896244686868",
                "type": 0,
                "content": "very beginner question (out of curiosity)\nwhen a new keypair is generated - either with Keypair.generate() / sollet wallet generating a new wallet for you when opening the extension etc etc...\n\nhow is it guaranteed that nobody will get that generated ever so it wont have access to your account? or what's the failproof mechanism on keypair generation?\n\nsame with `solana-keygen grind` - why wouldn't somebody search for a key and get the same key as you, with the private key available?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "221877670290522112",
                    "username": "raven",
                    "avatar": "105e701c1bf5edab4b034bc1771c3705",
                    "discriminator": "1111",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:48:22.576000+00:00",
                "edited_timestamp": "2022-01-29T21:49:04.137000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937096587757363311",
                "type": 0,
                "content": "thanks!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:27:16.934000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937096298916630589",
                "type": 19,
                "content": "`// ???` should be `#[derive(Debug, Clone, AnchorSerialize, AnchorDeserialize)]`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:26:08.069000+00:00",
                "edited_timestamp": "2022-01-30T01:34:09.271000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937095317432713277"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937095516662161439",
                "type": 19,
                "content": "ill just add it to my state (e.g. `pub cluster: ...`)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:23:01.565000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937095115980296242"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937095317432713277",
                "type": 0,
                "content": "Also, do I have to put `#[account]` again in this:\n\n```\n#[account]\npub struct Car {\n  pub engine: Engine\n}\n\n// ???\npub struct Engine {\n  pub num_parts: u8\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:22:14.065000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937095115980296242",
                "type": 19,
                "content": "Ah, well then, that's out my current league of answering. But I'm interesting in knowing what you're doing that for? I guess, I would just change anything hardcoded to the appropriate cluster  when you deploy it there. Or write a script that does that for you",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:21:26.035000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937093054102392913"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937093054102392913",
                "type": 0,
                "content": "my program needs to know what constants to use -- the hardcoded devnet constants, or the hardcoded mainnet constants",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:13:14.445000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937092658789224548",
                "type": 19,
                "content": "It shouldn't need to know? If you deploy it from devnet, it'll be on devnet. If you deploy it from mainnet, it'll be on mainnet.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:11:40.195000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937090047549771876"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937090047549771876",
                "type": 0,
                "content": "How can my program know if its in devnet or mainnet?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T21:01:17.627000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088891150802984",
                "type": 0,
                "content": "Awesome! Thanks a million!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:56:41.920000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088839493779557",
                "type": 0,
                "content": "Yeah, don't need to sign for that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:56:29.604000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088827581956096",
                "type": 0,
                "content": "correct",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:56:26.764000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088810930536458",
                "type": 0,
                "content": "The coffee_jar?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:56:22.794000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088782765817896",
                "type": 0,
                "content": "```\npub struct BuyCoffee<'info> {\n    #[account(mut)]\n    pub coffee_jar: Account<'info, CoffeeJar>,   // the coffee jar account!\n    #[account(mut)]\n    pub from: Signer<'info>,                     // who is sending the sol\n    #[account(mut)]\n    pub to: AccountInfo<'info>,                  // send account info for transfer, will fail if pubkey does not batch barista\n    pub system_program: Program <'info, System>, // literally solana itself\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:56:16.079000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088749274267748",
                "type": 0,
                "content": "If your program owns the account that lives at some address, it can just mutate it, no signature requiredf",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:56:08.094000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088692185624576",
                "type": 0,
                "content": "In general yeah, you pass accounts as pubkeys.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:55:54.483000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088661420396644",
                "type": 19,
                "content": "Which account are we talking about?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:55:47.148000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937088578134114365"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937088578134114365",
                "type": 0,
                "content": "Ah, So I could just pass it the Pubkey?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:55:27.291000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088515370541126",
                "type": 0,
                "content": "I don't see it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:55:12.327000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937088499016945744",
                "type": 19,
                "content": "Where are you enforcing a signature?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:55:08.428000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937088265486487633"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937088315893633034",
                "type": 19,
                "content": "here",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:54:24.768000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937064363238502460"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937088265486487633",
                "type": 19,
                "content": "want to take a look above? I'm not sure how I'd do that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:54:12.750000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937087887193817208"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937088028625764432",
                "type": 0,
                "content": "Whether a signature is necessary is purely up to the program logic",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:53:16.278000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937087969716731944",
                "type": 0,
                "content": "Solana programs can mutate their accounts' data whenever they want (no signature required)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:53:02.233000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937087887193817208",
                "type": 19,
                "content": "Ah, no, you don't need the private key to update the values (not unless your contract requires it)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:52:42.558000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937085257663000656"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937085257663000656",
                "type": 19,
                "content": "Yes, by keypair, I mean the .json file. Like the private key. I'm not storing my wallet's keypair on the frontend, but the data account I create with my wallet. I need that data account's keypair to update it's values. I'm honestly not sure what someone could do with that info",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:42:15.629000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937083752679608331"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937083752679608331",
                "type": 0,
                "content": "Keypair means a public key *and* a secret key (storing a secret key on the frontend is generally bad\u2014e.g. definitely definitely don't try to hide your wallet's secret key on any frontend)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:36:16.813000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937083612371759155",
                "type": 19,
                "content": "Just to double check, by \"keypair\" do you mean address/public key?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:35:43.361000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937078624413163530"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937078624413163530",
                "type": 19,
                "content": "So I've been doing some research! Wallets that you can freely send sol to/from is owned by the Solana Program [ID: 1 repeating]. I took my keypair from my tip-jar and imported it into phantom, I could send it sol, but I couldn't send from it. I'm guessing because the owner of that account is my wallet that I used to create it. So I think I'm safe uploading this keypair because no one can do anything meaningful with it other than send me sol. Did I get that right?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T20:15:54.139000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937064363238502460"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937068418325184634",
                "type": 0,
                "content": "\u2705  Solution: Pass in `invoke(... account_infos: [clock], ...)`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T19:35:20.818000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937068021581766736",
                "type": 0,
                "content": "`Instruction references an unknown account SysvarC1ock11111111111111111111111111111111`\nBut I am passing in the clock \ud83d\ude26",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T19:33:46.227000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937067950257623110",
                "type": 0,
                "content": "```\nTransaction simulation failed: Error processing Instruction 0: An account required by the instruction is missing\n    Program D2vMcdbFN1HGA45MAc2ay48YZntXQdh5Yxnc5hoJgvYE invoke [1]\n    Program log: Instruction: DepositSolend\n    Instruction references an unknown account SysvarC1ock11111111111111111111111111111111\n    Program D2vMcdbFN1HGA45MAc2ay48YZntXQdh5Yxnc5hoJgvYE consumed 30613 of 200000 compute units\n    Program D2vMcdbFN1HGA45MAc2ay48YZntXQdh5Yxnc5hoJgvYE failed: An account required by the instruction is missing\n    1) Is initialized!\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T19:33:29.222000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937064363238502460",
                "type": 19,
                "content": "So the program is a tip jar. On click of the 'tip' button, I create the actual tip jar account with that keypair. I use my own wallet to fund it's creation, and it takes my wallet's PubKey as account data. So once the tip jar account is created, everytime someone uses the 'tip' button it will prompt them to send 0.05 sol to me (using my Pubkey in the tip jar's account data). So to reference the created tip jar account, I need it's keypair on the frontend.\n\nHonestly, I don't know what someone could do with the keypair if they found it. I'm still not sure what's possible. The account does not hold anything other than data. I posted my lib.rs for reference.\n\n```\n#[program]\npub mod buymeasolcoffee {\n    use super::*;\n    pub fn start_coffee_jar(ctx: Context<StartCoffeeJar>) -> ProgramResult {\n\n        // Grab the NEW coffee jar account\n        // &mut means its mutable, ie we can change it\n        let coffee_jar_account = &mut ctx.accounts.coffee_jar;\n\n        // Set counts to 0\n        coffee_jar_account.coffee_count  = 0;\n        coffee_jar_account.lamport_count = 0;\n\n        // Set the barista!\n        coffee_jar_account.barista = ctx.accounts.barista.key();\n\n        Ok(())\n    }\n\n    pub fn buy_coffee(ctx: Context<BuyCoffee>, lamports: u64) -> ProgramResult {\n\n        if &ctx.accounts.coffee_jar.barista == &ctx.accounts.to.key() {\n            let instrcution = anchor_lang::solana_program::system_instruction::transfer(\n                &ctx.accounts.from.key(),\n                &ctx.accounts.coffee_jar.barista,\n                lamports,\n            );\n    \n            let response = anchor_lang::solana_program::program::invoke(\n                &instrcution,\n                &[\n                    ctx.accounts.from.to_account_info(),\n                    ctx.accounts.to.to_account_info(),\n                ],\n            );\n            \n\n            if response.is_ok() {\n\n                let coffee_jar_account = &mut ctx.accounts.coffee_jar;\n                coffee_jar_account.coffee_count  = coffee_jar_account.coffee_count + 1;\n                coffee_jar_account.lamport_count = coffee_jar_account.lamport_count + lamports;\n\n                return Ok(());\n            } else {\n                return Err(ErrorCode::SomethingBad.into());\n            }\n        }\n\n        return Err(ErrorCode::WrongBarista.into());\n    }\n}\n\n// Constructor - Start a Coffee Jar\n#[derive(Accounts)]\npub struct StartCoffeeJar<'info> {\n    #[account(init, payer = barista, space = 8 + 8 + 40)] // see CoffeeJar for space calculation\n    pub coffee_jar: Account<'info, CoffeeJar>,            // the actual coffee jar (Program)\n    #[account(mut)]\n    pub barista: Signer<'info>,                           // who to send the sol to when coffee is bought (User), they also pay to start the jar\n    pub system_program: Program <'info, System>,          // literally solana itself\n}\n\n// Function - Buy Coffee\n#[derive(Accounts)]\npub struct BuyCoffee<'info> {\n    #[account(mut)]\n    pub coffee_jar: Account<'info, CoffeeJar>,   // the coffee jar account!\n    #[account(mut)]\n    pub from: Signer<'info>,                     // who is sending the sol\n    #[account(mut)]\n    pub to: AccountInfo<'info>,                  // send account info for transfer, will fail if pubkey does not batch barista\n    pub system_program: Program <'info, System>, // literally solana itself\n}\n\n// Struct - Coffee Jar\n#[account]\npub struct CoffeeJar {\n    pub coffee_count: u64,  // total donations                   - 8  bytes\n    pub lamport_count: u64, // Total lamports (0.000000001 sol)  - 8  bytes\n    pub barista: Pubkey,    // who this is sent to               - 40 bytes\n}\n\n// ENUM - Error Codes\n#[error]\npub enum ErrorCode {\n    #[msg(\"Tried sending to the wrong barista!\")]\n    WrongBarista,\n    #[msg(\"Naughty\")]\n    SomethingBad,\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "308760728444338176",
                    "username": "Coach Chuck",
                    "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                    "discriminator": "2885",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T19:19:14.010000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937052317545553940"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "937055324588896296",
                "type": 0,
                "content": "@everyone who will catch this gift?)  \nhttps://discosb.gift/X0kD211HPMjf",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "456226577798135808",
                    "username": "Deleted User",
                    "avatar": null,
                    "discriminator": "0000",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://discosb.gift/X0kD211HPMjf",
                        "title": "Y\u043eu'v\u0435 be\u0435n gift\u0435d \u0430 subscripti\u043en!",
                        "description": "Dis\u0441\u043erd h\u0430s gift\u0435d you Nitro f\u043er 1 m\u043enth",
                        "provider": {
                            "name": "Dis\u0441\u043erd"
                        },
                        "thumbnail": {
                            "url": "https://discosb.gift/assets/discord/images/633877574094684160.webp",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/SwkTW4xpA63hiSMuhrANGrMFHkhXiVPnaBOa3Tmd4ek/https/discosb.gift/assets/discord/images/633877574094684160.webp",
                            "width": 556,
                            "height": 316
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T18:43:19.028000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "937052317545553940",
                "type": 19,
                "content": "Why does the frontend need the keypair? Who are you hiding it from/what would go wrong if someone found it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "308760728444338176",
                        "username": "Coach Chuck",
                        "avatar": "2ede1d2503e139a5b6e5396234ecfa19",
                        "discriminator": "2885",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-29T18:31:22.093000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "937042108618006589"
                },
                "hit": true
            }
        ]
    ],
    "analytics_id": "6442d7e5e0def741a11fe4ca30a87c82"
}