{
    "total_results": 211,
    "messages": [
        [
            {
                "id": "950451531642204222",
                "type": 0,
                "content": "I've noticed the mint authority pub key points to the edition pubkey from the mintNFTResponse object",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:55:03.679000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950449829107077201",
                "type": 0,
                "content": "\ud83d\udc4b Have a question on metaplex NFTs. The metaplex discord isn't as active/helpful as here, so figured I'd ask here:\n\nWhat is the relation between the edition vs. metadata vs. mint on an NFT? My understanding is that the mint is similar to a regular SPL token mint, the metadata is a derived address of the mint where the metadata is stored. I'm more confused about the edition and what the relation to metadata/mint is",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:48:17.763000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950445545669931028",
                "type": 0,
                "content": "```\n\u279c  myepicproject anchor --version\nanchor-cli 0.22.1\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:31:16.512000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950442600391921754",
                "type": 0,
                "content": "thats not the anchor cli",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:19:34.303000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950442508742193234",
                "type": 0,
                "content": "```\n\"dependencies\": {\n        \"@project-serum/anchor\": \"^0.22.1\"\n    },```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:19:12.452000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950442169343295518",
                "type": 19,
                "content": "bug in `0.22.0` update the anchor cli to `0.22.1` and init a new workspace or adjust manually (see the changelog)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "280700964997038080",
                        "username": "Sercurio",
                        "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                        "discriminator": "4841",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:17:51.533000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950440853204258896"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950440987619127336",
                "type": 0,
                "content": "```\nerror[E0412]: cannot find type `ProgramResult` in this scope\n --> programs/myepicproject/src/lib.rs:8:58\n  |\n8 |   pub fn start_stuff_off(ctx: Context<StartStuffOff>) -> ProgramResult {\n  |                                                          ^^^^^^^^^^^^^ not found in this scope\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:13:09.788000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950440927246315520",
                "type": 0,
                "content": "```\nuse anchor_lang::prelude::*;\n\ndeclare_id!(\"Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS\");\n\n#[program]\npub mod myepicproject {\n  use super::*;\n  pub fn start_stuff_off(ctx: Context<StartStuffOff>) -> ProgramResult {\n    Ok(())\n  }\n}\n\n#[derive(Accounts)]\npub struct StartStuffOff {}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:12:55.394000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950440853204258896",
                "type": 0,
                "content": "Hello again,\nAny idea why ProgramResult is not present in the scope ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T17:12:37.741000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950417846679269376",
                "type": 0,
                "content": "<@!134416332509675520> thanks for the help. you're the best",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:41:12.558000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950415936958107728",
                "type": 19,
                "content": "Yeah, that seems fine\u2014the existence of an account at the PDA with seeds = [wallet.key().as_ref()] would signal that your program had granted that wallet pubkey, and then you'd require the client to pass in both the PDA as well as a signature from the corresponding wallet.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:33:37.245000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950415515262779483"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950415515262779483",
                "type": 19,
                "content": "<@!134416332509675520> would this approach work? Or is there some holes in this that I\u2019m not thinking of?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:31:56.705000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950414024741359667"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950415136181616671",
                "type": 19,
                "content": "Yeah, it's true that if you're changing the list frequently, then maybe it would be annoying to hardcode it. But you can update the list by just redeploying your program.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:30:26.325000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950414781595152434"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950414781595152434",
                "type": 19,
                "content": "What if you wanted to update after it was deployed or if theres thousands for example. A hardcoded list doesn\u2019t seem sustainable.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:29:01.785000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950414426513735681"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950414426513735681",
                "type": 19,
                "content": "Why do you need to create a PDA per wallet? Why not just hardcode those wallet pubkeys into your program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:27:37.127000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950414024741359667"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950414024741359667",
                "type": 0,
                "content": "So if i wanted to create a list of whitelists wallets to have access to a \"secret\" function, i could create a PDA per wallet and then just lock down the function that creates the PDA with a constraint on the struct equal to an admin wallet, and constraint on the \"secret\" function that checks for that PDA?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:26:01.337000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950413195275821116",
                "type": 0,
                "content": "Ok, that makes sense",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:22:43.577000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950412930522963968",
                "type": 0,
                "content": "Finding the address doesn't create anything",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:21:40.455000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950412902660206632",
                "type": 19,
                "content": "Anyone can find the address, but only your program can create the account that lives there",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:21:33.812000+00:00",
                "edited_timestamp": "2022-03-07T15:21:49.803000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950412841763086356"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950412841763086356",
                "type": 0,
                "content": "but i thought anyone can just create a PDA?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:21:19.293000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950412832162324520",
                "type": 0,
                "content": "```.rs\n#[derive(Accounts)]\npub struct InitThatPDA<'info> {\n  #[account(address = ADMIN)]\n  pub admin: Signer<'info>,\n\n  #[account(init, ......)]\n  pub that_pda: Account<'info, Whatever>\n  ...\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:21:17.004000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950412605409878016",
                "type": 19,
                "content": "The instruction that initializes the account at the PDA would need to check that that ADMIN signed the tx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:20:22.942000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950412451688624208"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950412451688624208",
                "type": 0,
                "content": "lets say i'm using a PDA to read some kind of value, how do i ensure that PDA was created by an ADMIN for example",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:19:46.292000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950412174973599774",
                "type": 19,
                "content": "What do you mean?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:18:40.318000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950412123056525402"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950412148813754398",
                "type": 0,
                "content": "```.rs\nconst ADMIN: Pubkey = solana_program::pubkey!(\"adsfasdafsdadsf\");\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:18:34.081000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950412123056525402",
                "type": 0,
                "content": "can you check if who signed an existing PDA?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:18:27.940000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950411990621356112",
                "type": 0,
                "content": "So if those specific wallets are hardcoded etc., then you can just check in your program",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:17:56.365000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950411914360549396",
                "type": 19,
                "content": "The only option is to check that one of those wallets signs the tx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:17:38.183000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950410614373777518"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950410614373777518",
                "type": 0,
                "content": "what are some best practices to ensuring a specific PDA is only created/updated by specific wallets?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T15:12:28.242000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950401204175904768",
                "type": 0,
                "content": "hello, does anyone knows why 'anchor deploy' takes so much time(40m+) and still not done, what am I missing here ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "573996664323440650",
                    "username": "Natan65",
                    "avatar": null,
                    "discriminator": "8516",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "950401203492245585",
                        "filename": "Screenshot_2022-03-07_at_3.22.23_PM.png",
                        "size": 69666,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/950401203492245585/Screenshot_2022-03-07_at_3.22.23_PM.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/950401203492245585/Screenshot_2022-03-07_at_3.22.23_PM.png",
                        "width": 1435,
                        "height": 230,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T14:35:04.676000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950400107424153620",
                "type": 0,
                "content": "How do I constrain access to only one specific token mint or governance owner program? Is it recommended to hard code the account pubkey or some other way this is done?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "843265420228165642",
                    "username": "abhay1239",
                    "avatar": null,
                    "discriminator": "7144",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T14:30:43.190000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950381700888813588",
                "type": 0,
                "content": "It's working, ty mate",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:17:34.730000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950381663911809074",
                "type": 0,
                "content": "All right !",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:17:25.914000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950381498803052565",
                "type": 0,
                "content": "Yeah, that'll fix the problem",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:16:46.549000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950381483829379153",
                "type": 0,
                "content": "So sounds like no \ud83d\ude1b",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:16:42.979000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950381463898038303",
                "type": 0,
                "content": "oooooops !",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:16:38.227000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950381388543180840",
                "type": 0,
                "content": "```\n\u279c  myepicproject echo $PATH           \n/Users/louis/.nvm/versions/node/v17.6.0/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/louis/.nvm/versions/node/v17.6.0/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/Users/louis/.cargo/bin```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:16:20.261000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950381287737294868",
                "type": 19,
                "content": "I don't think that's related. There's a section in that document that tells you to add the solana/bin directory to your path, did you do that?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "280700964997038080",
                        "username": "Sercurio",
                        "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                        "discriminator": "4841",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:15:56.227000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950380739348807711"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950380900716269568",
                "type": 0,
                "content": "I'm following this document: https://github.com/buildspace/buildspace-projects/blob/main/Solana_And_Web3/en/Section_2/Resources/m1_setup.md",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/buildspace/buildspace-projects/blob/main/Solana_And_Web3/en/Section_2/Resources/m1_setup.md",
                        "title": "buildspace-projects/m1_setup.md at main \u00b7 buildspace/buildspace-pro...",
                        "description": "The home of our open-source projects. Contribute to buildspace/buildspace-projects development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/0fdc93da574fa9bfb0afb6c770fa9bacb8b1cd2e89881d84a3ad7129f18ada5c/buildspace/buildspace-projects",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/exPtyNFIDWE9M9r_vhwR2xtQUOBLjJQOsfyAkDy0wLY/https/opengraph.githubassets.com/0fdc93da574fa9bfb0afb6c770fa9bacb8b1cd2e89881d84a3ad7129f18ada5c/buildspace/buildspace-projects",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:14:23.954000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950380739348807711",
                "type": 0,
                "content": "Ok, but on M1 there's nothing with bpf ? cause the validators command is `solana-test-validator --no-bpf-jit`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:13:45.481000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950380504732024852",
                "type": 19,
                "content": "Yeah, so I would revisit the installation instructions",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "280700964997038080",
                        "username": "Sercurio",
                        "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                        "discriminator": "4841",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:12:49.544000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950380404832075807"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950380404832075807",
                "type": 19,
                "content": "```\u279c  myepicproject which cargo-build-bpf\ncargo-build-bpf not found```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:12:25.726000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950380068197249105"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950380068197249105",
                "type": 0,
                "content": "But `which cargo-build-bpf` needs to point to part of your solana install",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:11:05.466000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950380017555210281",
                "type": 19,
                "content": "Ah, you may need to just make sure your path is set up correctly (I don't remember how to do this, since I installed solana from source)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "280700964997038080",
                        "username": "Sercurio",
                        "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                        "discriminator": "4841",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:10:53.392000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950378237245153320"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950378237245153320",
                "type": 19,
                "content": "Solana-test-validators works and solana-keygen works too, that doesn't means anything ?\nAnd I haven't got any errors during solana build\n```\n\u279c  myepicproject solana --version\nsolana-cli 1.8.5 (src:devbuild; feat:52865992)\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:03:48.933000+00:00",
                "edited_timestamp": "2022-03-07T13:05:55.934000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950378051609432084"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950378051609432084",
                "type": 19,
                "content": "That means you haven't installed solana itself correctly",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "280700964997038080",
                        "username": "Sercurio",
                        "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                        "discriminator": "4841",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T13:03:04.674000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950377189491224606"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950377189491224606",
                "type": 0,
                "content": "Hi,\nI'm doing the buildspace tutorial and in the installation part on M1, something doesn't work.\nError:\n```\n\u279c  myepicproject anchor test --skip-local-validator\nerror: no such subcommand: `build-bpf`\n\u279c  myepicproject which anchor                      \n/Users/louis/.cargo/bin/anchor\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "280700964997038080",
                    "username": "Sercurio",
                    "avatar": "b2ff8c2b9401f8c1a13f900262eb5a58",
                    "discriminator": "4841",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T12:59:39.129000+00:00",
                "edited_timestamp": "2022-03-07T13:02:42.069000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950374154400563220",
                "type": 0,
                "content": "<@!134416332509675520> Yes, it's true, but my **target/build** is in my **.gitignore** then each time I'm cloning my repo locally and after running **anchor build** a new keypair is generated (ok I can copy/paste the custom keypair to the target folder and it's gonna be okay), just wanted to know it we could specify it from anchor build directly (as we can do with **solana program ...** cmd)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "373850936046518272",
                    "username": "zurgl",
                    "avatar": null,
                    "discriminator": "6851",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T12:47:35.507000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950373138787602472",
                "type": 19,
                "content": "It shouldn't be regenerating the keypair unless you accidentally keep deleting the one it deposits in `target/build`.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "373850936046518272",
                        "username": "zurgl",
                        "avatar": null,
                        "discriminator": "6851",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T12:43:33.366000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950355490565685249"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950370325122654258",
                "type": 19,
                "content": "I would think its possible to do #1 but I\u2019m not sure what\u2019s best practice for a whitelist. Perhaps its not a single PDA account with a long list of WL accounts, but instead you build a pda for each WL address and check that instead? How do you ensure that the list can\u2019t be tampered with?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T12:32:22.536000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950241696388620289"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950355490565685249",
                "type": 0,
                "content": "hello, when I run anchor build a new **program-name-keypair.json** is generated each time.\nHow can I force anchor build to take a pre-generated keypair as an input this way I can reuse the same keypair each time?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "373850936046518272",
                    "username": "zurgl",
                    "avatar": null,
                    "discriminator": "6851",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T11:33:25.702000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950250709205544990",
                "type": 0,
                "content": "storing each item in a separate account wouldn't work because I need the program to be able to iterate through an indefinite number of items",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T04:37:03.879000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950248036465012738",
                "type": 0,
                "content": "is it possible to increase the size of an account (e.g. for variable sized lists)?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T04:26:26.648000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950242511459332116",
                "type": 0,
                "content": "assuming you care if people create token accounts for mint addresses not in the list",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T04:04:29.384000+00:00",
                "edited_timestamp": "2022-03-07T04:04:40.312000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950242304185208893",
                "type": 0,
                "content": "It's not secure at all to only do it on the client side",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T04:03:39.966000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950241696388620289",
                "type": 0,
                "content": "If I have a function that looks like this:\n```\npub fn initialize_token_acct(ctx: Context<InitializeTokenAcct>) -> ProgramResult {\n    msg!(\"Transferring tokens from: {:?}\", ctx.accounts.token_acct.key());\n    msg!(\"To: {:?}\", ctx.accounts.escrowed_token_acct.key());\n\n    let cpi_accounts = token::Transfer {\n        from: ctx.accounts.token_acct.to_account_info(),\n        to: ctx.accounts.escrowed_token_acct.to_account_info(),\n        authority: ctx.accounts.acct_authority.to_account_info()\n    };\n\n    let cpi_program = ctx.accounts.token_program.to_account_info();\n    let cpi_mint_tx = CpiContext::new(cpi_program, cpi_accounts);\n    \n    token::transfer(cpi_mint_tx, 1)?;\n\n    Ok(())\n}\n\n#[derive(Accounts)]\npub struct InitializeTokenAcct<'info> {\n    #[account(mut)]\n    pub token_acct: Account<'info, TokenAccount>,\n    #[account(mut)]\n    pub token_mint: Account<'info, Mint>,\n    #[account(signer)]\n    pub acct_authority: AccountInfo<'info>,\n    pub token_program: AccountInfo<'info>,\n    // This is where we'll store the offer maker's tokens.\n    #[account(\n        init,\n        payer = payer,\n        seeds = [token_acct.mint.as_ref()],\n        bump,\n        token::mint = token_mint,\n        token::authority = escrowed_token_acct,\n    )]\n    pub escrowed_token_acct: Account<'info, TokenAccount>,\n    #[account(mut)]\n    pub payer: Signer<'info>,\n    pub system_program: Program<'info, System>,\n    pub rent: Sysvar<'info, Rent>\n}\n```\n\nBut I want to set a constraint that this can only be run for a select set of token/mint addresses, what's the best way for me to do this? The approaches I see are:\n\n1/ Keep a static list of mint addresses and do a check at the beginning of `initialize_token_acct` to see if the token/mint accounts passed are included in that static list. If not, terminate early\n\n2/ On the client side, keep that static list, and don't make the program rpc call if the token/mint accounts aren't in that list",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T04:01:15.056000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950232263923232778",
                "type": 0,
                "content": "the problem is - it was an UnckechedAccount for a reason. I actually don't need to unwrap it into an object, which increases the number of operations. I just need an address",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:23:46.181000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950232041931280444",
                "type": 0,
                "content": "huh, that actually does work! thanks!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:22:53.254000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950231703916519434",
                "type": 0,
                "content": "i think",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:21:32.665000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950231652016201768",
                "type": 0,
                "content": "`pub associated_with_parent_1_mint: Account<'info, TokenAccount>`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:21:20.291000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950228983235108984",
                "type": 19,
                "content": "recreated my problem in a fresh project.\ndoes that help a bit? \ud83d\ude09 \n```\nuse anchor_lang::prelude::*;\nuse anchor_spl::associated_token::AssociatedToken;\nuse anchor_spl::token::Mint;\n\ndeclare_id!(\"Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS\");\n\n#[program]\npub mod coin_playground {\n    use super::*;\n\n    pub fn initialize(ctx: Context<Initialize>) -> Result<()> {\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\npub struct Initialize<'info> {\n    #[account(mut)]\n    pub owner: Signer<'info>,\n\n    #[account(mut)]\n    pub parent_1_mint: Account<'info, Mint>,\n\n    #[account(\n    associated_token::mint = parent_1_mint,\n    associated_token::authority = owner,\n    )]\n    pub associated_with_parent_1_mint: UncheckedAccount<'info>,\n\n    pub associated_token_program: Program<'info, AssociatedToken>,\n}\n```\nand error\n```\nerror[E0277]: can't compare `&anchor_lang::prelude::Pubkey` with `anchor_lang::prelude::Pubkey`\n  --> programs/coin-playground/src/lib.rs:16:10\n   |\n16 | #[derive(Accounts)]\n   |          ^^^^^^^^ no implementation for `&anchor_lang::prelude::Pubkey == anchor_lang::prelude::Pubkey`\n   |\n   = help: the trait `PartialEq<anchor_lang::prelude::Pubkey>` is not implemented for `&anchor_lang::prelude::Pubkey`\n   = note: this error originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "326107472098099201",
                        "username": "Tom Linton",
                        "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                        "discriminator": "2464",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:10:44.004000+00:00",
                "edited_timestamp": "2022-03-07T03:11:11.838000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950223505868341249"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950227898487418921",
                "type": 19,
                "content": "Updating anchor cli worked!  Thank you so much for your help <@!784156219861762109>",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691715392824934510",
                    "username": "JackAttack",
                    "avatar": "4c05fd5fc9fd60fc8d13eb1e0de03552",
                    "discriminator": "9433",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "784156219861762109",
                        "username": "WrRaThY",
                        "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                        "discriminator": "6802",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:06:25.380000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950227323536408596"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950227405547634759",
                "type": 0,
                "content": "btw. what `rustc` version do you have? if older than 1.59 - then update with `rustup update stable`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:04:27.854000+00:00",
                "edited_timestamp": "2022-03-07T03:04:57.507000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950227323536408596",
                "type": 0,
                "content": "with those all up to date - try a new `anchor init`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:04:08.301000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950227171690020954",
                "type": 0,
                "content": "anchor-cli 0.22.1",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691715392824934510",
                    "username": "JackAttack",
                    "avatar": "4c05fd5fc9fd60fc8d13eb1e0de03552",
                    "discriminator": "9433",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:03:32.098000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950226996867248168",
                "type": 0,
                "content": "also - you may want to downgrade to 1.8 16 (or smth), because 1.9 is testnet only",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:02:50.417000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950226938688077835",
                "type": 0,
                "content": "anchor-cli",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:02:36.546000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950226901975310366",
                "type": 19,
                "content": "currently using solana-cli 1.9.9",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691715392824934510",
                    "username": "JackAttack",
                    "avatar": "4c05fd5fc9fd60fc8d13eb1e0de03552",
                    "discriminator": "9433",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "784156219861762109",
                        "username": "WrRaThY",
                        "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                        "discriminator": "6802",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T03:02:27.793000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950225441111818270"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950225441111818270",
                "type": 19,
                "content": "ProgramResult got updated to Result<()>.\ncheck out changelog for more details: https://github.com/project-serum/anchor/blob/master/CHANGELOG.md\nand this tells me that your CLI is older than ur anchor version in the project",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "691715392824934510",
                        "username": "JackAttack",
                        "avatar": "4c05fd5fc9fd60fc8d13eb1e0de03552",
                        "discriminator": "9433",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:56:39.496000+00:00",
                "edited_timestamp": "2022-03-07T02:57:20.101000+00:00",
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950225244747087912"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950225244747087912",
                "type": 0,
                "content": "Anyone get a ```error[E0412]: cannot find type `ProgramResult` in this scope``` when running anchor build on a brand new project?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691715392824934510",
                    "username": "JackAttack",
                    "avatar": "4c05fd5fc9fd60fc8d13eb1e0de03552",
                    "discriminator": "9433",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:55:52.679000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223956936359986",
                "type": 0,
                "content": "and I don't really know how to fix it \ud83d\ude04",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:50:45.641000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223803810725898",
                "type": 0,
                "content": "and it still looks legit to me",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:50:09.133000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223748177494067",
                "type": 0,
                "content": "interesting that it worked so far",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:49:55.869000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223698328186900",
                "type": 0,
                "content": "```\n   #[account(mut)]\n    pub owner: Signer<'info>,\n    #[account(mut)]\n    pub parent_1_mint: Account<'info, Mint>,\n#[account(\n    associated_token::mint = parent_1_mint,\n    associated_token::authority = owner,\n)]\npub associated_with_parent_1_mint: UncheckedAccount<'info>,\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:49:43.984000+00:00",
                "edited_timestamp": "2022-03-07T02:56:11.061000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223636424458291",
                "type": 0,
                "content": "with some trial and error I narrowed it down to",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:49:29.225000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223607508914196",
                "type": 0,
                "content": "close",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:49:22.331000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223505868341249",
                "type": 0,
                "content": "it might be a has_one constraint",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:48:58.098000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950223491779674192",
                "type": 0,
                "content": "i don' have an easy way to get that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:48:54.739000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950222780408934450",
                "type": 19,
                "content": "that's the thing - there are none (not a single `&` in the whole file). so I was hoping that there simply is a way to get to the variable name that was checked.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "326107472098099201",
                        "username": "Tom Linton",
                        "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                        "discriminator": "2464",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:46:05.135000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950222510996217926"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950222510996217926",
                "type": 0,
                "content": "pretty hard to tell without seeing the code, but probably a stray & somewhere in a constraint?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:45:00.902000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950221702896447528",
                "type": 19,
                "content": "any chance you know something about this one? \ud83d\ude09",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:41:48.236000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950214165233016893"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950221643001765899",
                "type": 19,
                "content": "ahhh, right. everything evolves so fast \ud83d\ude09",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "326107472098099201",
                        "username": "Tom Linton",
                        "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                        "discriminator": "2464",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:41:33.956000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950221277468184627"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950221277468184627",
                "type": 0,
                "content": "ahh its because it was removed in favour of --skip-lint https://github.com/project-serum/anchor/pull/1482",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:40:06.806000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950220204879806476",
                "type": 0,
                "content": "but TBH - I decided that having some docs outside my head may not even be the worst idea ever, so I'll just write them up... \ud83d\ude09",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:35:51.081000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950220044808372234",
                "type": 0,
                "content": "anchor build",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:35:12.917000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950219822095028285",
                "type": 0,
                "content": "what command are you running?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:34:19.818000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950218874492710922",
                "type": 0,
                "content": "another one:\nfollowing this: `https://github.com/project-serum/anchor/pull/1452`\nI pasted this into my `Anchor.toml`\n```\n[features]\nsafety_checks = false\n```\nbut I'm still getting \n```\nPlease add a `/// CHECK:` doc comment explaining why no checks through types are necessary.\n```\nany idea why?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:30:33.892000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950214165233016893",
                "type": 0,
                "content": "so now I'm getting this\n```\n  --> programs/combiner/src/domains/actions/breeding/breed_definition.rs:18:10\n   |\n18 | #[derive(Accounts)]\n   |          ^^^^^^^^ no implementation for `&anchor_lang::prelude::Pubkey == anchor_lang::prelude::Pubkey`\n   |\n   = help: the trait `PartialEq<anchor_lang::prelude::Pubkey>` is not implemented for `&anchor_lang::prelude::Pubkey`\n```\nand I have >100 lines worth of definitions in that file.\nis there any way to get the actual `name` of a field that resulted in this error?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:11:51.117000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950213822864584715",
                "type": 19,
                "content": "Sort of, you can do `await program.rpc.thatAccountStructType.fetchMultiple` and just pass in multiple addresses.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "96008380765700096",
                        "username": "praskOo",
                        "avatar": "14ae96b9a13a804fe964fc81eec35633",
                        "discriminator": "0892",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:10:29.490000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950213020016058378"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950213020016058378",
                "type": 0,
                "content": "Hi, I have an account that is used as a seed for multiple other PDAs (so there is a one to many relationship).\nThe seeds for the other accounts look something like this: `[\"tag\", main.key(), number.toBytes()]`, where the number goes from 0 to e.g. 5.\nIs there a good way for me to fetch all of these PDAs with one request?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "96008380765700096",
                    "username": "praskOo",
                    "avatar": "14ae96b9a13a804fe964fc81eec35633",
                    "discriminator": "0892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:07:18.076000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950211852682526791",
                "type": 19,
                "content": "that makes more sense, thanks \ud83d\ude42",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:02:39.762000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950211736621953064"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950211736621953064",
                "type": 0,
                "content": "So the constraint itself isn't composite, it's a constraint *on* a composite field.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:02:12.091000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950211436980867152",
                "type": 0,
                "content": "You can only use `#[account(constraint = ...)]` on top of those, not other stuff like `#[account(mut)]` or whatever",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:01:00.651000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950211340717400105",
                "type": 19,
                "content": "That means you're using a composite field in your derive(Accounts) struct, something like `pub something: Something<'info>` (not one of the usual suspects, Account, AccountInfo, Signer, etc.)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "784156219861762109",
                        "username": "WrRaThY",
                        "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                        "discriminator": "6802",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T02:00:37.700000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950208118816657438"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950208439265685544",
                "type": 0,
                "content": "thank you",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:49:05.940000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950208426422706216",
                "type": 0,
                "content": "ah, ok, that is perfect",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:49:02.878000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950208246818422826",
                "type": 19,
                "content": "```.rs\n#[test]\nfn serialization_example() {\n    #[derive(AnchorDeserialize, Debug)]\n    struct SwapInfo {\n        is_initialized: bool,\n        is_paused: bool,\n        nonce: u8,\n        something: u64,\n    }\n\n    let mut data = vec![1u8, 0, 254, 1, 2, 3, 0, 0, 0, 0, 0];\n\n    let swap_info = SwapInfo::deserialize(&mut &data[..]);\n    eprintln!(\"{:?}\", swap_info);\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:48:20.057000+00:00",
                "edited_timestamp": "2022-03-07T01:48:27.327000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950207244157476905"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950208118816657438",
                "type": 0,
                "content": "```\n12 | #[derive(Accounts)]\n   |          ^^^^^^^^\n   |\n   = help: message: Invariant violation: composite constraints can only be raw or literals\n```\nwhat's a `composite constraint`?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:47:49.539000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950208008703598592",
                "type": 19,
                "content": "For what it's worth that raw account data you posted above doesn't look like anchor to me",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:47:23.286000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950207244157476905"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950207244157476905",
                "type": 0,
                "content": "Ok, its written in anchor as well so I'm guessing borsh? How would I deserialize assuming borsh?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:44:21.004000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950207076498546708",
                "type": 0,
                "content": "But your struct might be simple enough that you can just guess/try both or whatever",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:43:41.031000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206990360137738",
                "type": 0,
                "content": "No. There are some standard choices, borsh and serde, but they're not the same thing so depends on how that other program works",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:43:20.494000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206846252232734",
                "type": 0,
                "content": "hmm, so no in built rust library for that sort of thing?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:42:46.136000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206750387228804",
                "type": 0,
                "content": "yeah, I just removed some stuff to fit it in a small example, it has like 5 more u64 entries",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:42:23.280000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206687703339038",
                "type": 0,
                "content": "This is why ideally you'd just depend on that other program's code as a dependency",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:42:08.335000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206637065523271",
                "type": 0,
                "content": "In general there's no automagic way to do deserialization\u2014it depends on how the original thing was serialized",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:41:56.262000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206564109803600",
                "type": 0,
                "content": "Oh, ok, so SwapInfo has a bunch of other stuff in it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:41:38.868000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206487911874622",
                "type": 0,
                "content": "nah, its more complicated, has a bunch of other data in the actual struct",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:41:20.701000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206362820939796",
                "type": 0,
                "content": "Given that your struct is so simple, you could honestly just manually deserialize it if you're sure about the formatting of that data.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:40:50.877000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206357217345609",
                "type": 0,
                "content": "i removed some data",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:40:49.541000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950206271766822972",
                "type": 19,
                "content": "Just to make sure I'm understanding, looks like there's a bunch more data in there\u2014do you just not need it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:40:29.168000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950204082566602842"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950204082566602842",
                "type": 0,
                "content": "Like in the logs I get something like:\n```Program log: raw data1:RefCell { value: [1, 0, 254, 200, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 187, 27, 48, 177, 27, 15, 193] }\n```\nWhich is (I guess) the account data I'm after (is_initialized, the nonce, etc.), just need to deserialize it now",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:31:47.222000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950203590901907476",
                "type": 19,
                "content": "Ok, that seems to work, how do I deserialize the type `Rc<RefCell<&'a mut [u8]>>` if I know it will have the form of a struct:\n```\npub struct SwapInfo {\n    pub is_initialized: bool,\n    pub is_paused: bool,\n    pub nonce: u8,\n}\n```\n? Does that question make sense or am I misunderstanding something about rust types?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:29:50+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950200100175638548"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950200166516916294",
                "type": 19,
                "content": "Thanks. Yeah I just want to make sure it's the empty-seed pda and not an arbitrary address.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:16:13.563000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950199963047047260"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950200100175638548",
                "type": 19,
                "content": "Try doing `msg!(\"raw data1: {:?}\", q);`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:15:57.746000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950199876644393010"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950199963047047260",
                "type": 19,
                "content": "Secure check for what? It verifies that that main_pda has empty seeds, yeah.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "153299118461026304",
                        "username": "rend",
                        "avatar": "a874d221ac0a7c2f6572016004e813ba",
                        "discriminator": "7798",
                        "public_flags": 131072
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:15:25.052000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950199799888613415"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950199876644393010",
                "type": 0,
                "content": "I lack some rust type knowledge here:\n```\n#[program]\npub mod stable_read {\n    use super::*;\n    pub fn read(ctx: Context<SwapInfoCtx>) -> ProgramResult {\n        let data = &ctx.accounts.swap_info_account;\n        msg!(\"raw data:{}\", data.owner);\n        msg!(\"raw data1:{}\",data.rent_epoch);\n        //Having trouble converting this to a type I can display\n        let q = data.deserialize_data();\n        msg!(\"raw data1:{}\", q);\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\npub struct SwapInfoCtx<'info> {\n    ///CHECK: BASED\n  pub swap_info_account: AccountInfo<'info>\n}\n\n#[account]\npub struct SwapInfo {\n    /// Initialized state\n    pub is_initialized: bool,\n\n    /// Paused state\n    pub is_paused: bool,\n\n    /// Nonce used in program address\n    /// The program address is created deterministically with the nonce,\n    /// swap program id, and swap account pubkey.  This program address has\n    /// authority over the swap's token A account, token B account, and pool\n    /// token mint.\n    pub nonce: u8,\n\n}\n```\nI've tried a bunch of different things to convert the data to a type that can be logged but I'm not quite getting it:\n``` --> programs/stableRead/src/lib.rs:14:30\n   |\n14 |         msg!(\"raw data1:{}\", q);\n   |                              ^ `Result<_, Box<bincode::error::ErrorKind>>` cannot be formatted with the default formatter\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:15:04.452000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950199833602449448",
                "type": 19,
                "content": "thanks that worked \ud83d\ude4f \nI'm now fiddling with upgrade problems with my old program \n```\nerror: bump targets should not be provided with init. Please use bump without a target.\n  --> programs/combiner/src/domains/config/initialize_combiner.rs:14:9\n   |\n14 |         bump = bump,\n   |         ^^^^\n```\nI can see that it was a breaking change at some point, but can someone explain the reason behind it? one way or another the bump has to be passed on. just sometimes it's through context, sometimes it's not. doesn't feel very consistent",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:14:54.190000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950191580692742174"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950199799888613415",
                "type": 19,
                "content": "Yeah, but does this attribute suffice as a secure check?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:14:46.152000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950199499266072676"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950199499266072676",
                "type": 19,
                "content": "The doc comment is because you're using UncheckedAccount (also for AccountInfo, same thing), not for the seeds part",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "153299118461026304",
                        "username": "rend",
                        "avatar": "a874d221ac0a7c2f6572016004e813ba",
                        "discriminator": "7798",
                        "public_flags": 131072
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T01:13:34.478000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950194432672661584"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950194952053342228",
                "type": 0,
                "content": "I'm only doing this to use `main_pda` as the authority for the token account I'm creating in this instruction, which is all handled in the account init attribute",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:55:30.338000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950194432672661584",
                "type": 0,
                "content": "Is this the proper way to check the pda account provided?\n```rust\n    #[account(seeds=[], bump)]\n    pub main_pda: UncheckedAccount<'info>\n```\nThe compiler is telling me I need to add a doc comment so I just wanted to make sure",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:53:26.508000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950191580692742174",
                "type": 0,
                "content": "The 2021 edition of rust requires at least 1.56",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:42:06.543000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950191507296645120",
                "type": 19,
                "content": "Try upgrading that to a more recent version",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "784156219861762109",
                        "username": "WrRaThY",
                        "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                        "discriminator": "6802",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:41:49.044000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950191460974735401"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950191460974735401",
                "type": 19,
                "content": "```\n$ rustc --version\nrustc 1.54.0 (a178d0322 2021-07-26)\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:41:38+00:00",
                "edited_timestamp": "2022-03-07T00:41:43.686000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950191409619673088"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950191409619673088",
                "type": 19,
                "content": "What version of rust are you using? `rustc --version`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "784156219861762109",
                        "username": "WrRaThY",
                        "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                        "discriminator": "6802",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:41:25.756000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950191132283899964"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950191132283899964",
                "type": 0,
                "content": "hey.\nI noticed that this question has been asked a number of times, but couldn't find any real answer, so I'll post it again... sorry.\nthats what I did:\n```\n$ solana --version\nsolana-cli 1.8.16 (src:23af37fe; feat:1886190546)\n$ anchor --version\nanchor-cli 0.22.1\n$ anchor init coin-playground\n$ cd coin-playground/\n$ anchor build\n```\nand the result is that\n```\nFailed to obtain package metadata: Error during execution of `cargo metadata`:     Updating crates.io index\n Downloading crates ...\nerror: failed to download `solana-sdk-macro v1.10.0`\n\nCaused by:\n  unable to get packages from source\n\nCaused by:\n  failed to parse manifest at `/home/wooha/.cargo/registry/src/github.com-1ecc6299db9ec823/solana-sdk-macro-1.10.0/Cargo.toml`\n\nCaused by:\n  feature `edition2021` is required\n\n  this Cargo does not support nightly features, but if you\n  switch to nightly channel you can add\n  `cargo-features = [\"edition2021\"]` to enable this feature\n```\nI checked solana releases and versions 1.9.x are generally considered testnet only and I have the latest mainnet version installed. this is the latest anchor version available in cargo.\nbut despite that - I am clearly doing something wrong and getting this error, so the question is: what am I doing wrong? \ud83d\ude04 \nhelp please \ud83d\ude42",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:40:19.634000+00:00",
                "edited_timestamp": "2022-03-07T00:40:42.321000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950189276136628284",
                "type": 19,
                "content": "No, but failed tests do log to the console",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:32:57.094000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950188763798188053"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950188763798188053",
                "type": 0,
                "content": "Seems like passing tests only output logs to the file in .anchor? Is there a macro for outputting them to the console after the test or something?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:30:54.943000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950186862071410749",
                "type": 0,
                "content": "Anyway to see the msg!() when running anchor test? I think it goes of in the background and only console logs from the .ts file are seen",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:23:21.536000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950186280652800070",
                "type": 0,
                "content": "thx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:21:02.915000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950186253754720278",
                "type": 0,
                "content": "lmao, I see it now, things are starting to make sense",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:20:56.502000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950184530923388978",
                "type": 0,
                "content": "Try googling vim rust-analyzer",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:14:05.747000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950184483267686411",
                "type": 0,
                "content": "It's crucial to get your editor set up to do that, otherwise you're going to have a rough time",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:13:54.385000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950184469560717353",
                "type": 0,
                "content": "xdd ok",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:13:51.117000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950184409158516737",
                "type": 0,
                "content": "No, I'm saying that if you learn how to see how AccountInfo is defined, by jumping to its source, you'll see how to use it \ud83d\ude1b",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:13:36.716000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950184264438267975",
                "type": 0,
                "content": "Vim. Are you saying to redefine what AccountInfo means in anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:13:02.212000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950184210231070843",
                "type": 0,
                "content": "What editor are you using now?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:12:49.288000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950184152551014400",
                "type": 0,
                "content": "ugh, any examples of that?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:12:35.536000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950183951354429540",
                "type": 19,
                "content": "You should configure your editor so you can jump to the AccountInfo source, the definition of the type",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:11:47.567000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950183876721000479"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950183876721000479",
                "type": 0,
                "content": "what's that? I replaced Account -> AccountInfo on the dervied account",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:11:29.773000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950183748903776306",
                "type": 19,
                "content": "Have you tried jumping to source on the AccountInfo type?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:10:59.299000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950183644981506109"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950183644981506109",
                "type": 19,
                "content": "```#[program]\npub mod stable_read {\n    use super::*;\n    pub fn read(ctx: Context<SwapInfoCtx>) -> ProgramResult {\n        let data = &ctx.accounts.swap_info_account;\n        msg!(\"raw data:{}\", data);\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\npub struct SwapInfoCtx<'info> {\n  pub swap_info_account: AccountInfo<'info>\n}```\n\nSo I'm just trying to read the raw account data of the copied account with the above. How do I display it in say bytes? I get this error:\n``` --> programs/stableRead/src/lib.rs:10:29\n   |\n10 |         msg!(\"raw data:{}\", data);\n   |                             ^^^^ `anchor_lang::prelude::AccountInfo<'_>` cannot be formatted with the default formatter\n   |\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:10:34.522000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180209041219604"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950183392597663775",
                "type": 19,
                "content": "Init a metaplex account? Don't think there's anything built-in yet for that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:09:34.349000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950183310800326677"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950183310800326677",
                "type": 19,
                "content": "Gotcha. Is it possible to do with Anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:09:14.847000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950182900236714034"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950182900236714034",
                "type": 19,
                "content": "For example, anytime you `init` an associated token account you're doing this",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:07:36.961000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950182536523436042"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950182775988846692",
                "type": 19,
                "content": "Yes, but it would require CPIing to that other program (only that other program can sign for the account's address)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:07:07.338000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950182536523436042"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950182536523436042",
                "type": 0,
                "content": "Is it possible to init a PDA for another program (metaplex)?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:06:10.245000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950182461546065960",
                "type": 0,
                "content": "And then doing what you normally do in your own programs, `Account<'info, ThatAccountStruct>`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:05:52.369000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950182433574256641",
                "type": 0,
                "content": "oh, I see xd",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:05:45.700000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950182389726994472",
                "type": 0,
                "content": "Assuming it's an anchor program, then yeah, adding a dependency to it \ud83d\ude1b",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:05:35.246000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950182324207755374",
                "type": 0,
                "content": "yeah",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:05:19.625000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950182260206866512",
                "type": 19,
                "content": "You mean for an account owned by another program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:05:04.366000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950182113586577419"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950182158218199080",
                "type": 0,
                "content": "like I define a struct I want to deserialize",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:04:40.050000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950182113586577419",
                "type": 0,
                "content": "Ah, I see, is there some built in way to deserialize in anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:04:29.409000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950181616934866944",
                "type": 0,
                "content": "Otherwise, yeah, you'd need to use `AccountInfo` and handle the deserialization manually yourself",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:02:30.998000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950181561695895572",
                "type": 0,
                "content": "Right, assuming it's an anchor program that's how you would ordinarily do it, via a Cargo dependency",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:02:17.828000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950181470960484423",
                "type": 0,
                "content": "I just want to read that data",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:01:56.195000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950181322385657926",
                "type": 19,
                "content": "If you want to be able to write `Account<'info, SwapInfo>` and have it work, you need to add that other program to your Cargo dependency and use its *own* SwapInfo struct, not your copy of it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:01:20.772000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180703293816922"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950181314697498624",
                "type": 0,
                "content": "do I replace Account with AccountInfo on the derived accounts?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:01:18.939000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950181215107956746",
                "type": 19,
                "content": "Yea I think I misunderstood I was planning on getting the PDA and calling createTokenAccount but realized that would be wrong so I\u2019ll give this a shot and from the client side I\u2019d just use the PDA to get the derived ATA to pass in",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:00:55.195000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180917446578186"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950181077585121320",
                "type": 19,
                "content": "Ah, so that SwapInfo account is owned by some other program? Yeah, what you wrote above implies its supposed to be owned by your program (the `#[account]` part above the struct)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-07T00:00:22.407000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180904171610193"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950180917446578186",
                "type": 19,
                "content": "That could work, but what's the connection to initializing them on the client? I thought that's what we were talking about",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "270368441972555776",
                        "username": "0xDon",
                        "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                        "discriminator": "3839",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:59:44.227000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180820411359322"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950180904171610193",
                "type": 0,
                "content": "I'm copying something from mainnet using test.validator.clone and trying to read that",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:59:41.062000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950180820411359322",
                "type": 19,
                "content": "Right but they still need to be initialized if you\u2019re depositing or withdrawing SPL from them so I attempted to do so with init if needed is that correct?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:59:21.092000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180412523708426"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950180703293816922",
                "type": 0,
                "content": "the error log?\n```\nTransaction simulation failed: Error processing Instruction 0: custom program error: 0xbbf\n    Program Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS invoke [1]\n    Program log: Instruction: Read\n    Program log: Custom program error: 0xbbf\n    Program Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS consumed 2197 of 200000 compute units\n    Program Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS failed: custom program error: 0xbbf\n    1) Is initialized!\n\n\n  0 passing (47ms)\n  1 failing\n\n  1) stableRead\n       Is initialized!:\n     Error: 3007: The given account is owned by a different program than expected\n      at Function.parse (node_modules/@project-serum/anchor/src/error.ts:41:14)\n      at Object.rpc [as read] (node_modules/@project-serum/anchor/src/program/namespace/rpc.ts:32:42)\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:58:53.169000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950180517494525982",
                "type": 19,
                "content": "Can you post the full program log?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:58:08.871000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180209041219604"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950180412523708426",
                "type": 19,
                "content": "ATAs are token accounts that live at PDAs derived from a totally different program, the associated token program, so creating them doesn't require your own program to sign for anything (the address is a PDA, but not one of your PDAs)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "270368441972555776",
                        "username": "0xDon",
                        "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                        "discriminator": "3839",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:57:43.844000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950180219480838244"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950180219480838244",
                "type": 0,
                "content": "So I attempted to do so with the atas not sure if they\u2019re correct",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:56:57.819000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950180209041219604",
                "type": 0,
                "content": "<@!134416332509675520> \n```use anchor_lang::prelude::*;\n\ndeclare_id!(\"Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS\");\n\n#[program]\npub mod stable_read {\n    use super::*;\n    pub fn read(ctx: Context<SwapInfoCtx>) -> ProgramResult {\n        let data = &ctx.accounts.swap_info_account.is_paused;\n        msg!(\"isPaused?:{}\", data);\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\npub struct SwapInfoCtx<'info> {\n  pub swap_info_account: Account<'info, SwapInfo>\n}\n\n#[account]\npub struct SwapInfo {\n    /// Initialized state\n    pub is_initialized: bool,\n\n    /// Paused state\n    pub is_paused: bool,\n\n    /// Nonce used in program address\n    /// The program address is created deterministically with the nonce,\n    /// swap program id, and swap account pubkey.  This program address has\n    /// authority over the swap's token A account, token B account, and pool\n    /// token mint.\n    pub nonce: u8,\n\n}```\nI think I'm getting error 3007 because the above requires my program (above) to own the account I'm reading from? Is this true? How do I fix it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:56:55.330000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950180132264489030",
                "type": 0,
                "content": "`my_game_fee_account` and `escrow_payment_account` are PDAs but I need to create ATAs for those so they can handle SPL transfers",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:56:37.025000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950179519325696021",
                "type": 19,
                "content": "Which PDA token account are you referring to? I only see associated_token accounts",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "270368441972555776",
                        "username": "0xDon",
                        "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                        "discriminator": "3839",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:54:10.889000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950171762216288266"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950171762216288266",
                "type": 0,
                "content": "like i have this struct so far, thought i could get the PDA token account client side and pass it in, but it may also need to be init_if_needed instead:\n```\n#[derive(Accounts)]\n#[instruction(escrow_payment_bump: u8)]\npub struct DepositSpl<'info> {\n    wallet: Signer<'info>,\n    #[account(mut)]\n    ///CHECK: \n    payment_account: UncheckedAccount<'info>,\n    #[account(mut, seeds=[PREFIX.as_bytes(), coin_flip.key().as_ref(), wallet.key().as_ref()], bump=escrow_payment_bump)]\n    ///CHECK: \n    escrow_payment_account: UncheckedAccount<'info>,\n    #[account(seeds=[PREFIX.as_bytes(), my_game.creator.as_ref()], bump=my_game.bump, has_one=authority, has_one=coin_flip_fee_account, )]\n    coin_flip: Account<'info, CoinFlip>,\n    #[account(mut, seeds=[PREFIX.as_bytes(), my_game.key().as_ref(), FEE_ACCOUNT.as_bytes()], bump=my_game.fee_account_bump)]\n    ///CHECK: \n    my_game_fee_account: UncheckedAccount<'info>,\n    #[account(mut)]\n    mint: Account<'info, Mint>,\n    #[account(mut, associated_token::mint = mint, associated_token::authority = wallet)]\n    token_account: Account<'info, TokenAccount>,\n    #[account(\n        mut,\n        associated_token::mint = mint,\n        associated_token::authority = my_game_fee_account,\n    )]\n    my_game_fee_ata: Account<'info, TokenAccount>,\n    #[account(\n        mut,\n        associated_token::mint = mint,\n        associated_token::authority = escrow_payment_account,\n    )]\n    escrow_payment_account_ata: Account<'info, TokenAccount>,\n    token_program: Program<'info, Token>,\n    ///CHECK:\n    authority: UncheckedAccount<'info>,\n    system_program: Program<'info, System>,\n    rent: Sysvar<'info, Rent>,\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:23:21.450000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950171432153923716",
                "type": 0,
                "content": "can you create a PDA for a different program other than your own?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:22:02.757000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950170921514184775",
                "type": 19,
                "content": "Hmm ok, then i might need to modify a few things.. will have to get back to this",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:20:01.011000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950168723195584513"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950169760551821354",
                "type": 19,
                "content": "any idea why I'm getting error 3007 here? The declareId seems ok",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:15:24.216000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950131023394529370"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950169004939571210",
                "type": 0,
                "content": "But at any rate creating a token account that lives at one of your program's PDAs requires invoking your program",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:12:24.064000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950168913197559858",
                "type": 0,
                "content": "Or maybe I misunderstood what you creating the token account client side",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:12:02.191000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950168723195584513",
                "type": 19,
                "content": "No, token program still requires passing the rent account, regardless of how you invoke it. Plus, unfortunately, creating an account ultimately requires a signature from the address, and for PDAs that's only possible by getting the deriving program to sign, so it isn't even possible to create a PDA token account from the client.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "270368441972555776",
                        "username": "0xDon",
                        "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                        "discriminator": "3839",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:11:16.891000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950166427392962672"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950166427392962672",
                "type": 19,
                "content": "Can you get around this by creating the token account client side for the pda if it doesn\u2019t exist?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T23:02:09.529000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950165370650640404"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950165370650640404",
                "type": 19,
                "content": "The token program happens to be written in such a way that it requires an explicit rent account (newer programs don't need to do that anymore)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "153299118461026304",
                        "username": "rend",
                        "avatar": "a874d221ac0a7c2f6572016004e813ba",
                        "discriminator": "7798",
                        "public_flags": 131072
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:57:57.582000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950161003071553546"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950161110043074570",
                "type": 0,
                "content": "but not when creating other pdas",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:41:01.774000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950161003071553546",
                "type": 0,
                "content": "why do I need to include the Rent sysvar in the context accounts when creating a pda token account?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "153299118461026304",
                    "username": "rend",
                    "avatar": "a874d221ac0a7c2f6572016004e813ba",
                    "discriminator": "7798",
                    "public_flags": 131072
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:40:36.270000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950157960573747240",
                "type": 0,
                "content": "Yea I just saw that in the changelog",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:28:30.882000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950157170735984730",
                "type": 19,
                "content": "Ok, that means you should mark that payer with `#[account(mut)]`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "270368441972555776",
                        "username": "0xDon",
                        "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                        "discriminator": "3839",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:25:22.570000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950156072151293972"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950156295070158889",
                "type": 0,
                "content": "Still confused on whats the problem with #program and initialize now tho",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:21:53.795000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950156072151293972",
                "type": 19,
                "content": "oh, ok, and after doing that its complaining about payer not being mutable `the payer specified for an init constraint must be mutable`, payer (see above) is `Signer<``info>`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:21:00.647000+00:00",
                "edited_timestamp": "2022-03-06T22:21:06.542000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950153307886866482"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950154149838876712",
                "type": 0,
                "content": "https://github.com/project-serum/anchor/blob/master/CHANGELOG.md is usually a good source for migration information, e.g. ```lang: Providing bump = <target> targets with init will now error. On init only, it is required to use bump without a target and access the seed inside function handlers via ctx.bumps.get(\"<pda-account-name\"). For subsequent seeds constraints (without init), it is recommended to store the bump on your account and use it as a bump = <target> target to minimize compute units used (#1380).```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:13:22.332000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950153307886866482",
                "type": 19,
                "content": "This is saying to just replace all those `bump = some_bump,` with just `bump,`, no equals etc. Anchor will figure out the bumps for you now.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "270368441972555776",
                        "username": "0xDon",
                        "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                        "discriminator": "3839",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:10:01.595000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950147792565846037"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950151061602185296",
                "type": 0,
                "content": "I guess curious what I\u2019m missing or any tips on migration? Seems there are a ton of breaking changes",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T22:01:06.039000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950149060873048064",
                "type": 0,
                "content": "this all started happening after using latest anchor, trying to refactor the error codes and programresult now, but running into this",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:53:09.028000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950148520386633829",
                "type": 0,
                "content": "Then also seeing this now :\n```\nerror[E0599]: no function or associated item named `try_accounts` found for struct `Initialize` in the current scope\n   --> programs/my-game/src/lib.rs:21:1\n    |\n21  | #[program]\n    | ^^^^^^^^^^ function or associated item not found in `Initialize<'_>`\n...\n442 | pub struct Initialize<'info> {\n    | ---------------------------- function or associated item `try_accounts` not found for this\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `try_accounts`, perhaps you need to implement it:\n            candidate #1: `anchor_lang::Accounts`\n    = note: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0277]: the trait bound `Initialize<'_>: anchor_lang::Accounts<'_>` is not satisfied\n  --> programs/my-game/src/lib.rs:21:1\n   |\n21 | #[program]\n   | ^^^^^^^^^^ the trait `anchor_lang::Accounts<'_>` is not implemented for `Initialize<'_>`\n   |\nnote: required by `anchor_lang::context::Context::<'a, 'b, 'c, 'info, T>::new`\n  --> /Users/davidmaman/.cargo/registry/src/github.com-1ecc6299db9ec823/anchor-lang-0.22.1/src/context.rs:51:5\n   |\n51 | /     pub fn new(\n52 | |         program_id: &'a Pubkey,\n53 | |         accounts: &'b mut T,\n54 | |         remaining_accounts: &'c [AccountInfo<'info>],\n55 | |         bumps: BTreeMap<String, u8>,\n56 | |     ) -> Self {\n   | |_____________^\n   = note: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0599]: no method named `exit` found for struct `Initialize` in the current scope\n   --> programs/my-game/src/lib.rs:21:1\n    |\n21  | #[program]\n    | ^^^^^^^^^^ method not found in `Initialize<'_>`\n...\n442 | pub struct Initialize<'info> {\n    | ---------------------------- method `exit` not found for this\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `exit`, perhaps you need to implement it:\n            candidate #1: `anchor_lang::AccountsExit`\n    = note: this error originates in the attribute macro `program` (in Nightly builds, run with -Z macro-backtrace for more info)\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:51:00.166000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950148035692879902",
                "type": 0,
                "content": "```\n#[derive(Accounts)]\n#[instruction(bump: u8, fee_account_bump: u8, treasury_bump: u8)]\npub struct Initialize<'info> {\n    #[account(init, seeds=[PREFIX.as_bytes(), authority.key().as_ref()], bump=bump, space=MY_GAME_SIZE, payer=payer)]\n    coin_flip: Account<'info, CoinFlip>,\n    #[account(mut, seeds=[PREFIX.as_bytes(), my_game.key().as_ref(), FEE_ACCOUNT.as_bytes()], bump=fee_account_bump)]\n    coin_flip_fee_account: UncheckedAccount<'info>,\n    #[account(mut, seeds=[PREFIX.as_bytes(), my_game.key().as_ref(), TREASURY.as_bytes()], bump=treasury_bump)]\n    my_game_treasury: UncheckedAccount<'info>,\n    payer: Signer<'info>,\n    authority: UncheckedAccount<'info>,\n    #[account(mut)]\n    fee_withdrawal_destination: UncheckedAccount<'info>,\n    #[account(mut)]\n    treasury_withdrawal_destination: UncheckedAccount<'info>,\n    system_program: Program<'info, System>,\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:49:04.606000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950147792565846037",
                "type": 0,
                "content": "```bump targets should not be provided with init. Please use bump without a target.```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:48:06.640000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950147778636566619",
                "type": 0,
                "content": "So im starting to see this. I have an account struct in initialize that utilizes bumps and was working find before upgrading to latest anchor",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "270368441972555776",
                    "username": "0xDon",
                    "avatar": "a_8b7d2045ecaab42a2920a21f12468d6a",
                    "discriminator": "3839",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:48:03.319000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950147026853711892",
                "type": 19,
                "content": "Almost there; it is enough apparently; the signer should be `anchor.getProvider().wallet.payer`, but for some reason Visual Studio is telling me that the type \"Wallet\" has no property \"payer\".",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "184073368679612416",
                    "username": "Hasturtimesthree",
                    "avatar": "8dcf40e6fc1a89ab112039e9b5ac8ee4",
                    "discriminator": "5478",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:45:04.080000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950142446686339152"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950142446686339152",
                "type": 19,
                "content": "Wait, that's still not enough to be able to sign a transaction with the user's Phantom keypair. Though the URL here I think is just devnet.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "184073368679612416",
                    "username": "Hasturtimesthree",
                    "avatar": "8dcf40e6fc1a89ab112039e9b5ac8ee4",
                    "discriminator": "5478",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:26:52.083000+00:00",
                "edited_timestamp": "2022-03-06T21:31:18.352000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950142079642792036"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950142079642792036",
                "type": 19,
                "content": "Ah, looks like I can use `anchor.setProvider()`, but I need a connection endpoint URL for the connection... unless I'm missing something. Is there a default URL to use, or a way to get one?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "184073368679612416",
                    "username": "Hasturtimesthree",
                    "avatar": "8dcf40e6fc1a89ab112039e9b5ac8ee4",
                    "discriminator": "5478",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:25:24.573000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950113450531643412"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950140504077631489",
                "type": 0,
                "content": "Hi probably a weird question... my program in 1 instruction will init a PDA passed in by a user, in another instruction it will do validation on this PDA, is it possible an attacker could init a PDA without going through my program? Or is a property of a PDA that only my program can init it's own PDAs?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "293578924901007361",
                    "username": "bluemoose",
                    "avatar": "d6e8953a464cbe02f412a639fa1bf2b5",
                    "discriminator": "9396",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T21:19:08.929000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950131023394529370",
                "type": 0,
                "content": "Ok, so I upgraded my version of anchor since apparently it does that automatically now, the error I get now is:\n```  0 passing (47ms)\n  1 failing\n\n  1) stableRead\n       Is initialized!:\n     Error: 3007: The given account is owned by a different program than expected\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:41:28.558000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950128649531703296",
                "type": 0,
                "content": "Where can I find the method findProgramAddressSync?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:32:02.585000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950128559198974052",
                "type": 0,
                "content": "So I'm reading through the discord:\nApparently I need to add the upgradeable cllone too? Like this:\n```const programDataAddress = findProgramAddressSync(\n      \"SQDY9uoDoCbNq7F3HAHYYQZbrUzpKxDtdWLvYcqBLak\",\n      new anchor.web3.PublicKey(\"BPFLoaderUpgradeab1e11111111111111111111111\")\n    )[0];\n\n    console.log(programDataAddress);```\nAnd then add whatever address I get to the anchor toml?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:31:41.048000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950123106838642708",
                "type": 0,
                "content": "The account is https://solscan.io/account/SQDY9uoDoCbNq7F3HAHYYQZbrUzpKxDtdWLvYcqBLak , which has some data so I would expect it to be initialized by my anchor toml",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://solscan.io/account/SQDY9uoDoCbNq7F3HAHYYQZbrUzpKxDtdWLvYcqBLak",
                        "title": "Account SQDY9uoDoCbNq7F3HAHYYQZbrUzpKxDtdWLvYcqBLak",
                        "description": "View transactions, balances and other info of SQDY9uoDoCbNq7F3HAHYYQZbrUzpKxDtdWLvYcqBLak",
                        "color": 16777215,
                        "provider": {
                            "name": "solscan.io"
                        },
                        "thumbnail": {
                            "url": "https://solscan.io/cover-solscan.png",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/KvTApFBWPlhrIiT_EcodnLZQK4cjExp0k8QXm5za5Uc/https/solscan.io/cover-solscan.png",
                            "width": 800,
                            "height": 354
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:10:01.104000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950122813170286622",
                "type": 0,
                "content": "And the error I get after anchor test:\n```  stableRead\nhi\nTransaction simulation failed: Error processing Instruction 0: custom program error: 0xbc4\n    Program Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS invoke [1]\n    Program log: Instruction: Read\n    Program log: Custom program error: 0xbc4\n    Program Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS consumed 2176 of 200000 compute units\n    Program Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS failed: custom program error: 0xbc4\n    1) Is initialized!\n\n\n  0 passing (47ms)\n  1 failing\n\n  1) stableRead\n       Is initialized!:\n     Error: 3012: The program expected this account to be already initialized\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:08:51.088000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950122606420455525",
                "type": 0,
                "content": "This is my testing code:\n```import * as anchor from '@project-serum/anchor';\nimport { Program } from '@project-serum/anchor';\nimport { stableRead } from '../target/types/stableRead';\n\ndescribe('stableRead', () => {\n\n  // Configure the client to use the local cluster.\n  anchor.setProvider(anchor.Provider.env());\n\n  const program = anchor.workspace.StableRead as Program<StableRead>;\n\n  it('Is initialized!', async () => {\n    // Add your test here.\n    console.log(\"hi\");\n    const tx = await program.rpc.read({\n      accounts:{\n        swapInfoAccount:new anchor.web3.PublicKey(\"SQDY9uoDoCbNq7F3HAHYYQZbrUzpKxDtdWLvYcqBLak\")\n      }\n    });\n\n\n    console.log(\"Your transaction signature\", tx);\n  });\n});\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:08:01.795000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950122550141276200",
                "type": 0,
                "content": "anyway to check if the clone is working properly?\nThis is in my anchor.toml:\n```[test.validator]\nurl = \"https://api.mainnet-beta.solana.com\"\n[[test.validator.clone]]\naddress = \"SQDY9uoDoCbNq7F3HAHYYQZbrUzpKxDtdWLvYcqBLak\"```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:07:48.377000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950121949743427604",
                "type": 0,
                "content": "`cluster = \"localnet\"` in my Anchor.toml",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "361214751394758699",
                    "username": "wizardfiction",
                    "avatar": "5df5d9200b9da1a86a81933fd5e913bf",
                    "discriminator": "9475",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:05:25.231000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950121719576801290",
                "type": 0,
                "content": "Trying to run a basic client.js script for my program deployed on localnet. Being told `Error: ANCHOR_PROVIDER_URL is not defined` . `anchor test` works just fine",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "361214751394758699",
                    "username": "wizardfiction",
                    "avatar": "5df5d9200b9da1a86a81933fd5e913bf",
                    "discriminator": "9475",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T20:04:30.355000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950113450531643412",
                "type": 19,
                "content": "How one would generally go about it. I read through https://lorisleiva.com/create-a-solana-dapp-from-scratch/integrating-with-solana-wallets , for instance, but that seems specific to Vue.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "184073368679612416",
                    "username": "Hasturtimesthree",
                    "avatar": "8dcf40e6fc1a89ab112039e9b5ac8ee4",
                    "discriminator": "5478",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://lorisleiva.com/create-a-solana-dapp-from-scratch/integrating-with-solana-wallets",
                        "title": "Integrating with Solana wallets | Create a Solana dApp from scratch",
                        "description": "In this episode, we allow users to connect their wallets within our application. On top of getting additional wallet data in our app, this also allows us to recreate the program object defined by Anchor.",
                        "color": 16777215,
                        "reference_id": "950113450531643412",
                        "provider": {
                            "name": "Loris"
                        },
                        "thumbnail": {
                            "url": "https://lorisleiva.com/img/asset/YXNzZXRzL2FydGljbGVzLzIwMjEvMTEzMC1zb2xhbmEtOC13YWxsZXRzL2VwaXNvZGUtOC1jb3Zlci5qcGc=?p=seo_pro_og&s=fbecefce7bebad6728dd2e6fea13c2fc",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/_Gb4f5zqW_sk2TRy9-KudMfV_JOD_gKoeRRZfGRwTyo/%3Fp%3Dseo_pro_og%26s%3Dfbecefce7bebad6728dd2e6fea13c2fc/https/lorisleiva.com/img/asset/YXNzZXRzL2FydGljbGVzLzIwMjEvMTEzMC1zb2xhbmEtOC13YWxsZXRzL2VwaXNvZGUtOC1jb3Zlci5qcGc%3D",
                            "width": 1200,
                            "height": 630
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T19:31:38.861000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950009461978849340"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "950107479738581052",
                "type": 0,
                "content": "If I have a function that looks like this:\n```\npub fn initialize_token_acct(ctx: Context<InitializeTokenAcct>) -> ProgramResult {\n    msg!(\"Transferring tokens from: {:?}\", ctx.accounts.token_acct.key());\n    msg!(\"To: {:?}\", ctx.accounts.escrowed_token_acct.key());\n\n    let cpi_accounts = token::Transfer {\n        from: ctx.accounts.token_acct.to_account_info(),\n        to: ctx.accounts.escrowed_token_acct.to_account_info(),\n        authority: ctx.accounts.acct_authority.to_account_info()\n    };\n\n    let cpi_program = ctx.accounts.token_program.to_account_info();\n    let cpi_mint_tx = CpiContext::new(cpi_program, cpi_accounts);\n    \n    token::transfer(cpi_mint_tx, 1)?;\n\n    Ok(())\n}\n\n#[derive(Accounts)]\npub struct InitializeTokenAcct<'info> {\n    #[account(mut)]\n    pub token_acct: Account<'info, TokenAccount>,\n    #[account(mut)]\n    pub token_mint: Account<'info, Mint>,\n    #[account(signer)]\n    pub acct_authority: AccountInfo<'info>,\n    pub token_program: AccountInfo<'info>,\n    // This is where we'll store the offer maker's tokens.\n    #[account(\n        init,\n        payer = payer,\n        seeds = [token_acct.mint.as_ref()],\n        bump,\n        token::mint = token_mint,\n        token::authority = escrowed_token_acct,\n    )]\n    pub escrowed_token_acct: Account<'info, TokenAccount>,\n    #[account(mut)]\n    pub payer: Signer<'info>,\n    pub system_program: Program<'info, System>,\n    pub rent: Sysvar<'info, Rent>\n}\n```\n\nBut I want to set a constraint that this can only be run for a select set of token/mint addresses, what's the best way for me to do this? The approaches I see are:\n\n1/ Keep a static list of mint addresses and do a check at the beginning of `initialize_token_acct` to see if the token/mint accounts passed are included in that static list. If not, terminate early\n\n2/ On the client side, keep that static list, and don't make the program rpc call if the token/mint accounts aren't in that list",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T19:07:55.313000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "950099554332721193",
                "type": 19,
                "content": "You have to use that pubkey address and then pass it as an account to your program when you invoke it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "885700477759651841",
                        "username": "epapsiou",
                        "avatar": null,
                        "discriminator": "9726",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-06T18:36:25.749000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "950092921980473385"
                },
                "hit": true
            }
        ]
    ],
    "analytics_id": "c524f5aa20ee83f6ce8c7ef3d4089e90"
}