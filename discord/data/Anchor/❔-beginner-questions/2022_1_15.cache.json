{
    "total_results": 58,
    "messages": [
        [
            {
                "id": "931964371469484052",
                "type": 19,
                "content": "thanks - yes - but in the case of a wallet -turns out its going to be owned by the system program - so address is fine for what i'm doing",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "915682383905316864",
                        "username": "man0s",
                        "avatar": "5db087ee6a952e5be7da6b90f06b8585",
                        "discriminator": "8230",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T17:33:41.219000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931963800838602782"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "931963800838602782",
                "type": 19,
                "content": "I believe this does not check anything about ownership, but just that the account address equals your hardcoded value",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "915682383905316864",
                    "username": "man0s",
                    "avatar": "5db087ee6a952e5be7da6b90f06b8585",
                    "discriminator": "8230",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "569289717582135296",
                        "username": "goodgoblin",
                        "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                        "discriminator": "8349",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T17:31:25.170000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931953204109926431"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "931963712930185226",
                "type": 0,
                "content": "and doing an init_if_needed. How much space do I need to specify?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T17:31:04.211000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931963659423473765",
                "type": 0,
                "content": "Im specifying a Account<'info, TokenAccount> for one of my instructions",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "283811168085344258",
                    "username": "relena",
                    "avatar": "a6a8c32f3e716a652e2f8061bb85133c",
                    "discriminator": "3744",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T17:30:51.454000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931958677739540490",
                "type": 0,
                "content": "it seems like \"TokenAccount\"s aren't owned by wallets either - they are owned by the Token program - so i guess they are PDAs too",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T17:11:03.728000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931953204109926431",
                "type": 0,
                "content": "ok yes that worked \ud83d\ude42  - using \"address\" instead of owner\n`#[account(address = Pubkey::from_str(\"MYHARDCODEDKEY\").unwrap())]\nuser: Signer<'info>,`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T16:49:18.713000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931952692291600485",
                "type": 0,
                "content": "oh wait ... its a wallet address thats why its not working b/c its owned by the system, nvm",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T16:47:16.686000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931952330960683068",
                "type": 0,
                "content": "is there an easy way to use a constraint that a specific key owns an account ?  i.e. a hardcoded one?  \nI'm trying this, but it doesn't appear to work - \n`#[account(owner = Pubkey::from_str(\"MYHARDCODEDKEY\").unwrap())]\nuser: Signer<'info>,`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T16:45:50.538000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931943006427312159",
                "type": 19,
                "content": "Why not Pyth?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "370923897643597825",
                        "username": "Juna",
                        "avatar": "50879709a567aa7671753e1b38b699c9",
                        "discriminator": "9185",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T16:08:47.396000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931933970193600622"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "931933970193600622",
                "type": 0,
                "content": "Does it mean there are no programs for Chainlink deployed at mainnet but only for devenet? https://docs.chain.link/docs/solana/data-feeds-solana/#Solana%20Devnet",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "370923897643597825",
                    "username": "Juna",
                    "avatar": "50879709a567aa7671753e1b38b699c9",
                    "discriminator": "9185",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://docs.chain.link/docs/solana/data-feeds-solana/",
                        "title": "Solana Feeds | Chainlink Documentation",
                        "thumbnail": {
                            "url": "https://files.readme.io/8dc5d76-cl.png",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/M-I-Os1U_TIkORirtVhIf6G3r4iqVrLS4dR87R3NiEI/https/files.readme.io/8dc5d76-cl.png",
                            "width": 1459,
                            "height": 1459
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:32:52.990000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931933402729422878",
                "type": 0,
                "content": "but maybe yeah if you only want the program to be an owner of something -- you don't need to actually create that address first?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:30:37.696000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931933278326366268",
                "type": 0,
                "content": "I think the init approach is if you need to store data at the PDA address",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:30:08.036000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931933046628839464",
                "type": 0,
                "content": "i mean - I could be wrong \ud83d\ude42 -i 'm looking through the anchor examples -- there is this :\n`        let (pda, _bump_seed) = Pubkey::find_program_address(&[ESCROW_PDA_SEED], ctx.program_id);\n        token::set_authority(ctx.accounts.into(), AuthorityType::AccountOwner, Some(pda))?;\n`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:29:12.795000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931932363720654939",
                "type": 0,
                "content": "Aha, i see. so in the famous escrow one i use pda as a stateless address (just to be owner of something and later signs it). So.. I assume it's not doable anchor way. \nThanks.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:26:29.977000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931932063379111956",
                "type": 0,
                "content": "i.e. you pass the key for PDA you generated into the function and then the program will make the PDA account that way via init",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:25:18.370000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931931855291285544",
                "type": 0,
                "content": "if you want to use anchor for it -- yeah -- you just do \n`#[account(init, seeds = [etc etc )]\nfamous_escrow_pda_account: Account<'info, FamousEscrowState>,`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:24:28.758000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931930937237839913",
                "type": 19,
                "content": "Any otherway to create pda?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "569289717582135296",
                        "username": "goodgoblin",
                        "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                        "discriminator": "8349",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:20:49.877000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931930764256354305"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "931930898658639914",
                "type": 0,
                "content": "aha, my pda is simply a pubkey. created using Pubkey::find_program_address...",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:20:40.679000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931930764256354305",
                "type": 0,
                "content": "ok - you can pass a PDA as AccountInfo - it should work fine",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:20:08.635000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931929842520322170",
                "type": 19,
                "content": "(trying to do famous escrow myself, i want to assign pda as owner of a token account, I could do it manually myself however using anchor-spl requires accountInfo)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "569289717582135296",
                        "username": "goodgoblin",
                        "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                        "discriminator": "8349",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:16:28.876000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931927934195884092"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "931927934195884092",
                "type": 0,
                "content": "^^ what context are you trying to use it in?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "569289717582135296",
                    "username": "goodgoblin",
                    "avatar": "38c4a1c414c2690b3b6bbe4583a99a63",
                    "discriminator": "8349",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T15:08:53.896000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931919341883105280",
                "type": 0,
                "content": "(i know we can create pda account using macro but i want empty account for just handling ownership)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T14:34:45.329000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931918412521832488",
                "type": 0,
                "content": "Hi,\n\nIs there anyway to convert pda pubkey to account info? (I used pubkey::find...) Or is there any anchor way to create it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T14:31:03.752000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931902295464091670",
                "type": 0,
                "content": "Thank you",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "908560543990837298",
                    "username": "imxelectro",
                    "avatar": "1a6953fad7835e54e2f57de3675790b0",
                    "discriminator": "0546",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T13:27:01.146000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931900429753810994",
                "type": 0,
                "content": "welcome <@!908560543990837298> ser",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "717956950737813594",
                    "username": "0xDeep",
                    "avatar": "a3644875c3375e839010db1ed0f04bf4",
                    "discriminator": "8581",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "908560543990837298",
                        "username": "imxelectro",
                        "avatar": "1a6953fad7835e54e2f57de3675790b0",
                        "discriminator": "0546",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T13:19:36.326000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931899948881027142",
                "type": 0,
                "content": "Hello, im just new",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "908560543990837298",
                    "username": "imxelectro",
                    "avatar": "1a6953fad7835e54e2f57de3675790b0",
                    "discriminator": "0546",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T13:17:41.677000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931895839448768512",
                "type": 0,
                "content": "How to generate rust clienet?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "796268344822071306",
                    "username": "synthnew",
                    "avatar": null,
                    "discriminator": "2053",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T13:01:21.912000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931893945397555210",
                "type": 0,
                "content": "I tried to manually serialize the parameters and adding necessary accounts to build a transaction but I guess I am missing something",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "796268344822071306",
                    "username": "synthnew",
                    "avatar": null,
                    "discriminator": "2053",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T12:53:50.335000+00:00",
                "edited_timestamp": "2022-01-15T12:54:19.342000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931893831643828225",
                "type": 0,
                "content": "Hi!\n\nHow can I generate the Instructions that I can use for builind transactions from an Anchor project?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "796268344822071306",
                    "username": "synthnew",
                    "avatar": null,
                    "discriminator": "2053",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T12:53:23.214000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931880275271626813",
                "type": 0,
                "content": "``` Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0``` \nwith this error for 2nd attempt to create",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:59:31.123000+00:00",
                "edited_timestamp": "2022-01-15T12:00:11.782000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931880150176530452",
                "type": 0,
                "content": "this is what I tried to test with",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:59:01.298000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931880082237173781",
                "type": 0,
                "content": "```describe('these words will appear before tests', () => {\n  const SolanaNetworkLocalConnection = anchor.Provider.local();\n  anchor.setProvider(SolanaNetworkLocalConnection);\n\n  const SignerTestID = anchor.web3.Keypair.generate();\n  const ProgramID = anchor.workspace.Thisistheprogramname; //first letter of program name has to be CAPITAL for some reason\n\n  it('create - this is the name of test', async () => {\n    await ProgramID.rpc.createfunctionname(\"pass this text into function to test\", {\n      accounts: {\n        nameofaccount: SignerTestID.publicKey,\n        user: SolanaNetworkLocalConnection.wallet.publicKey,\n        systemProgram: SystemProgram.programId,\n      },\n      signers: [SignerTestID]\n    });\n\n    const DataStructAccount = await ProgramID.account.nameofDataStruct.fetch(SignerTestID.publicKey);  //nameofDataStruct is Data struct account, first letter has to be lowercase for some reason\n\n    assert.ok(DataStructAccount.words === \"pass this text into function to test\");\n    _variable = SignerTestID;\n  });\n\n  it('create again - this is the name of test', async () => {\n    await ProgramID.rpc.createfunctionname(\"pass this text into function to test\", {\n      accounts: {\n        nameofaccount: SignerTestID.publicKey,\n        user: SolanaNetworkLocalConnection.wallet.publicKey,\n        systemProgram: SystemProgram.programId,\n      },\n      signers: [SignerTestID]\n    });\n\n    const DataStructAccount = await ProgramID.account.nameofDataStruct.fetch(SignerTestID.publicKey);  //nameofDataStruct is Data struct account, first letter has to be lowercase for some reason\n\n    assert.ok(DataStructAccount.words === \"pass this text into function to test\");\n    _variable = SignerTestID;\n  });\n\n});```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:58:45.100000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931879332434022410",
                "type": 0,
                "content": "Or maybe I'm not testing it correctly",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:55:46.333000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931878961171034142",
                "type": 0,
                "content": "It seems like I can only call it once right now",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:54:17.817000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931878717427437568",
                "type": 0,
                "content": "What would I need to change if I want to call the \"createfunctionname\" multiple times to create different Data Accounts?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:53:19.704000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931878537315614760",
                "type": 0,
                "content": "```use anchor_lang::prelude::*;\n\ndeclare_id!(\"Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS\");\n\n#[program]  \npub mod thisistheprogramname {\n    use super::*;\n\n    pub fn createfunctionname(ctx:Context<NameOfCreateStruct>, init_message: String) -> ProgramResult {\n        let test = &mut ctx.accounts.nameofaccount;\n        test.words = init_message;\n        Ok(())\n\n    }\n}\n\n#[derive(Accounts)]\npub struct NameOfCreateStruct<'info> {\n    #[account(init, payer = user, space = 8 + 64 + 64 + 64 + 64)]\n    pub nameofaccount: Account<'info, NameofDataStruct>,\n    #[account(mut)]\n    pub user: Signer<'info>,\n    pub system_program: Program<'info, System>,\n}\n\n}\n\n#[account]\npub struct NameofDataStruct {\n    pub words: String,\n    pub result: i64,\n}\n\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:52:36.762000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931868093276377098",
                "type": 0,
                "content": "~~Why isn't my `memcmp` filter not working? Printing out everything without a filter I can see that the account I'm looking for is definitely there:\n```\n        const states = await program.account.contentState.all([\n            {\n                memcmp: {\n                    offset: 8 + 2 + 8 + 32,\n                    bytes: ownerMint.toBase58()\n                }\n            }\n        ]);\n```\nMy account struct looks like this:\n```\n#[account]\npub struct ContentState {\n    pub bump: u8,\n    pub price: u64,\n    pub currency_mint: Pubkey,\n    pub ownership_mint: Pubkey,\n    pub viewership_mint: Pubkey,\n}\n```~~\nOkay that was dumb wrong offset",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "474851811422109701",
                    "username": "Doomdoom",
                    "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                    "discriminator": "7145",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T11:11:06.709000+00:00",
                "edited_timestamp": "2022-01-15T11:15:20.346000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931846208224387092",
                "type": 0,
                "content": "How can I transfer some custom tokens from one wallet to another in my ts tests? This seams like it should be easy, but I cant seam to work this out.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341381788620423168",
                    "username": "utx0_",
                    "avatar": "9d9ba5056960dab985f4fec61f07dbd6",
                    "discriminator": "4298",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T09:44:08.906000+00:00",
                "edited_timestamp": "2022-01-15T09:54:33.864000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931835791511019530",
                "type": 0,
                "content": "Hey, I am sketching out a solana program based on an ETH smart contract. One thing I've been wondering about:\nHow do programs in solana generally keep track of global values, say the list of all players that participated in a specific raffle (dumb example). I don't really want a \"raffle player list\" account since it would have to be passed every time someone participates in a raffle, limiting concurrency. Do programs generally track this stuff offchain?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "258256929934016512",
                    "username": "rhia",
                    "avatar": "ad54ad71347230aa7c68f4d2789bc6c3",
                    "discriminator": "6705",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T09:02:45.368000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931819731135115264",
                "type": 0,
                "content": "nvm, Clients can't sign for PDAs (only your program can)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T07:58:56.276000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931819602990759947",
                "type": 0,
                "content": "how do i sign for a pda?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T07:58:25.724000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931788293165682738",
                "type": 0,
                "content": "to_account_owner is defined as simply wallet.publicKey in the client",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T05:54:00.880000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931786660771950662",
                "type": 0,
                "content": "Hey guys, I want to transfer some sol from my program_account to a user wallet inside a smart contract. \n`\n        let program_account = &mut ctx.accounts.program_account;\n        let to_account = &mut ctx.accounts.to_account_owner;\n        **program_account.try_borrow_mut_lamports()? -= final_amount;\n        **to_account.try_borrow_mut_lamports()? += final_amount;`\n\nIs this correct or am i missing something?\nprogram_account is owned by the executing program and to_account_owner is a user wallet owned by the system program\nUpon running this I get the error:\n`Error: 168: Program ID was not as expected`\nWhat am I doing wrong?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341992802265202699",
                    "username": "NAK1998",
                    "avatar": null,
                    "discriminator": "6602",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T05:47:31.687000+00:00",
                "edited_timestamp": "2022-01-15T05:50:14.980000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931785189099712542",
                "type": 0,
                "content": "So we wrote some tests for this fn - https://github.com/Triptych-Labs/goki/blob/9e61dcb171382a2ba0433761aeffd92147d05a85/programs/smart-wallet/src/lib.rs#L575\n\nTest - https://github.com/whymidnight/steakhouse/blob/f93f4a0a1bdcac0506bac4b8350c0b65100f6490/src/staking/tests/unwidthdraw/unwithdraw.go#L156\n\nBut when we ported the process to our React app, `@solana/web3.js` would either complain about wrong seeds or CPI escalation. Anyone mind helping my team out? A SOL is on the table \ud83d\ude42",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891038057187409980",
                    "username": "whymidnight | Triptych Labs",
                    "avatar": "22d9282dd3ab7aca50fd38892a6d5ab2",
                    "discriminator": "0710",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/Triptych-Labs/goki/blob/9e61dcb171382a2ba0433761aeffd92147d05a85/programs/smart-wallet/src/lib.rs",
                        "title": "goki/lib.rs at 9e61dcb171382a2ba0433761aeffd92147d05a85 \u00b7 Triptych-...",
                        "description": "A suite of programs for Solana key management and security. - goki/lib.rs at 9e61dcb171382a2ba0433761aeffd92147d05a85 \u00b7 Triptych-Labs/goki",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/ba239c611d0cb38f00bef193326afea239b7fd95279dfa5c2e04ae1483689f20/Triptych-Labs/goki",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/rrOlICEtRoAh4eXKoDPL3x9ZZ4EDld9drtJ1n7iMyCs/https/opengraph.githubassets.com/ba239c611d0cb38f00bef193326afea239b7fd95279dfa5c2e04ae1483689f20/Triptych-Labs/goki",
                            "width": 1200,
                            "height": 600
                        }
                    },
                    {
                        "type": "article",
                        "url": "https://github.com/whymidnight/steakhouse/blob/f93f4a0a1bdcac0506bac4b8350c0b65100f6490/src/staking/tests/unwidthdraw/unwithdraw.go",
                        "title": "steakhouse/unwithdraw.go at f93f4a0a1bdcac0506bac4b8350c0b65100f649...",
                        "description": "A Grill for Solana. Contribute to whymidnight/steakhouse development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/1e21cf83635ea90097c4d4450f688372688f14d9bbf6cf444c7fd54e379c0a7b/whymidnight/steakhouse",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/4sYtqC4NlSFqxh0TmZZxtz6l5jv5u9CSoXrejhYB0oY/https/opengraph.githubassets.com/1e21cf83635ea90097c4d4450f688372688f14d9bbf6cf444c7fd54e379c0a7b/whymidnight/steakhouse",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T05:41:40.813000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931768939707514880",
                "type": 0,
                "content": "Very basic question - how do I log in an anchor program? I see solana uses the `msg!` macro but going through the examples (https://github.com/project-serum/anchor/tree/master/examples/tutorial) I see no mention of logging on the rust side of things",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "456226577798135808",
                    "username": "Deleted User",
                    "avatar": null,
                    "discriminator": "0000",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/project-serum/anchor/tree/master/examples/tutorial",
                        "title": "anchor/examples/tutorial at master \u00b7 project-serum/anchor",
                        "description": "\u2693 Solana Sealevel Framework. Contribute to project-serum/anchor development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/de1d487ae6c76120b8713bc9298d9d156c7d40750be56496fdac166004a040ef/project-serum/anchor",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/hRyarQRZ6I5XoB4INSO8ykHmGnAeIsWheJsMWbMdUPE/https/opengraph.githubassets.com/de1d487ae6c76120b8713bc9298d9d156c7d40750be56496fdac166004a040ef/project-serum/anchor",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T04:37:06.656000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931728968581791794",
                "type": 0,
                "content": "If a transactions is signed by a sender sending lamports, can the instructions of the transaction call a program owned by the receiver (who has authority over program to be called) but who has not signed the transaction because they are only receiving lamports? Or will the receiver also have the sign the transaction if the receiver wants the transaction instruction to call a program owned by the receiver?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T01:58:16.797000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931722415371874324",
                "type": 0,
                "content": "if anyone got \"Error: 3007: The given account is owned by a different program than expected 0000\"   then make sure in program lib.rs declare_id!(xxxx)  is same as \"solana program deploy path/to/app.so\"  return",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "709719196816375829",
                    "username": "Matoo",
                    "avatar": null,
                    "discriminator": "2047",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-15T01:32:14.390000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931684840217141288",
                "type": 19,
                "content": "sounds out of my scope rn :/",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "669837238816735242",
                    "username": "Kane Labs",
                    "avatar": "a35884cf9dd4148022cfd39179ca09fc",
                    "discriminator": "5144",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T23:02:55.775000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931680743351005225"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "931680743351005225",
                "type": 19,
                "content": "Sort of\u2014you'd have to encode them into the cpi instruction's own data.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "669837238816735242",
                        "username": "Kane Labs",
                        "avatar": "a35884cf9dd4148022cfd39179ca09fc",
                        "discriminator": "5144",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T22:46:39.006000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931670618036903956"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "931670618036903956",
                "type": 0,
                "content": "Can you pass instructions into a cpi?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "669837238816735242",
                    "username": "Kane Labs",
                    "avatar": "a35884cf9dd4148022cfd39179ca09fc",
                    "discriminator": "5144",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T22:06:24.943000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931637954907082753",
                "type": 0,
                "content": "now getting \"Error: 3007: The given account is owned by a different program than expected 0000\"",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "709719196816375829",
                    "username": "Matoo",
                    "avatar": null,
                    "discriminator": "2047",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:56:37.446000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931635930773741608",
                "type": 0,
                "content": "the pub struct is the structure that I can consult from web3 to my contract?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "434154759923171329",
                    "username": "jbrice",
                    "avatar": "9feaa823bd1d00d630611b038e0d978e",
                    "discriminator": "5383",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:48:34.855000+00:00",
                "edited_timestamp": "2022-01-14T19:48:41.690000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931635729048678410",
                "type": 0,
                "content": "hi i have a noob question",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "434154759923171329",
                    "username": "jbrice",
                    "avatar": "9feaa823bd1d00d630611b038e0d978e",
                    "discriminator": "5383",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:47:46.760000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931630780512354304",
                "type": 0,
                "content": "I want to do staking with my token. So they will stake 1 NFT + Token A, and they will get Token B as a reward with the amount scaling based on NFT rarity. Is this something I can do using Anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "182296047052259338",
                    "username": "Shishka",
                    "avatar": "547b7d22305da89c2bfbcb4fde9794cd",
                    "discriminator": "0747",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:28:06.937000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931627585325117490",
                "type": 0,
                "content": "<@!134416332509675520> fyi got it working, wasn't passing in mut on the containing context",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "669837238816735242",
                    "username": "Kane Labs",
                    "avatar": "a35884cf9dd4148022cfd39179ca09fc",
                    "discriminator": "5144",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:15:25.145000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931624699425882193",
                "type": 0,
                "content": "thanks a lot",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "709719196816375829",
                    "username": "Matoo",
                    "avatar": null,
                    "discriminator": "2047",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:03:57.093000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931624681411317831",
                "type": 0,
                "content": "thanks i just found it from there",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "709719196816375829",
                    "username": "Matoo",
                    "avatar": null,
                    "discriminator": "2047",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:03:52.798000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "931624151431655474",
                "type": 19,
                "content": "Maybe I'm not understanding the question, but do you not get what you need from /target/types?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "732815411808174111",
                    "username": "Magnum6",
                    "avatar": "68d19cdda4a005e9231d3c460b9ab720",
                    "discriminator": "6523",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "709719196816375829",
                        "username": "Matoo",
                        "avatar": null,
                        "discriminator": "2047",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-14T19:01:46.441000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "931591182675476611"
                },
                "hit": true
            }
        ]
    ],
    "analytics_id": "5bca308cc412aa204add321b5f49a7cc"
}