{
    "total_results": 84,
    "messages": [
        [
            {
                "id": "953713184118800394",
                "type": 0,
                "content": "Hey , so i have been writing tests for testing the record program in Anchor. So I wrote a test to check for the initialization of the record account so im facing this error -\n\nhttps://github.com/Anurag5086/record-anchor/blob/master/tests/record-anchor.ts\n\nthis is the test which i have written",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "546187565682786320",
                    "username": "AnuraGG",
                    "avatar": "82dd42c0fecb1c80869423422027f815",
                    "discriminator": "0610",
                    "public_flags": 128
                },
                "attachments": [
                    {
                        "id": "953713184236261386",
                        "filename": "unknown.png",
                        "size": 158562,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/953713184236261386/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/953713184236261386/unknown.png",
                        "width": 1266,
                        "height": 617,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T17:55:42.228000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953712434554765402",
                "type": 0,
                "content": "Hey guys! Is it possible to write the typescript client code in javascript? Would there be any major issues?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "932665458690244619",
                    "username": "Philippe Chevalier",
                    "avatar": null,
                    "discriminator": "9854",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T17:52:43.518000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953693895034826762",
                "type": 19,
                "content": "https://github.com/project-serum/anchor/issues/1002",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/project-serum/anchor/issues/1002",
                        "title": "Can't provide Program with idl.json \u00b7 Issue #1002 \u00b7 project-serum/a...",
                        "description": "when using `import idl from &quot;./idl.json&quot;; new Program(idl, programID, provider) it is throwing the following error: Argument of type &#39;{ version: string; name: string; inst...",
                        "color": 1975079,
                        "reference_id": "953693895034826762",
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/7aed6fb36b86fa24409bb3e038632d7af3a27480430847804ae5b015f662a6b0/project-serum/anchor/issues/1002",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/szsGS-kuJBRp1Yy6rBb0POZ4_grh_-_iVChI-XclJUE/https/opengraph.githubassets.com/7aed6fb36b86fa24409bb3e038632d7af3a27480430847804ae5b015f662a6b0/project-serum/anchor/issues/1002",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T16:39:03.352000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953689938761769010"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953689938761769010",
                "type": 19,
                "content": "I tried creating it with just one instruction that had an `args` property in the object that gets created from idl.json of:\n```\n      \"args\": [\n        {\n          \"name\": \"data\",\n          \"type\": {\n            \"defined\": \"AdminSettings\"\n          }\n        }\n      ]\n```\nand am getting:\n```\nType '{ name: string; accounts: ({ name: string; isMut: boolean; isSigner: boolean; pda?: undefined; } | { name: string; isMut: boolean; isSigner: boolean; pda: { seeds: { kind: string; type: string; path: string; }[]; }; })[]; args: { ...; }[]; } | { ...; } | { ...; }' is not assignable to type 'IdlInstruction'.\n  Type '{ name: string; accounts: ({ name: string; isMut: boolean; isSigner: boolean; pda?: undefined; } | { name: string; isMut: boolean; isSigner: boolean; pda: { seeds: { kind: string; type: string; path: string; }[]; }; })[]; args: { ...; }[]; }' is not assignable to type 'IdlInstruction'.\n    Types of property 'args' are incompatible.\n      Type '{ name: string; type: string; }[]' is not assignable to type 'IdlField[]'.\n        Type '{ name: string; type: string; }' is not assignable to type 'IdlField'.\n          Types of property 'type' are incompatible.\n            Type 'string' is not assignable to type 'IdlType'\n```\nbut if I look at `IdlType` it includes \"string\" as one of the allowable types.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T16:23:20.103000+00:00",
                "edited_timestamp": "2022-03-16T16:26:00.929000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953669677064790117"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953671507819765870",
                "type": 19,
                "content": "so the signers can be an array then within any given instruction? crazy",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T15:10:05.824000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953667513919602709"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953669677064790117",
                "type": 0,
                "content": "```js\nimport idl from '../../target/idl/idl.json';\nconst program = new Program(idl, programID, provider);\n```\nis saying:\n```\nArgument of type '{ version: string; name: string; instructions: ({ name: string; accounts: ({ name: string; isMut: boolean; isSigner: boolean; pda?: undefined; } | { name: string; isMut: boolean; isSigner: boolean; pda: { ...; }; })[]; args: { ...; }[]; } | { ...; } | { ...; })[]; accounts: ({ ...; } | { ...; })[]; types: ({ ...; } ...' is not assignable to parameter of type 'Idl'.\n  Types of property 'instructions' are incompatible.\n    Type '({ name: string; accounts: ({ name: string; isMut: boolean; isSigner: boolean; pda?: undefined; } | { name: string; isMut: boolean; isSigner: boolean; pda: { seeds: { kind: string; type: string; path: string; }[]; }; })[]; args: { ...; }[]; } | { ...; } | { ...; })[]' is not assignable to type 'IdlInstruction[]'.\n      Type '{ name: string; accounts: ({ name: string; isMut: boolean; isSigner: boolean; pda?: undefined; } | { name: string; isMut: boolean; isSigner: boolean; pda: { seeds: { kind: string; type: string; path: string; }[]; }; })[]; args: { ...; }[]; } | { ...; } | { ...; }' is not assignable to type 'IdlInstruction'.\n        Type '{ name: string; accounts: ({ name: string; isMut: boolean; isSigner: boolean; pda?: undefined; } | { name: string; isMut: boolean; isSigner: boolean; pda: { seeds: { kind: string; type: string; path: string; }[]; }; })[]; args: { ...; }[]; }' is not assignable to type 'IdlInstruction'.\n          Types of property 'args' are incompatible.\n            Type '{ name: string; type: string; }[]' is not assignable to type 'IdlField[]'.\n              Type '{ name: string; type: string; }' is not assignable to type 'IdlField'.\n```\nHow do I read the idl.json into the Idl type?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T15:02:49.338000+00:00",
                "edited_timestamp": "2022-03-16T15:42:00.444000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953669619401510922",
                "type": 0,
                "content": "I want to create a vault where users can deposit spl (farm / lp) tokens with the \"claim\" method which will harvest rewards and transfer them to the address / charities, can you recommend me some place/libs to start ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "460753135187787777",
                    "username": "MarekZ",
                    "avatar": "5587a9ebc0a0431d1714922bbb01dd52",
                    "discriminator": "4002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T15:02:35.590000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953667513919602709",
                "type": 19,
                "content": "no",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:54:13.604000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953664745523806238"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953664796874637382",
                "type": 0,
                "content": "like in ethereum",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:43:25.810000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953664745523806238",
                "type": 0,
                "content": "solana question: each transaction can only have 1 signing account right?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:43:13.567000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953664278320283668",
                "type": 19,
                "content": "the tests folder in the anchor repo is your friend: https://github.com/project-serum/anchor/tree/master/tests",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "792844631653351445",
                        "username": "time-averaged",
                        "avatar": "e7828d1ae5e39436c55ca6966c11f12f",
                        "discriminator": "7212",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:41:22.177000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953658641850957824"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953662512476332053",
                "type": 0,
                "content": "thx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:34:21.167000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953662450857812008",
                "type": 19,
                "content": "You're gonna need to give the rust book a read probably: https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:34:06.476000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953662346088292392"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953662346088292392",
                "type": 0,
                "content": "ok, what does .unwrap() do, is like an evaluation?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:33:41.497000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953662188416028742",
                "type": 0,
                "content": "It seems to be returning a Result, not an Instruction, so you probably need to add a `?` at the end, or an `.unwrap()` if you're lazy",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:33:03.905000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953662046937972736",
                "type": 0,
                "content": "Do you have your editor set up to give you type information like that?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:32:30.174000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953661985743073310",
                "type": 19,
                "content": "Check what the actual return type is of that function call",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:32:15.584000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953660875187814430"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953661936657137664",
                "type": 19,
                "content": "Thanks!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "792844631653351445",
                    "username": "time-averaged",
                    "avatar": "e7828d1ae5e39436c55ca6966c11f12f",
                    "discriminator": "7212",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "689817175900291093",
                        "username": "Pouya | qPools",
                        "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                        "discriminator": "0701",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:32:03.881000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953659179703353455"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953661358916915292",
                "type": 0,
                "content": "yeah, I'm using anchor for some things too, still learning rust though",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:29:46.137000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953661222081921034",
                "type": 19,
                "content": "I've used some stuff from ```stable_swap_anchor```, it's probably easier to work with if you're using anchor \ud83d\udc4d",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "689817175900291093",
                    "username": "Pouya | qPools",
                    "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                    "discriminator": "0701",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:29:13.513000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953661034953080862"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953661034953080862",
                "type": 0,
                "content": "Are you familiar with saber?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:28:28.898000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953661007987900456",
                "type": 0,
                "content": "I'm gonna try that ^",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:28:22.469000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953660875187814430",
                "type": 0,
                "content": "I'm just trying to get a feel for solana/rust, using the saber library.\nRight now I'm just trying to get a failing transaction calling pause() on it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:27:50.807000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953660612058185799",
                "type": 19,
                "content": "you probably want to import \n```\nuse anchor_lang::{\n    \n    solana_program::instruction::{Instruction},\n};\n```\nThen \n```\nlet ix = Instruction {\n//program_id,\n//accountstuff,\n//data_stuff\n};\n```\nI might be able to help out more if you tell me what you're actually trying to do with saber haha",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "689817175900291093",
                    "username": "Pouya | qPools",
                    "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                    "discriminator": "0701",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "949720152583315527",
                        "username": "pq",
                        "avatar": null,
                        "discriminator": "3313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:26:48.072000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953659668822118471"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953659668822118471",
                "type": 0,
                "content": "quick question:\n```\nstable_swap::instruction::pause(\n            &c.arber.pubkey(),\n            &c.payer.pubkey(),\n            )\n```\nI'm trying to use the above to generate an instruction to execute but I get this error:\n```error[E0308]: mismatched types\n  --> src/main.rs:43:11\n   |\n43 |           &[stable_swap::instruction::pause(\n   |  ___________^\n44 | |             &c.arber.pubkey(),\n45 | |             &c.payer.pubkey(),\n46 | |         )\n   | |_________^ expected struct `Instruction`, found enum `Result`\n   |\n   = note: expected struct `Instruction`\n                found enum `Result<Instruction, ProgramError>```\nHow do I get the instruction from the enum? I don't know enough rust lol.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:23:03.187000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953659179703353455",
                "type": 19,
                "content": "learning by doing is probably the best way. Also look through other project's source code if they're public. Metaplex, Saber, marinade-finance for example",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "689817175900291093",
                    "username": "Pouya | qPools",
                    "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                    "discriminator": "0701",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "792844631653351445",
                        "username": "time-averaged",
                        "avatar": "e7828d1ae5e39436c55ca6966c11f12f",
                        "discriminator": "7212",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:21:06.572000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953658641850957824"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953658641850957824",
                "type": 0,
                "content": "Hello everyone! I am new to solana and have some background with Rust. How would you recommend I get started with Anchor? I've checked out the Anchor Book but it seems limited in scope.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "792844631653351445",
                    "username": "time-averaged",
                    "avatar": "e7828d1ae5e39436c55ca6966c11f12f",
                    "discriminator": "7212",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:18:58.338000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953658164270743632",
                "type": 0,
                "content": "0xbbb",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "743130416801775687",
                    "username": "Pratik Saria",
                    "avatar": "151645363bee25185278d6479cf94256",
                    "discriminator": "4324",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:17:04.474000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953654454941528124",
                "type": 19,
                "content": "Think you want to use https://solana-labs.github.io/wallet-adapter/modules/_solana_wallet_adapter_react.html#useAnchorWallet instead",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://solana-labs.github.io/wallet-adapter/modules/_solana_wallet_adapter_react.html",
                        "title": "@solana/wallet-adapter-react |",
                        "description": "Documentation for",
                        "reference_id": "953654454941528124"
                    }
                ],
                "mentions": [
                    {
                        "id": "533682398903402497",
                        "username": "Caleb",
                        "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                        "discriminator": "9071",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T14:02:20.101000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953652869985353782"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953652869985353782",
                "type": 19,
                "content": "Thanks, trying to hook that up like:\n```js\n    const { wallet } = useWallet();\n\n    async function getProvider(): Promise<Provider | null> {\n        if (wallet) {\n            const network = \"http://127.0.0.1:8899\";\n            const connection = new Connection(network, \"confirmed\");\n\n            const provider = new Provider(\n                connection, wallet, opts.preflightCommitment,\n            );\n            return provider;\n        } else {\n            return null;\n        }\n\n    };\n```\nbut getting\n```\nArgument of type 'import(\"\").Wallet' is not assignable to parameter of type 'import(\"/home/caleb/projects/mediamarket/node_modules/@project-serum/anchor/dist/cjs/provider\").Wallet'.\n  Type 'Wallet' is missing the following properties from type 'Wallet': signTransaction, signAllTransactions, publicKey\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "350632015852208140",
                        "username": "David | qPools",
                        "avatar": "19a8155e98df3f78d7a10548bc202b78",
                        "discriminator": "3335",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T13:56:02.218000+00:00",
                "edited_timestamp": "2022-03-16T13:56:40.213000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953562265548881951"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953622699316510790",
                "type": 19,
                "content": "i will give it a try. cheers <@!134416332509675520>",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "254789293267091458",
                    "username": "divne",
                    "avatar": "89fe560d978a18a6430ea7961fa603f4",
                    "discriminator": "7598",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T11:56:08.970000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953621386113458176"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953621386113458176",
                "type": 0,
                "content": "Another way is to keep using `program.rpc.doSomething` but also add in the `preInstructions: [...]` and/or `postInstructions: [...]` arguments to the call",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T11:50:55.878000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953621194123390986",
                "type": 0,
                "content": "You can start building a tx with `program.transaction.initializePool(...)` and then `.add(...)` other ixs to it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T11:50:10.104000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953620796725657660",
                "type": 19,
                "content": "`const ix1 = program.instruction.initializePool(<...>)` etc.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "254789293267091458",
                        "username": "divne",
                        "avatar": "89fe560d978a18a6430ea7961fa603f4",
                        "discriminator": "7598",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T11:48:35.357000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953619085990707252"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953619085990707252",
                "type": 0,
                "content": "anchor sends its transaction to rpc like this:\n```\nconst tx = await program.rpc.initializePool(<\u2026>)\nconst tx = await program.rpc.fundPool(<\u2026>)\n```\nhow to combine multiple transactions into one tx?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "254789293267091458",
                    "username": "divne",
                    "avatar": "89fe560d978a18a6430ea7961fa603f4",
                    "discriminator": "7598",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T11:41:47.486000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953599720968831026",
                "type": 0,
                "content": "\ud83e\udd20  seems working now. thank you <@!134416332509675520>",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "765293840542203904",
                    "username": "CASPER",
                    "avatar": "554954335f22db773e2ca60d7b92618b",
                    "discriminator": "3488",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T10:24:50.505000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953599130150772756",
                "type": 0,
                "content": "okay",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "765293840542203904",
                    "username": "CASPER",
                    "avatar": "554954335f22db773e2ca60d7b92618b",
                    "discriminator": "3488",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T10:22:29.643000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953599088115462144",
                "type": 0,
                "content": "Just put it anywhere else in the file, not in the program mod",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T10:22:19.621000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953599033287536710",
                "type": 19,
                "content": "And define that outside of the `#[program]` mod",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "765293840542203904",
                        "username": "CASPER",
                        "avatar": "554954335f22db773e2ca60d7b92618b",
                        "discriminator": "3488",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T10:22:06.549000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953598071122575361"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953598968988839946",
                "type": 19,
                "content": "We can't help unless you actually say what the issue is",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "765293840542203904",
                        "username": "CASPER",
                        "avatar": "554954335f22db773e2ca60d7b92618b",
                        "discriminator": "3488",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T10:21:51.219000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953598071122575361"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953598071122575361",
                "type": 0,
                "content": "```\n#[program]\npub mod my_protocol {\n    use super::*;\n    fn get_price(pyth_account: AccountInfo) -> Result<u64> {\n        let pyth_price_info = &pyth_account;\n        let pyth_price_data = &pyth_price_info.try_borrow_data()?;\n        let pyth_price = pyth_client::cast::<pyth_client::Price>(pyth_price_data);\n        let dest_price = pyth_price.agg.price as u64;\n        Ok(dest_price)\n    }\n\n    pub fn my_function(ctx: Context<MyFunction>) -> Result<()> {\n        let price = get_price(ctx.accounts.pyth_btc_account);\n    }    \n```\nI did like this but getting issue.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "765293840542203904",
                    "username": "CASPER",
                    "avatar": "554954335f22db773e2ca60d7b92618b",
                    "discriminator": "3488",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T10:18:17.151000+00:00",
                "edited_timestamp": "2022-03-16T10:21:50.892000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953597180713775154",
                "type": 19,
                "content": "Yep, just define it \ud83d\ude1b",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "765293840542203904",
                        "username": "CASPER",
                        "avatar": "554954335f22db773e2ca60d7b92618b",
                        "discriminator": "3488",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T10:14:44.861000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953582314963738634"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953582314963738634",
                "type": 0,
                "content": "Is there any way to define one function that will be called a lot in one program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "765293840542203904",
                    "username": "CASPER",
                    "avatar": "554954335f22db773e2ca60d7b92618b",
                    "discriminator": "3488",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T09:15:40.590000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953566333759520820",
                "type": 19,
                "content": "late reply but https://www.youtube.com/watch?v=ZLp7M64_pTU&list=PLrYlwHDZuXW0qfPc26qTQQwrt-e9p5DQe&index=14",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "689817175900291093",
                    "username": "Pouya | qPools",
                    "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                    "discriminator": "0701",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "video",
                        "url": "https://www.youtube.com/watch?v=ZLp7M64_pTU",
                        "title": "Building on Serum Core",
                        "description": "Host: Michelle\nSpeaker: Jarry Xiao - Solana\n\nSign up here: https://serum-wormhole-hackathon.devpost.com/\n\nHackathon official website: https://serum-wormhole-hackathon.devpost.com/",
                        "color": 16711680,
                        "reference_id": "953566333759520820",
                        "author": {
                            "name": "Project Serum",
                            "url": "https://www.youtube.com/channel/UCQ-jrhf6mt2PWa8cqF1-6Mw"
                        },
                        "provider": {
                            "name": "YouTube",
                            "url": "https://www.youtube.com"
                        },
                        "thumbnail": {
                            "url": "https://i.ytimg.com/vi/ZLp7M64_pTU/maxresdefault.jpg",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/iutp0wjuBRacGX4ZuRAAjWfyRSHyzEyCSAZuCdjwhxQ/https/i.ytimg.com/vi/ZLp7M64_pTU/maxresdefault.jpg",
                            "width": 1280,
                            "height": 720
                        },
                        "video": {
                            "url": "https://www.youtube.com/embed/ZLp7M64_pTU",
                            "width": 1280,
                            "height": 720
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "851440041826058261",
                        "username": "271077",
                        "avatar": "e0f961e9e07faa81562448574add9ee4",
                        "discriminator": "1337",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T08:12:10.374000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "949354935613521941"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953562491013726228",
                "type": 0,
                "content": "Is there any way to identify which type an account belongs to? Let's say I use one seed for type types of accounts. Is there a way for me to distinguish which of the two types it is?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T07:56:54.192000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953562265548881951",
                "type": 19,
                "content": "useWallet() using the \"@solana/wallet-adapter-react\" is pretty good if you're using react",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "533682398903402497",
                        "username": "Caleb",
                        "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                        "discriminator": "9071",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T07:56:00.437000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953474866240163850"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953560071936278539",
                "type": 0,
                "content": "Helo. Is there any diffirence between transfer nft and normal spl token with anchor-spl?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "519199929776865308",
                    "username": "thanhlongtld",
                    "avatar": null,
                    "discriminator": "2780",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T07:47:17.439000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953515872989884427",
                "type": 19,
                "content": "When you want the deserialization use the later one",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "252808943238119424",
                    "username": "armariya",
                    "avatar": "36dbf145011c7dc6699081d01062b47a",
                    "discriminator": "4346",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "738321266607521833",
                        "username": "CyberChicken",
                        "avatar": "9ef298c1bd12aebec0f9d3dd32b749e1",
                        "discriminator": "1872",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T04:51:39.589000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953502665659260949"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953502665659260949",
                "type": 0,
                "content": "Can sb tell me when to AccountInfo<'info> or Account<'info, x>",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "738321266607521833",
                    "username": "CyberChicken",
                    "avatar": "9ef298c1bd12aebec0f9d3dd32b749e1",
                    "discriminator": "1872",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T03:59:10.716000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953496857307402240",
                "type": 19,
                "content": "yeah you need to pass all the account",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "717956950737813594",
                    "username": "0xDeep",
                    "avatar": "a3644875c3375e839010db1ed0f04bf4",
                    "discriminator": "8581",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "917752451120119820",
                        "username": "denesh",
                        "avatar": null,
                        "discriminator": "7245",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T03:36:05.897000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953465878886883388"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953474866240163850",
                "type": 0,
                "content": "how do you connect a phantom wallet to an anchor program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T02:08:42.818000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953466870281961532",
                "type": 0,
                "content": "Say for example, Instruction X in Program A calls Instruction Y in Program B which needs access to Account M. Do we have to pass Account M in the accounts list when calling Instruction X ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "917752451120119820",
                    "username": "denesh",
                    "avatar": null,
                    "discriminator": "7245",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T01:36:56.433000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953465878886883388",
                "type": 0,
                "content": "Do we have to specify all the accounts that will be touched by a CPI as well ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "917752451120119820",
                    "username": "denesh",
                    "avatar": null,
                    "discriminator": "7245",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T01:33:00.066000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953447675402002432",
                "type": 19,
                "content": "Yeah, original funder is irrelevant\u2014as WrRaThy said, all that matters is who can sign for the vault's address (only your program)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "937437784845721690",
                        "username": "arwen",
                        "avatar": "6c5996770c985bcd6e5b68131ff2ba04",
                        "discriminator": "6575",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T00:20:40.017000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953433981364367420"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953445660240257094",
                "type": 19,
                "content": "given that it's a PDA - only the program can transfer from this account. nothing else needed",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "937437784845721690",
                        "username": "arwen",
                        "avatar": "6c5996770c985bcd6e5b68131ff2ba04",
                        "discriminator": "6575",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T00:12:39.565000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953433981364367420"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953443434461532170",
                "type": 19,
                "content": "Check this tutorial https://hackmd.io/@ironaddicteddog/solana-anchor-escrow",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "218650902930653186",
                    "username": "Augustus Gloop",
                    "avatar": "e55e14724d5b9f952dc0df98bb97f5c3",
                    "discriminator": "5540",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://hackmd.io/@ironaddicteddog/solana-anchor-escrow",
                        "title": "Anchor: A Powerful Framework for Solana Developers - HackMD",
                        "description": "# Anchor: A Powerful Framework for Solana Developers  ***You can find the full code base [here](http",
                        "reference_id": "953443434461532170",
                        "provider": {
                            "name": "HackMD"
                        },
                        "thumbnail": {
                            "url": "https://i.imgur.com/xoJs72V.jpg",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/_xhNj_KX_xdgNdzOrfQdv3epIAOt0_QQ6aBs1lvmsS4/https/i.imgur.com/xoJs72V.jpg",
                            "width": 1081,
                            "height": 1081
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "691032352784252940",
                        "username": "luffyjr",
                        "avatar": "a_307424c62d07ad4e94038c179fd2cac8",
                        "discriminator": "1111",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-16T00:03:48.898000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953433562017857546"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953433981364367420",
                "type": 0,
                "content": "Hi - I am trying to transfer SOL (not tokens) from a \"from\" player to a vault account (a PDA). I then distribute this SOL from the vault to other wallets. I have the program sign for this transaction since the vault is at a program derived address. Now does the original \"from\" player still have any control over this vault account (since he paid the rent and all)? Do I need to transfer authority of this vault account like we do for Tokens? I am under the impression that native solana works different from the tokens.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "937437784845721690",
                    "username": "arwen",
                    "avatar": "6c5996770c985bcd6e5b68131ff2ba04",
                    "discriminator": "6575",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T23:26:15.104000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953433562017857546",
                "type": 0,
                "content": "Does anyone know of an open source vault-like program I may reference? simple deposit in exchange for receipt token functionality",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "691032352784252940",
                    "username": "luffyjr",
                    "avatar": "a_307424c62d07ad4e94038c179fd2cac8",
                    "discriminator": "1111",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T23:24:35.124000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953430542592905278",
                "type": 19,
                "content": "NVM:\n\nI've been using spl transfer function from anchor all this time \ud83e\udd26 \n\nJust found this and it works!!\n\nhttps://stackoverflow.com/a/70574227",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "419476181348384791",
                    "username": "NBNARADHYA",
                    "avatar": "1634387593a58ce71b2193df8635936f",
                    "discriminator": "3693",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://stackoverflow.com/a/70574227",
                        "title": "How to transfer SOL in anchor smart contract instruction",
                        "description": "I am creating a dapp where multiple users can deposit SOL into an event account, and depending on whoever wins the event, they can redeem SOL back to their wallet.\nHow can I transfer native SOL (no...",
                        "reference_id": "953430542592905278",
                        "provider": {
                            "name": "Stack Overflow"
                        },
                        "thumbnail": {
                            "url": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/VbfwnzN2MM794XNccNxDzrB1YeuPrxR53y11bwRfflY/%3Fv%3D73d79a89bded/https/cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon%402.png",
                            "width": 316,
                            "height": 316
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T23:12:35.237000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953422399578185789"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953428616753057883",
                "type": 0,
                "content": "space wise",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "218650902930653186",
                    "username": "Augustus Gloop",
                    "avatar": "e55e14724d5b9f952dc0df98bb97f5c3",
                    "discriminator": "5540",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T23:04:56.081000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953428515624194118",
                "type": 0,
                "content": "Whats the largest you can initialise a program at",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "218650902930653186",
                    "username": "Augustus Gloop",
                    "avatar": "e55e14724d5b9f952dc0df98bb97f5c3",
                    "discriminator": "5540",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T23:04:31.970000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953426408422653962",
                "type": 19,
                "content": "ive done:\n```typescript\nconst {\n  Connection,\n  sendAndConfirmTransaction,\n  Keypair,\n  Transaction,\n  SystemProgram,\n  PublicKey,\n  TransactionInstruction,\n} = require(\"@solana/web3.js\");\nconst connection = new Connection(\"https://api.devnet.solana.com/\");\nconst feePayer = new Keypair();\nawait connection.requestAirdrop(feePayer.publicKey, 2e9);\n```\n\nto airdrop myself SOL in tests before",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "444733760597000195",
                    "username": "neery1218",
                    "avatar": null,
                    "discriminator": "0757",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "419476181348384791",
                        "username": "NBNARADHYA",
                        "avatar": "1634387593a58ce71b2193df8635936f",
                        "discriminator": "3693",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T22:56:09.574000+00:00",
                "edited_timestamp": "2022-03-15T22:56:51.926000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953422399578185789"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953425582799073320",
                "type": 0,
                "content": "Does anybody have a link to a repo with anchor program, wallet adapter and react app as an example of a good development set up they could share?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T22:52:52.730000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953423257040715788",
                "type": 0,
                "content": "hello! new user to anchor here. the below is part of my solana code for the tictactoe example in the anchor book.\n```rust\n  #[account]\n  pub struct GameState {\n      pub turn: u64,\n      pub grid: [[Option<Sign>; 3]; 3],\n      pub status: Status,\n  }\n\n  #[derive(\n      AnchorSerialize, AnchorDeserialize, FromPrimitive, ToPrimitive, Copy, Clone, PartialEq, Eq,\n  )]\n  pub enum Sign {\n      X = 0,\n      O = 1,\n  }\n```\n\nin my typescript tests, i access the GameState account. \n\n```typescript\n\n        switch (JSON.stringify(s.grid[i][j])) {\n          case \"null\":\n            break;\n          case \"{\\\"x\\\":{}}\": { // this looks ugly!\n            console.log(`X at ${i},${j}`);\n            break;\n          }\n          default: {\n            console.log(`didn't handle ${JSON.stringify(s.grid[i][j])}`);\n            break;\n```\nhowever I think {x: {}} is an ugly way of representing Sign::X. I'm also a typescript noob so maybe there's an easy way to interact with this data. Is there some way to keep using the Sign enum in rust, but have some nice conversion in typescript? eg Sign::X in rust somehow converts to 'X' in typescript",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "444733760597000195",
                    "username": "neery1218",
                    "avatar": null,
                    "discriminator": "0757",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T22:43:38.226000+00:00",
                "edited_timestamp": "2022-03-15T22:57:07.517000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953422399578185789",
                "type": 19,
                "content": "<@!134416332509675520>  How would we create a `SystemAccount` in tests ?\n\nRight now just doing the following to create:\n\n```\n      const creatorsWalletKeypair = anchor.web3.Keypair.generate();\n      let signature = await program.provider.connection.requestAirdrop(\n        creatorsWalletKeypair.publicKey,\n        1000000000 // 1 SOL \u2014 or 1 billion lamports\n      );\n```\n\nand getting this errror:\n\n```\n    Program log: Instruction: Transfer\n    Program log: Error: InvalidAccountData\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "419476181348384791",
                    "username": "NBNARADHYA",
                    "avatar": "1634387593a58ce71b2193df8635936f",
                    "discriminator": "3693",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T22:40:13.791000+00:00",
                "edited_timestamp": "2022-03-15T22:49:03.255000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953401322034561065"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953401453299519520",
                "type": 0,
                "content": "I see.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "419476181348384791",
                    "username": "NBNARADHYA",
                    "avatar": "1634387593a58ce71b2193df8635936f",
                    "discriminator": "3693",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T21:16:59.809000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953401367714746438",
                "type": 0,
                "content": "Sol isn't a token, it's just sol",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T21:16:39.404000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953401322034561065",
                "type": 19,
                "content": "No, that doesn't sound like it's a token account, just a `pub create_spl_account: SystemAccount<'info>`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "419476181348384791",
                        "username": "NBNARADHYA",
                        "avatar": "1634387593a58ce71b2193df8635936f",
                        "discriminator": "3693",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T21:16:28.513000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953355009549021264"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953399498690920528",
                "type": 19,
                "content": "<@!134416332509675520> could you please help with this ? Thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "419476181348384791",
                    "username": "NBNARADHYA",
                    "avatar": "1634387593a58ce71b2193df8635936f",
                    "discriminator": "3693",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T21:09:13.794000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953355009549021264"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953399326338580481",
                "type": 0,
                "content": "Great <@!134416332509675520> Thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "419476181348384791",
                    "username": "NBNARADHYA",
                    "avatar": "1634387593a58ce71b2193df8635936f",
                    "discriminator": "3693",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T21:08:32.702000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953397151738777670",
                "type": 19,
                "content": "Not quite, since that only passes in one address (so only one account). You can instead do `account.random.all()` or `account.random.fetchMultiple` though",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "419476181348384791",
                        "username": "NBNARADHYA",
                        "avatar": "1634387593a58ce71b2193df8635936f",
                        "discriminator": "3693",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T20:59:54.237000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953396760603140176"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953396760603140176",
                "type": 0,
                "content": "If there is an account with the following structure:\n\n```\n#[account]\npub struct Random {\n    pub user: Pubkey,\n    pub creator: Pubkey,\n    pub expire_timestamp: i64,\n    pub bump: u8\n}\n```\n\nCan we fetch multiple `Random`s (having same user) with `anchor.account.random.fetch(userPubKey)`?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "419476181348384791",
                    "username": "NBNARADHYA",
                    "avatar": "1634387593a58ce71b2193df8635936f",
                    "discriminator": "3693",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T20:58:20.983000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953381528862355537",
                "type": 0,
                "content": "is it possible to cpi create a mint without passing in generated keypair as a signer?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "533682398903402497",
                    "username": "Caleb",
                    "avatar": "a459123bc3fb15fdbaecaca6f17f5863",
                    "discriminator": "9071",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T19:57:49.453000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953376921704603739",
                "type": 0,
                "content": "hey, i want to create vault where anyone can deposit spl token and withdraw it at any time and specific user can call contract func which will use deposited tokens to  claim rewards (collateral pay), im newbie in solana ecosystem so can someone give me some info where to start or what i can use to develop that ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "460753135187787777",
                    "username": "MarekZ",
                    "avatar": "5587a9ebc0a0431d1714922bbb01dd52",
                    "discriminator": "4002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T19:39:31.021000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953376687414980708",
                "type": 19,
                "content": "fantastic, thanks much !",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "181642294779183104",
                    "username": "TakT",
                    "avatar": "7ef71e822e606e2f09849109a830d293",
                    "discriminator": "3681",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "886279599162535969",
                        "username": "mattbraz",
                        "avatar": "0f06e0ef0b197f39f67a77bab896710b",
                        "discriminator": "4045",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T19:38:35.162000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953376445256826980"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953376445256826980",
                "type": 19,
                "content": "There is this IDO example:  \nhttps://github.com/project-serum/anchor/tree/e04f144e1208f359ff24273f968ae61ba39dfb25/tests/ido-pool",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "886279599162535969",
                    "username": "mattbraz",
                    "avatar": "0f06e0ef0b197f39f67a77bab896710b",
                    "discriminator": "4045",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/project-serum/anchor/tree/e04f144e1208f359ff24273f968ae61ba39dfb25/tests/ido-pool",
                        "title": "anchor/tests/ido-pool at e04f144e1208f359ff24273f968ae61ba39dfb25 \u00b7...",
                        "description": "\u2693 Solana Sealevel Framework. Contribute to project-serum/anchor development by creating an account on GitHub.",
                        "color": 1975079,
                        "reference_id": "953376445256826980",
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/860d4808d3a57d035bf524008ce674842b7934cb064dcfc2a298a8b7122cf6c2/project-serum/anchor",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/JqwjgbI6niUOTXGKSw4YuUfcrow_gly-hDbzWZ5N7V4/https/opengraph.githubassets.com/860d4808d3a57d035bf524008ce674842b7934cb064dcfc2a298a8b7122cf6c2/project-serum/anchor",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "181642294779183104",
                        "username": "TakT",
                        "avatar": "7ef71e822e606e2f09849109a830d293",
                        "discriminator": "3681",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T19:37:37.427000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "953376269150601296"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "953376269150601296",
                "type": 0,
                "content": "hello, is there any ICO code using anchor I can fork and take as a base?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "181642294779183104",
                    "username": "TakT",
                    "avatar": "7ef71e822e606e2f09849109a830d293",
                    "discriminator": "3681",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T19:36:55.440000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953365391890059304",
                "type": 0,
                "content": "So I guess my question is, is there a method like:\n`anchor.sendTransaction(programID, accounts, data)`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T18:53:42.099000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953364531227279422",
                "type": 0,
                "content": "You can clone executable programs on solana using validator.clone right?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T18:50:16.901000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953364399249326090",
                "type": 0,
                "content": "But I just have a PublicKey that I want to send to",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T18:49:45.435000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953364298808315904",
                "type": 0,
                "content": "Normally I'd do this if its in my anchor workspace:   const program = anchor.workspace.StableTry as Program<StableTry>;",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T18:49:21.488000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953364114367991909",
                "type": 0,
                "content": "<@!134416332509675520>  any tutorial on sending a transaction to an already deployed contract? I'm cloning a contract using anchor test and want to send a single transaction to it from the terminal",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "949720152583315527",
                    "username": "pq",
                    "avatar": null,
                    "discriminator": "3313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T18:48:37.514000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953360471581425694",
                "type": 0,
                "content": "Can I use structs with anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "849035945487630337",
                    "username": "agronomist",
                    "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                    "discriminator": "1591",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T18:34:09.006000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "953359542362730577",
                "type": 0,
                "content": "I can use Box<xxx> apparently, to put the accounts on the heap, rather than the stack..",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "886279599162535969",
                    "username": "mattbraz",
                    "avatar": "0f06e0ef0b197f39f67a77bab896710b",
                    "discriminator": "4045",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-15T18:30:27.463000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "7659ec50db0dfcc28818c3e7bba41414"
}