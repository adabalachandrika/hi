{
    "total_results": 57,
    "messages": [
        [
            {
                "id": "936325828797681664",
                "type": 19,
                "content": "check the `account_info.data.borrow().len()`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "419287884969803776",
                        "username": "piltzintec",
                        "avatar": "76f98b5d598473c659e397066bf81efb",
                        "discriminator": "8560",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T18:24:33.678000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936325258766610492"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936325258766610492",
                "type": 0,
                "content": "Whats the best way to check account data size? To prevent it from exceeding 10 mb",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "419287884969803776",
                    "username": "piltzintec",
                    "avatar": "76f98b5d598473c659e397066bf81efb",
                    "discriminator": "8560",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T18:22:17.772000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936318459023859763",
                "type": 0,
                "content": "just to make sure, with find_program_address.. it iterate an array of bumps from 255 to 0  and return the first valid pda right... meaning wherever i call find_program_address i would get the same pda and bump as long as i provide the same seeds and program_id?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:55:16.587000+00:00",
                "edited_timestamp": "2022-01-27T17:55:28.516000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936318341897941082",
                "type": 0,
                "content": "thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:54:48.662000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936318087534350456",
                "type": 0,
                "content": "i got it to work like this",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "936318086565478411",
                        "filename": "unknown.png",
                        "size": 9878,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/936318086565478411/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/936318086565478411/unknown.png",
                        "width": 653,
                        "height": 39,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:53:48.017000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936318063786213476",
                "type": 0,
                "content": "u r right",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:53:42.355000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936317733518319626",
                "type": 0,
                "content": "So unless `ctx.program_id` is the exact same address as that \"G1D...\" thing, there's no reason to expect both lines above to work",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:52:23.613000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936317611426340864",
                "type": 19,
                "content": "Is that hardcoded program_id your actual program id? In general it's possible for `create_program_address` to fail (usually you have to pass an explicit bump calculated by `find_program_address`)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "490581421778534400",
                        "username": "aburi karei",
                        "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                        "discriminator": "1526",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:51:54.504000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936315543575736340"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936317432379871322",
                "type": 19,
                "content": "Those are actually the same type, so don't think that's your problem above",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "490581421778534400",
                        "username": "aburi karei",
                        "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                        "discriminator": "1526",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:51:11.816000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936316101103599686"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936316101103599686",
                "type": 0,
                "content": "i noticed `ctx.program_id` belongs to `solana_program::pubkey::Pubkey` while `program_id` is `anchor_lang::prelude::Pubkey`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:45:54.415000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936315543575736340",
                "type": 0,
                "content": "i am trying to have a program function that generates a bunch of account with PDA, the first line using `&ctx.program_id` doesn't works... but the second & third lines works.... is there a way to make it work?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "936315542644609044",
                        "filename": "unknown.png",
                        "size": 48320,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/936315542644609044/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/936315542644609044/unknown.png",
                        "width": 794,
                        "height": 192,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:43:41.490000+00:00",
                "edited_timestamp": "2022-01-27T17:44:50.168000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936310868579336212",
                "type": 0,
                "content": "thanks a lot",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:25:06.884000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936310787029495858",
                "type": 19,
                "content": "https://docs.rs/anchor-lang/latest/anchor_lang/context/struct.Context.html#structfield.program_id",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "848333406849073202",
                    "username": "0xDEADBEEF \ud83e\udd80 | FABRIC",
                    "avatar": "7399d4bc4034ca6b5f7ba86e55e10411",
                    "discriminator": "0001",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.rs/anchor-lang/latest/anchor_lang/context/struct.Context.html",
                        "title": "Context in anchor_lang::context - Rust",
                        "description": "Provides non-argument inputs to the program.",
                        "reference_id": "936310787029495858"
                    }
                ],
                "mentions": [
                    {
                        "id": "490581421778534400",
                        "username": "aburi karei",
                        "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                        "discriminator": "1526",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:24:47.441000+00:00",
                "edited_timestamp": "2022-01-27T17:25:56.846000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936310166515744819"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936310778154336299",
                "type": 0,
                "content": "wow cool thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:24:45.325000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936310757497389117",
                "type": 19,
                "content": "`ctx.program_id`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "848333406849073202",
                    "username": "0xDEADBEEF \ud83e\udd80 | FABRIC",
                    "avatar": "7399d4bc4034ca6b5f7ba86e55e10411",
                    "discriminator": "0001",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "490581421778534400",
                        "username": "aburi karei",
                        "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                        "discriminator": "1526",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:24:40.400000+00:00",
                "edited_timestamp": "2022-01-27T17:24:42.735000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936310166515744819"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936310166515744819",
                "type": 0,
                "content": "any method to access the programId inside a program function?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "490581421778534400",
                    "username": "aburi karei",
                    "avatar": "963f8ed9727bc9b1cbbf912dcae2aaac",
                    "discriminator": "1526",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:22:19.499000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936309098373324880",
                "type": 0,
                "content": "Hey everyone,\ndo we have any example of anchor used in react ts project? I want to look and get some ideas (specially about subscribing to changes...)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T17:18:04.834000+00:00",
                "edited_timestamp": "2022-01-27T17:18:11.178000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936280225552146432",
                "type": 0,
                "content": "how i can fix this error Cross-program invocation with unauthorized signer or writable account",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "765957579801100288",
                    "username": "M I N",
                    "avatar": null,
                    "discriminator": "0198",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T15:23:21.017000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936279505247543417",
                "type": 0,
                "content": "Let me know if you need help implementing",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "734462289100537937",
                    "username": "wallypues",
                    "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                    "discriminator": "2876",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T15:20:29.283000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936279319859302531",
                "type": 19,
                "content": "Right, so I got this working but had to use typescript instead of JS",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "734462289100537937",
                    "username": "wallypues",
                    "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                    "discriminator": "2876",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "667387455116148766",
                        "username": "nice chute",
                        "avatar": "6b7a863e9caaf27b538377e7c857c4b8",
                        "discriminator": "0767",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T15:19:45.083000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936271796016140298"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936275265749925888",
                "type": 0,
                "content": "hi, how can i add arguments in anchor instruction without breaking js client? for example\n\npub mod my_program {\n    use super::*;\n\n    pub fn create(ctx: Context<Create>)\n\n}\ninto:\n\npub mod my_program {\n    use super::*;\n\n    pub fn create(ctx: Context<Create>, amount: u64)\n\n}\n\nBut have old ui app working with new instruction (new fields just appended)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T15:03:38.508000+00:00",
                "edited_timestamp": "2022-01-27T15:04:39.651000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936274910383337492",
                "type": 0,
                "content": "This is a bit of an OMG for anyone else that runs into it:  If you see an `owner`  pubkey set to 0 after you call getAccountInfo... that's actually is 11111111111111111111111111111111  in base58.  Lost so much time to this. \n```\nconsole.log('after airdrop', (await provider.connection.getAccountInfo(user.publicKey, 'confirmed')).owner);        \nconsole.log('after airdrop', (await provider.connection.getAccountInfo(user.publicKey, 'confirmed')).owner.toBase58());\n```\nresults in \n```\nafter airdrop PublicKey { _bn: <BN: 0> }\nafter airdrop 11111111111111111111111111111111\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "195345150132748288",
                    "username": "andyk",
                    "avatar": "c1e2fa4a911d2c3a07173f156ce2712b",
                    "discriminator": "8657",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T15:02:13.782000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936271796016140298",
                "type": 19,
                "content": "Stuck on the same thing, how do you generate a provider from a local keypair",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "667387455116148766",
                    "username": "nice chute",
                    "avatar": "6b7a863e9caaf27b538377e7c857c4b8",
                    "discriminator": "0767",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "734462289100537937",
                        "username": "wallypues",
                        "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                        "discriminator": "2876",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T14:49:51.259000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936269398644252682"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936270904038658048",
                "type": 0,
                "content": "hi all, sorry if this has been asked before. Is it possible in a client to use anchor to get values  returned by a function in an on-chain program? ie a simple 'getter function' on-chain that returns a string, then using anchor we get the value of the string? Or do we have to go down the route of writing to an account and reading from the account, as per this post https://discord.com/channels/889577356681945098/889702325231427584/933321451119968256\n\nThe only other solution I've found is to use events and simulate the tx which seems a bit too  complex and messy",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "434158450839257108",
                    "username": "Harry | Chainlink",
                    "avatar": "190b1957bb8996c9f46f7086f7ec9a58",
                    "discriminator": "1464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T14:46:18.595000+00:00",
                "edited_timestamp": "2022-01-27T14:59:05.129000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936269489291558982",
                "type": 0,
                "content": "And that gives me this error\n\nconst provider = anchor.Provider.env()\n                                 ^\n\nTypeError: Cannot read properties of undefined (reading 'env')",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "734462289100537937",
                    "username": "wallypues",
                    "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                    "discriminator": "2876",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T14:40:41.293000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936269398644252682",
                "type": 19,
                "content": "For reference, I am trying to access this in a nodeJS script. So if I wanted to make my own provider from scratch with a connection and a wallet, how would I do it? I tried the following:\n\nconst provider = anchor.Provider.env()\n\nPassing in the environment variable to the command line as so:\n\nANCHOR_WALLET=... ANCHOR_PROVIDER_URL=... node script.js --provider.cluster mainnet",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "734462289100537937",
                    "username": "wallypues",
                    "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                    "discriminator": "2876",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "848333406849073202",
                        "username": "0xDEADBEEF \ud83e\udd80 | FABRIC",
                        "avatar": "7399d4bc4034ca6b5f7ba86e55e10411",
                        "discriminator": "0001",
                        "public_flags": 128
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T14:40:19.681000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936210431335362590"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936264379693932575",
                "type": 0,
                "content": "No matter what I do though, I cannot verify the owner of any account to print the system account through web3.  ` console.log(await program.provider.connection.getAccountInfo(provider.wallet.publicKey, 'confirmed'));`  always shows an owner of 0",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "195345150132748288",
                    "username": "andyk",
                    "avatar": "c1e2fa4a911d2c3a07173f156ce2712b",
                    "discriminator": "8657",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T14:20:23.070000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936245850986930228",
                "type": 0,
                "content": "Ugh.  Here's a big pain that explains a lot. I just realized that the accounts I've been using in my tests aren't full system accounts even though I aidropped to them.  They are owned by Pubkey: 0 not '1111111111'",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "195345150132748288",
                    "username": "andyk",
                    "avatar": "c1e2fa4a911d2c3a07173f156ce2712b",
                    "discriminator": "8657",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T13:06:45.482000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936243954855346186",
                "type": 0,
                "content": "Hi Guys... I am trying to create a Solana account in which I want to use a struct inside a struct. For example, there is an employee struct with name & age details and now I want to use an array of employees in #[account] of the company that will have other fields also.  I am facing a few problems like the default is not implemented. Any idea how I can do it.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T12:59:13.409000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936239621585653791",
                "type": 0,
                "content": "Awh man i already read those, but i can't wrap my head around it because there isn't enough details.\n\nfor example, i've seen this crate used in candy_machine `mpl_token_metadata` extensively and the documentation is underwhelming",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "355864551759020035",
                    "username": "0xYadd",
                    "avatar": "0370f795499cca08df84a1aa12ed7ff0",
                    "discriminator": "0157",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T12:42:00.277000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936215706586992670",
                "type": 19,
                "content": "Well I just learned you can use custom errors with constraints too \ud83e\udd2f",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "848333406849073202",
                        "username": "0xDEADBEEF \ud83e\udd80 | FABRIC",
                        "avatar": "7399d4bc4034ca6b5f7ba86e55e10411",
                        "discriminator": "0001",
                        "public_flags": 128
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T11:06:58.497000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936210644234043462"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936210644234043462",
                "type": 19,
                "content": "https://project-serum.github.io/anchor/tutorials/tutorial-1.html#defining-a-program\nhttps://docs.rs/anchor-lang/latest/anchor_lang/derive.Accounts.html",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "848333406849073202",
                    "username": "0xDEADBEEF \ud83e\udd80 | FABRIC",
                    "avatar": "7399d4bc4034ca6b5f7ba86e55e10411",
                    "discriminator": "0001",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.rs/anchor-lang/latest/anchor_lang/derive.Accounts.html",
                        "title": "Accounts in anchor_lang - Rust",
                        "description": "Implements an `Accounts` deserializer on the given struct. Can provide further functionality through the use of attributes.",
                        "reference_id": "936210644234043462"
                    },
                    {
                        "type": "link",
                        "url": "https://project-serum.github.io/anchor/tutorials/tutorial-1.html",
                        "title": "Arguments and Accounts | \u2693 Anchor",
                        "color": 4108156,
                        "reference_id": "936210644234043462"
                    }
                ],
                "mentions": [
                    {
                        "id": "355864551759020035",
                        "username": "0xYadd",
                        "avatar": "0370f795499cca08df84a1aa12ed7ff0",
                        "discriminator": "0157",
                        "public_flags": 128
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T10:46:51.538000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936203574185193512"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936210431335362590",
                "type": 19,
                "content": "you'd need to use `anchor.local()` or `anchor.env()`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "848333406849073202",
                    "username": "0xDEADBEEF \ud83e\udd80 | FABRIC",
                    "avatar": "7399d4bc4034ca6b5f7ba86e55e10411",
                    "discriminator": "0001",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "734462289100537937",
                        "username": "wallypues",
                        "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                        "discriminator": "2876",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T10:46:00.779000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936070909549240360"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936210157074018315",
                "type": 19,
                "content": "its not a constructor, you cant user the `new <x>` syntax",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "848333406849073202",
                    "username": "0xDEADBEEF \ud83e\udd80 | FABRIC",
                    "avatar": "7399d4bc4034ca6b5f7ba86e55e10411",
                    "discriminator": "0001",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "734462289100537937",
                        "username": "wallypues",
                        "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                        "discriminator": "2876",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T10:44:55.390000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "936071108124360754"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936206347593216071",
                "type": 19,
                "content": "I use seeds and bump there to verify the vault_access account passed in is the correct PDA. Look into program derived address's. https://docs.solana.com/developing/programming-model/calling-between-programs#program-derived-addresses\nhttps://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/#processor-part-2-pdas-part-2-cpis-part-1",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.solana.com/developing/programming-model/calling-between-programs",
                        "title": "Calling Between Programs | Solana Docs",
                        "description": "Cross-Program Invocations",
                        "reference_id": "936206347593216071"
                    },
                    {
                        "type": "link",
                        "url": "https://paulx.dev/blog/2021/01/14/programming-on-solana-an-introduction/",
                        "title": "Programming on Solana - An Introduction | paulx",
                        "description": "Learn the fundamentals of Programming on Solana by building an escrow",
                        "reference_id": "936206347593216071"
                    }
                ],
                "mentions": [
                    {
                        "id": "378996749827833856",
                        "username": "Focor",
                        "avatar": null,
                        "discriminator": "0015",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T10:29:47.139000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "935981643691331604"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "936203574185193512",
                "type": 0,
                "content": "Hey, i'm struggling to understand the Rust program flow,\n`#[account]` and `#[derive(Accounts)]` to be specific.\n\nany resources or explanation would be appreciated",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "355864551759020035",
                    "username": "0xYadd",
                    "avatar": "0370f795499cca08df84a1aa12ed7ff0",
                    "discriminator": "0157",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T10:18:45.907000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936168329268305921",
                "type": 0,
                "content": "what is this error Error: 102: The program could not deserialize the given instruction",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "765957579801100288",
                    "username": "M I N",
                    "avatar": null,
                    "discriminator": "0198",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T07:58:42.864000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936071207609057331",
                "type": 0,
                "content": "Anyone got any ideas ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "734462289100537937",
                    "username": "wallypues",
                    "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                    "discriminator": "2876",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T01:32:47.256000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936071108124360754",
                "type": 0,
                "content": "The error being :\n\nconst provider = new anchor.Provider(solConnection, walletWrapper, {\n                 ^\n\nTypeError: anchor.Provider is not a constructor",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "734462289100537937",
                    "username": "wallypues",
                    "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                    "discriminator": "2876",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T01:32:23.537000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936070909549240360",
                "type": 0,
                "content": "Trying to run this in order to get some data from an account that was made by my program. But I am getting an error",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "734462289100537937",
                    "username": "wallypues",
                    "avatar": "2a15a368aedd7fbaf51ad066ccea5d58",
                    "discriminator": "2876",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "936070908928475136",
                        "filename": "unknown.png",
                        "size": 32410,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/936070908928475136/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/936070908928475136/unknown.png",
                        "width": 577,
                        "height": 160,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T01:31:36.193000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936062049010716712",
                "type": 0,
                "content": "Also, what would be the maximum amount of pubkey I could store in an account, and what would be the best way to store it there? For example, would I need to loop through and store a small amount in a bunch of small transactions, or would I be able to store it all in one big hit?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "689684914437619777",
                    "username": "shayno",
                    "avatar": "dd2542ee63e514ea7f8922e9b8d54996",
                    "discriminator": "1167",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T00:56:23.676000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936061770571870269",
                "type": 0,
                "content": "Hey there, I'm trying to store Vec<Pubkey> in an account on initialize method. I'm getting the error: \"RangeError: encoding overruns Buffer\". Can anyone help me out with this?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "689684914437619777",
                    "username": "shayno",
                    "avatar": "dd2542ee63e514ea7f8922e9b8d54996",
                    "discriminator": "1167",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T00:55:17.291000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936058429485752431",
                "type": 0,
                "content": "are there any solana programs that use zero knowledge proofs?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-27T00:42:00.714000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936045255982194688",
                "type": 0,
                "content": "im doing transfers and then close, which seems to be throwing off something in solana",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "667387455116148766",
                    "username": "nice chute",
                    "avatar": "6b7a863e9caaf27b538377e7c857c4b8",
                    "discriminator": "0767",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T23:49:39.906000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936044672000884736",
                "type": 0,
                "content": "How do I close an account without running into `sum of account balances before and after instruction do not match`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "667387455116148766",
                    "username": "nice chute",
                    "avatar": "6b7a863e9caaf27b538377e7c857c4b8",
                    "discriminator": "0767",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T23:47:20.674000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936039986988453959",
                "type": 0,
                "content": "I'd like to ensure that another account does **not** exist and fail the transaction if it does. Can't find a constraint that will do this type of check.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "195345150132748288",
                    "username": "andyk",
                    "avatar": "c1e2fa4a911d2c3a07173f156ce2712b",
                    "discriminator": "8657",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T23:28:43.680000+00:00",
                "edited_timestamp": "2022-01-26T23:29:57.673000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936020831836971129",
                "type": 0,
                "content": "Whats an easy way to create and seed multiple wallets for an `anchor test`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "293578924901007361",
                    "username": "bluemoose",
                    "avatar": "d6e8953a464cbe02f412a639fa1bf2b5",
                    "discriminator": "9396",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T22:12:36.736000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "936009296599216148",
                "type": 0,
                "content": "Well I found my bug \ud83d\ude05 \n\nAuthority was set wrong in the transaction. Instead of market i should've set it to the pda itself.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T21:26:46.521000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "935990410541682698",
                "type": 0,
                "content": "```js\n    console.log(marketSigner)\n    console.log((await mintBase.getAccountInfo(lexBaseVault)).owner)\n    console.log(signerBump)\n    console.log((await program.account.lexMarket.fetch(lexMarket.publicKey)).signerBump)\n```\nVerified and owner is what i set and bump is also set correctly. So then what's the problem?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T20:11:43.734000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "935988810087542796",
                "type": 19,
                "content": "I don't think so.\nMarket and lexmarket are the same\n\nPda is program Id | market | signer_bump\n(in initialization I set the signer_bump that I generated)\n\nData passed:\n```js\n    await program.rpc.withdraw(bobBump, new anchor.BN(10), {\n      accounts: {\n        owner: bob.publicKey,\n        userAccount: bobUserAccount,\n        market: lexMarket.publicKey,\n        vault: lexBaseVault,\n        tokenDest: bobAccountBase,\n        priceOracle: stubPriceOracle.publicKey,\n        tokenProgram: spl_token.TOKEN_PROGRAM_ID\n      },\n      signers: [bob]\n    })\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T20:05:22.156000+00:00",
                "edited_timestamp": "2022-01-26T20:15:31.488000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "935987897004347422"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "935987957947572254",
                "type": 0,
                "content": "Doesn't seem like you're using the same seed setup between JS and rust (bad)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T20:01:58.990000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "935987897004347422",
                "type": 19,
                "content": "Looks like the `market`'s seeds are based on `lexMarket`'s key, but in the CPI above you're reusing `market`'s own address, right? `market.key()`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "497055574186262548",
                        "username": "LiTi",
                        "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                        "discriminator": "5428",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T20:01:44.460000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "935987045107662869"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "935987045107662869",
                "type": 19,
                "content": "`8Gmnzgn2QbgXVAGHwx4pSAiQfECMdX7P71VUm9cP91Tx's signer privilege escalated`\n\nIt's signer I believe. But i don't understand why",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T19:58:21.352000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "935986651363176499"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "935986651363176499",
                "type": 19,
                "content": "Try looking at the full program log\u2014it will tell you whether you forgot to mark an account as mut (both token accounts will need to be mut), or if you're signing incorrectly",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "497055574186262548",
                        "username": "LiTi",
                        "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                        "discriminator": "5428",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T19:56:47.476000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "935982550093021234"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "935982550093021234",
                "type": 0,
                "content": "I created a normal one but my program gives error:\n\n```rust\n    transfer(\n        CpiContext::new_with_signer(\n            ctx.accounts.token_program.to_account_info(),\n            Transfer {\n                from: ctx.accounts.vault.to_account_info(),\n                to: ctx.accounts.token_dest.to_account_info(),\n                authority: ctx.accounts.market.to_account_info(),\n            },\n            &[&[&ctx.accounts.market.key().to_bytes(), &[market.signer_bump]]]\n        ),\n        amount,\n    )?;\n```\n\nand i created the vault like this:\n```ts\n    [marketSigner, signerBump] = await anchor.web3.PublicKey.findProgramAddress([lexMarket.publicKey.toBuffer()], program.programId)\n    lexBaseVault = await mintBase.createAccount(marketSigner); // TODO: Investigate why associated token account didn't work\n```\n\n(famous Cross-program invocation with unauthorized signer or writable account)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T19:40:29.657000+00:00",
                "edited_timestamp": "2022-01-26T19:42:20.694000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "935981700071190528",
                "type": 0,
                "content": "anyone knows how to create associated token account for an pda owner with spl-token on JS?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "497055574186262548",
                    "username": "LiTi",
                    "avatar": "fcb7c2708c0fd092ba18c893a8214eba",
                    "discriminator": "5428",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T19:37:06.996000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "935981643691331604",
                "type": 0,
                "content": "what is bump?\n\nhow to learn about bump? \n\nwhat does those lines mean:\n\nhttps://github.com/Kriptikz/anchor-token-vault/blob/master/programs/anchor-token-vault/src/lib.rs\n\n\nwhy we use \"seeds\" and \"bump\" here?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "378996749827833856",
                    "username": "Focor",
                    "avatar": null,
                    "discriminator": "0015",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "935981643821367356",
                        "filename": "Screen_Shot_2022-01-26_at_22.36.37.png",
                        "size": 63037,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/935981643821367356/Screen_Shot_2022-01-26_at_22.36.37.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/935981643821367356/Screen_Shot_2022-01-26_at_22.36.37.png",
                        "width": 1328,
                        "height": 292,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/Kriptikz/anchor-token-vault/blob/master/programs/anchor-token-vault/src/lib.rs",
                        "title": "anchor-token-vault/lib.rs at master \u00b7 Kriptikz/anchor-token-vault",
                        "description": "Contribute to Kriptikz/anchor-token-vault development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/23f350b665bddf86e3eb6770b47617582109012db14e9f835854f1277914a05c/Kriptikz/anchor-token-vault",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/_rKRDpBpa6mSX9jx_UHqYy8ejO2s42yRhYLaUWhKWuo/https/opengraph.githubassets.com/23f350b665bddf86e3eb6770b47617582109012db14e9f835854f1277914a05c/Kriptikz/anchor-token-vault",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-26T19:36:53.554000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "95eb178758ff1037fbadab0585f92c2d"
}