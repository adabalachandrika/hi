{
    "total_results": 125,
    "messages": [
        [
            {
                "id": "945736916039532594",
                "type": 19,
                "content": "This is maybe more general than you're looking for, but I think you can think of it a lot like a zero-downtime migration in a regular database setup. Redeploying has zero effect on existing accounts (~ rows in the db), so whatever changes you make need to continue to work with any old account structures, etc.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T17:40:51.726000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945736183504338994"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945736183504338994",
                "type": 0,
                "content": "\ud83d\udc4b are there any restrictions/best practices on redeploying programs? more specifically, how can we make sure that the new deployed program doesn't introduce any compatibility issues?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T17:37:57.076000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945734554663129090",
                "type": 0,
                "content": "gotcha",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "291983603712131072",
                    "username": "0xPufferFish",
                    "avatar": "9ac2d2079070a6a06ad15ef7b8432b56",
                    "discriminator": "5084",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T17:31:28.730000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945734361704169532",
                "type": 19,
                "content": "note that if you click on the badge it will take you to the source",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "291983603712131072",
                        "username": "0xPufferFish",
                        "avatar": "9ac2d2079070a6a06ad15ef7b8432b56",
                        "discriminator": "5084",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T17:30:42.725000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945733252826665020"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945733252826665020",
                "type": 0,
                "content": "thank you!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "291983603712131072",
                    "username": "0xPufferFish",
                    "avatar": "9ac2d2079070a6a06ad15ef7b8432b56",
                    "discriminator": "5084",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T17:26:18.348000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945733176075124816",
                "type": 19,
                "content": "yeah, that\u2019s working now. dependent on the dev publishing ofc\nhttps://twitter.com/solscanofficial/status/1491258622764261378?s=21",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "202244282269171713",
                    "username": "jerald",
                    "avatar": "6cc07436a5bce0823279d8d48b3c75ea",
                    "discriminator": "8334",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "rich",
                        "url": "https://twitter.com/solscanofficial/status/1491258622764261378?s=21",
                        "description": "\u201c#SolscanNewUpdates - Anchor-verified Badges\n\nA program will have \"verified\" tag on #Solscan if its published source code matches that of the deployed program\n\nPlease note that: \"verified\" does NOT mean it can be fully trusted. A verified program can still contain malicious code\u201c",
                        "color": 1942002,
                        "timestamp": "2022-02-09T03:52:16.569000+00:00",
                        "reference_id": "945733176075124816",
                        "author": {
                            "name": "S\u25ceLSCAN \ud83d\udd0d \ud83e\udd80 (@solscanofficial)",
                            "url": "https://twitter.com/solscanofficial",
                            "icon_url": "https://pbs.twimg.com/profile_images/1402851459993989124/EL0CcRLp_400x400.png",
                            "proxy_icon_url": "https://images-ext-1.discordapp.net/external/YzStpMlHeOqI2eqlV3OiG8OTOCmXa9USZpZm-YUkgJo/https/pbs.twimg.com/profile_images/1402851459993989124/EL0CcRLp_400x400.png"
                        },
                        "image": {
                            "url": "https://pbs.twimg.com/media/FLH9zEBXwAEILU2.png",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/G37z95whU4TN-p71JREUBYli7gHfaxj8eR21kTInc4I/https/pbs.twimg.com/media/FLH9zEBXwAEILU2.png",
                            "width": 161,
                            "height": 44
                        },
                        "footer": {
                            "text": "Twitter",
                            "icon_url": "https://abs.twimg.com/icons/apple-touch-icon-192x192.png",
                            "proxy_icon_url": "https://images-ext-1.discordapp.net/external/bXJWV2Y_F3XSra_kEqIYXAAsI3m1meckfLhYuWzxIfI/https/abs.twimg.com/icons/apple-touch-icon-192x192.png"
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "291983603712131072",
                        "username": "0xPufferFish",
                        "avatar": "9ac2d2079070a6a06ad15ef7b8432b56",
                        "discriminator": "5084",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T17:26:00.049000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945731517395640390"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945731517395640390",
                "type": 0,
                "content": "hi guys, is there a way for us to see the rust program's source code in like solscan? like in etherscan we can solidity source code",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "291983603712131072",
                    "username": "0xPufferFish",
                    "avatar": "9ac2d2079070a6a06ad15ef7b8432b56",
                    "discriminator": "5084",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T17:19:24.589000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945679101291810856",
                "type": 19,
                "content": "Thanks so much, I have been looking at it since you mentioned, will write here any results.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "733281043641008239",
                    "username": "tfnyldrm",
                    "avatar": "fab926175d81c46af8f9dac5840351e3",
                    "discriminator": "2021",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "290210612947058689",
                        "username": "btolfa",
                        "avatar": "e2c0bb4ef0d04a3f75a8051fa4982ed4",
                        "discriminator": "8390",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T13:51:07.616000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945666287449813045"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945679013093969960",
                "type": 19,
                "content": "The issue was that we were creating with a different size than the actual size we need on rust side. So, not giving a size on client solved the problem because js predicted the exact size of we need on backend.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "733281043641008239",
                    "username": "tfnyldrm",
                    "avatar": "fab926175d81c46af8f9dac5840351e3",
                    "discriminator": "2021",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T13:50:46.588000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945664818415812648"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945666994563350570",
                "type": 0,
                "content": "Hey guys! \n\nI want to pass an array of associated token accounts to have their balances updated. The problem is that the number of elements in this array of ATAs is variable. Meaning I want to keep it flexible how many ATAs can have their balances updated. What's the best way to pass this varying length of ATAs array as a part of accounts to the ix handler, from the client?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "826339689195241512",
                    "username": "mmdhrumil",
                    "avatar": "3e36b5d1f67cf2f2ac3e97c86a1ea0c4",
                    "discriminator": "9327",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T13:03:01.147000+00:00",
                "edited_timestamp": "2022-02-22T13:03:46.739000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945666287449813045",
                "type": 0,
                "content": "<@!916187801115037728> <@!733281043641008239> I think you can use https://github.com/saber-hq/merkle-distributor as example in the part related to generating and verifying merkle proof.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "290210612947058689",
                    "username": "btolfa",
                    "avatar": "e2c0bb4ef0d04a3f75a8051fa4982ed4",
                    "discriminator": "8390",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/saber-hq/merkle-distributor",
                        "title": "GitHub - saber-hq/merkle-distributor: \ud83d\udce6 A smart contract that distr...",
                        "description": "\ud83d\udce6 A smart contract that distributes a balance of tokens according to a Merkle root - GitHub - saber-hq/merkle-distributor: \ud83d\udce6 A smart contract that distributes a balance of tokens according to a Mer...",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://repository-images.githubusercontent.com/412680182/e53fd14f-2a8b-441d-bfcf-a21f25b405f4",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/9rTUSW9Peankl7AcIRNovUqJebTi0VnIRR7a76h3pdw/https/repository-images.githubusercontent.com/412680182/e53fd14f-2a8b-441d-bfcf-a21f25b405f4",
                            "width": 1000,
                            "height": 500
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "916187801115037728",
                        "username": "blockchaincrazy95",
                        "avatar": "09eb27778b7201fec890e3a3e2c35d7d",
                        "discriminator": "7316",
                        "public_flags": 0
                    },
                    {
                        "id": "733281043641008239",
                        "username": "tfnyldrm",
                        "avatar": "fab926175d81c46af8f9dac5840351e3",
                        "discriminator": "2021",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T13:00:12.558000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945664818415812648",
                "type": 19,
                "content": "did u find a solution to this, if so could you share what was the issue ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "733281043641008239",
                        "username": "tfnyldrm",
                        "avatar": "fab926175d81c46af8f9dac5840351e3",
                        "discriminator": "2021",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T12:54:22.313000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945643934724526090"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945663054329290772",
                "type": 19,
                "content": "https://medium.com/crypto-0-nite/merkle-proofs-explained-6dd429623dc5",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "290210612947058689",
                    "username": "btolfa",
                    "avatar": "e2c0bb4ef0d04a3f75a8051fa4982ed4",
                    "discriminator": "8390",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://medium.com/crypto-0-nite/merkle-proofs-explained-6dd429623dc5",
                        "title": "Merkle proofs Explained.",
                        "description": "This article explains how to obtain and what merkle proofs are.",
                        "reference_id": "945663054329290772",
                        "provider": {
                            "name": "Medium"
                        },
                        "thumbnail": {
                            "url": "https://miro.medium.com/max/1200/1*gp9RaSxleAb3f9uZngpl3A.png",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/KNbEMr_yT1_jgyDXmrRkXlEOgwHqWN3OywcKwYSvJ4A/https/miro.medium.com/max/1200/1%2Agp9RaSxleAb3f9uZngpl3A.png",
                            "width": 1200,
                            "height": 464
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "916187801115037728",
                        "username": "blockchaincrazy95",
                        "avatar": "09eb27778b7201fec890e3a3e2c35d7d",
                        "discriminator": "7316",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T12:47:21.722000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945662597489913857"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945662597489913857",
                "type": 19,
                "content": "Hey, <@!290210612947058689>, could you provide some example source about merkle tree proof?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "916187801115037728",
                    "username": "blockchaincrazy95",
                    "avatar": "09eb27778b7201fec890e3a3e2c35d7d",
                    "discriminator": "7316",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "290210612947058689",
                        "username": "btolfa",
                        "avatar": "e2c0bb4ef0d04a3f75a8051fa4982ed4",
                        "discriminator": "8390",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T12:45:32.803000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945660667870986270"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945660667870986270",
                "type": 19,
                "content": "merkle tree proof.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "290210612947058689",
                    "username": "btolfa",
                    "avatar": "e2c0bb4ef0d04a3f75a8051fa4982ed4",
                    "discriminator": "8390",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "733281043641008239",
                        "username": "tfnyldrm",
                        "avatar": "fab926175d81c46af8f9dac5840351e3",
                        "discriminator": "2021",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T12:37:52.746000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945660283001655336"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945660283001655336",
                "type": 0,
                "content": "Hello everyone, can anyone please give some suggestion about whitelisting 10k pubkeys (nft list) in a contract? doing a loop over 10k elements always exceeds the computing limit.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "733281043641008239",
                    "username": "tfnyldrm",
                    "avatar": "fab926175d81c46af8f9dac5840351e3",
                    "discriminator": "2021",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T12:36:20.986000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945657395814760499",
                "type": 19,
                "content": "Installing from source 1.8.16 fixes this. thanks. \ud83d\udc4d",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "886279599162535969",
                    "username": "mattbraz",
                    "avatar": "0f06e0ef0b197f39f67a77bab896710b",
                    "discriminator": "4045",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T12:24:52.627000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945352934554730556"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945652865450520577",
                "type": 0,
                "content": "Trying to run this mintTo function now but not sure what the multisig arg should be ? i thought it was optional? but i get Type Errors in my tests. I think its the multisig array because it was saying the length of null is undefined but then i tried an empty array as well to no success ```\n    //creates the token\n    await mintTo(\n      provider.connection,\n      fromWallet,\n      mintA,\n      tokenAddress1.publicKey,\n      fromWallet.publicKey,\n      1,\n      null,\n      null,\n      TOKEN_PROGRAM_ID);```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T12:06:52.504000+00:00",
                "edited_timestamp": "2022-02-22T12:08:29.139000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945643934724526090",
                "type": 0,
                "content": "Hello, \nI'm trying to create a large account (more than 10kb) and then, update it using anchor / zero_copy.\n\n\nMy pool account data structure is like;\n```\n#[account(zero_copy)]\npub struct PoolAccount {\n    // Pool name\n    pub name: [u8; 50],\n    // Allowed mint addresses (up to 10k)\n    pub nft_allowed_mint_list: [Pubkey; 10000],\n    pub starts_at: u64,\n    pub ends_at: u64,\n\n    // reward\n    pub reward_token_mint: Pubkey,\n    pub reward_amount: u64,\n    pub reward_vault_nonce: u8,\n    pub reward_per_hour: u64,\n\n    // auth\n    pub creator: Pubkey,\n}\n```\n\nThis is how I define in the context:\n```\n #[account(mut)]\n    pub pool_account: AccountLoader<'info, PoolAccount>,\n```\n\nAnd this is how I try to reach in an instruction; (already created by a separate clientside instruction)\n```\n let pool_account = &mut ctx.accounts.pool_account.load_mut()?;  // (This is first line in instruction)\n```\n\n\nAnd at that line, I'm getting this error message when I interact with the contract for this instruction\n```\nProgram log: panicked at 'from_bytes_mut>SizeMismatch', /Users/tfnyldrm/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.7.3/src/lib.rs:119:3\n```\n\n\nAnyone familiar with this message and how to fix it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "733281043641008239",
                    "username": "tfnyldrm",
                    "avatar": "fab926175d81c46af8f9dac5840351e3",
                    "discriminator": "2021",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T11:31:23.253000+00:00",
                "edited_timestamp": "2022-02-22T11:32:03.493000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945641291054723122",
                "type": 19,
                "content": "not 100% sure, I am still pretty new to this but in most cases a PDA can sign on behalf of the contract so you would transfer to that first",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "519199929776865308",
                        "username": "thanhlongtld",
                        "avatar": null,
                        "discriminator": "2780",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T11:20:52.953000+00:00",
                "edited_timestamp": "2022-02-22T11:21:03.142000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945638126729191424"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945638126729191424",
                "type": 0,
                "content": "but in my case, I need a function to transfer token from program owner to user. Can my program do it automatically without asking for approval?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "519199929776865308",
                    "username": "thanhlongtld",
                    "avatar": null,
                    "discriminator": "2780",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T11:08:18.519000+00:00",
                "edited_timestamp": "2022-02-22T11:08:35.101000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945637767180849172",
                "type": 19,
                "content": "oh okay",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "519199929776865308",
                    "username": "thanhlongtld",
                    "avatar": null,
                    "discriminator": "2780",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "832771976190754846",
                        "username": "j0hn_sm1th.sol",
                        "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                        "discriminator": "3629",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T11:06:52.796000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945627777737031730"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945634456935469076",
                "type": 0,
                "content": "thanks man",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:53:43.572000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945634268594466868",
                "type": 19,
                "content": "ah okay sweet",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "252808943238119424",
                        "username": "armariya",
                        "avatar": "36dbf145011c7dc6699081d01062b47a",
                        "discriminator": "4346",
                        "public_flags": 128
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:52:58.668000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945633971453169684"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945633971453169684",
                "type": 0,
                "content": "",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "252808943238119424",
                    "username": "armariya",
                    "avatar": "36dbf145011c7dc6699081d01062b47a",
                    "discriminator": "4346",
                    "public_flags": 128
                },
                "attachments": [
                    {
                        "id": "945633970199076874",
                        "filename": "unknown.png",
                        "size": 816613,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/945633970199076874/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/945633970199076874/unknown.png",
                        "width": 2144,
                        "height": 1824,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:51:47.824000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945633934279053362",
                "type": 0,
                "content": "I think because of TOKEN_PROGRAM_ID because they change signature of the function",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "252808943238119424",
                    "username": "armariya",
                    "avatar": "36dbf145011c7dc6699081d01062b47a",
                    "discriminator": "4346",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:51:38.961000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945633593970020382",
                "type": 0,
                "content": "``` let mintA = await createMint(\n      provider.connection,\n      fromWallet,\n      fromWallet.publicKey,\n      null,\n      0,\n      TOKEN_PROGRAM_ID\n    );````",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:50:17.825000+00:00",
                "edited_timestamp": "2022-02-22T10:50:30.349000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945633510268469249",
                "type": 0,
                "content": "its regarding the same createMint function",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:49:57.869000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945633449400754186",
                "type": 19,
                "content": "did u see anything like this directly after ```TypeError: Cannot read property 'toString' of undefined\n      at Transaction.sign (node_modules/@solana/web3.js/src/transaction.ts:460:36)\n      at Connection.sendTransaction (node_modules/@solana/web3.js/src/connection.ts:3886:21)\n      at processTicksAndRejections (internal/process/task_queues.js:95:5)\n      at sendAndConfirmTransaction (node_modules/@solana/web3.js/src/util/send-and-confirm-transaction.ts:30:21)```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "252808943238119424",
                        "username": "armariya",
                        "avatar": "36dbf145011c7dc6699081d01062b47a",
                        "discriminator": "4346",
                        "public_flags": 128
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:49:43.357000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945628589100003329"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945630110915121173",
                "type": 0,
                "content": "how to check if a signer owns the mint passed in Anchor program?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "912720112828690483",
                    "username": "coolperson101",
                    "avatar": null,
                    "discriminator": "0341",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:36:27.400000+00:00",
                "edited_timestamp": "2022-02-22T10:36:30.778000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945628965018685461",
                "type": 0,
                "content": "any one else facing error while typing avm use latest, the upgrade keeps failing due to some spl token compilation errors.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:31:54.197000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945628820239708160",
                "type": 0,
                "content": "thanks for help man",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:31:19.679000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945628801268875345",
                "type": 19,
                "content": "ahahaha wtf",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "252808943238119424",
                        "username": "armariya",
                        "avatar": "36dbf145011c7dc6699081d01062b47a",
                        "discriminator": "4346",
                        "public_flags": 128
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:31:15.156000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945628589100003329"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945628589100003329",
                "type": 0,
                "content": "do not know either. I faced the same problem as you today LOL",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "252808943238119424",
                    "username": "armariya",
                    "avatar": "36dbf145011c7dc6699081d01062b47a",
                    "discriminator": "4346",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:30:24.571000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945628205149220884",
                "type": 0,
                "content": "and how would i find this for myself? is it documented anywhere",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:28:53.030000+00:00",
                "edited_timestamp": "2022-02-22T10:29:50.952000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945628120445235220",
                "type": 19,
                "content": "aha ah beautiful wish i asked earlier",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "252808943238119424",
                        "username": "armariya",
                        "avatar": "36dbf145011c7dc6699081d01062b47a",
                        "discriminator": "4346",
                        "public_flags": 128
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:28:32.835000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945628024563449856"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945628024563449856",
                "type": 19,
                "content": "There is no Token in @solana/spl-token 0.2.0 anymore. You should import createMint directly `import { createMint } from \"@solana/spl-token\"`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "252808943238119424",
                    "username": "armariya",
                    "avatar": "36dbf145011c7dc6699081d01062b47a",
                    "discriminator": "4346",
                    "public_flags": 128
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "832771976190754846",
                        "username": "j0hn_sm1th.sol",
                        "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                        "discriminator": "3629",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:28:09.975000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945627623785136128"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945627777737031730",
                "type": 19,
                "content": "i think u only need IDL?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "519199929776865308",
                        "username": "thanhlongtld",
                        "avatar": null,
                        "discriminator": "2780",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:27:11.127000+00:00",
                "edited_timestamp": "2022-02-22T10:27:22.341000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945604237256183818"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945627623785136128",
                "type": 0,
                "content": "I am getting this error in my test code for a solana program, gotta be something heaps beginner but no idea. Tried reinstalling the library but yeh i got no idea? does the method even exist anymore or something? Any help is appreciated: \n```import { TOKEN_PROGRAM_ID, Token } from \"@solana/spl-token\";```\n``` let mintA = await Token.createMint(\n      provider.connection,\n      fromWallet,\n      fromWallet.publicKey,\n      null,\n      0,\n      TOKEN_PROGRAM_ID\n    );````\n\n```TypeError: Cannot read property 'createMint' of undefined\n      at /home/kali/Desktop/SOLANA/NFTTransfers/tests/NFTTransfers.ts:30:29\n      at Generator.next (<anonymous>)\n      at fulfilled (tests/NFTTransfers.ts:24:58)\n      at processTicksAndRejections (internal/process/task_queues.js:95:5)```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832771976190754846",
                    "username": "j0hn_sm1th.sol",
                    "avatar": "73f3f04718deab87ef4d408522c9dcc9",
                    "discriminator": "3629",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T10:26:34.422000+00:00",
                "edited_timestamp": "2022-02-22T10:26:51.973000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945604285176090624",
                "type": 0,
                "content": "*need",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "519199929776865308",
                    "username": "thanhlongtld",
                    "avatar": null,
                    "discriminator": "2780",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T08:53:50.064000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945604237256183818",
                "type": 0,
                "content": "Hello guys. I'm new to anchor and solana and I'm trying to make a ddapp on solana. My question is: Must I put my reactjs front-end in anchor's app folder and push all of them to server or the IDL is all I neef?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "519199929776865308",
                    "username": "thanhlongtld",
                    "avatar": null,
                    "discriminator": "2780",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T08:53:38.639000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945596743372922890",
                "type": 19,
                "content": "Thanks Anan",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "930164415637106719",
                        "username": "Anan",
                        "avatar": "be265651e8c20f8274f52777f1962779",
                        "discriminator": "8066",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T08:23:51.958000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945589285933973515"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945589285933973515",
                "type": 0,
                "content": "Hey, <@!823873608878522379>, try `space = 8 + Transaction::size(trans)`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "930164415637106719",
                    "username": "Anan",
                    "avatar": "be265651e8c20f8274f52777f1962779",
                    "discriminator": "8066",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "823873608878522379",
                        "username": "Gpathela|OneAuth",
                        "avatar": "3be14b99882b072fdf8ae9fbed187217",
                        "discriminator": "6035",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T07:54:13.966000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945574039508885507",
                "type": 0,
                "content": "Any idea what I am doing wrong",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:53:38.935000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945573987474366474",
                "type": 0,
                "content": "I am getting this error: TypeError: Blob.encode[data] requires (length 289) Buffer as src",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:53:26.529000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945573897120657468",
                "type": 19,
                "content": "Amazing mouse... Just one more help. Please consider the code below  #[program]\npub mod mysolanaapp {\n    use super::*;\n    pub fn initialize(ctx: Context<Initialize>, trans: Vec<u8>) -> ProgramResult {\n        msg!(\"Initalization started\");\n        let my_account = &mut ctx.accounts.my_account;\n        msg!(\"Got my account\");\n        my_account.transaction = trans;\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\n#[instruction(trans: Vec<u8>)]\npub struct Initialize<'info> {\n    #[account(init, payer = user, space = Transaction::size(trans))]\n    pub my_account: Account<'info, Transaction>,\n    #[account(mut)]\n    pub user: Signer<'info>,\n    pub system_program: Program<'info, System>,\n}\n\n#[account]\npub struct Transaction {\n    pub transaction: Vec<u8>,\n}\n\nimpl Transaction {\n    pub fn size(trans: Vec<u8>) -> usize {\n        4 + trans.len()\n    }\n}",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "586649281528594469",
                        "username": "mouse",
                        "avatar": "c420790eb047e85ad9e945b849575794",
                        "discriminator": "9357",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:53:04.987000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945572090625548298"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945572090625548298",
                "type": 0,
                "content": "https://imfeld.dev/writing/starting_with_solana_part04",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "586649281528594469",
                    "username": "mouse",
                    "avatar": "c420790eb047e85ad9e945b849575794",
                    "discriminator": "9357",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://imfeld.dev/writing/starting_with_solana_part04",
                        "title": "Starting with Solana, Part 4 - A Todo List with Rewards",
                        "color": 3355443,
                        "thumbnail": {
                            "url": "https://website-qgt9b0hsj-dimfeld.vercel.app/writing/starting_with_solana_part04.og-image.png",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/iLEDV0xxioyh84dFvteqYta7mhR86O17L7GVoaBJRdU/https/website-qgt9b0hsj-dimfeld.vercel.app/writing/starting_with_solana_part04.og-image.png",
                            "width": 800,
                            "height": 418
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:45:54.285000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945571803999399936",
                "type": 19,
                "content": "Cool... Can you please help me with the URL of this code. Really awesome",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "737915190045311067",
                        "username": "Hi_I'mJohn",
                        "avatar": "ae9c37d449836e55aead84d00c4633aa",
                        "discriminator": "2906",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:44:45.948000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945570929054994462"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945570929054994462",
                "type": 19,
                "content": "This is based off a todo list tutorial. Is this what you are looking for?\n```\n//Create List\n#[derive(Accounts)]\n#[instruction(name: String, capacity: u16, list_bump: u8)]\npub struct CreateList<'info> {\n    #[account(init,\n        payer=user,\n        space=List::space(&name, capacity),\n        seeds=[\n            b\"list\",\n            user.to_account_info().key.as_ref(),\n            name_seed(&name)\n        ],\n        bump=list_bump)]\n    pub list: Account<'info, List>,\n    pub user: Signer<'info>,\n    pub system_program: Program<'info, System>,\n}\n\n\n//\"List\" Data Account fields\n#[account]\npub struct List {\n    pub owner: Pubkey,\n    pub name: String,\n    pub bump: u8,\n    pub capacity: u16,\n    pub lines: Vec<Pubkey>,\n}\n\nimpl List {\n    fn space(name: &str, capacity: u16) -> usize {\n        // discriminator + owner pubkey + bump + capacity\n        8 + 32 + 1 + 2 +\n            // name string\n            4 + name.len() +\n            // vec of item pubkeys\n            4 + (capacity as usize) * std::mem::size_of::<Pubkey>()\n    }\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "823873608878522379",
                        "username": "Gpathela|OneAuth",
                        "avatar": "3be14b99882b072fdf8ae9fbed187217",
                        "discriminator": "6035",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:41:17.345000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945559291769786389"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945570343387549696",
                "type": 0,
                "content": "yes",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:38:57.711000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945570245094027296",
                "type": 19,
                "content": "Hi Apollo.. is it a reply for me.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T06:38:34.276000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945559813004349480"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945559826241581056",
                "type": 0,
                "content": "i just leave extra space for it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T05:57:10.228000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945559813004349480",
                "type": 0,
                "content": "it starts out as 4 bytes. The 4 bytes just hold the length",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T05:57:07.072000+00:00",
                "edited_timestamp": "2022-02-22T05:57:21.428000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945559598948057088",
                "type": 19,
                "content": "Hi Apollo... I have q question for you... How you will init Vault info... like how you will implement size fo Vec<Protocol>",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T05:56:16.037000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945558818643923004"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945559291769786389",
                "type": 0,
                "content": "Hi Team. I am using anchor for development. I have taken an Vectot of u8. Now while init I need to provide the size of it. Any idea how I can implement the size of a vector for saving it in an account.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "823873608878522379",
                    "username": "Gpathela|OneAuth",
                    "avatar": "3be14b99882b072fdf8ae9fbed187217",
                    "discriminator": "6035",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T05:55:02.800000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945558818643923004",
                "type": 0,
                "content": "How do I check the space on a struct within my account? I want to make sure that each `Protocol` is the right size in the `protocols` vector:\n\n```#[account]\npub struct VaultInfo {\n    pub version: u8,\n    pub protocols: Vec<Protocol>, \n    pub creator: Pubkey,\n}```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T05:53:09.998000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945548596575633419",
                "type": 0,
                "content": "Hey guys, need some help working with creating reserve space at the end of my state object, however I am getting a random IDL error with anchor and cant seam to find away around this? Have put together this base repo with only the code required to reproduce the error. Any help would be much appreceated as ive been stuck on this for days now: https://github.com/utx0/anchor_reserve_idl_error Thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "341381788620423168",
                    "username": "utx0_",
                    "avatar": "9d9ba5056960dab985f4fec61f07dbd6",
                    "discriminator": "4298",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/utx0/anchor_reserve_idl_error",
                        "title": "GitHub - utx0/anchor_reserve_idl_error",
                        "description": "Contribute to utx0/anchor_reserve_idl_error development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/983847628731da89b3a3b7e067b0b49774f731572ff22cddc34e6deef3f8febb/utx0/anchor_reserve_idl_error",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/SrTBK7mMLQsB4BAWuKqtr0EXDDiqeClM0TEmfjWtmdc/https/opengraph.githubassets.com/983847628731da89b3a3b7e067b0b49774f731572ff22cddc34e6deef3f8febb/utx0/anchor_reserve_idl_error",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T05:12:32.867000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945536317285072906",
                "type": 0,
                "content": "https://medium.com/@Arrivant_/how-to-verify-nfts-in-an-anchor-program-a051299acde8",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "881771727376494693",
                    "username": "Gumnut",
                    "avatar": "ebee3bcc01e4c7da1f1042b0c1ab2f45",
                    "discriminator": "5027",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://medium.com/@Arrivant_/how-to-verify-nfts-in-an-anchor-program-a051299acde8",
                        "title": "How to verify NFTs in an Anchor Program",
                        "description": "by Ajobi",
                        "provider": {
                            "name": "Medium"
                        },
                        "thumbnail": {
                            "url": "https://miro.medium.com/max/1200/1*R1Rxf0euTwW4S6b7bU2l3w.png",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/5Me-G_8_KspT0nGQ4etKGiVXGdXY2m9q43b4xPQhD9U/https/miro.medium.com/max/1200/1%2AR1Rxf0euTwW4S6b7bU2l3w.png",
                            "width": 1200,
                            "height": 1088
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T04:23:45.256000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945536309286567956",
                "type": 0,
                "content": "ahh nvm this helped me \ud83d\ude42",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "881771727376494693",
                    "username": "Gumnut",
                    "avatar": "ebee3bcc01e4c7da1f1042b0c1ab2f45",
                    "discriminator": "5027",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T04:23:43.349000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945528307707965440",
                "type": 19,
                "content": "trying this",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "881771727376494693",
                    "username": "Gumnut",
                    "avatar": "ebee3bcc01e4c7da1f1042b0c1ab2f45",
                    "discriminator": "5027",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T03:51:55.624000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "912400476190949418"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945524433425170432",
                "type": 19,
                "content": "From what I understand adding a constraint to the ATA account that the balance > 0 is a good start, but that doesn't verfiy the ATA is owned by the signer.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "881771727376494693",
                    "username": "Gumnut",
                    "avatar": "ebee3bcc01e4c7da1f1042b0c1ab2f45",
                    "discriminator": "5027",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T03:36:31.923000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945513049329111090"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945518657390383144",
                "type": 0,
                "content": "how to do unit test using anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "681738724203036742",
                    "username": "ATIV. SOSINISGOD",
                    "avatar": "523aadeccafedd03e8ce92d6d56ff163",
                    "discriminator": "7357",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T03:13:34.809000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945513049329111090",
                "type": 0,
                "content": "`.owner` returns a token program on Mint and TokenAccount types",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "881771727376494693",
                    "username": "Gumnut",
                    "avatar": "ebee3bcc01e4c7da1f1042b0c1ab2f45",
                    "discriminator": "5027",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T02:51:17.743000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945512121314193418",
                "type": 0,
                "content": "how can I check that a signer owns the token it passes in?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "881771727376494693",
                    "username": "Gumnut",
                    "avatar": "ebee3bcc01e4c7da1f1042b0c1ab2f45",
                    "discriminator": "5027",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T02:47:36.487000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945508817645477898",
                "type": 19,
                "content": "ok so i think i understand what those terms mean, but what exactly is  _bump_seed being set to in this line? (and why?)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T02:34:28.831000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945502697807822958"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945502697807822958",
                "type": 19,
                "content": "https://discord.com/channels/889577356681945098/889702325231427584/939324164890845265",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "250469916006678530",
                        "username": "still",
                        "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                        "discriminator": "3940",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T02:10:09.748000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945501950407999500"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945501950407999500",
                "type": 0,
                "content": "looking into escrow sample code making sure i understand each line... what exactly is happening here?  \nlet (pda, _bump_seed) = Pubkey::find_program_address(&[ESCROW_PDA_SEED], ctx.program_id);",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "250469916006678530",
                    "username": "still",
                    "avatar": "63d24570b6c0826a7a74dede9aa8afa1",
                    "discriminator": "3940",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T02:07:11.554000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945484760069836861",
                "type": 19,
                "content": "If you decide to change the structure of that account, it might be nice to store a version number so it's easy in your code to say \"ah, hmm, this is a super old v2 account, we're on v19 now so need to update it\"",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:58:53.058000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945477661101260850"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945483877634441246",
                "type": 0,
                "content": "Thank you! Appreciate it.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "703867731056918600",
                    "username": "hs0104",
                    "avatar": null,
                    "discriminator": "6214",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:55:22.669000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945483800081739776",
                "type": 19,
                "content": "Run a test validator with `solana-test-validator`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "326107472098099201",
                    "username": "Tom Linton",
                    "avatar": "3073b6377f58d2a64e83b0cb82f445c3",
                    "discriminator": "2464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "703867731056918600",
                        "username": "hs0104",
                        "avatar": null,
                        "discriminator": "6214",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:55:04.179000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945481364571058256"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945481364571058256",
                "type": 19,
                "content": "Bump",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "703867731056918600",
                    "username": "hs0104",
                    "avatar": null,
                    "discriminator": "6214",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:45:23.508000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945473976384253952"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945478797128511528",
                "type": 0,
                "content": "Aww that is kind of unfortunate \ud83d\ude26 since the limit is quite small.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "147019065519505408",
                    "username": "B14m3m3",
                    "avatar": "2d023df1e57676b0ef7f47c9798ec81d",
                    "discriminator": "4586",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:35:11.382000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945478121187069962",
                "type": 19,
                "content": "Not as far as I know/I doubt it, since the confirmation is supposed to be for the entire transaction",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "147019065519505408",
                        "username": "B14m3m3",
                        "avatar": "2d023df1e57676b0ef7f47c9798ec81d",
                        "discriminator": "4586",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:32:30.225000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945474382652923945"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945477661101260850",
                "type": 0,
                "content": "What's the point of adding a `version` variable to an account?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:30:40.532000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945474382652923945",
                "type": 0,
                "content": "<@!134416332509675520>  Sorry to ping you, but i do believe you helped me the last time around.\nIs there a way to basically split the transactions, while still only having a single \"frontend confirmation\"?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "147019065519505408",
                    "username": "B14m3m3",
                    "avatar": "2d023df1e57676b0ef7f47c9798ec81d",
                    "discriminator": "4586",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:17:38.889000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945473976384253952",
                "type": 0,
                "content": "Hey all, just running through the tutorial in the book at https://project-serum.github.io/anchor/tutorials/tutorial-0.html#generating-a-client. When I try to run \"node client.js\", I get the following error, any thoughts?\n\nthrow new Error('failed to get recent blockhash: ' + e);\n            ^\n\nError: failed to get recent blockhash: FetchError: request to http://localhost:8899/ failed, reason: connect ECONNREFUSED 127.0.0.1:8899",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "703867731056918600",
                    "username": "hs0104",
                    "avatar": null,
                    "discriminator": "6214",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://project-serum.github.io/anchor/tutorials/tutorial-0.html",
                        "title": "A Minimal Example | \u2693 Anchor",
                        "color": 4108156
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-22T00:16:02.027000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945468033789464576",
                "type": 19,
                "content": "Anchor needs to do some stuff at the end of your instruction function. For example, it lets you work with these nice rust structs etc. instead of raw accounts, but at the end of the day you still need to actually persist those structs back into the raw account storage.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:52:25.202000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945464794633367602"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945464794633367602",
                "type": 19,
                "content": "what is meant by exit routine? any examples \ud83d\ude05",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:39:32.927000+00:00",
                "edited_timestamp": "2022-02-21T23:39:57.533000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945459297368813618"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945463969580187658",
                "type": 0,
                "content": "Hey i was in here a lil while ago, looking into how to chain transactions and got that working kinda nicely. But I am running into a transaction too large error.\nIs there a neat way to actually get around that? :/",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "147019065519505408",
                    "username": "B14m3m3",
                    "avatar": "2d023df1e57676b0ef7f47c9798ec81d",
                    "discriminator": "4586",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "945463968779092049",
                        "filename": "unknown.png",
                        "size": 2403,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/945463968779092049/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/945463968779092049/unknown.png",
                        "width": 456,
                        "height": 22,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:36:16.219000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945459297368813618",
                "type": 19,
                "content": "Mm, not totally sure if this is the right way to do it, but something like (random useless example):\n```.rs\n        for r in ctx.remaining_accounts {\n            let hmm = Account::<Owner>::try_from(r)?;\n            // do stuff with it\n            ...\n            // and then remember to call its exit routine\n            // so you actually write the changes back out\n            // this would happen automagically if you\n            // didn't use remaining_accounts\n            hmm.exit(ctx.program_id)?;\n        }\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:17:42.277000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945456131621421158"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945457150438813706",
                "type": 0,
                "content": "anyway to have multiple programs in 1 anchor project that use different anchor-lang/spl versions? Im getting dep errors",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "293578924901007361",
                    "username": "bluemoose",
                    "avatar": "d6e8953a464cbe02f412a639fa1bf2b5",
                    "discriminator": "9396",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:09:10.409000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945456372764540958",
                "type": 19,
                "content": "i want to do this with a variable number of accounts",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:06:04.997000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945456178320781453"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945456178320781453",
                "type": 0,
                "content": "Why do you not want to just pass it as a normal account?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:05:18.638000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945456131621421158",
                "type": 19,
                "content": "any examples handy?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:05:07.504000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945456019738337350"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945456019738337350",
                "type": 19,
                "content": "Mm, yes, though you'd have to make sure that anchor actually writes the discriminator bytes (can't remember what that requires off the top of my head\u2014way easier to just do it the usual way)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:04:40.829000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945455821800767518"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945455821800767518",
                "type": 19,
                "content": "is there a way to do this through the remaining accounts?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:03:53.637000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945455450235752479"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945455450235752479",
                "type": 0,
                "content": "You would need to pass that address into the `createMultisig` instruction too, and do another `#[account(zero)]` on top of it.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:02:25.049000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945455321013420072",
                "type": 19,
                "content": "You never actually init the `ownerA` account, you just allocate its storage. So you never git anchor a chance to set the first 8 bytes of the account storage to be the right `Owner` discriminator bytes.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T23:01:54.240000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945451107310784584"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945451169361322044",
                "type": 0,
                "content": "program log:\n```\n\u279c  git:(main) \u2717 cat .anchor/program-logs/5q6Nk8kyxa2Kkc7RSi5eouNDneRQYoyiK6ud28R2m5Uq.serum_multisig.log\nStreaming transaction logs mentioning 5q6Nk8kyxa2Kkc7RSi5eouNDneRQYoyiK6ud28R2m5Uq. Confirmed commitment\nTransaction executed in slot 2:\n  Signature: KZrUBSfmAqP1X6YjtxNksmDJma3qhUohwuieYEpsDR5xggQn9v2WpDJarrm1oD3p6VV7nBoZeBQ2cienvH5Th2d\n  Status: Ok\n  Log Messages:\n    Program 11111111111111111111111111111111 invoke [1]\n    Program 11111111111111111111111111111111 success\n    Program 11111111111111111111111111111111 invoke [1]\n    Program 11111111111111111111111111111111 success\n    Program 5q6Nk8kyxa2Kkc7RSi5eouNDneRQYoyiK6ud28R2m5Uq invoke [1]\n    Program log: Instruction: CreateMultisig\n    Program 5q6Nk8kyxa2Kkc7RSi5eouNDneRQYoyiK6ud28R2m5Uq consumed 3211 of 200000 compute units\n    Program 5q6Nk8kyxa2Kkc7RSi5eouNDneRQYoyiK6ud28R2m5Uq success\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T22:45:24.409000+00:00",
                "edited_timestamp": "2022-02-21T22:45:29.121000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945451107310784584",
                "type": 0,
                "content": "Running into an `Invalid account discriminator here`\n\n```\nconst multisig = anchor.web3.Keypair.generate();\nconst [multisigSigner, nonce] =\n  await anchor.web3.PublicKey.findProgramAddress(\n    [multisig.publicKey.toBuffer()],\n    program.programId\n  );\nconst multisigSize = 200; // Big enough.\n\nconst ownerA = anchor.web3.Keypair.generate();\nconst ownerB = anchor.web3.Keypair.generate();\n\nconst owners = [ownerA.publicKey, ownerB.publicKey];\n\nconst threshold = new anchor.BN(1);\nawait program.rpc.createMultisig(owners, threshold, nonce, {\n  accounts: {\n    multisig: multisig.publicKey,\n  },\n  instructions: [\n    await program.account.multisig.createInstruction(\n      multisig,\n      multisigSize\n    ),\n    await program.account.owner.createInstruction(\n      ownerA,\n      multisigSize\n    ),\n  ],\n  signers: [multisig, ownerA],\n});\n\nlet multisigAccount = await program.account.multisig.fetch(\n  multisig.publicKey\n);\n\nlet ownerAAccount = await program.account.owner.fetch(\n  ownerA.publicKey\n);\n\nassert(ownerAAccount);\n```    \nThe error  is happenign specifically on `let ownerAAccount = await program.account.owner.fetch(ownerA.publicKey);`. Why is this the case?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T22:45:09.615000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945451045071487027",
                "type": 0,
                "content": "I have:\n\n```\n pub fn create_multisig(\n    ctx: Context<CreateMultisig>,\n    owners: Vec<Pubkey>,\n    threshold: u64,\n    nonce: u8,\n) -> Result<()> {\n    assert_unique_owners(&owners)?;\n    require!(\n        threshold > 0 && threshold <= owners.len() as u64,\n        InvalidThreshold\n    );\n    require!(!owners.is_empty(), InvalidOwnersLen);\n\n    // construct the multisig\n    let multisig = &mut ctx.accounts.multisig;\n    multisig.owners = owners;\n    multisig.threshold = threshold;\n    multisig.nonce = nonce;\n    multisig.owner_set_seqno = 0;\n    Ok(())\n}\n\n#[derive(Accounts)]\npub struct CreateMultisig<'info> {\n    #[account(zero, signer)]\n    multisig: Box<Account<'info, Multisig>>,\n}\n\n#[account]\npub struct Multisig {\n    pub owners: Vec<Pubkey>,\n    pub threshold: u64,\n    pub nonce: u8, // this is the nonce we use to find the PDA\n    pub owner_set_seqno: u32, // set of owners version #\n}\n\n#[account]\npub struct Owner {\n    pub multisigs: Vec<Pubkey>,\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T22:44:54.776000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945444128383176804",
                "type": 0,
                "content": "Do you know how i can encode and decode a file or a message using the keypair of my wallet ? I search for javascript library or function but i found nothing on this subject",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "316222631613562882",
                    "username": "Matlefebvre1234",
                    "avatar": "c3d9292c2868241e6d6ad2656b88175d",
                    "discriminator": "5957",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T22:17:25.709000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945439463167905802",
                "type": 19,
                "content": "ohhhh",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:58:53.435000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945435062692892692"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945435374103179285",
                "type": 19,
                "content": "No, unfortunately anchor does support this yet. You'll need to use the `remaining_accounts` feature and handle the deserialization etc. yourself (remainign_accounts are all just AccountInfos)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:42:38.526000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945431707631386664"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945435146276995112",
                "type": 0,
                "content": "But you're just rewriting out the data from scratch",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:41:44.208000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945435062692892692",
                "type": 19,
                "content": "Assuming you made sure to allocate enough space, then yeah, when you add things into the protocols vec and the re-serialize the struct back into the account, it just writes everything back out again\u2014so in effect everything else gets pushed over to make space",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "925167601590616174",
                        "username": "apollo",
                        "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                        "discriminator": "2312",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:41:24.280000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945432247874494604"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945432247874494604",
                "type": 19,
                "content": "where does the next field start, though? In this example, I'm initializing the account with zero `protocols`. So where is the `creator`'s first byte? Is it only 4 after? Then what happens if I add an item to the Vec? Does `creator`'s location get moved?\n\n```#[account]\npub struct MyAccount {\n    pub version: u8,\n    pub protocols: Vec<OtherAccount>, \n    pub creator: Pubkey,\n    pub vault_extra_space: [u8; 256],\n}```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "925167601590616174",
                    "username": "apollo",
                    "avatar": "7dd24539d59b3b71a2ba144b7f7dc349",
                    "discriminator": "2312",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:30:13.175000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945264903441244160"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945431707631386664",
                "type": 19,
                "content": "Follow up on this - is there any way to pass in a variable number of accounts (all of the same type)? E.g.\n\n```\n#[derive(Accounts)]\npub struct CreateMultisig<'info> {\n    #[account(zero, signer)]\n    multisig: Box<Account<'info, Multisig>>,\n    #[account(mut)]\n    owners: Vec<Account<'info, Owner>>,\n}\n\n\n#[account]\npub struct Multisig {\n    pub owners: Vec<Pubkey>,\n    pub threshold: u64,\n    pub nonce: u8, // this is the nonce we use to find the PDA\n    pub owner_set_seqno: u32, // set of owners version #\n}\n\n#[account]\npub struct Owner {\n    pub multisigs: Vec<Pubkey>,\n}\n```\nIf this is something we can do, what are the restrictions here? Also for some more context: for any multisig, we have a mapping of owners (see `owners: Vec<Pubkey>` on the `Multisig` object) - but I want to create this reverse mapping. The nature of it is that owners:multisig is n:1, so passing in a variable # of accounts on the `#[derive(Accounts)]` obj is what we'd need to do",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:28:04.371000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945398754536734771"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945430573797761104",
                "type": 0,
                "content": "thx",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "849035945487630337",
                    "username": "agronomist",
                    "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                    "discriminator": "1591",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:23:34.044000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945430567837659176",
                "type": 19,
                "content": "ah, ok \ud83d\ude42 i'm already using two different instructions for this but decided to ask about this )",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "849035945487630337",
                    "username": "agronomist",
                    "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                    "discriminator": "1591",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:23:32.623000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945430236143702077"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945430236143702077",
                "type": 19,
                "content": "Either don't use init_if_needed at all, and just have two separate instructions, one for when it's already init'd and one for when it's not, or store a flag, `has_already_been_initialized: bool` in the struct, etc.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "849035945487630337",
                        "username": "agronomist",
                        "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                        "discriminator": "1591",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:22:13.541000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945429633048920154"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945429887471214652",
                "type": 0,
                "content": "i think i need to setup default value 0 when it initialized, but i don't know how to do this only on initialization",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "849035945487630337",
                    "username": "agronomist",
                    "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                    "discriminator": "1591",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:20:50.411000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945429633048920154",
                "type": 19,
                "content": "i have ```#[account(\n    init_if_needed,\n    payer = user,\n    space = 64,\n    seeds = [user.key().as_ref(), b\"soltery\"],\n    bump = staker_bump)]\npub staking_info: Account<'info, StakeInfo>,\n\n#[account]\npub struct UserSettings {\n    pub staked_amount: u64,\n    pub last_changed_date: i64,\n    pub pending_tickets: u64,\n}``` And i want use this in one method but how i can check that this account initialized first time to increase staked_amount value?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "849035945487630337",
                    "username": "agronomist",
                    "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                    "discriminator": "1591",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:19:49.752000+00:00",
                "edited_timestamp": "2022-02-21T21:20:07.718000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945429031736725565"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945429031736725565",
                "type": 19,
                "content": "What do you mean? Not sure I understand your question",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "849035945487630337",
                        "username": "agronomist",
                        "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                        "discriminator": "1591",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:17:26.388000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945428906012475402"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945428906012475402",
                "type": 19,
                "content": "if i have field with type u64 i can check ctx.accounts.myaccount.myfield == 0 ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "849035945487630337",
                    "username": "agronomist",
                    "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                    "discriminator": "1591",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:16:56.413000+00:00",
                "edited_timestamp": "2022-02-21T21:17:13.520000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945428622443950130"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945428758159061072",
                "type": 0,
                "content": "You can however do something like this:\n```.rs\n*ctx.accounts.that_new_account = ItsStruct::default();\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:16:21.162000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945428622443950130",
                "type": 19,
                "content": "Not really, the data starts off with all zeros",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "849035945487630337",
                        "username": "agronomist",
                        "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                        "discriminator": "1591",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:15:48.805000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945428507113173002"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945428507113173002",
                "type": 0,
                "content": "Hi! it's possible to define default values for data account if it initialized first time?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "849035945487630337",
                    "username": "agronomist",
                    "avatar": "c31fc9428a997afcfbde1c383e50bc55",
                    "discriminator": "1591",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:15:21.308000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945425278505726042",
                "type": 0,
                "content": "Is anyone using regex in a contract?\n `Function _ZN5regex4exec11ExecBuilder5build17h6409425ee0b47b20E Stack offset of 11208 exceeded max offset of 4096 by 7112 bytes, please minimize large stack variables`\n\n\n// Getting stack size too large when using regex \ud83d\ude26\n```\nfn clean_username(username: String) -> String {\n    let re = Regex::new(r\"\\W+\").unwrap();\n    let result = re.replace_all(&username, \"\");\n    return result.to_string();\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "669837238816735242",
                    "username": "Kane Labs",
                    "avatar": "a35884cf9dd4148022cfd39179ca09fc",
                    "discriminator": "5144",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T21:02:31.548000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945407693923971082",
                "type": 0,
                "content": "Do you know how i can encode and decode a file or a message using the keypair of my wallet ? I search for javascript library or function but i found nothing on this subject",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "316222631613562882",
                    "username": "Matlefebvre1234",
                    "avatar": "c3d9292c2868241e6d6ad2656b88175d",
                    "discriminator": "5957",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:52:39.057000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945403936314122250",
                "type": 0,
                "content": "more detail about the script here https://github.com/glyfo/glyclt-solana/blob/main/glyclt",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "498346980821565440",
                    "username": "falex",
                    "avatar": "4516937d9674701b578324d63e1f8ab3",
                    "discriminator": "2178",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/glyfo/glyclt-solana/blob/main/glyclt",
                        "title": "glyclt-solana/glyclt at main \u00b7 glyfo/glyclt-solana",
                        "description": "Glyfo Command Line Tool - Solana Develop Enviroment - glyclt-solana/glyclt at main \u00b7 glyfo/glyclt-solana",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/95eec5c9f5c17321079b8511dd6eed427200feb4a58f4bfc05a5b461c3c8bbaf/glyfo/glyclt-solana",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/h-QsIgfAYC29gYER9y5Oor1aIwdEJCwwg74ch5092EU/https/opengraph.githubassets.com/95eec5c9f5c17321079b8511dd6eed427200feb4a58f4bfc05a5b461c3c8bbaf/glyfo/glyclt-solana",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:37:43.173000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945403832203100210",
                "type": 0,
                "content": "my question is about declare! public key , what is the best option to replace it ? in automatic mode",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "498346980821565440",
                    "username": "falex",
                    "avatar": "4516937d9674701b578324d63e1f8ab3",
                    "discriminator": "2178",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:37:18.351000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945403612580946071",
                "type": 0,
                "content": "Hi , I am using this script to do anchor build inside the container . ```rust\n   docker exec -i solanaX /bin/bash -s <<EOF\n   export PATH=$_path\n   export RUST_BACKTRACE=full\n   export ANCHOR_WALLET=$MASTER_WALLET\n   home=$(pwd | sed 's#.*/##')\n   echo \"Proyect:\\$home\"\n   cd /usr/src/\\$home\n   rm -rf target \n   anchor build\n   exit\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "498346980821565440",
                    "username": "falex",
                    "avatar": "4516937d9674701b578324d63e1f8ab3",
                    "discriminator": "2178",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:36:25.989000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945401361586085988",
                "type": 19,
                "content": "Yeah, the signers array takes in full keypairs",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:27:29.310000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945400689645981747"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945400689645981747",
                "type": 0,
                "content": "I have another question about signers here:\n\n```\nconst payer = anchor.web3.Keypair.generate();\n\nawait program.rpc.initializeTokenAcct(\n      {\n        accounts: {\n          tokenProgram: splToken.TOKEN_PROGRAM_ID,\n          multisigTokenAccount: multisigNFTAccount,\n          multisig: multisig.publicKey,\n          tokenAcctAuthority: payer.publicKey,\n          multisigSigner\n        },\n        signers: [payer],\n      }\n    );\n```\nI'm able to assign payer as a signer in this RPC call. Is that because I have the keypair here? If we only had the `publicKey` would I get an error for trying to set `payer` as signers in this case?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:24:49.107000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945400591532847144",
                "type": 19,
                "content": "Mm, I'm not sure, there may be some now\u2014there's a new version of the spl token js library, I think the type signatures there should explain a lot",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:24:25.715000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945399931445866547"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945400010529452133",
                "type": 0,
                "content": "Your program gets passed some `&[AccountInfo]`s, and that's it\u2014no way to load any new ones.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:22:07.193000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945399931445866547",
                "type": 19,
                "content": "Got it. Is there a guide or relevant functions in managing the associated token accounts?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:21:48.338000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945399565585092698"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945399905697038437",
                "type": 0,
                "content": "I think it's helpful to think of this in terms of the lowlevel solana entrypoint signature: https://github.com/solana-labs/example-helloworld/blob/master/src/program-rust/src/lib.rs#L24",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:21:42.199000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945399565585092698",
                "type": 19,
                "content": "That's just how solana's performance model works\u2014the client always has to specify every single account of interest, so that the solana runtime can load them all ahead of time/maybe parallelize your tx with others.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:20:21.110000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945399389558554675"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945399389558554675",
                "type": 19,
                "content": "> The program can't dynamically look up an associated token account etc.\n\nWhy is this the case?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:19:39.142000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945398754536734771"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945398938146586645",
                "type": 0,
                "content": "In solana I think it's best to think of there not being much of a separation between client and server, since at the end of the day the client needs to know so much about the addresses/accounts the server expects.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:17:51.517000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "945398754536734771",
                "type": 19,
                "content": "Ah, there's no avoiding approach #2 if I'm understanding you right\u2014no matter what the client has to specify all relevant accounts. The program can't dynamically look up an associated token account etc.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:17:07.741000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945398479507836988"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945398479507836988",
                "type": 19,
                "content": "For example, if we want to do an SPL token transfer, we can structure our program vs. client in a few diff ways. I.e. \n\nApproach #1:\n\nProgram/contract takes the owner's public key as input and then does a search to see if the associated token account exists. If not, create one, then execute the transfer\n\nApproach #2:\n\nProgram/contract takes the public key of the associated token account. The client code is responsible for fetching the owner's token accounts and seeing fi the associated token acct exists. \n\nApproach #1 vs #2 are different based off *where* the code lives to manage the associated token accts given the owner's public key. \n\nI'm wondering if there are best practices and pitfalls to avoid when structuring your code across programs vs. client code",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "891024357026041907",
                    "username": "jpgGMI",
                    "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                    "discriminator": "7002",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:16:02.169000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945394529282953246"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "945394529282953246",
                "type": 19,
                "content": "What do you mean by avoid storing state in program accounts/objects? As opposed to storing it where?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "891024357026041907",
                        "username": "jpgGMI",
                        "avatar": "943bbeed19ca26db6e2d2357a422cb70",
                        "discriminator": "7002",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-21T19:00:20.362000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "945376900199616602"
                },
                "hit": true
            }
        ]
    ],
    "analytics_id": "11975cdf0c0daea7024eb40d317a1ae0"
}