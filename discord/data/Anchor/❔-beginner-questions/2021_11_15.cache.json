{
    "total_results": 72,
    "messages": [
        [
            {
                "id": "909872175312433203",
                "type": 19,
                "content": "Thanks!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "847130012879814668",
                    "username": "Hunterws",
                    "avatar": "450d7d97c8a99525d0e6c069bba6d1b1",
                    "avatar_decoration": null,
                    "discriminator": "0473",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "784156219861762109",
                        "username": "WrRaThY",
                        "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                        "avatar_decoration": null,
                        "discriminator": "6802",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T18:27:11.202000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909872045221904434"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909872045221904434",
                "type": 19,
                "content": "there is one in the anchor repo. it also deals with watermelons \ud83d\ude09\nbut essentially - dealing with USDC is no different than dealing with any other SPL Token",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "784156219861762109",
                    "username": "WrRaThY",
                    "avatar": "0b47032d98a16b7d3281e7ba2604a904",
                    "avatar_decoration": null,
                    "discriminator": "6802",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "847130012879814668",
                        "username": "Hunterws",
                        "avatar": "450d7d97c8a99525d0e6c069bba6d1b1",
                        "avatar_decoration": null,
                        "discriminator": "0473",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T18:26:40.186000+00:00",
                "edited_timestamp": "2021-11-15T18:27:11.238000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909869182269685770"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909870228643663943",
                "type": 0,
                "content": "Also what is the difference between testnet and devnet",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "847130012879814668",
                    "username": "Hunterws",
                    "avatar": "450d7d97c8a99525d0e6c069bba6d1b1",
                    "avatar_decoration": null,
                    "discriminator": "0473",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T18:19:27.080000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909869196593213511",
                "type": 0,
                "content": "tokens",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "847130012879814668",
                    "username": "Hunterws",
                    "avatar": "450d7d97c8a99525d0e6c069bba6d1b1",
                    "avatar_decoration": null,
                    "discriminator": "0473",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T18:15:21.020000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909869182269685770",
                "type": 0,
                "content": "Does someone have a good example of a program working with USDC?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "847130012879814668",
                    "username": "Hunterws",
                    "avatar": "450d7d97c8a99525d0e6c069bba6d1b1",
                    "avatar_decoration": null,
                    "discriminator": "0473",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T18:15:17.605000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909857367728988180",
                "type": 0,
                "content": "```\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.20s\n\n   Doc-tests my_program\nerror[E0659]: `my_program` is ambiguous (name vs any other name during import resolution)\n  --> /Users/mc/work/my_program/programs/my_program/src/lib.rs:15:9\n   |\n15 | pub mod my_program {\n   |         ^^^^^^^^ ambiguous name\n   |\n   = note: `my_program` could refer to a crate passed with `--extern`\n   = help: use `::my_program` to refer to this crate unambiguously\nnote: `my_program` could also refer to the module defined here\n  --> /Users/mc/work/my_program/programs/my_program/src/lib.rs:15:1\n   |\n15 | / pub mod my_program {\n16 | |     use super::*;\n17 | |\n18 | |     pub fn initialize_market(\n...  |\n70 | |     }\n71 | | }\n   | |_^\n   = help: use `crate::my_program` to refer to this module unambiguously\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0659`.\nerror: test failed, to rerun pass '--doc'\n```\nrust tests are green, but the cargo command fails with this annoying doctest issue, any workarounds?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "837011211795038260",
                    "username": "microwavedcola",
                    "avatar": "e8a5de58c57bbdf82e0ef2a4c1a1271c",
                    "avatar_decoration": null,
                    "discriminator": "8705",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T17:28:20.799000+00:00",
                "edited_timestamp": "2021-11-15T17:29:47.481000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909851829301575750",
                "type": 0,
                "content": "I guess this is for `Discriminator`: https://docs.rs/anchor-lang/0.18.0/anchor_lang/trait.Discriminator.html",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "448034961652449283",
                    "username": "fanatid",
                    "avatar": "c5a0058cfdd3117925de7da79f4e0734",
                    "avatar_decoration": null,
                    "discriminator": "8814",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.rs/anchor-lang/0.18.0/anchor_lang/trait.Discriminator.html",
                        "title": "Discriminator in anchor_lang - Rust",
                        "description": "8 byte unique identifier for a type."
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T17:06:20.335000+00:00",
                "edited_timestamp": "2021-11-15T17:06:24.228000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909851042705993728",
                "type": 0,
                "content": "in the basic-1 tutorial we have \n`#[account(init, payer = user, space = 8 + 8)]`\nbut MyAccount only has 1x 8-bit field (`u64`), so why does one have to allocate 16 bytes total?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "903369685570035822",
                    "username": "Milk Duds Professional 64bit",
                    "avatar": "6653c85724a283b4ae37946f862c7296",
                    "avatar_decoration": null,
                    "discriminator": "6103",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T17:03:12.796000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909821494564106291",
                "type": 0,
                "content": "Hey guys, what's the best way to maintain the `Anchor.toml` file across multiple environment (many local machines, devnet, mainnet, etc.) Should it just be listed in `.gitignore` or is there a better way to handle this?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "630375665442488339",
                    "username": "Loris",
                    "avatar": "4db097a032052dd040a3674b6a85f4f7",
                    "avatar_decoration": null,
                    "discriminator": "5388",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T15:05:47.970000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909821122449649714",
                "type": 0,
                "content": "namely that it's pinned to solana program 1.7.4 and anchor is on 1.8.0",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "636227924315340801",
                    "username": "matthewdiscord",
                    "avatar": "da829d8b3515c405e839553e03786228",
                    "avatar_decoration": null,
                    "discriminator": "8297",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T15:04:19.251000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909818526234214430",
                "type": 0,
                "content": "i'm running into problems using this repo `https://github.com/smartcontractkit/chainlink-solana` to access the chainlink package",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "636227924315340801",
                    "username": "matthewdiscord",
                    "avatar": "da829d8b3515c405e839553e03786228",
                    "avatar_decoration": null,
                    "discriminator": "8297",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T14:54:00.265000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909818271841259550",
                "type": 0,
                "content": "does anyone have an example project that gets chainlink working with anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "636227924315340801",
                    "username": "matthewdiscord",
                    "avatar": "da829d8b3515c405e839553e03786228",
                    "avatar_decoration": null,
                    "discriminator": "8297",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T14:52:59.613000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909787369979400232",
                "type": 0,
                "content": "A `Instruction` builder",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "831450660146642974",
                    "username": "Pikachoo",
                    "avatar": "3778d8c6025afe096468846a546f4bfe",
                    "avatar_decoration": null,
                    "discriminator": "4505",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:50:12.035000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909787159035269140",
                "type": 19,
                "content": "Probably not iwthout changing the program test api",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "831450660146642974",
                        "username": "Pikachoo",
                        "avatar": "3778d8c6025afe096468846a546f4bfe",
                        "avatar_decoration": null,
                        "discriminator": "4505",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:49:21.742000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909786870035152908"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909786870035152908",
                "type": 0,
                "content": "but i saw that one during the hackathon\nhttps://github.com/draffle-io/draffle/blob/master/programs/draffle/tests/functional.rs <@!367907046177112064> \n\nI wonder if there should be or if there is a way to build the instruction without having to to_account_metas() and .data()",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "831450660146642974",
                    "username": "Pikachoo",
                    "avatar": "3778d8c6025afe096468846a546f4bfe",
                    "avatar_decoration": null,
                    "discriminator": "4505",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "367907046177112064",
                        "username": "time_composer",
                        "avatar": "c8cb98ccca985d0bc838d5bbfd887c15",
                        "avatar_decoration": null,
                        "discriminator": "7825",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:48:12.839000+00:00",
                "edited_timestamp": "2021-11-15T12:53:03.646000+00:00",
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909786578824613888",
                "type": 0,
                "content": "I can't find what the guy shared here or any of my repos with something nice. Might have been a transient gist",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "831450660146642974",
                    "username": "Pikachoo",
                    "avatar": "3778d8c6025afe096468846a546f4bfe",
                    "avatar_decoration": null,
                    "discriminator": "4505",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:47:03.409000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909785447746650112",
                "type": 0,
                "content": "Would be nice to have something like that in the repo.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:42:33.739000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909785389512933407",
                "type": 0,
                "content": "Using the program_test framework.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:42:19.855000+00:00",
                "edited_timestamp": "2021-11-15T12:42:26.329000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909785328355774484",
                "type": 19,
                "content": "You had some pretty good examples <@!831450660146642974>.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "831450660146642974",
                        "username": "Pikachoo",
                        "avatar": "3778d8c6025afe096468846a546f4bfe",
                        "avatar_decoration": null,
                        "discriminator": "4505",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:42:05.274000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909785040177741834"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909785040177741834",
                "type": 19,
                "content": "someone shared an example some days ago",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "831450660146642974",
                    "username": "Pikachoo",
                    "avatar": "3778d8c6025afe096468846a546f4bfe",
                    "avatar_decoration": null,
                    "discriminator": "4505",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "367907046177112064",
                        "username": "time_composer",
                        "avatar": "c8cb98ccca985d0bc838d5bbfd887c15",
                        "avatar_decoration": null,
                        "discriminator": "7825",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T12:40:56.567000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909729844525416499"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909746859944312852",
                "type": 0,
                "content": "But yeah, could maybe ask in the anchor-py channel about why your original approach didn't work?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T10:09:13.690000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909746644080291871",
                "type": 19,
                "content": "For that specific data structure the schema will be so simple that you could honestly just skip borsh if you really wanted to\u2014the first 4 bytes will be the length of the string (that's just how borsh does it), then that many bytes for the string itself, then 8 for the price, 8 for the items available, and then 1 byte for whether the option exists or not, etc.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "210923596577505292",
                        "username": "Buggles",
                        "avatar": "6629b831baa5253cd67b5a16c1a0101b",
                        "avatar_decoration": null,
                        "discriminator": "5389",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T10:08:22.224000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909659183165612084"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909729844525416499",
                "type": 0,
                "content": "Does anyone have an example of writing program tests is Rust rather than JS/TS? Would love to get a code coverage report over our entire Anchor program",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "367907046177112064",
                    "username": "time_composer",
                    "avatar": "c8cb98ccca985d0bc838d5bbfd887c15",
                    "avatar_decoration": null,
                    "discriminator": "7825",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T09:01:36.898000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909679978331914310",
                "type": 19,
                "content": "do you have `anchor-spl` installed as dependency?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "avatar_decoration": null,
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "811868216208916530",
                        "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                        "avatar": "32b01bd760b0a144f2187e9b4106948c",
                        "avatar_decoration": null,
                        "discriminator": "1665",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T05:43:27.871000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909627185042698280"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909659183165612084",
                "type": 0,
                "content": "Hello, I am looking for some guidance and potential resources on the borsh encoding. Currently I am messing around with the solana-py/anchor-py libraries and am trying to decode the transaction data from a candy machine initialize. Here I am attempting to retrieve the price, items available etc.\n\nI used the borsh library to attempt decoding it and followed the schema from here: https://github.com/metaplex-foundation/metaplex/blob/master/rust/nft-candy-machine/src/lib.rs#L525-L531\n\nSo far it has given results that are super funky and not correct. Would anyone have any advice on how to approach decoding borsh with the correct schema in python?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "210923596577505292",
                    "username": "Buggles",
                    "avatar": "6629b831baa5253cd67b5a16c1a0101b",
                    "avatar_decoration": null,
                    "discriminator": "5389",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T04:20:49.917000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909627295214493726",
                "type": 0,
                "content": "```\npub fn init_treasury(ctx: Context<InitTreasury>) -> ProgramResult {\n        Ok(())\n    }\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T02:14:07.237000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909627185042698280",
                "type": 0,
                "content": "<@!787242451240222732> ```\n#[derive(Accounts)]\n#[instruction(mint_bump: u8)]\npub struct InitTreasury<'info> {\n    #[account(\n        init,\n        payer = payer,\n        seeds = [],\n        bump = mint_bump,\n    )]\n    pub treasury: Account<'info, TokenAccount>,\n\n    #[account(mut)]\n    pub usdcMint: Account<'info, Mint>,\n\n    #[account(mut)]\n    pub payer: Signer<'info>,\n\n    #[account(\n        init_if_needed,\n        payer = payer,\n        associated_token::mint = usdcMint,\n        associated_token::authority = payer\n    )]\n    pub depositer: Program<'info, Token>,\n\n    pub system_program: Program<'info, System>,\n    pub token_program: Program<'info, Token>,\n    pub associated_token_program: Program<'info, AssociatedToken>,\n    pub rent: Sysvar<'info, Rent>,\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "787242451240222732",
                        "username": "RustySol",
                        "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                        "avatar_decoration": null,
                        "discriminator": "2351",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T02:13:40.970000+00:00",
                "edited_timestamp": "2021-11-15T02:14:18.533000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909625124049813514",
                "type": 19,
                "content": "can you post more code? Not sure what you are trying to do here",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "avatar_decoration": null,
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "811868216208916530",
                        "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                        "avatar": "32b01bd760b0a144f2187e9b4106948c",
                        "avatar_decoration": null,
                        "discriminator": "1665",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T02:05:29.591000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909624106675232808"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909624106675232808",
                "type": 0,
                "content": "any guidance for this compile error:\n```\nerror[E0599]: no function or associated item named `default` found for struct `TokenAccount` in the current scope\n   --> programs/deltaone-protocol/src/lib.rs:116:10\n    |\n116 | #[derive(Accounts)]\n    |          ^^^^^^^^ function or associated item not found in `TokenAccount`\n    |\n    = note: this error originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0599]: no function or associated item named `try_from_unchecked` found for struct `anchor_lang::Program<'_, _>` in the current scope\n   --> programs/deltaone-protocol/src/lib.rs:116:10\n    |\n116 | #[derive(Accounts)]\n    |          ^^^^^^^^ function or associated item not found in `anchor_lang::Program<'_, _>`\n    |\n    = note: this error originates in the derive macro `Accounts` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: aborting due to 2 previous errors\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T02:01:27.030000+00:00",
                "edited_timestamp": "2021-11-15T02:18:18.378000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909613667019022356",
                "type": 0,
                "content": "`from` has to be an account that `authority` has control over. In the ido example, I think the `ido_account` is owned by the program itself (PDA), and `ido_authority_watermelon` is owned by `ido_account`. It doesnt necessarily needs to be from your wallet, it can be owned by the program as I just illustrated",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "avatar_decoration": null,
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T01:19:58.022000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909612883200065637",
                "type": 0,
                "content": "and so is the from?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T01:16:51.145000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909612846462140426",
                "type": 19,
                "content": "so if i am sending usdc from my wallet to an account, is the authority my wallet?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "787242451240222732",
                        "username": "RustySol",
                        "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                        "avatar_decoration": null,
                        "discriminator": "2351",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T01:16:42.386000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909612269053300747"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909612269053300747",
                "type": 19,
                "content": "the `authority` is the account that would authorize the transfer instruction. Since `ido_authority` owns `ido_authority_watermelon`, you will need `ido_authority` in `authority` field to make the transfer happen",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "avatar_decoration": null,
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "811868216208916530",
                        "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                        "avatar": "32b01bd760b0a144f2187e9b4106948c",
                        "avatar_decoration": null,
                        "discriminator": "1665",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T01:14:24.721000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909610522280861816"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909610971830554704",
                "type": 0,
                "content": "Hi I\u2019m trying to transfer funds from one user to another in a contract and when I\u2019m trying to test it it says no lamperts in account. I used the airdrop call to airdrop lamperts to it and that tx seems to have went through. Anyone else have this issue? In general, I\u2019m trying to test out a simple program that transfers sol from one account to another",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "713087905224196116",
                    "username": "tobe",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5687",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T01:09:15.439000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909610522280861816",
                "type": 0,
                "content": "what does authority do here: \n```\nTransfer {\n            from: ctx.accounts.ido_authority_watermelon.to_account_info(),\n            to: ctx.accounts.pool_watermelon.to_account_info(),\n            authority: ctx.accounts.ido_authority.to_account_info(),\n        };\n\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T01:07:28.258000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909609659424448523",
                "type": 0,
                "content": "Hi there, does anyone know if there is a way to check in program whether the invoker is the program deployer?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "avatar_decoration": null,
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T01:04:02.537000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909608242383036437",
                "type": 0,
                "content": "Just trying to get started and when I 'anchor init test' I get \n00h00m00s 0/0: : ERROR: There are no scenarios; must have at least one.\nFailed yarn install will attempt to npm install",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "107312398464974848",
                    "username": "[SYN] DUKEofNEWYORK",
                    "avatar": "39c79c9ccac56f1ed8365ca5d28a736b",
                    "avatar_decoration": null,
                    "discriminator": "6590",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T00:58:24.688000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909603894055821312",
                "type": 19,
                "content": "Thank you!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "840794487093854228",
                    "username": "radika",
                    "avatar": "d299d54df9b21a003d4486335d3e2979",
                    "avatar_decoration": null,
                    "discriminator": "9558",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "198605932886753280",
                        "username": "AdrianC",
                        "avatar": "906e09bf18db97143ff64cdb2a926799",
                        "avatar_decoration": null,
                        "discriminator": "6921",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T00:41:07.966000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909582232354705427"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909596731358994465",
                "type": 19,
                "content": "cool cool",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T00:12:40.246000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909596648152391790"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909596648152391790",
                "type": 19,
                "content": "Mm, you can kind of see where they start here, but it's probably not going to be super easy to read: https://github.com/project-serum/anchor/blob/master/lang/syn/src/parser/accounts/constraints.rs That will at least give you a sense for what attributes exist, then it's probably easier to just search for examples in the tests/ folder",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "811868216208916530",
                        "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                        "avatar": "32b01bd760b0a144f2187e9b4106948c",
                        "avatar_decoration": null,
                        "discriminator": "1665",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T00:12:20.408000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909585426841485372"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909595552323338241",
                "type": 0,
                "content": "Is there an example of a sane way to reset the state of the program in between tests? For example, I'm testing a few scenarios and am ending up with a ton of boilerplate code just to initialize everything. I'd love to be able to implement a beforeEach/afterEach hook that handles the reset",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "690575341659619338",
                    "username": "theycallmeswift",
                    "avatar": "2ffeaf22001dd976e30275bb42d184fb",
                    "avatar_decoration": null,
                    "discriminator": "1898",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T00:07:59.142000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909594750691180575",
                "type": 0,
                "content": "does anyone have an example of a function that deposits USDC into a token account?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-15T00:04:48.018000+00:00",
                "edited_timestamp": "2021-11-15T00:05:01.301000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909585426841485372",
                "type": 0,
                "content": "is there some source code or documentation i can take a look at?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T23:27:45.039000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909585380146282536",
                "type": 19,
                "content": "<@!134416332509675520> i dont see where in the docs the `account` attribute (https://docs.rs/anchor-lang/0.18.2/anchor_lang/attr.account.html) can take all of these other params ```#[account(\n        init,\n        payer = payer,\n        seeds = [],\n        bump = mint_bump,\n        mint::decimals = 0,\n        mint::authority = mint\n    )]\n```\nhow do i see the full list of things account takes in and what `init` does?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "811868216208916530",
                    "username": "Crypt\u25ceDypt\u25ce \ud83e\udd3f \ud83e\udd80",
                    "avatar": "32b01bd760b0a144f2187e9b4106948c",
                    "avatar_decoration": null,
                    "discriminator": "1665",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.rs/anchor-lang/0.18.2/anchor_lang/attr.account.html",
                        "title": "account in anchor_lang - Rust",
                        "description": "A data structure representing a Solana account, implementing various traits:",
                        "reference_id": "909585380146282536"
                    }
                ],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T23:27:33.906000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909460215097876480"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909582232354705427",
                "type": 19,
                "content": "this is a full example:\nhttps://github.com/dobleuber/solana-web3/blob/main/gif-portal-starter/src/App.js",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "198605932886753280",
                    "username": "AdrianC",
                    "avatar": "906e09bf18db97143ff64cdb2a926799",
                    "avatar_decoration": null,
                    "discriminator": "6921",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/dobleuber/solana-web3/blob/main/gif-portal-starter/src/App.js",
                        "title": "solana-web3/App.js at main \u00b7 dobleuber/solana-web3",
                        "description": "Contribute to dobleuber/solana-web3 development by creating an account on GitHub.",
                        "color": 1975079,
                        "reference_id": "909582232354705427",
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/1d7f6745a8b773f337c40aee55ebda1b14e05f83f2218afeb27d3f4c8655226f/dobleuber/solana-web3",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/sJPdrVv_3hdpGJmlOgvg2whmjiy864o0Yvt35Q27bh8/https/opengraph.githubassets.com/1d7f6745a8b773f337c40aee55ebda1b14e05f83f2218afeb27d3f4c8655226f/dobleuber/solana-web3",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "840794487093854228",
                        "username": "radika",
                        "avatar": "d299d54df9b21a003d4486335d3e2979",
                        "avatar_decoration": null,
                        "discriminator": "9558",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T23:15:03.414000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909580710816395273"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909581630316904449",
                "type": 19,
                "content": "using the same code in the tests.\n```\nlet counterAccount = await program.account.counter.fetch(counter.publicKey)\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "198605932886753280",
                    "username": "AdrianC",
                    "avatar": "906e09bf18db97143ff64cdb2a926799",
                    "avatar_decoration": null,
                    "discriminator": "6921",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "840794487093854228",
                        "username": "radika",
                        "avatar": "d299d54df9b21a003d4486335d3e2979",
                        "avatar_decoration": null,
                        "discriminator": "9558",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T23:12:39.877000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909580710816395273"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909580710816395273",
                "type": 0,
                "content": "Hey guys, how do you access variables stored in a program account from react app? Any example code you\u2019ve come across?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "840794487093854228",
                    "username": "radika",
                    "avatar": "d299d54df9b21a003d4486335d3e2979",
                    "avatar_decoration": null,
                    "discriminator": "9558",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T23:09:00.651000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909573728600457216",
                "type": 0,
                "content": "Hey! another question:\nI defined an enum in my lib, but I don't know how to use it in my javascript code:\n```#[derive(AnchorSerialize, AnchorDeserialize, Debug, Clone)]\npub enum LanguageLevel {\n    Elementary,\n}\n```\nI am getting this error: `Error: unable to infer src variant`\n```\nconst languages = [{\n      language: 'English',\n      level: 'Elementary',\n    }]\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "198605932886753280",
                    "username": "AdrianC",
                    "avatar": "906e09bf18db97143ff64cdb2a926799",
                    "avatar_decoration": null,
                    "discriminator": "6921",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:41:15.961000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909566127355621436",
                "type": 0,
                "content": "Let me test, thanks in advance!",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "198605932886753280",
                    "username": "AdrianC",
                    "avatar": "906e09bf18db97143ff64cdb2a926799",
                    "avatar_decoration": null,
                    "discriminator": "6921",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:11:03.683000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909565884287311973",
                "type": 0,
                "content": "Then\n```.js\nawait program.rpc.createCv(initData, {\n  accounts: {\n    ...\n  },\n  ...\n});\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:10:05.731000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909565760182050857",
                "type": 0,
                "content": "```.rs\npub fn your_ix_handler(ctx: Context<TheContext>, init_data: Pubkey) -> ProgramResult {\n  ...\n}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:09:36.142000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909565650702336060",
                "type": 0,
                "content": "If you want to pass non-account data (data that doesn't already live in an account on-chain) you'll have to use instruction arguments",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:09:10.040000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909565573439037450",
                "type": 19,
                "content": "Ah, you can only pass actual accounts (= addresses, from the client's perspective) in there.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "198605932886753280",
                        "username": "AdrianC",
                        "avatar": "906e09bf18db97143ff64cdb2a926799",
                        "avatar_decoration": null,
                        "discriminator": "6921",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:08:51.619000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909565391104245942"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909565391104245942",
                "type": 19,
                "content": "I was trying to call my method ```\nconst tx = await program.rpc.createCv({\n      accounts: {\n        initData: {data: myData},\n        user: provider.wallet.publicKey,\n        systemProgram: SystemProgram.programId,\n        basicProfile,\n      },\n      signers: [myAccount],\n    });\n```\nBut initial data should be a public key.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "198605932886753280",
                    "username": "AdrianC",
                    "avatar": "906e09bf18db97143ff64cdb2a926799",
                    "avatar_decoration": null,
                    "discriminator": "6921",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:08:08.147000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909564947317526598"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909564947317526598",
                "type": 19,
                "content": "\"But the only valid value for init data is my account pubKey.\" What do you mean? Not sure I follow",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "198605932886753280",
                        "username": "AdrianC",
                        "avatar": "906e09bf18db97143ff64cdb2a926799",
                        "avatar_decoration": null,
                        "discriminator": "6921",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:06:22.340000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909563839480201217"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909563839480201217",
                "type": 0,
                "content": "Hey folks, I am trying to send initialization params for my program account, but I have no idea about how to do it.\nany help pls?\nI am trying this:\n```\n    #[account(init, payer = user, space = 4096)]\n    pub init_data: Account<'info, CurriculumVitae>,\n```\nBut the only valid value for init data is my account pubKey.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "198605932886753280",
                    "username": "AdrianC",
                    "avatar": "906e09bf18db97143ff64cdb2a926799",
                    "avatar_decoration": null,
                    "discriminator": "6921",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T22:01:58.211000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909560462037880872",
                "type": 0,
                "content": "Hmm, I'll have to take a closer look at candymachine I guess, I haven't actually used it yet",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:48:32.966000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909559245240954922",
                "type": 19,
                "content": "Yeah I am not sure, most just use levi korg's code for minting from CM \ud83d\ude42",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "800894271737561121",
                    "username": "ajobi882",
                    "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                    "avatar_decoration": null,
                    "discriminator": "3100",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:43:42.859000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909557673962389524"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909559089464504320",
                "type": 0,
                "content": "so either I implement a whitelisting mechanism along with this or I dont specify the date and somehow reference a private key",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "800894271737561121",
                    "username": "ajobi882",
                    "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                    "avatar_decoration": null,
                    "discriminator": "3100",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:43:05.719000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909558961798250556",
                "type": 19,
                "content": "well I am not sure how I would even store a private key securely server side. But the reason candy machine cares about mint auth in this case is because only the creator wallet can mint before the start date of CM has been specified. I dont want to specify start date because it will allow anyone to mint from it, only people who have burned can mint",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "800894271737561121",
                    "username": "ajobi882",
                    "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                    "avatar_decoration": null,
                    "discriminator": "3100",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:42:35.281000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909557673962389524"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909557897103560737",
                "type": 0,
                "content": "Oh, well, I guess candymachine doesn't care about the mint authority (the nfts have already been minted, it just hands them out in exchange for sol)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:38:21.438000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909557673962389524",
                "type": 19,
                "content": "Mm, doubt it. Do most places that use candymachine use an actual backend?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "800894271737561121",
                        "username": "ajobi882",
                        "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                        "avatar_decoration": null,
                        "discriminator": "3100",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:37:28.237000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909557450015903775"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909557456873607208",
                "type": 0,
                "content": "Ah, right",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:36:36.479000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909557450015903775",
                "type": 0,
                "content": "actually, how would I reference a keypair that has authority over a mint from the frontend? is there any secure way to store and reference a private key in web3js?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "800894271737561121",
                    "username": "ajobi882",
                    "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                    "avatar_decoration": null,
                    "discriminator": "3100",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:36:34.844000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909557298005946459",
                "type": 19,
                "content": "I do, you mean authority over the candy machine for the mint right?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "800894271737561121",
                    "username": "ajobi882",
                    "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                    "avatar_decoration": null,
                    "discriminator": "3100",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:35:58.602000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909548811171532891"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909548811171532891",
                "type": 19,
                "content": "Sounds like you can probably do that all from the front end. Who has authority over the mint?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "800894271737561121",
                        "username": "ajobi882",
                        "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                        "avatar_decoration": null,
                        "discriminator": "3100",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:02:15.183000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909548405276164116"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909548405276164116",
                "type": 19,
                "content": "hey all seems my q got lost in da sauce would appreciate any input \ud83d\ude42 (the q is what im replying to)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "800894271737561121",
                    "username": "ajobi882",
                    "avatar": "a7c5cc32e281fa7d7f63ed03044f740c",
                    "avatar_decoration": null,
                    "discriminator": "3100",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T21:00:38.410000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909484306219532378"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909538014580068392",
                "type": 0,
                "content": "Yep. Synthetify has a good code base for this. https://github.com/Synthetify/synthetify-protocol/blob/master/programs/exchange/src/decimal.rs",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "519222880840450059",
                    "username": "spoiler",
                    "avatar": "252562e90f8f8b4e92bcfd08d879c2ca",
                    "avatar_decoration": null,
                    "discriminator": "3664",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/Synthetify/synthetify-protocol/blob/master/programs/exchange/src/decimal.rs",
                        "title": "synthetify-protocol/decimal.rs at master \u00b7 Synthetify/synthetify-pr...",
                        "description": "Contribute to Synthetify/synthetify-protocol development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/9e1aa8e42d6a5c638f4dc21fd5ead9a01ff2addea8bba8b675266c8d0e70e7dc/Synthetify/synthetify-protocol",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/s-ytAe0C1Lc6oDXXotSA6seDNjpA5WDg592Gr1Ky6w0/https/opengraph.githubassets.com/9e1aa8e42d6a5c638f4dc21fd5ead9a01ff2addea8bba8b675266c8d0e70e7dc/Synthetify/synthetify-protocol",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T20:19:21.075000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909513304278466580",
                "type": 0,
                "content": "But for now I think I can emulate floats with `u128` and some high decimal power as I did in Solidity before",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "788122420765917184",
                    "username": "inoursweetz",
                    "avatar": "438039d5014a59611a9639eb8617f87d",
                    "avatar_decoration": null,
                    "discriminator": "6273",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T18:41:09.680000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909512964611145809",
                "type": 0,
                "content": "I think I found it\nhttps://github.com/project-serum/anchor/pull/993",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "788122420765917184",
                    "username": "inoursweetz",
                    "avatar": "438039d5014a59611a9639eb8617f87d",
                    "avatar_decoration": null,
                    "discriminator": "6273",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/project-serum/anchor/pull/993",
                        "title": "Add float support by zkwarlock \u00b7 Pull Request #993 \u00b7 project-serum/...",
                        "description": "Supports serialization and deserialization f32 and f64 types. This is done on client side using Layout&lt;number&gt;.\nExample usage:\n    await program.rpc.initialize(5000.11, {\n      accoun...",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/34221044b6a239c0c7aecf38e9a4adf2c3049cac958c81891948afa0f342e0f1/project-serum/anchor/pull/993",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/RkApP8YlOe3bsrOgRbc8qq5d06blGDyC3IL59JDQtCw/https/opengraph.githubassets.com/34221044b6a239c0c7aecf38e9a4adf2c3049cac958c81891948afa0f342e0f1/project-serum/anchor/pull/993",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T18:39:48.697000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "909512923225944166",
                "type": 19,
                "content": "Someone mentioned maybe making a PR for this, not sure if they have already or not",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "788122420765917184",
                        "username": "inoursweetz",
                        "avatar": "438039d5014a59611a9639eb8617f87d",
                        "avatar_decoration": null,
                        "discriminator": "6273",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T18:39:38.830000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "909512449445740574"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "909512449445740574",
                "type": 0,
                "content": "It seems like `f64` is not supported, right?\n```     \nIdlError: Type not found: {\"name\":\"perTokenReward\",\"type\":{\"defined\":\"f64\"}}\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "788122420765917184",
                    "username": "inoursweetz",
                    "avatar": "438039d5014a59611a9639eb8617f87d",
                    "avatar_decoration": null,
                    "discriminator": "6273",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-14T18:37:45.872000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "4376fa586797a4b9d0153ae2fa5b8206"
}