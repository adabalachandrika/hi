{
    "total_results": 59,
    "messages": [
        [
            {
                "id": "940288461645152357",
                "type": 0,
                "content": "how can I iterate an array of 5000 elements and check if a passed element exists or not in it in anchor ?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "832140329301311488",
                    "username": "zule",
                    "avatar": null,
                    "discriminator": "4581",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:50:38.971000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940286949476950126",
                "type": 0,
                "content": "Boom \ud83d\udca5 \n\n> % anchor --version\n> anchor-cli 0.20.1\n\nTime to have some fun. Thank you! \ud83d\ude0a",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:44:38.442000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940284535483011113",
                "type": 19,
                "content": "It looks like that could be it. Trying now. Thanks \ud83d\ude4c",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "889264155922690070",
                        "username": "kklas",
                        "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                        "discriminator": "1719",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:35:02.901000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940283525993746433"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940283525993746433",
                "type": 19,
                "content": "maybe you need `libssl-dev` also?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "860702411898093578",
                        "username": "Eric Forgy",
                        "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                        "discriminator": "3487",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:31:02.220000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940282145044316211"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940282145044316211",
                "type": 0,
                "content": "Looks like I have it installed \u2705",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:25:32.976000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940281862956400650",
                "type": 0,
                "content": "> % openssl version\n> OpenSSL 1.1.1  11 Sep 2018",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:24:25.721000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940281391990571028",
                "type": 0,
                "content": "How do I determine if openssl is installed?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:22:33.434000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940280936086519849",
                "type": 0,
                "content": "(I am a Ubuntu noob)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:20:44.738000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940280840833880134",
                "type": 0,
                "content": ">  run pkg_config fail: \"`\\\"pkg-config\\\" \\\"--libs\\\" \\\"--cflags\\\" \\\"openssl\\\"` did not exit successfully: exit status: 1\\n--- stderr\\nPackage openssl was not found in the pkg-config search path.\\nPerhaps you should add the directory containing `openssl.pc'\\nto the PKG_CONFIG_PATH environment variable\\nNo package 'openssl' found\\n\"\n> \n>   --- stderr\n>   thread 'main' panicked at '\n> \n>   Could not find directory of OpenSSL installation, and this `-sys` crate cannot\n>   proceed without this knowledge. If OpenSSL is installed and this crate had\n>   trouble finding it,  you can set the `OPENSSL_DIR` environment variable for the\n>   compilation process.\n> \n>   Make sure you also have the development packages of openssl installed.\n>   For example, `libssl-dev` on Ubuntu or `openssl-devel` on Fedora.\n> \n>   If you're in a situation where you think the directory *should* be found\n>   automatically, please open a bug at https://github.com/sfackler/rust-openssl\n>   and include information about your system as well as this message.\n> \n>   $HOST = x86_64-unknown-linux-gnu\n>   $TARGET = x86_64-unknown-linux-gnu\n>   openssl-sys = 0.9.71\n> \n>   ', /home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-sys-0.9.71/build/find_normal.rs:180:5\n>   note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n> warning: build failed, waiting for other jobs to finish...\n> error: failed to compile `anchor-cli v0.20.1 (https://github.com/project-serum/anchor?tag=v0.20.1#a81ff88d)`, intermediate artifacts can be found at `/tmp/cargo-installkc2QUt`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/project-serum/anchor?tag=v0.20.1",
                        "title": "GitHub - project-serum/anchor: \u2693 Solana Sealevel Framework",
                        "description": "\u2693 Solana Sealevel Framework. Contribute to project-serum/anchor development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/c96f10b3afd3d76f519e0c76f3c6cf1914d214563d0a24f891216e03516dc4a7/project-serum/anchor",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/4KzXwe3BVo3PRIuVcAHrPEwbrui-bwvhmmUK5xFPvdI/https/opengraph.githubassets.com/c96f10b3afd3d76f519e0c76f3c6cf1914d214563d0a24f891216e03516dc4a7/project-serum/anchor",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:20:22.028000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940280617575272448",
                "type": 19,
                "content": "When I last did this there was nothing special to do",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "856894333180706876",
                    "username": "LegalizeOnionFutures",
                    "avatar": "6818b2cfdac0afa900ebd98f946a81cc",
                    "discriminator": "1698",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "860702411898093578",
                        "username": "Eric Forgy",
                        "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                        "discriminator": "3487",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:19:28.799000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940280430073094144"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940280430073094144",
                "type": 0,
                "content": "Hi there \ud83d\udc4b \n\nI'm having some trouble installing on Ubuntu under WSL 2 on Windows 10. Will do a bit of reading of previous issues, but if there is anything special to take care of with this setup, please let me know \ud83d\ude4f",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "860702411898093578",
                    "username": "Eric Forgy",
                    "avatar": "86c74c0b3f547f2a30d3096da97d3ec6",
                    "discriminator": "3487",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T16:18:44.095000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940258452792569886",
                "type": 19,
                "content": "btw on the line where you're doing `amount * 1000000000` it's better to use the `LAMPORTS_PER_SOL` constant in order to avoid any errors with the conversion  https://github.com/solana-labs/solana/blob/master/sdk/program/src/native_token.rs#L3",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "737915190045311067",
                        "username": "Hi_I'mJohn",
                        "avatar": "ae9c37d449836e55aead84d00c4633aa",
                        "discriminator": "2906",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T14:51:24.303000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940225426385694780"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940253172126072832",
                "type": 0,
                "content": "Thanks a bunch! \ud83d\ude04",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "111373445245214720",
                    "username": "jamged",
                    "avatar": "9e96135941a97caa273f7599883d0a37",
                    "discriminator": "0371",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T14:30:25.294000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940251003389890580",
                "type": 19,
                "content": "Yea, basically you're implementing an \"admin\" instruction. What you do is you  load the program's `upgrade_authority` and verify that it has signed the tx. Here's an example https://github.com/project-serum/anchor/blob/master/tests/bpf-upgradeable-state/programs/bpf-upgradeable-state/src/lib.rs#L64. Make sure you do all the constraints correctly.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "111373445245214720",
                        "username": "jamged",
                        "avatar": "9e96135941a97caa273f7599883d0a37",
                        "discriminator": "0371",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T14:21:48.227000+00:00",
                "edited_timestamp": "2022-02-07T14:22:15.890000+00:00",
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940247867304603728"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940247867304603728",
                "type": 0,
                "content": "Hey quick question, is there a way to get the details about the deployed Program itself (i.e. the info you get from the cli `solana program show [PROGRAM_ADDRESS]`) inside of the Anchor program?\n\nAdditional context: I have an \"Initialize\" instruction that needs to be run after deployment, and to be extra safe I want to be sure that this instruction is only run by the same Address that deployed the program.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "111373445245214720",
                    "username": "jamged",
                    "avatar": "9e96135941a97caa273f7599883d0a37",
                    "discriminator": "0371",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T14:09:20.526000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940225426385694780",
                "type": 19,
                "content": "this is how I did it for a program where the \"user\" pays an amount to a \"receiver\"\ndisregard item1 and item2 which are accounts that increment based on the amount transferred.\n\nSolana Pay might be a better way to transfer SOL between accounts if you can figure out how to use inside an anchor program\n\n```\n    pub fn pay(\n        ctx: Context<Pay>,\n        amount: u64,\n    ) -> ProgramResult {\n        let item1 = &mut ctx.accounts.item1;\n        let item2 = &mut ctx.accounts.item2;\n        let user: &Signer = &ctx.accounts.user;\n        item1.amount -= amount;\n        item2.amount += amount;\n\n\n        let ix = anchor_lang::solana_program::system_instruction::transfer(\n            &ctx.accounts.user.key(),\n            &ctx.accounts.receiver.key(),\n            amount * 1000000000,\n        );\n        anchor_lang::solana_program::program::invoke(\n            &ix,\n            &[\n                ctx.accounts.user.to_account_info(),\n                ctx.accounts.receiver.to_account_info(),\n                ctx.accounts.system_program.to_account_info(),\n            ],\n        );\n\n        Ok(())\n    }\n\n\n// Pay SOL\n#[derive(Accounts)]\n#[instruction(amount: u64)]\npub struct Pay<'info> {\n    #[account(mut)]\n    pub item1: Account<'info, DataAccount>,\n    #[account(mut)]\n    pub item2: Account<'info, DataAccount>,\n    #[account(mut)]\n    pub receiver: AccountInfo<'info>,\n    #[account(mut)]\n    pub user: Signer<'info>,\n    pub system_program: Program<'info, System>,\n}\n\n#[account]\npub struct DataAccount{\n    pub creator: Pubkey,\n    pub name: String,\n    pub amount: u64,\n}\n\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "737915190045311067",
                    "username": "Hi_I'mJohn",
                    "avatar": "ae9c37d449836e55aead84d00c4633aa",
                    "discriminator": "2906",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "406138576569630720",
                        "username": "0xGeneral",
                        "avatar": "fa52b5b178e61cc888c47a0f9d04eeac",
                        "discriminator": "4703",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T12:40:10.194000+00:00",
                "edited_timestamp": "2022-02-07T12:41:58.922000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940191533876019250"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940219675999105044",
                "type": 0,
                "content": "The keypair doesn't have authority over upgrading the program. It's needed only to deploy the program the first time (which will also set the upgrade authority).",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T12:17:19.195000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940219311769935893",
                "type": 19,
                "content": "There was a discussion about this recently here https://discord.com/channels/889577356681945098/889702325231427584/939253575886975026",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "448129579500961793",
                        "username": "iboss",
                        "avatar": "85527fdf5e4ba210a2b460cd6d8e82cb",
                        "discriminator": "6313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T12:15:52.356000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940215852626767923"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940215852626767923",
                "type": 19,
                "content": "the `target/deploy` keypair is what im interested in, what is it for, does it have authority over program deployment? if so, it should be kept secret. but then, to keep the code unchanged (due to `declare_id!` requires program id). the keypair needs to  be shared...",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "448129579500961793",
                    "username": "iboss",
                    "avatar": "85527fdf5e4ba210a2b460cd6d8e82cb",
                    "discriminator": "6313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "889264155922690070",
                        "username": "kklas",
                        "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                        "discriminator": "1719",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T12:02:07.632000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940188063760523304"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940204719928926250",
                "type": 19,
                "content": "Pubkey::from_str(<string>)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "208527206966755329",
                        "username": "vicyyn",
                        "avatar": "d89677ee11bbedae6ef6daa48778b598",
                        "discriminator": "0001",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T11:17:53.390000+00:00",
                "edited_timestamp": "2022-02-07T11:46:11.094000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940202494456365117"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940202494456365117",
                "type": 0,
                "content": "how to create pubkey from string",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "208527206966755329",
                    "username": "vicyyn",
                    "avatar": "d89677ee11bbedae6ef6daa48778b598",
                    "discriminator": "0001",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T11:09:02.796000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940197253505753098",
                "type": 19,
                "content": "I guess you use this https://github.com/solana-labs/solana/blob/master/sdk/program/src/system_instruction.rs#L390 to create the instruction and call it with CPI",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "406138576569630720",
                        "username": "0xGeneral",
                        "avatar": "fa52b5b178e61cc888c47a0f9d04eeac",
                        "discriminator": "4703",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:48:13.256000+00:00",
                "edited_timestamp": "2022-02-07T10:49:14.864000+00:00",
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940191533876019250"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940196299750387732",
                "type": 19,
                "content": "Kind of. It's not really \"signing\" it but when you're creating a PDA account you need to call the create_account instruction using `invoke_signed` method and provide it the seeds used to generate the PDA. The runtime then checks the seeds and program id of the program you're calling from and if it matches then the instruction is considered to be \"signed\" by the program.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "699467020034637834",
                        "username": "poor_midwit_scam_for_20_usd_rofl",
                        "avatar": "b4ea7696a81f8eb05ee8b5a256915c70",
                        "discriminator": "9814",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:44:25.863000+00:00",
                "edited_timestamp": "2022-02-07T10:44:35.194000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940192095925309450"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940194438058225674",
                "type": 19,
                "content": "`token_program: Program<'info, Token>`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "208527206966755329",
                        "username": "vicyyn",
                        "avatar": "d89677ee11bbedae6ef6daa48778b598",
                        "discriminator": "0001",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:37:02.001000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940191710389096450"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940192095925309450",
                "type": 0,
                "content": "When creating a regular account it has to sign the transaction, is there a similar constraint for PDAs?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "699467020034637834",
                    "username": "poor_midwit_scam_for_20_usd_rofl",
                    "avatar": "b4ea7696a81f8eb05ee8b5a256915c70",
                    "discriminator": "9814",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:27:43.593000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940191710389096450",
                "type": 0,
                "content": "what's a better way to write this ? ```    #[account(address = anchor_spl::token::ID)]\n    pub token_program: AccountInfo<'info>,```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "208527206966755329",
                    "username": "vicyyn",
                    "avatar": "d89677ee11bbedae6ef6daa48778b598",
                    "discriminator": "0001",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:26:11.674000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940191533876019250",
                "type": 0,
                "content": "Hey guys, is there any reference on how to transfer SOL to and from accounts using anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "406138576569630720",
                    "username": "0xGeneral",
                    "avatar": "fa52b5b178e61cc888c47a0f9d04eeac",
                    "discriminator": "4703",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:25:29.590000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940188802390044722",
                "type": 19,
                "content": "its running on the test validator (the first 2 tests run fine, only the last one breaks, not sure why)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "905343329225568338",
                    "username": "0xTomoyo",
                    "avatar": "598e9140380cd7c19bf451b75847bbf7",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "889264155922690070",
                        "username": "kklas",
                        "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                        "discriminator": "1719",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:14:38.353000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940188446113275904"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940188446113275904",
                "type": 19,
                "content": "Perhaps your test validator isn't running or you're running the test against devnet?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "905343329225568338",
                        "username": "0xTomoyo",
                        "avatar": "598e9140380cd7c19bf451b75847bbf7",
                        "discriminator": "0001",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:13:13.410000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940187975818567690"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940188063760523304",
                "type": 19,
                "content": "It is possible. If by local dev machines you mean the `solana-test-validator`, it's possible to start it with the `--bpf-program` flag which will pre-add the program at the specified address. The other way to do it is to use the generated program keypair in the `target/deploy` directory.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "889264155922690070",
                    "username": "kklas",
                    "avatar": "0f4ad4122667f74ef92a0b15c0b8a7ec",
                    "discriminator": "1719",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "448129579500961793",
                        "username": "iboss",
                        "avatar": "85527fdf5e4ba210a2b460cd6d8e82cb",
                        "discriminator": "6313",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:11:42.250000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940114239316701205"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940187975818567690",
                "type": 19,
                "content": "im using mac m1 btw\n(its also not an issue with the tests/program cause on a linux vm the tests run fine, it only breaks on my m1)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "905343329225568338",
                    "username": "0xTomoyo",
                    "avatar": "598e9140380cd7c19bf451b75847bbf7",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "940187975071957053",
                        "filename": "Screen_Shot_2022-02-07_at_9.png",
                        "size": 260383,
                        "url": "https://cdn.discordapp.com/attachments/889702325231427584/940187975071957053/Screen_Shot_2022-02-07_at_9.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889702325231427584/940187975071957053/Screen_Shot_2022-02-07_at_9.png",
                        "width": 1694,
                        "height": 524,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T10:11:21.283000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940081282812092447"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940162595963412550",
                "type": 19,
                "content": "<@!851910655334023168> everything is synchronous in Solana programs and CPIs return either `() or ProgramError`. What do you need to read?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "938658528229462126",
                    "username": "acheron",
                    "avatar": "82bfce0f51c10f72a287730afdbf6296",
                    "discriminator": "1102",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "851910655334023168",
                        "username": "0xMert",
                        "avatar": "d4e5ea42ec7b943c229827e35c4b482d",
                        "discriminator": "1807",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T08:30:30.254000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940078726887129128"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940115070199955457",
                "type": 0,
                "content": "<@!134416332509675520> Thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "373850936046518272",
                    "username": "zurgl",
                    "avatar": null,
                    "discriminator": "6851",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T05:21:39.229000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940114239316701205",
                "type": 0,
                "content": "Hi, is it possible, or make sense, to make program id consistent across muliple local dev machines as well as mainnet deployment? if not what would be the way to go",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "448129579500961793",
                    "username": "iboss",
                    "avatar": "85527fdf5e4ba210a2b460cd6d8e82cb",
                    "discriminator": "6313",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T05:18:21.131000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940111455099973763",
                "type": 19,
                "content": "Yep, that's fine, `hash.as_bytes()` I think",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "373850936046518272",
                        "username": "zurgl",
                        "avatar": null,
                        "discriminator": "6851",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T05:07:17.322000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940099997054173194"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940099997054173194",
                "type": 0,
                "content": "Hi,\nCould we use a string passed as input to derive our pda seed? I mean\n\n```rust\n#[derive(Accounts)]\n#[instruction(bump: u8, hash: string)]\npub struct Initialize<'info> {\n  #[account(\n    init_if_needed,\n    payer = payer,\n    seeds = [\n      b\"gamba\", \n      hash.as_ref() <== is there someworking solution here?\n    ],\n    bump = bump\n  )]\n...\n}\n\npub fn handler(ctx: Context<Initialize>, bump: u8, hash: string) -> ProgramResult {\n..}\n```\nThanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "373850936046518272",
                    "username": "zurgl",
                    "avatar": null,
                    "discriminator": "6851",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T04:21:45.511000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940084524853907527",
                "type": 19,
                "content": "<@!195345150132748288> did you find a solution to this?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "905343329225568338",
                    "username": "0xTomoyo",
                    "avatar": "598e9140380cd7c19bf451b75847bbf7",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "195345150132748288",
                        "username": "andyk",
                        "avatar": "c1e2fa4a911d2c3a07173f156ce2712b",
                        "discriminator": "8657",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T03:20:16.651000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "938264785152270336"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940081282812092447",
                "type": 0,
                "content": "i get this error when running slightly long tests: \n```\nError: Unable to obtain a new blockhash after 10149ms\n```\nanyone dealt with this before?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "905343329225568338",
                    "username": "0xTomoyo",
                    "avatar": "598e9140380cd7c19bf451b75847bbf7",
                    "discriminator": "0001",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T03:07:23.688000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940079643128660008",
                "type": 0,
                "content": "what do ppl usually do to get around this? like if I want to validate something about one of the accounts being passed in, I obvs cant make an API call",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "851910655334023168",
                    "username": "0xMert",
                    "avatar": "d4e5ea42ec7b943c229827e35c4b482d",
                    "discriminator": "1807",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T03:00:52.757000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940078816515194960",
                "type": 0,
                "content": "like would the program being called just write to a 3rd account which then the initial invoking program reads from?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "851910655334023168",
                    "username": "0xMert",
                    "avatar": "d4e5ea42ec7b943c229827e35c4b482d",
                    "discriminator": "1807",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T02:57:35.677000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940078726887129128",
                "type": 0,
                "content": "do I understand correctly that I cant actually wait for the return value of a CPI?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "851910655334023168",
                    "username": "0xMert",
                    "avatar": "d4e5ea42ec7b943c229827e35c4b482d",
                    "discriminator": "1807",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T02:57:14.308000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940077717725003827",
                "type": 0,
                "content": "any examples of creating a mint owned by the program so it can mint/burn them?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "251196241449451520",
                    "username": "saint_million",
                    "avatar": "3302d2838ce0b5f3bae52c3fd091956b",
                    "discriminator": "5228",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T02:53:13.705000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940073776123633675",
                "type": 0,
                "content": "Hi. I'm trying to use ```anchor build``` in subdirectory but I'm getting error ```no such subcommand: `build-bpf```.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "226964655699001344",
                    "username": "hyun",
                    "avatar": "2957706f4ea178386ef21362d455e753",
                    "discriminator": "1240",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T02:37:33.954000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940030551518244924",
                "type": 0,
                "content": "Having trouble installing on Mac M1. I'm following this guide: https://github.com/buildspace/buildspace-projects/blob/main/Solana_And_Web3/en/Section_2/Resources/m1_setup.md \n\nAnd getting this error: \"dyld[26505]: symbol not found in flat namespace '_BIO_free_all'\" When running \"solana-test-validator --no-bpf-jit\" according to the guide",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "508054431930122261",
                    "username": "Beichen",
                    "avatar": "414cd46b2d8279f3f8edd1bf0074b50b",
                    "discriminator": "4603",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/buildspace/buildspace-projects/blob/main/Solana_And_Web3/en/Section_2/Resources/m1_setup.md",
                        "title": "buildspace-projects/m1_setup.md at main \u00b7 buildspace/buildspace-pro...",
                        "description": "The home of our open-source projects. Contribute to buildspace/buildspace-projects development by creating an account on GitHub.",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/79c9ccc620fede045164da66f9bbd26aa46cb29e2ab7dffa0b08476f108159c0/buildspace/buildspace-projects",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/3KI7szfdt87-LICP--lQuR5Sfjryx7XwwkvRJvWZTjQ/https/opengraph.githubassets.com/79c9ccc620fede045164da66f9bbd26aa46cb29e2ab7dffa0b08476f108159c0/buildspace/buildspace-projects",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T23:45:48.405000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940025694858133525",
                "type": 19,
                "content": "bump for anyone who may have some idea on this, thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "434158450839257108",
                    "username": "Harry | Chainlink",
                    "avatar": "190b1957bb8996c9f46f7086f7ec9a58",
                    "discriminator": "1464",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T23:26:30.487000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "939281612955336714"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940015224948408380",
                "type": 0,
                "content": "are there any examples of staking programs built with anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "167500700601942016",
                    "username": "Veritas Veritatum",
                    "avatar": "5f3a03c5b7bae6639930b904c8434b57",
                    "discriminator": "7289",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:44:54.266000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940015173073264651",
                "type": 0,
                "content": "hey fam",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "167500700601942016",
                    "username": "Veritas Veritatum",
                    "avatar": "5f3a03c5b7bae6639930b904c8434b57",
                    "discriminator": "7289",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:44:41.898000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940008595205021807",
                "type": 0,
                "content": "I am guessing I can use the under the hood method of the Account<'info, T> wrapper but unsure where it is",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "171442868190314497",
                    "username": "poprer656sad",
                    "avatar": null,
                    "discriminator": "4566",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:18:33.612000+00:00",
                "edited_timestamp": "2022-02-06T22:18:49.266000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940008495602860073",
                "type": 0,
                "content": "how do i deserialize the array of remaining_accounts into my specific account struct?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "171442868190314497",
                    "username": "poprer656sad",
                    "avatar": null,
                    "discriminator": "4566",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:18:09.865000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940006767281180702",
                "type": 0,
                "content": "definitely keep at it",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "752168445461790760",
                    "username": "lidatong",
                    "avatar": null,
                    "discriminator": "3633",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:11:17.801000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940006734238449714",
                "type": 19,
                "content": "lol promise it looks worse than it is",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "752168445461790760",
                    "username": "lidatong",
                    "avatar": null,
                    "discriminator": "3633",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "824806841192022037",
                        "username": "ECLaurent",
                        "avatar": "6d47158de700bd43da116fc0c4e4d0ff",
                        "discriminator": "7012",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:11:09.923000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940006499298725888"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940006499298725888",
                "type": 19,
                "content": "I\u2019m over here stuck trying to build an environment looking at your problem like jeez, idk if I ever want your problems lmao",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "824806841192022037",
                    "username": "ECLaurent",
                    "avatar": "6d47158de700bd43da116fc0c4e4d0ff",
                    "discriminator": "7012",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "752168445461790760",
                        "username": "lidatong",
                        "avatar": null,
                        "discriminator": "3633",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:10:13.909000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "940006088235954227"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940006114509082684",
                "type": 0,
                "content": "Will having multiple copies of anchor files in my directories be an issue at all?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "824806841192022037",
                    "username": "ECLaurent",
                    "avatar": "6d47158de700bd43da116fc0c4e4d0ff",
                    "discriminator": "7012",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:08:42.168000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940006088235954227",
                "type": 0,
                "content": "does anyone have any idea why there might be duplicate of same tx in solana logs?\n\n```\n\n[2022-02-06T22:06:07.281682000Z DEBUG solana_runtime::message_processor::stable_log] Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [1]\n[2022-02-06T22:06:07.282005000Z DEBUG solana_runtime::message_processor::stable_log] Program log: Instruction: InitializeMint\n[2022-02-06T22:06:07.282131000Z DEBUG solana_runtime::message_processor::stable_log] Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 2279 of 200000 compute units\n[2022-02-06T22:06:07.282325000Z DEBUG solana_runtime::message_processor::stable_log] Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success\n[2022-02-06T22:06:07.340233000Z DEBUG solana_runtime::message_processor::stable_log] Program Vote111111111111111111111111111111111111111 invoke [1]\n[2022-02-06T22:06:07.340433000Z DEBUG solana_runtime::message_processor::stable_log] Program 11111111111111111111111111111111 invoke [1]\n[2022-02-06T22:06:07.340540000Z DEBUG solana_runtime::message_processor::stable_log] Program 11111111111111111111111111111111 success\n[2022-02-06T22:06:07.341072000Z DEBUG solana_runtime::message_processor::stable_log] Program Vote111111111111111111111111111111111111111 success\n[2022-02-06T22:06:07.426774000Z DEBUG solana_runtime::message_processor::stable_log] Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA invoke [1]\n[2022-02-06T22:06:07.427001000Z DEBUG solana_runtime::message_processor::stable_log] Program log: Instruction: InitializeMint\n[2022-02-06T22:06:07.427125000Z DEBUG solana_runtime::message_processor::stable_log] Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA consumed 2279 of 200000 compute units\n[2022-02-06T22:06:07.427279000Z DEBUG solana_runtime::message_processor::stable_log] Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA success\n```\n\nas you can see `InitializeMint` appears twice, but I promise I'm calling it once. The timestamps differ perhaps my log filter is misconfigured?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "752168445461790760",
                    "username": "lidatong",
                    "avatar": null,
                    "discriminator": "3633",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T22:08:35.904000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939996349208875038",
                "type": 19,
                "content": "In this case, if you wanted to make this `mut` then you would have to change the type to be at least `AccountInfo` right?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "456226577798135808",
                    "username": "Deleted User",
                    "avatar": null,
                    "discriminator": "0000",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T21:29:53.939000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "939940257422508092"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939994638247428147",
                "type": 0,
                "content": "Getting this after anchor test Failed to obtain package metadata: `cargo metadata` exited with an error: error: failed to parse manifest at `/Users/carlosdelrio/myepicproject/programs/myepicproject/Cargo.toml`\n\nCaused by:\n  can't find library `myepicproject`, rename file to `src/lib.rs` or specify lib.path",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "824806841192022037",
                    "username": "ECLaurent",
                    "avatar": "6d47158de700bd43da116fc0c4e4d0ff",
                    "discriminator": "7012",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T21:23:06.014000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939974048883027988",
                "type": 0,
                "content": "https://docs.rs/rust_decimal/1.21.0/rust_decimal/struct.Decimal.html\n\nIs this safe to use?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "912046857000194158",
                    "username": "yeetle",
                    "avatar": "12968c45dd881dcb7c1307fa84411926",
                    "discriminator": "2204",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T20:01:17.127000+00:00",
                "edited_timestamp": "2022-02-06T20:01:24.414000+00:00",
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939973826337456168",
                "type": 0,
                "content": "need max value of at least `u64::MAX`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "912046857000194158",
                    "username": "yeetle",
                    "avatar": "12968c45dd881dcb7c1307fa84411926",
                    "discriminator": "2204",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T20:00:24.068000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939973550587125810",
                "type": 0,
                "content": "how does one do decimals in rust \ud83d\ude02",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "912046857000194158",
                    "username": "yeetle",
                    "avatar": "12968c45dd881dcb7c1307fa84411926",
                    "discriminator": "2204",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T19:59:18.324000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "c00a63250f2a7cd8ef8f5a4a13663968"
}