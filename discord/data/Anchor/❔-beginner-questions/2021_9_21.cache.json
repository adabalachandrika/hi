{
    "total_results": 66,
    "messages": [
        [
            {
                "id": "889924648744128562",
                "type": 0,
                "content": "thanks a lot",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:22:50.261000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889924638610690098",
                "type": 0,
                "content": "ok great",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:22:47.845000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889923945782984734",
                "type": 19,
                "content": "Also see https://project-serum.github.io/anchor/getting-started/introduction.html, which will walk through the code.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "813309414702448641",
                        "username": "nsk|Kanaswap",
                        "avatar": null,
                        "avatar_decoration": null,
                        "discriminator": "5328",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:20:02.662000+00:00",
                "edited_timestamp": "2021-09-21T17:20:12.919000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889923416554078219"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889923743881785374",
                "type": 0,
                "content": "<@!813309414702448641> in /examples/tutorial",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "813309414702448641",
                        "username": "nsk|Kanaswap",
                        "avatar": null,
                        "avatar_decoration": null,
                        "discriminator": "5328",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:19:14.525000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889923416554078219",
                "type": 0,
                "content": "and where are the tutorials?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:17:56.484000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889923260895080478",
                "type": 19,
                "content": "The `/examples` are explained in the tutorials.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "813309414702448641",
                        "username": "nsk|Kanaswap",
                        "avatar": null,
                        "avatar_decoration": null,
                        "discriminator": "5328",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:17:19.372000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889923098105749504"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889923098105749504",
                "type": 0,
                "content": "ok but in the examples folder, it doesnt say what each pgm does...does it?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:16:40.560000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889922875463712789",
                "type": 19,
                "content": "The `/examples` and `/tests` directory are a good resource as well.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "813309414702448641",
                        "username": "nsk|Kanaswap",
                        "avatar": null,
                        "avatar_decoration": null,
                        "discriminator": "5328",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:15:47.478000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889922714817671319"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889922714817671319",
                "type": 0,
                "content": "ok...just went thru the resources channel...could see a few links there",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:15:09.177000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889922573293453414",
                "type": 19,
                "content": "There's also the API docs.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "813309414702448641",
                        "username": "nsk|Kanaswap",
                        "avatar": null,
                        "avatar_decoration": null,
                        "discriminator": "5328",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:14:35.435000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889912806844010577"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889922179372834897",
                "type": 19,
                "content": "figured it out, I was missing the `ANCHOR_WALLET` env variable,  however I don't recall seeing this anywhere in the docs.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "885532999356153856",
                    "username": "Dcaf Mocha",
                    "avatar": "4e2040ff0afa6a019f14819d1dd76a48",
                    "avatar_decoration": null,
                    "discriminator": "6777",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T17:13:01.517000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889913056753221633"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889913056753221633",
                "type": 0,
                "content": "Hi, running `client.js` for `basic_0` i get the following error. I only changed the program id for that file. The error seems odd, not sure what to make of it because the path is pased in as a string, and the file does exist.\n\n```\nTypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string or an instance of Buffer or URL. Received undefined\n    at Object.openSync (fs.js:490:10)\n    at Object.readFileSync (fs.js:394:35)\n    at Function.local (/home/.../Dev/anchor/examples/tutorial/basic-0/node_modules/@project-serum/anchor/dist/cjs/provider.js:154:92)\n    at Function.local (/home/.../Dev/anchor/examples/tutorial/basic-0/node_modules/@project-serum/anchor/dist/cjs/provider.js:38:35)\n    at Object.<anonymous> (/home/.../Dev/anchor/examples/tutorial/basic-0/client.js:7:36)\n    at Module._compile (internal/modules/cjs/loader.js:1072:14)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n    at Module.load (internal/modules/cjs/loader.js:937:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:778:12)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:76:12) {\n  code: 'ERR_INVALID_ARG_TYPE'\n}```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "885532999356153856",
                    "username": "Dcaf Mocha",
                    "avatar": "4e2040ff0afa6a019f14819d1dd76a48",
                    "avatar_decoration": null,
                    "discriminator": "6777",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T16:36:46.515000+00:00",
                "edited_timestamp": "2021-09-21T16:40:29.771000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889912806844010577",
                "type": 0,
                "content": "is this the main and only documentation for anchor?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T16:35:46.932000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889912757493841991",
                "type": 0,
                "content": "https://project-serum.github.io/anchor/getting-started/introduction.html",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://project-serum.github.io/anchor/getting-started/introduction.html",
                        "title": "Introduction | \u2693 Anchor",
                        "color": 4108156
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T16:35:35.166000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889912745976283167",
                "type": 0,
                "content": "hi",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "813309414702448641",
                    "username": "nsk|Kanaswap",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "5328",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T16:35:32.420000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889905069674360863",
                "type": 0,
                "content": "<@!625881690614661121> yeah this gets a mention in the tests for that example https://github.com/solana-labs/solana-program-library/blob/master/examples/rust/transfer-lamports/tests/functional.rs#L26",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/solana-labs/solana-program-library/blob/master/examples/rust/transfer-lamports/tests/functional.rs",
                        "title": "solana-program-library/functional.rs at master \u00b7 solana-labs/solana...",
                        "description": "A collection of Solana-maintained on-chain programs - solana-program-library/functional.rs at master \u00b7 solana-labs/solana-program-library",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/60b00aff90741ba77fbbdbfda18f2c5e45efe9a92725b08a6260eaf93e48524b/solana-labs/solana-program-library",
                            "proxy_url": "https://images-ext-2.discordapp.net/external/gmclS5931NIt0ZiPbKaBQEcOBFOQvk25qH_MjxfAqgw/https/opengraph.githubassets.com/60b00aff90741ba77fbbdbfda18f2c5e45efe9a92725b08a6260eaf93e48524b/solana-labs/solana-program-library",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "625881690614661121",
                        "username": "yelllownate",
                        "avatar": "bc920dfe81fbb5ae09d5e4fe45de24d4",
                        "avatar_decoration": null,
                        "discriminator": "6718",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T16:05:02.247000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889904555406544986",
                "type": 0,
                "content": "Ah\u2014I think so, yeah. I should double check this, but I think your program can transfer lamports from account A to account B as long is your program owns A (a program can only decrement an account's lamports if it owns the account, but incrementing B's lamports doesn't require ownership)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T16:02:59.636000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889903068068589568",
                "type": 19,
                "content": "is this how you would do a basic lamports transfer though? im confused a bit on that pattern. i've followed a couple examples of transferring spl tokens in an anchor program, but I can't find any for a lamports transfer?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "625881690614661121",
                    "username": "yelllownate",
                    "avatar": "bc920dfe81fbb5ae09d5e4fe45de24d4",
                    "avatar_decoration": null,
                    "discriminator": "6718",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T15:57:05.027000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889899787720208504"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889902123213533247",
                "type": 0,
                "content": "cool. thanks",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "625881690614661121",
                    "username": "yelllownate",
                    "avatar": "bc920dfe81fbb5ae09d5e4fe45de24d4",
                    "avatar_decoration": null,
                    "discriminator": "6718",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T15:53:19.756000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889899787720208504",
                "type": 0,
                "content": "So basically, if you want to say \"decrement this account's lamports by 5\", you/somebody will need to do a `try_borrow_mut`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T15:44:02.931000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889899590017507352",
                "type": 0,
                "content": "The `try_borrow` functions are just part of RefCell's api, and then I guess solana has wrapped them a little bit to give you a ProgramError if the borrow fails.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T15:43:15.795000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889899211901001778",
                "type": 0,
                "content": "<@!625881690614661121> I think the situation is just that the low-level `AccountInfo` gives you access to an account's lamports as a `Rc<RefCell<&mut u64>>`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "625881690614661121",
                        "username": "yelllownate",
                        "avatar": "bc920dfe81fbb5ae09d5e4fe45de24d4",
                        "avatar_decoration": null,
                        "discriminator": "6718",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T15:41:45.645000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889893193909407755",
                "type": 0,
                "content": "what's the use case for try_borrow_lamports? in the core solana-labs example it uses a lower level borrow_lamports func as a transfer (https://github.com/solana-labs/solana-program-library/blob/master/examples/rust/transfer-lamports/src/processor.rs). So is borrow_lamps effectively a helper for transferring?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "625881690614661121",
                    "username": "yelllownate",
                    "avatar": "bc920dfe81fbb5ae09d5e4fe45de24d4",
                    "avatar_decoration": null,
                    "discriminator": "6718",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T15:17:50.844000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889887489072963634",
                "type": 19,
                "content": "Please don't cross post.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "750371844959502477",
                        "username": "degeneratemonkey",
                        "avatar": null,
                        "avatar_decoration": null,
                        "discriminator": "4452",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T14:55:10.705000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889883863986364416"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889881010391638146",
                "type": 0,
                "content": "Context is a generic struct in the same way that the `Point` example is.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T14:29:26.067000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889880860919201792",
                "type": 0,
                "content": "It's the same kind of thing as here: https://doc.rust-lang.org/book/ch10-01-syntax.html#in-struct-definitions",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://doc.rust-lang.org/book/ch10-01-syntax.html",
                        "title": "Generic Data Types - The Rust Programming Language",
                        "color": 16777215
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T14:28:50.430000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889879093879914556",
                "type": 0,
                "content": "in this section - seems like T doesn't really align with what we have been talking about",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T14:21:49.135000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889879034413080626",
                "type": 0,
                "content": "https://doc.rust-lang.org/book/ch10-01-syntax.html this seems to be different",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://doc.rust-lang.org/book/ch10-01-syntax.html",
                        "title": "Generic Data Types - The Rust Programming Language",
                        "color": 16777215
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T14:21:34.957000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889872720773390446",
                "type": 0,
                "content": "I think I'm still misunderstanding your q tbh\u2014what feels non-generic about `Context`?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:56:29.668000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889872497049219142",
                "type": 0,
                "content": "As the way rust explains generics",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:55:36.328000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889872465361268746",
                "type": 0,
                "content": "Ah ok so it\u2019s better to think of that versus as a generic",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:55:28.773000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889872033175994439",
                "type": 0,
                "content": "<@!781655859108511845> I'm double checking if there are constraints on what T can be for `Context`, but for some generics there's no need for T to be a struct\u2014e.g. as <@!693486673606082580> mentioned, think of `Vec`. You can have a `Vec` of (almost) anything, no need for it to be a struct, e.g. `Vec<u32>`.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "693486673606082580",
                        "username": "y2kappa",
                        "avatar": "ab62d4bfb859796ebc7e2b6ac03ef461",
                        "avatar_decoration": null,
                        "discriminator": "9177",
                        "public_flags": 0
                    },
                    {
                        "id": "781655859108511845",
                        "username": "formerlypunk7628",
                        "avatar": "05cbc036295572bc820cc666e70c9f94",
                        "avatar_decoration": null,
                        "discriminator": "0728",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:53:45.732000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889870721176719380",
                "type": 0,
                "content": "I guess the only remaining point is in pure rust docs, I never see T being defined as a struct",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:48:32.927000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889870633196998706",
                "type": 0,
                "content": "Almost seems like implementation for a parameter",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:48:11.951000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889870577777668116",
                "type": 0,
                "content": "So think of Context as a type that can be paramatrized by whatever you want to define - like initialize takes in something while other parameters basically tell the function what to expect?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:47:58.738000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889868037409357835",
                "type": 19,
                "content": "a better way to think about it is - Context is like a container of Initialize",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "693486673606082580",
                    "username": "y2kappa",
                    "avatar": "ab62d4bfb859796ebc7e2b6ac03ef461",
                    "avatar_decoration": null,
                    "discriminator": "9177",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "781655859108511845",
                        "username": "formerlypunk7628",
                        "avatar": "05cbc036295572bc820cc666e70c9f94",
                        "avatar_decoration": null,
                        "discriminator": "0728",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:37:53.067000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889866112861372416"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889867695724585030",
                "type": 0,
                "content": "Context is a type parametrized by T (in c++ they are called templates) -> just like Vec -> as you have Vec<u64> Vec<String> you can have Context<Initialize> or Context<Deposit>\n\nas you know with Vec, there is no direct relationship between Vec and u64 or Vec and String.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "693486673606082580",
                    "username": "y2kappa",
                    "avatar": "ab62d4bfb859796ebc7e2b6ac03ef461",
                    "avatar_decoration": null,
                    "discriminator": "9177",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:36:31.603000+00:00",
                "edited_timestamp": "2021-09-21T13:42:40.484000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889866583068004362",
                "type": 0,
                "content": "Ok fully understand that - I guess there\u2019s no good documentation on this in rust, because I did go through the generics section and this wasn\u2019t explained hahaha",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:32:06.325000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889866535521353739",
                "type": 0,
                "content": "So there's no subtype relationship at all between Initialize and Context\u2014Initialize is just \"filling in\" a generic type",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:31:54.989000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889866361008955432",
                "type": 0,
                "content": "`Context` isn't a type all by itself in the sense that you can't do `some_variable: Context`, you can only do `some_variable: Context<Something>`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:31:13.382000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889866211628834847",
                "type": 0,
                "content": "It's a \"type constructor\". `Context<Something>` is a type",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:30:37.767000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889866145736314880",
                "type": 0,
                "content": "Mm, the type terminology is always a little funky\u2014at least coming from Haskell, I'd say that `Context` isn't really a type all by itself",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:30:22.057000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889866112861372416",
                "type": 0,
                "content": "Can I think of Initialize as a subtype of Context?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:30:14.219000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889865983471284224",
                "type": 0,
                "content": "But like Initialize as a generic to me seems off versus using T, which seems natural as a generic",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:29:43.370000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889865897584496670",
                "type": 0,
                "content": "Then what\u2019s inside the the <> is generic?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:29:22.893000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889865867414896681",
                "type": 0,
                "content": "Context is the type, correct?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:29:15.700000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889864967300456468",
                "type": 0,
                "content": "When you say \"it\" in \"it's not really generic\", what are you referring to haha? Just to make sure I'm understanding",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:25:41.096000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889864821187682334",
                "type": 0,
                "content": "Mm, maybe I'm misunderstanding your question\u2014`Context` is generic over the accounts it will hold, but the accounts themselves will be something concrete.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:25:06.260000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889864670209540107",
                "type": 0,
                "content": "I guess the conceptual confusion on my end is I haven\u2019t seen a generic set up this way ever in rust",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:24:30.264000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889864577972600892",
                "type": 0,
                "content": "Saying hey, this is the struct that should match this \u201cgeneric\u201d",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:24:08.273000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889864532137218049",
                "type": 0,
                "content": "Like it\u2019s context of type whatever you then define as a struct",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:23:57.345000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889864493155381248",
                "type": 0,
                "content": "Ah so it\u2019s not really generic then??",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:23:48.051000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889863570358140948",
                "type": 0,
                "content": "But in a given instruction handler it will always be something concrete (since the instruction handler will have to deserialize the `Something` so you can use it in the handler)",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:20:08.039000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889863460068925490",
                "type": 0,
                "content": "But yeah, if you really wanted to you could have some function that works on generic Context<T>'s etc.",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:19:41.744000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889863321635934260",
                "type": 0,
                "content": "<@!781655859108511845> in `ctx: Context<Something>` , `Something` is filling in/instantiating a generic type",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "781655859108511845",
                        "username": "formerlypunk7628",
                        "avatar": "05cbc036295572bc820cc666e70c9f94",
                        "avatar_decoration": null,
                        "discriminator": "0728",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:19:08.739000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889862863789891624",
                "type": 0,
                "content": "Because of the angle brackets",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:17:19.580000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889862841388122123",
                "type": 0,
                "content": "Should we think of each of those as generics?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:17:14.239000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889862810346094622",
                "type": 0,
                "content": "And then underneath the functions each one of those is a struct",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:17:06.838000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889862759494332456",
                "type": 0,
                "content": "Yes I already have! I am asking in the basic anchor explanation programs, XYZ is defined as Initialize and then Increment etc",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:16:54.714000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889861159354793994",
                "type": 19,
                "content": "Not sure I understand the question, maybe you should have a look at https://doc.rust-lang.org/book/ch10-00-generics.html",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "443079510053748743",
                    "username": "Acammm",
                    "avatar": "e5c0f2305d711a7c3ac8b1ee080d0958",
                    "avatar_decoration": null,
                    "discriminator": "3260",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "781655859108511845",
                        "username": "formerlypunk7628",
                        "avatar": "05cbc036295572bc820cc666e70c9f94",
                        "avatar_decoration": null,
                        "discriminator": "0728",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:10:33.211000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889858042651365376"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889860894438342686",
                "type": 0,
                "content": "When writing unit tests, how to have a mock mintAuthority that does match a specific token?\nIn my program I have some hard checks on wrapped sol, how would I mock that in test to have the mint authority with the associated pubkey",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "443079510053748743",
                    "username": "Acammm",
                    "avatar": "e5c0f2305d711a7c3ac8b1ee080d0958",
                    "avatar_decoration": null,
                    "discriminator": "3260",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T13:09:30.050000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889858042651365376",
                "type": 0,
                "content": "Hi guys - wanted to ask a conceptual question. In the basic programs, you have ctx: Context<XYZ>. So I get that the type is of Context (I learned Rust past two weeks) but then XYZ usually is a generic in rust. Here, it seems like each XYZ is defined as a struct. Is that an anchor specific rule or can we still view whatever XYZ is as a generic?",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "781655859108511845",
                    "username": "formerlypunk7628",
                    "avatar": "05cbc036295572bc820cc666e70c9f94",
                    "avatar_decoration": null,
                    "discriminator": "0728",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T12:58:10.131000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889706038150979634",
                "type": 19,
                "content": "This did the trick. Didn't expect to be this far behind with `1.53.0` -> `1.55.0` solving the issue. Ya'll must be keeping up to date on all the changes",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "489206164270350337",
                    "username": "JacobCreech",
                    "avatar": "85ed43c4d2f91523c28ebac9c4d900b4",
                    "avatar_decoration": null,
                    "discriminator": "3467",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "501570363566587905",
                        "username": "armaniferrante | Will never DM",
                        "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                        "avatar_decoration": null,
                        "discriminator": "2513",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T02:54:09.434000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889704811233169448"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889704811233169448",
                "type": 19,
                "content": "Update your rust version. `rustup update stable`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "501570363566587905",
                    "username": "armaniferrante | Will never DM",
                    "avatar": "7a081b73d4de5c4f7e4f473f265731d2",
                    "avatar_decoration": null,
                    "discriminator": "2513",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "489206164270350337",
                        "username": "JacobCreech",
                        "avatar": "85ed43c4d2f91523c28ebac9c4d900b4",
                        "avatar_decoration": null,
                        "discriminator": "3467",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T02:49:16.914000+00:00",
                "edited_timestamp": "2021-09-21T02:49:24.827000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889702325231427584",
                    "guild_id": "889577356681945098",
                    "message_id": "889704092052643861"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "889704284202102804",
                "type": 0,
                "content": "From running `cargo install --git https://github.com/project-serum/anchor --tag v0.16.0 anchor-cli --locked`",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "489206164270350337",
                    "username": "JacobCreech",
                    "avatar": "85ed43c4d2f91523c28ebac9c4d900b4",
                    "avatar_decoration": null,
                    "discriminator": "3467",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T02:47:11.260000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "889704092052643861",
                "type": 0,
                "content": "Anyone having trouble building anchor 0.16.0 from source? Intel MacOS \nGetting \n```\nerror[E0658]: arbitrary expressions in key-value attributes are unstable\n#![doc = include_str!(\"../README.md\")]\n```",
                "channel_id": "889702325231427584",
                "author": {
                    "id": "489206164270350337",
                    "username": "JacobCreech",
                    "avatar": "85ed43c4d2f91523c28ebac9c4d900b4",
                    "avatar_decoration": null,
                    "discriminator": "3467",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-09-21T02:46:25.448000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "d851c6c702411cdfc7729d3ec2bfc810"
}