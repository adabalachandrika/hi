{
    "total_results": 26,
    "messages": [
        [
            {
                "id": "908382974108639314",
                "type": 0,
                "content": "...yet",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "168868665456984065",
                    "username": "synxe",
                    "avatar": "47a5ee32929dfd9f8b848c2b15e1f6ed",
                    "avatar_decoration": null,
                    "discriminator": "6138",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:49:37.967000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908382960271646721",
                "type": 19,
                "content": "correct",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "168868665456984065",
                    "username": "synxe",
                    "avatar": "47a5ee32929dfd9f8b848c2b15e1f6ed",
                    "avatar_decoration": null,
                    "discriminator": "6138",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "688353772086624277",
                        "username": "zedalaye",
                        "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                        "avatar_decoration": null,
                        "discriminator": "8871",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:49:34.668000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908382852830347294"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908382871113318400",
                "type": 0,
                "content": "that just operates under the assumption you can never append to the list after creation",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "168868665456984065",
                    "username": "synxe",
                    "avatar": "47a5ee32929dfd9f8b848c2b15e1f6ed",
                    "avatar_decoration": null,
                    "discriminator": "6138",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:49:13.411000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908382852830347294",
                "type": 0,
                "content": "space cannot be updated each time data is appended to the vec[] ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "688353772086624277",
                    "username": "zedalaye",
                    "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                    "avatar_decoration": null,
                    "discriminator": "8871",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:49:09.052000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908382808026792008",
                "type": 19,
                "content": "ah yeah i suppose so",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "168868665456984065",
                    "username": "synxe",
                    "avatar": "47a5ee32929dfd9f8b848c2b15e1f6ed",
                    "avatar_decoration": null,
                    "discriminator": "6138",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:48:58.370000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908382575469424681"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908382575469424681",
                "type": 19,
                "content": "Strictly speaking you can actually (maybe weird to do so, but it's possible)\u2014you can specify an expression for `length =`, use an `#[instruction(...)]` arg, etc.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "168868665456984065",
                        "username": "synxe",
                        "avatar": "47a5ee32929dfd9f8b848c2b15e1f6ed",
                        "avatar_decoration": null,
                        "discriminator": "6138",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:48:02.924000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908381967899328543"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908382171998330932",
                "type": 0,
                "content": "I suspect the price required to deploy that program depends heavily on reserved space ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "688353772086624277",
                    "username": "zedalaye",
                    "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                    "avatar_decoration": null,
                    "discriminator": "8871",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:46:26.729000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908381967899328543",
                "type": 19,
                "content": "you can't dynamically compute space for accounts that store dynamic data types. in this case, you need to provide the maximum byte capacity you're willing to allocate to that dynamic type",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "168868665456984065",
                    "username": "synxe",
                    "avatar": "47a5ee32929dfd9f8b848c2b15e1f6ed",
                    "avatar_decoration": null,
                    "discriminator": "6138",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "688353772086624277",
                        "username": "zedalaye",
                        "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                        "avatar_decoration": null,
                        "discriminator": "8871",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:45:38.068000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908381646439456838"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908381646439456838",
                "type": 0,
                "content": "How to compute the \"space\" value for a program that stores a list of accounts/balances ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "688353772086624277",
                    "username": "zedalaye",
                    "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                    "avatar_decoration": null,
                    "discriminator": "8871",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T15:44:21.426000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908342960221995058",
                "type": 0,
                "content": "Thinking of finally making the multitoken auction program",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "avatar_decoration": null,
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T13:10:37.913000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908342898351800331",
                "type": 0,
                "content": "But I'm interested in seeing what is possible with just the fixed size array and zero copy stuff that comes as default in anchor",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "avatar_decoration": null,
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T13:10:23.162000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908342777841057823",
                "type": 0,
                "content": "Serum uses crit bit trees",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "avatar_decoration": null,
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T13:09:54.430000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908340269265612851",
                "type": 0,
                "content": "Yeh, just got to experiment with it I guess",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "avatar_decoration": null,
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T12:59:56.339000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908339589431840818",
                "type": 0,
                "content": "But you'd effectively just be appending the new thing and then re-sorting in place\u2014it would work but might be expensive computationally, not sure",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T12:57:14.254000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908339463216848977",
                "type": 0,
                "content": "I feel like there must be some rust helper function to do that, but I'm not sure which one \ud83e\udd14",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T12:56:44.162000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908339315594117131",
                "type": 19,
                "content": "So it would really have to be actually just manually swapping locations in a bubble sort like you say",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "avatar_decoration": null,
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "avatar_decoration": null,
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T12:56:08.966000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908338256901451806"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908338256901451806",
                "type": 19,
                "content": "I think it would work fine to do that, e.g. append the new element to the end of the array (I guess you'd need to keep track of where the current end is), and then just keep swapping it/bubble-sorting it into place. Maybe there's a more efficient way to do that, binary-search to find where the new element should go and then shift everyone else over in one operation",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "avatar_decoration": null,
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "248066053161222144",
                        "username": "donderper",
                        "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                        "avatar_decoration": null,
                        "discriminator": "9738",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T12:51:56.554000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908330544356548628"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908330544356548628",
                "type": 0,
                "content": "Not sure how it would work with memory and stuff trying to add new elements to an ordered array if all of the other elements need to be shifted down by one",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "avatar_decoration": null,
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T12:21:17.740000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908330386218684436",
                "type": 0,
                "content": "Has anyone ever tried to store an ordered list in a zero copy array in anchor?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "avatar_decoration": null,
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T12:20:40.037000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908321522920341554",
                "type": 0,
                "content": "Looks like an \"around\" pattern. Maybe passing a closure/lambda/anonymous function and manually call it at \"_;\" ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "688353772086624277",
                    "username": "zedalaye",
                    "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                    "avatar_decoration": null,
                    "discriminator": "8871",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T11:45:26.862000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908321258263945226",
                "type": 0,
                "content": "Does Anchor/Rust have anything like Solidity's modifier functions? I want to sandwich functions with this code:\n\n```solidity\n    modifier lock() {\n        require(someCondition);\n        unlocked = false;\n        _; // the function to be sandwitched\n        unlocked = true;\n    }\n```\n\nThis is used in `function foo() external lock`. `foo()` gets sandwiched by the modifier",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "679936424971468859",
                    "username": "0xHaddock (shardul)",
                    "avatar": "2988978494e386a5debdd6b7699954ec",
                    "avatar_decoration": null,
                    "discriminator": "9993",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T11:44:23.763000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908320006662668289",
                "type": 19,
                "content": "It's specific to solana's Sealevel runtime, not rust per se. Accounts passed via context have a mutable (true/false) flag, which the runtime uses for concurrency. Transactions with read only (mutable false) accounts can be executed in parallel.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "679936424971468859",
                    "username": "0xHaddock (shardul)",
                    "avatar": "2988978494e386a5debdd6b7699954ec",
                    "avatar_decoration": null,
                    "discriminator": "9993",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "688353772086624277",
                        "username": "zedalaye",
                        "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                        "avatar_decoration": null,
                        "discriminator": "8871",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T11:39:25.358000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908308137826721793"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908308137826721793",
                "type": 0,
                "content": "Hi, can you explain why, in Rust we have to declare a context for an API and separate other arguments ? Why not pass accounts like other args ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "688353772086624277",
                    "username": "zedalaye",
                    "avatar": "67a7bf3a316fa0c353224bf1753a1952",
                    "avatar_decoration": null,
                    "discriminator": "8871",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T10:52:15.607000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908284827713822720",
                "type": 0,
                "content": "So after factory_state.owner @ CustomError",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "888716665947312148",
                    "username": "Afro",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "9975",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T09:19:38.043000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "908284668040847370",
                "type": 19,
                "content": "https://docs.rs/anchor-lang/0.18.0/anchor_lang/prelude/derive.Accounts.html",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "888716665947312148",
                    "username": "Afro",
                    "avatar": null,
                    "avatar_decoration": null,
                    "discriminator": "9975",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.rs/anchor-lang/0.18.0/anchor_lang/prelude/derive.Accounts.html",
                        "title": "Accounts in anchor_lang::prelude - Rust",
                        "description": "Implements an `Accounts` deserializer on the given struct, applying any constraints specified via inert `#[account(..)]` attributes upon deserialization.",
                        "reference_id": "908284668040847370"
                    }
                ],
                "mentions": [
                    {
                        "id": "679936424971468859",
                        "username": "0xHaddock (shardul)",
                        "avatar": "2988978494e386a5debdd6b7699954ec",
                        "avatar_decoration": null,
                        "discriminator": "9993",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T09:18:59.974000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "908237198246170624"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "908237198246170624",
                "type": 0,
                "content": "How to display error messages when using context constraint? I remember  seeing something like `constraint = owner.key() == factory_state.owner @CustomError` on twitter, but can't find link\n\n```rs\n    #[account(\n        mut,\n        seeds = [],\n        bump = factory_state.bump,\n        // TODO error message\n        constraint = owner.key() == factory_state.owner\n    )]\n    pub factory_state: Box<Account<'info, FactoryState>>,\n```",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "679936424971468859",
                    "username": "0xHaddock (shardul)",
                    "avatar": "2988978494e386a5debdd6b7699954ec",
                    "avatar_decoration": null,
                    "discriminator": "9993",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-11-11T06:10:22.293000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "4bb8fdefb15f414c176f236460c08241"
}