{
    "total_results": 8,
    "messages": [
        [
            {
                "id": "963682448355504148",
                "type": 0,
                "content": "So using size of will make it Incompatie with borsh generally  if there is padding involved ? Since borsh ignores padding",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-13T06:10:00.042000+00:00",
                "edited_timestamp": "2022-04-13T06:10:18.146000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "963663086114443265",
                "type": 19,
                "content": "size_of returns the size of the type in rust (like, how big it would be on the stack), which is not necessarily the same thing as how much data borsh would use for it (it is however how much space zero_copy needs, since zero_copy doesn't use borsh)",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-13T04:53:03.724000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "963645863035559946"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "963645863035559946",
                "type": 0,
                "content": "What is the downside of using size_of::<my_struct>() to calculate the space required for the account ? Because generally ppl just calculate each individual cost of each field In a struct and add 8 to the individual accumulation of all the field size and set that as space , ignoring the padding where as size of will include padding so what is the reason size if is not used, because realistically do you not need to calculate the total space your account will require including the padding ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-13T03:44:37.422000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "963577783865458688",
                "type": 19,
                "content": "By doing basically what I suggested above (try it and see!)",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-12T23:14:06.083000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "963545115526316052"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "963545115526316052",
                "type": 0,
                "content": "in a case where there is concern that A and B might drop to 0. decimals how do i handle it do i come up with a certain number of decimals to multiply A and B by to ensure they never drop to 0 but then in my calculation how do i offset this multiplication to save it from going to 0. decimals to ensure result is correct ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-12T21:04:17.344000+00:00",
                "edited_timestamp": "2022-04-12T21:05:30.299000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "963542459638485034",
                "type": 0,
                "content": "But basically do `(3 * A + 7 * B) / 10` (pseudocode)",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-12T20:53:44.131000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "963542289421074552",
                "type": 19,
                "content": "Do you mean 30% and 70% there?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-12T20:53:03.548000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "963534418876710912"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "963534418876710912",
                "type": 0,
                "content": "hey without using floats how do i achieve the following logic, i have two uints each of which contribute some % to the final amount\nlet say final amount is 0.3% of current price of asset A + 0.7% of current price of asset B, but obv we cant use floats so how is this percentage stuff handled in solana/anchor is what the main question is.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-04-12T20:21:47.064000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "6af1b1f122bbcd272d8f3dcbe0034328"
}