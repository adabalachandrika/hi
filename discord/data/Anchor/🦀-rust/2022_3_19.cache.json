{
    "total_results": 26,
    "messages": [
        [
            {
                "id": "954734950232494150",
                "type": 19,
                "content": "Yeah, weird, not sure why they would do that",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T13:35:50.253000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "954733202600235038"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "954733202600235038",
                "type": 0,
                "content": "<@!134416332509675520>  weird ```#[repr(C)]\n#[derive(BorshSerialize, BorshDeserialize, PartialEq, Debug, Clone)]\n/// Args for create call\npub struct CreateMetadataAccountArgsV2 {\n    /// Note that unique metadatas are disabled for now.\n    pub data: DataV2,\n    /// Whether you want your metadata to be updateable in the future.\n    pub is_mutable: bool,\n}```\nmetaplex still using reprC even though they are using borsh now, any idea why /",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T13:28:53.585000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954729562519011389",
                "type": 0,
                "content": "How to pass in an enum?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "826844078573355118",
                    "username": "David197088",
                    "avatar": null,
                    "discriminator": "0891",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T13:14:25.722000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954719473301082172",
                "type": 0,
                "content": "aha got it.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:34:20.265000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954718785011613756",
                "type": 19,
                "content": "Yeah. But if you want to skip borsh and use `#[account(zero_copy)]`, that uses `repr(packed)` https://doc.rust-lang.org/nomicon/other-reprs.html#reprpacked",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://doc.rust-lang.org/nomicon/other-reprs.html",
                        "title": "Other reprs - The Rustonomicon",
                        "description": "The Dark Arts of Advanced and Unsafe Rust Programming",
                        "color": 16777215,
                        "reference_id": "954718785011613756"
                    }
                ],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:31:36.164000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "954718239198421102"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "954718502407786546",
                "type": 19,
                "content": "No. But if you use borsh, borsh specifies how to serialize/deserialize, so you don't need to worry about the in-memory layout.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:30:28.786000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "954717317911154750"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "954718239198421102",
                "type": 0,
                "content": "or borsh takes care of this, cause the open source programs metaplex,spl, where serialization is done manually using array refs their structs are reprC, but if borsh takes care of this u dont need to have reprC structs in anchor ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:29:26.032000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954717470797738004",
                "type": 0,
                "content": "so if am deserializing a struct i know first x bytes is this field etc, cause if we dont, rust gives no gurantees on the field arrangement of a struct if so this could cause deserialization issues then.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:26:22.831000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954717317911154750",
                "type": 0,
                "content": "one more thing are structs using solana smart contracts by default reprC for a fixed order,",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:25:46.380000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954716682872557608",
                "type": 19,
                "content": "ahaaaa rust compiler is damn smart \ud83d\ude1b",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:23:14.975000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "954716539247013939"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "954716539247013939",
                "type": 19,
                "content": "Rust type inference. Rust is saying \"ok, if this match statement is going to make any sense at all then T needs to be ComputeBudgetInstruction\".",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:22:40.732000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "954715052483678208"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "954716285168652329",
                "type": 0,
                "content": "code in question : https://github.com/solana-labs/solana/blob/0224a8b127ace4c6453dd6492a38c66cb999abd2/sdk/src/compute_budget.rs#L134",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "article",
                        "url": "https://github.com/solana-labs/solana/blob/0224a8b127ace4c6453dd6492a38c66cb999abd2/sdk/src/compute_budget.rs",
                        "title": "solana/compute_budget.rs at 0224a8b127ace4c6453dd6492a38c66cb999abd...",
                        "description": "Web-Scale Blockchain for fast, secure, scalable, decentralized apps and marketplaces. - solana/compute_budget.rs at 0224a8b127ace4c6453dd6492a38c66cb999abd2 \u00b7 solana-labs/solana",
                        "color": 1975079,
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/0a0804d476b3ab1ef4e52be5452cfbb114fc373b700f1203e66ce2502e47315e/solana-labs/solana",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/8m3ndhzFapuNWXrWO1XoXQ5btCvUsS1QfGy7_-hbCjI/https/opengraph.githubassets.com/0a0804d476b3ab1ef4e52be5452cfbb114fc373b700f1203e66ce2502e47315e/solana-labs/solana",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:21:40.155000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954715532706340914",
                "type": 0,
                "content": "for this to work match has to somehow call ```try_from_slice_unchcked::<ComputeBudgetInstruction>(&unstruction.data)```",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:18:40.754000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954715052483678208",
                "type": 0,
                "content": "doesnt this function requires you to give the type T via turbo fish operator, \n```pub fn try_from_slice_unchecked<T>(data: &[u8]) -> Result<T, Error> ``` if so how does this work , \n```match try_from_slice_unchecked(&instruction.data) {\n                    Ok(ComputeBudgetInstruction::RequestUnits(units)) => {\n                        if units > MAX_UNITS {\n                            return Err(error);\n                        }```",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T12:16:46.260000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954631178319724584",
                "type": 0,
                "content": "<@!347689664855015424> , sent",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "826844078573355118",
                    "username": "David197088",
                    "avatar": null,
                    "discriminator": "0891",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T06:43:29.101000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954627500879806464",
                "type": 19,
                "content": "https://github.com/project-serum/anchor/issues/1646#issuecomment-1072603602",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "826844078573355118",
                        "username": "David197088",
                        "avatar": null,
                        "discriminator": "0891",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T06:28:52.331000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "954627288706715699"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "954627288706715699",
                "type": 0,
                "content": "<@!347689664855015424> ,owner = id() doesn't work in version 0.22.1, works in 0.20.1 though, pls HELP",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "826844078573355118",
                    "username": "David197088",
                    "avatar": null,
                    "discriminator": "0891",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-19T06:28:01.745000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954465920795951135",
                "type": 0,
                "content": "yes, it compiles an empty program now after all",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:46:48.637000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954465552842235944",
                "type": 0,
                "content": "just*",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:45:20.910000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954465541257588827",
                "type": 0,
                "content": "but even if i comment it out it still compiles jusr fine.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:45:18.148000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954464775444787300",
                "type": 0,
                "content": "you have to define the modules and the root module file in a lib is usually called `lib.rs`",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:42:15.564000+00:00",
                "edited_timestamp": "2022-03-18T19:42:25.508000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954464706951786626",
                "type": 0,
                "content": "https://doc.rust-lang.org/book/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://doc.rust-lang.org/book/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html",
                        "title": "Managing Growing Projects with Packages, Crates, and Modules - The ...",
                        "color": 16777215
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:41:59.234000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954464654581719050",
                "type": 19,
                "content": "thats just how rust works",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "445019022338031618",
                        "username": "aaraN",
                        "avatar": "d629786f19bee49e084593d5705df36b",
                        "discriminator": "5789",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:41:46.748000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "954463405291491329"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "954463601580711957",
                "type": 0,
                "content": "why do we do this in rust projects ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:37:35.693000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954463556391288882",
                "type": 0,
                "content": "i know saying pub mod entrypoint means, find its implementation in entrypoint.rs or in a folder called entrypoint/mod.rs",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:37:24.919000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "954463405291491329",
                "type": 0,
                "content": "what is the lib.rs files in trad solana file architechture used for, for e.g if it has the following \n```// #[cfg(not(feature = \"no-entrypoint\"))]\n// pub mod entrypoint;\n// pub mod instruction;\n// pub mod error;\n// pub mod processor;\n// pub mod state;\n``` , what is the point of doing this ?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "445019022338031618",
                    "username": "aaraN",
                    "avatar": "d629786f19bee49e084593d5705df36b",
                    "discriminator": "5789",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-03-18T19:36:48.894000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "ecb7758b82c9c05cfcb414137835cdc3"
}