{
    "total_results": 33,
    "messages": [
        [
            {
                "id": "939918430541340722",
                "type": 19,
                "content": "Oh I see..so all the input data has to be provided by the authorized account. Noted, Tks Alan",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "931774070385688646",
                    "username": "Tripega",
                    "avatar": null,
                    "discriminator": "8892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T16:20:16.681000+00:00",
                "edited_timestamp": "2022-02-06T16:21:48.423000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939917542628151388"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939917542628151388",
                "type": 19,
                "content": "You can't use reqwest inside your anchor project (your smart contract can't talk to the outside world at all, so definitely can't make http requests)",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "931774070385688646",
                        "username": "Tripega",
                        "avatar": null,
                        "discriminator": "8892",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T16:16:44.986000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939914896500482089"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939914896500482089",
                "type": 0,
                "content": "Hi guys, I created a rust program that uses reqwest 0.11 , and locally it runs correctly. But if I add it to the dependencies in my anchor project and then I run anchor test it reports \"error[E0583]: file not found for module `sys` \" ..any advice? ps: reqwest is an http client",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "931774070385688646",
                    "username": "Tripega",
                    "avatar": null,
                    "discriminator": "8892",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T16:06:14.100000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939874637070884994",
                "type": 19,
                "content": "Mm, can you put this on github? I think I would need to poke around with it for a sec",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "430802284742574101",
                        "username": "Mark Antony",
                        "avatar": "b1831778b027788bd79a1ae82fc90e79",
                        "discriminator": "2393",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T13:26:15.504000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939834154781118484"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939834154781118484",
                "type": 19,
                "content": "Should I try something else? \n\nBasically, I want to find a way to remove empty structs that I'm using as types when I'm passing account data in, is there a better way to do that?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "430802284742574101",
                    "username": "Mark Antony",
                    "avatar": "b1831778b027788bd79a1ae82fc90e79",
                    "discriminator": "2393",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T10:45:23.774000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939568948482035823"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939707409750958100",
                "type": 0,
                "content": "by debugger; statement, you meaning like add a stop, pause, start, etc flow?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:21:45.404000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939707251269189714",
                "type": 0,
                "content": "always meant to migrate to inside vscode but this should give me the final push thanks!",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:21:07.619000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939706156715212851",
                "type": 0,
                "content": "That gives you an actual debugger, plus a way to use the explorer etc.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:16:46.657000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939706029376155678",
                "type": 19,
                "content": "By the way, another trick is that if you run your tests from the vscode terminal, it's pretty easy to use an actual `debugger;` statement",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "793009052879028254",
                        "username": "Jack Robson",
                        "avatar": "50ab165013a7566d3c7faaf272f7b660",
                        "discriminator": "9682",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:16:16.297000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939705422825267260"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939705539829587990",
                "type": 0,
                "content": "thanks <@!134416332509675520> , you've helped many times during my search and today, god bless you!",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:14:19.580000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939705422825267260",
                "type": 0,
                "content": "3. small amounts of SOL will be eaten by the rent collector\n4. you can add `    setInterval(() => {}, 1 << 30);` to the bottom of your tests and use https://explorer.solana.com/ with the custom RPC setting and search your transactions for clues",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://explorer.solana.com/",
                        "title": "Explorer | Solana",
                        "description": "Look up transactions and accounts on the various Solana clusters"
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:13:51.684000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939704974017962036",
                "type": 0,
                "content": "so to summarise for when I forgot this next time:\n\n1. program derived addresses are not automatically owned by their seed programs, in anchor we need to init the account in the context for it to be owned by a program, i.e. \n\n```    #[account(init, payer = user, space = 8, seeds = [b\"escrow\"], bump = bump)]\n    pub base_account: Account<'info, BaseAccount>,``` in my initialise function \n\nor ```    #[account(mut, seeds = [b\"escrow\"], bump = bump)]\n    pub base_account: Account<'info, BaseAccount>,``` in my second function \"gamble in my instance\"\n\n2. if an account is owned by the program you can do a simple mutation i.e. using \n```pub fn transfer_from_owned_account(\n    src: &mut AccountInfo,\n    dst: &mut AccountInfo,\n    amount: u64\n) -> ProgramResult {\n    **src.try_borrow_mut_lamports()? = src\n        .lamports()\n        .checked_sub(amount)\n        .ok_or(ProgramError::InvalidArgument)?;\n\n    **dst.try_borrow_mut_lamports()? = dst\n        .lamports()\n        .checked_add(amount)\n        .ok_or(ProgramError::InvalidArgument)?;\n\n    Ok(())\n}```",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:12:04.680000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939703941573263450",
                "type": 0,
                "content": "that was it \ud83d\ude42",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:07:58.526000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939703928084385823",
                "type": 19,
                "content": "beautiful",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:07:55.310000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939703434674855996"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939703499166474271",
                "type": 0,
                "content": "\ud83d\ude04",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:06:13.048000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939703434674855996",
                "type": 19,
                "content": "Ah, but you're transferring an extremely tiny amount of sol, so if you're sending it to a fresh account then the issue is that the rent collector is taking it lol \ud83d\ude43",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "793009052879028254",
                        "username": "Jack Robson",
                        "avatar": "50ab165013a7566d3c7faaf272f7b660",
                        "discriminator": "9682",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:05:57.672000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939702480831402026"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939703182169362483",
                "type": 19,
                "content": "The money is definitely going somewhere if it left your source account (solana won't let you just destroy sol like that)",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "793009052879028254",
                        "username": "Jack Robson",
                        "avatar": "50ab165013a7566d3c7faaf272f7b660",
                        "discriminator": "9682",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:04:57.470000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939702260731105328"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939702977650901002",
                "type": 0,
                "content": "If the PDA is owned by the system program, that's totally fine\u2014you can use `invoke_signed`.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:04:08.709000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939702898336600115",
                "type": 19,
                "content": "This will sound dumb, but the PDA should be owned by whichever program should own it\u2014it depends on what you're trying to do.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "793009052879028254",
                        "username": "Jack Robson",
                        "avatar": "50ab165013a7566d3c7faaf272f7b660",
                        "discriminator": "9682",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:03:49.799000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939693744985346048"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939702480831402026",
                "type": 0,
                "content": "because the other code looks simple\n```    pub fn gamble(ctx: Context<Gamble>, bump: u8) -> ProgramResult {\n        let base_account = &mut ctx.accounts.base_account;\n        let jack = &mut ctx.accounts.jack;\n        let src = &mut base_account.to_account_info();\n        let dst = &mut jack.to_account_info();\n        transfer_from_owned_account(src, dst, 1337)?;\n        Ok(())\n    }\n\n....\n\npub fn transfer_from_owned_account(\n    src: &mut AccountInfo,\n    dst: &mut AccountInfo,\n    amount: u64\n) -> ProgramResult {\n    **src.try_borrow_mut_lamports()? = src\n        .lamports()\n        .checked_sub(amount)\n        .ok_or(ProgramError::InvalidArgument)?;\n\n    **dst.try_borrow_mut_lamports()? = dst\n        .lamports()\n        .checked_add(amount)\n        .ok_or(ProgramError::InvalidArgument)?;\n\n    Ok(())\n}````",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:02:10.258000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939702361876746330",
                "type": 0,
                "content": "I'm guessing because I'm passing the `jack` account wrongly...\n```#[derive(Accounts)]\n#[instruction(bump: u8)]\npub struct Gamble<'info> {    \n    #[account(mut, seeds = [b\"escrow\"], bump = bump)]\n    pub base_account: Account<'info, BaseAccount>,\n    #[account(mut)]\n    pub jack: AccountInfo<'info>,\n}```",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:01:41.897000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939702260731105328",
                "type": 0,
                "content": "but the money is not going into the destination account...",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:01:17.782000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939702190598160395",
                "type": 0,
                "content": "",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "939702190099025940",
                        "filename": "Screenshot_2022-02-06_at_02.00.19.png",
                        "size": 388582,
                        "url": "https://cdn.discordapp.com/attachments/889584618372734977/939702190099025940/Screenshot_2022-02-06_at_02.00.19.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889584618372734977/939702190099025940/Screenshot_2022-02-06_at_02.00.19.png",
                        "width": 2322,
                        "height": 690,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:01:01.061000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939701939803914280",
                "type": 0,
                "content": "----\nHm... so close, the money is coming out of my program-owned PDA account",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T02:00:01.267000+00:00",
                "edited_timestamp": "2022-02-06T02:00:49.308000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939693744985346048",
                "type": 0,
                "content": "---\n\nI think the key distinction, is trying to get my pda account OWNED by the operating program\n\nbecause if that's the case I could do a simple thing like you mention elsewhere:\n```        **base_account.try_borrow_mut_lamports()? = base_account\n            .lamports()\n            .checked_sub(1)\n            .ok_or(ProgramError::InvalidArgument)?;\n        **jack.try_borrow_mut_lamports()? = jack\n            .lamports()\n            .checked_add(1)\n            .ok_or(ProgramError::InvalidArgument)?;```\nDoes that make sense?",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T01:27:27.470000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939674450402619423",
                "type": 19,
                "content": "very helpful, though I can't seem to do a proper invoke_signed call, can you spot my error?\n\n```        let system_program = &ctx.accounts.system_program;\n        let base_account = &ctx.accounts.base_account;\n        let jack = &ctx.accounts.jack;\n\n\n        let extra_lamports = 2;\n\n        invoke_signed(\n            &system_instruction::transfer(\n                &base_account.to_account_info().key,\n                &jack.to_account_info().key,\n                1, \n            ),\n            &[\n                base_account.to_account_info().clone(),\n                jack.to_account_info().clone(),\n                system_program.to_account_info().clone(),\n            ],\n            &[&[\n                &[bump],\n            ]],\n        );```\n\nthe error is ` invalid program argument`",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-06T00:10:47.283000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939646176523878471"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939646266915307520",
                "type": 0,
                "content": "You'll presumably need to use the system program's `transfer` instruction via `invoke_signed`.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-05T22:18:47.816000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939646176523878471",
                "type": 0,
                "content": "(Living at a program-derived address*derived* from your program doesn't mean your program owns the *account* that lives there.)",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-05T22:18:26.265000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939645993618665542",
                "type": 19,
                "content": "In solana, every account is owned by a program, and only that program can spend the account's money or mutate its data. The source account there, check_signer, doesn't seem to be owned by your program, so your program can't just take its money like that.",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "793009052879028254",
                        "username": "Jack Robson",
                        "avatar": "50ab165013a7566d3c7faaf272f7b660",
                        "discriminator": "9682",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-05T22:17:42.657000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889584618372734977",
                    "guild_id": "889577356681945098",
                    "message_id": "939640600389648506"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "939640792853676084",
                "type": 0,
                "content": "my pertinent bit of test code:\n```let [_checkSigner, nonce] = await anchor.web3.PublicKey.findProgramAddress(\n  [program.programId.toBuffer()],\n  program.programId\n);\n\nlet to = anchor.web3.Keypair.generate();\n\n// Add your test here.\nconst tx = await program.rpc.initialize({\n  accounts: {\n    checkSigner: _checkSigner,\n    to: to.publicKey\n  }\n});```",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-05T21:57:02.698000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939640648284393543",
                "type": 0,
                "content": "my rust program so far:\n```use anchor_lang::prelude::*;\n\ndeclare_id!(\"Fg6PaFpoGXkYsidMpWTK6W2BeZ7FEfcYkg476zPFsLnS\");\n\n#[program]\npub mod pda {\n    use super::*;\n    pub fn initialize(ctx: Context<Initialize>) -> ProgramResult {\n        let check_signer = &mut ctx.accounts.check_signer;\n        **check_signer.lamports.borrow_mut() = 0;\n        let to = &mut ctx.accounts.to;\n        **to.lamports.borrow_mut() = 0;\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\npub struct Initialize<'info> {\n    check_signer: AccountInfo<'info>,\n    to: AccountInfo<'info>,\n}\n```",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-05T21:56:28.230000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939640600389648506",
                "type": 0,
                "content": "running into `Error: failed to send transaction: Transaction simulation failed: Error processing Instruction 0: instruction spent from the balance of an account it does not own`",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-05T21:56:16.811000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "939640579560734791",
                "type": 0,
                "content": "trying to find the simplest code to transfer funds from a PDA",
                "channel_id": "889584618372734977",
                "author": {
                    "id": "793009052879028254",
                    "username": "Jack Robson",
                    "avatar": "50ab165013a7566d3c7faaf272f7b660",
                    "discriminator": "9682",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-05T21:56:11.845000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "cc90f05aa5ee3011d678494b437fa188"
}