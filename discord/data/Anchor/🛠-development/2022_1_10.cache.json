{
    "total_results": 48,
    "messages": [
        [
            {
                "id": "930166353250377778",
                "type": 0,
                "content": "what's the correct way to set up the addEventListener call so that it'll trigger a new transaction on every event?\n\nsomething like\n\n```\nthis.program.addEventListener(\"TestEvent\", (event, slot) => {\n      console.log(`Observed t event: ${event} at slot: ${slot}`);\n      this.program.rpc.doSomething(...);   \n});\n```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "652573044375552024",
                    "username": "ryc8889",
                    "avatar": null,
                    "discriminator": "3733",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:29:00.270000+00:00",
                "edited_timestamp": "2022-01-10T18:29:24.575000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930165798578819123",
                "type": 0,
                "content": "Hi guys, I've been learning and experimenting with anchor for a couple of weeks, now i want to create a browser-based client but noticed that in most examples i've seen on github, a random keypair is generated to act as the wallet signer\n\n```javascript\nconst post = web3.Keypair.generate()\nawait program.rpc.newPost(topic, content, {\n    accounts: {\n        author: wallet.value.publicKey,\n        post: post.publicKey,\n        systemProgram: web3.SystemProgram.programId,\n    },\n    signers: [post]\n})\n```\n\nI'm curious, is this the best approach? In cases of PDAs, can this pattern serve as suitable replacement? Is there a browser based example with more details  that i read the code and try to learn from it? Thanks",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "322016887259004929",
                    "username": "Ace \u2660",
                    "avatar": "54ade7b405a526aed63e5552a5308dbd",
                    "discriminator": "5597",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T18:26:48.026000+00:00",
                "edited_timestamp": "2022-01-10T18:39:16.090000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930142572343611392",
                "type": 0,
                "content": "i can create repro",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "149990576572334080",
                    "username": "NB \ud83d\ude08",
                    "avatar": "1aa7d167a3267b29668b227bfeab8342",
                    "discriminator": "4314",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:54:30.460000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930142468471656469",
                "type": 19,
                "content": "deserialization is incorrect",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "149990576572334080",
                    "username": "NB \ud83d\ude08",
                    "avatar": "1aa7d167a3267b29668b227bfeab8342",
                    "discriminator": "4314",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:54:05.695000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930142389929148457"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930142432450994196",
                "type": 19,
                "content": "yeah i know",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "149990576572334080",
                    "username": "NB \ud83d\ude08",
                    "avatar": "1aa7d167a3267b29668b227bfeab8342",
                    "discriminator": "4314",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:53:57.107000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930142308513513503"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930142389929148457",
                "type": 0,
                "content": "but would still be interested why yours doesnt work. What exactly is the error?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:53:46.969000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930142308513513503",
                "type": 19,
                "content": "you can upgrade to 0.20.1 and use packed again btw",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "149990576572334080",
                        "username": "NB \ud83d\ude08",
                        "avatar": "1aa7d167a3267b29668b227bfeab8342",
                        "discriminator": "4314",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:53:27.558000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930138039878033418"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930138096283041852",
                "type": 0,
                "content": "if i add `#[repr(packed)]` alignment is fixed",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "149990576572334080",
                    "username": "NB \ud83d\ude08",
                    "avatar": "1aa7d167a3267b29668b227bfeab8342",
                    "discriminator": "4314",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:36:43.284000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930138039878033418",
                "type": 0,
                "content": "I want to use 0.20.0 but cant wrap my head around why this stuff does not work ```#[zero_copy]\n#[derive(Debug, Default, PartialEq, Eq, PartialOrd, Ord, AnchorDeserialize, AnchorSerialize)]\n\npub struct Decimal {\n    pub v: u128,\n}```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "149990576572334080",
                    "username": "NB \ud83d\ude08",
                    "avatar": "1aa7d167a3267b29668b227bfeab8342",
                    "discriminator": "4314",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T16:36:29.836000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930122573658882059",
                "type": 0,
                "content": "Hey Guys,\n\nJust had a quick question about using Vecs of tuples in a struct. For example, I wanted to have the following:\n```\npub struct ExampleStruct {\n    pub a: Vec<(u8, u8)>,\n}\n```\nThis is able to build and deploy but running `anchor test` gives me a `User defined types not provided` error. I'm assuming that this means that Vecs of tuples aren't currently supported in the IDL.\n\nIs my understanding here correct? If so, is there a workaround so that I could do something similar to this? Thanks!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "392800475608776705",
                    "username": "katana9",
                    "avatar": null,
                    "discriminator": "7798",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T15:35:02.402000+00:00",
                "edited_timestamp": "2022-01-10T15:36:10.202000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930114674215764048",
                "type": 0,
                "content": "anyone know where i could find an example of correct short-term rent calculations?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "625881690614661121",
                    "username": "yelllownate",
                    "avatar": "bc920dfe81fbb5ae09d5e4fe45de24d4",
                    "discriminator": "6718",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T15:03:39.028000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930097629793239221",
                "type": 0,
                "content": "<@!134416332509675520> The hero \u2764\ufe0f",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "443079510053748743",
                    "username": "Acammm",
                    "avatar": "e5c0f2305d711a7c3ac8b1ee080d0958",
                    "discriminator": "3260",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T13:55:55.321000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930097587212648459",
                "type": 19,
                "content": "This is exactly what I needed! cheers",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "443079510053748743",
                    "username": "Acammm",
                    "avatar": "e5c0f2305d711a7c3ac8b1ee080d0958",
                    "discriminator": "3260",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T13:55:45.169000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "925909960964051015"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930088532469506109",
                "type": 0,
                "content": "I want to have the code with the devnet and mainnet program ID included but be able to decide when to pick the devnet or mainnet ones depending of CI or test env etc. Due to auditing I want to change this externally",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "443079510053748743",
                    "username": "Acammm",
                    "avatar": "e5c0f2305d711a7c3ac8b1ee080d0958",
                    "discriminator": "3260",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T13:19:46.350000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930088277590028330",
                "type": 0,
                "content": "Is it possible to influence `    #[cfg(feature = \"devnet\")]` in the rust code from the `anchor test <specific option>` ?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "443079510053748743",
                    "username": "Acammm",
                    "avatar": "e5c0f2305d711a7c3ac8b1ee080d0958",
                    "discriminator": "3260",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T13:18:45.582000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930084466620256286",
                "type": 0,
                "content": "I was to use pass a CandyMachine account into context. Is the CandyMachine struct published in a crate? If so whats it called?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "689988071374061640",
                    "username": "AlphaPrime8 | \ud83c\udf51",
                    "avatar": "7defae5aa4c48eeccc7502bb2b8f68f3",
                    "discriminator": "4734",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T13:03:36.976000+00:00",
                "edited_timestamp": "2022-01-10T13:04:40.556000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930082303156314142",
                "type": 0,
                "content": "ok, i made a pull request to make common public in case anyone else wants to close program accounts in the future",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T12:55:01.166000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930079959031119922",
                "type": 0,
                "content": "it looks like `common` is private unfortunately, maybe worth adding `close` to prelude",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T12:45:42.283000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930079116164755456",
                "type": 0,
                "content": "`crate::common::close()` this is how it's accessed normally inside the crate itself",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T12:42:21.328000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930078595169284136",
                "type": 19,
                "content": "dumb question but does anyone know how to access this method inside a regular lib.rs file?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "248066053161222144",
                    "username": "donderper",
                    "avatar": "7bbcef47e8d4e8218218afd2680ed5a6",
                    "discriminator": "9738",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T12:40:17.113000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "918217203579518996"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930060992036102156",
                "type": 0,
                "content": "lemme check this out!! THanks a lot",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:30:20.199000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930060942031609896",
                "type": 0,
                "content": "it's just 20",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:30:08.277000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930060933026443284",
                "type": 0,
                "content": "https://borsh.io/",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:30:06.130000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930060836536471563",
                "type": 0,
                "content": "maybe I should check out Borch related stuff",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:29:43.125000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930060794396311562",
                "type": 19,
                "content": "may I know how are `[u8; 20]` translated into `space` term?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:29:33.078000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930060474236694558"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930060474236694558",
                "type": 19,
                "content": "exactly and they use `33` once because of the option",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "787242451240222732",
                        "username": "RustySol",
                        "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                        "discriminator": "2351",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:28:16.746000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930060147814957056"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930060147814957056",
                "type": 19,
                "content": "ah ok I found they actually specify the `space`",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:26:58.921000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930059660793372722"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930059660793372722",
                "type": 0,
                "content": "reason why Im asking is that, Im just following the metaplex code here https://github.com/metaplex-foundation/metaplex/blob/master/rust/nft-candy-machine/src/lib.rs#L457. Wonder why they dont have that error",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:25:02.806000+00:00",
                "edited_timestamp": null,
                "flags": 4,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930059276905508864",
                "type": 19,
                "content": "thanks <@!347689664855015424>  any examples you can point me to? Big thanks",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "347689664855015424",
                        "username": "paulx",
                        "avatar": "f0f52417776819a379ec501b16d461c1",
                        "discriminator": "9059",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:23:31.280000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930059076753301515"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930059076753301515",
                "type": 19,
                "content": "yea, rust's null pointer optimization probably. specify space manually in `init` according to the borsh specification",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "787242451240222732",
                        "username": "RustySol",
                        "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                        "discriminator": "2351",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:22:43.560000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "930058380012322916"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930058380012322916",
                "type": 0,
                "content": "Hi there, Im hitting this error\n```\nError: 164: Failed to serialize the account\n```\nI suspect the issue comes from my usage of `Option` in the definition of `#[account]`\n```\n#[account]\n#[derive(Default)]\npub struct VaultAccount {\n    pub campaign_name: [u8; 20],\n    pub time: Option<i64>,\n    pub mint: Option<Pubkey>,\n}\n```\nDoes anyone have some ideas? Thanks",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "787242451240222732",
                    "username": "RustySol",
                    "avatar": "7e7e0cfb8ae81e6c2f7b4d5190d05f4b",
                    "discriminator": "2351",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:19:57.444000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930056142770536479",
                "type": 0,
                "content": "Better to just add a frontend check and instruction",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "194280119710253068",
                    "username": "MinatoTW",
                    "avatar": "558459eb7c113a70373eb53b0218d687",
                    "discriminator": "9698",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:11:04.044000+00:00",
                "edited_timestamp": "2022-01-10T11:17:50.385000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930054486515417121",
                "type": 0,
                "content": "when using `#[account(init_if_needed)]` is there a way to tell within the instruction whether it's a new account or not?\nI want to simply increment a counter within the account each time instruction it's called.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "689988071374061640",
                    "username": "AlphaPrime8 | \ud83c\udf51",
                    "avatar": "7defae5aa4c48eeccc7502bb2b8f68f3",
                    "discriminator": "4734",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T11:04:29.162000+00:00",
                "edited_timestamp": "2022-01-10T11:04:54.187000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930023127767994398",
                "type": 0,
                "content": "cause Program no longer requires T to implement AccountDeserializd",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T08:59:52.654000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930022901200068608",
                "type": 19,
                "content": "are you using an old anchor-lang with a newer anchor-spl?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "341381788620423168",
                        "username": "utx0_",
                        "avatar": "9d9ba5056960dab985f4fec61f07dbd6",
                        "discriminator": "4298",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T08:58:58.636000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "929966511811072032"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930022347505803285",
                "type": 19,
                "content": "yes this was intentional. what is your use case for deserializing `Token`?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "341381788620423168",
                        "username": "utx0_",
                        "avatar": "9d9ba5056960dab985f4fec61f07dbd6",
                        "discriminator": "4298",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T08:56:46.625000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "929966750282440776"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "930021121783398421",
                "type": 0,
                "content": "Hi all \ni have code below but i don't know how to get  NodeWallet(keypair) \nanyone have ideal?\nconst mintNFTResponse = await actions.mintNFT({\n    connection,\n    wallet: new NodeWallet(keypair),\n    uri: 'https://34c7ef24f4v2aejh75xhxy5z6ars4xv47gpsdrei6fiowptk2nqq.arweave.net/3wXyF1wvK6ARJ_9ue-O58CMuXrz5nyHEiPFQ6z5q02E',\n    maxSupply: 1\n  });",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "902199345103904858",
                    "username": "anhlt",
                    "avatar": null,
                    "discriminator": "1870",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T08:51:54.390000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "930006616340840488",
                "type": 0,
                "content": "how can I use commitment with program.account.all() ? I see it's available with fetch() but no all()",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "194280119710253068",
                    "username": "MinatoTW",
                    "avatar": "558459eb7c113a70373eb53b0218d687",
                    "discriminator": "9698",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T07:54:16.023000+00:00",
                "edited_timestamp": "2022-01-10T08:04:36.447000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929972128898490368",
                "type": 0,
                "content": "If I have a user1 account key and airdrop some sol, the owner becomes the system program. I can transfer sol to other accounts and sign with user1 no problem.\n\nBut then I use that user1 public key to init a new account of a different type from my program. For example:\n```\n#[account(init, payer = authority, space = 64)\nvault: Account<'info, Vault>,\n```\n\nThen I check the owner and the owner is now my program id instead of the system program. My program is able to take ownership from the system program?\n\nThen I try to send sol from user1 to user2, except now I get the error that the user1 account may not be used to pay transaction fees. I assume this is because the user1 account is now owned by my program and not by the actual system program account anymore.\n\nI've tried to transfer ownership back to the system program but I get the error illegally modified the program id of an account.\n\nDoes this mean the user1 account is now broken? What happens to the sol that was in there?\n\nIf I call web3.SystemProgram.createAccount with the user1 public key. I get the error account address already in use.\n\nSo does the anchors init attribute not check if the account address is already in use?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "175770682599276544",
                    "username": "Kriptikz",
                    "avatar": "f99a6b232f5b1255846cae6580a24ada",
                    "discriminator": "4490",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T05:37:13.576000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929966750282440776",
                "type": 0,
                "content": "Looks like ```impl anchor_lang::AccountDeserialize for Token {\n    fn try_deserialize(buf: &mut &[u8]) -> Result<Self, ProgramError> {\n        Token::try_deserialize_unchecked(buf)\n    }\n\n    fn try_deserialize_unchecked(_buf: &mut &[u8]) -> Result<Self, ProgramError> {\n        Ok(Token)\n    }\n}\n``` was this removed from `Token` was this intentional?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "341381788620423168",
                    "username": "utx0_",
                    "avatar": "9d9ba5056960dab985f4fec61f07dbd6",
                    "discriminator": "4298",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T05:15:51.214000+00:00",
                "edited_timestamp": "2022-01-10T05:19:39.282000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929966511811072032",
                "type": 0,
                "content": "Hey in the latest version of anchor I am now getting a bunch of api change type errors: ```error[E0277]: the trait bound `Token: anchor_lang::AccountDeserialize` is not satisfied\n  --> programs/hydra-staking/src/lib.rs:49:24\n   |\n49 |     pub token_program: Program<'info, Token>,\n   |                        ^^^^^^^^^^^^^^^^^^^^^ the trait `anchor_lang::AccountDeserialize` is not implemented for `Token`\n   |\nnote: required by a bound in `anchor_lang::Program`\n  --> /home/utx0/.cargo/git/checkouts/anchor-cdfdd1da98090750/bb67efa/lang/src/program.rs:13:35\n   |\n13 | pub struct Program<'info, T: Id + AccountDeserialize + Clone> {\n   |                                   ^^^^^^^^^^^^^^^^^^ required by this bound in `anchor_lang::Program`\n\n```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "341381788620423168",
                    "username": "utx0_",
                    "avatar": "9d9ba5056960dab985f4fec61f07dbd6",
                    "discriminator": "4298",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T05:14:54.358000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929935895526776882",
                "type": 0,
                "content": "issue was lot of addresses in arguments ^ using remaining_accounts helped",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "194280119710253068",
                    "username": "MinatoTW",
                    "avatar": "558459eb7c113a70373eb53b0218d687",
                    "discriminator": "9698",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T03:13:14.867000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929935756695339149",
                "type": 19,
                "content": "Less signers especially",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "844070629484527646",
                    "username": "mfrager",
                    "avatar": "73603c806358e89389d87fdd3caf4305",
                    "discriminator": "3430",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "194280119710253068",
                        "username": "MinatoTW",
                        "avatar": "558459eb7c113a70373eb53b0218d687",
                        "discriminator": "9698",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-10T03:12:41.767000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "929837557288689754"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929863528574222356",
                "type": 19,
                "content": "yes, use less accounts",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "831450660146642974",
                    "username": "Pikachoo",
                    "avatar": "3778d8c6025afe096468846a546f4bfe",
                    "discriminator": "4505",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "194280119710253068",
                        "username": "MinatoTW",
                        "avatar": "558459eb7c113a70373eb53b0218d687",
                        "discriminator": "9698",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T22:25:41.241000+00:00",
                "edited_timestamp": "2022-01-09T22:25:47.179000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "929837557288689754"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929852136269951086",
                "type": 19,
                "content": "Search for Box<>",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "188056495257157641",
                    "username": "Dr.Biscuits",
                    "avatar": "5a63e89f7be3ade6fa3e99eafd742a7f",
                    "discriminator": "7380",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "194280119710253068",
                        "username": "MinatoTW",
                        "avatar": "558459eb7c113a70373eb53b0218d687",
                        "discriminator": "9698",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T21:40:25.104000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "929837557288689754"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "929837557288689754",
                "type": 0,
                "content": "are there any tips on reducing transaction size? the 1232 limit",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "194280119710253068",
                    "username": "MinatoTW",
                    "avatar": "558459eb7c113a70373eb53b0218d687",
                    "discriminator": "9698",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:42:29.204000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929826964376809524",
                "type": 0,
                "content": "hey people just wanted to ask what github repositories do you clone to start building your new dapps?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "498506679474847774",
                    "username": "TurtleMoon",
                    "avatar": "c78b008e9f8bc93c5782cb0a7b571863",
                    "discriminator": "0419",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T20:00:23.657000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "929823493925793852",
                "type": 0,
                "content": "Looking for extra pair of hands\n\nhttps://jobs.lever.co/Expopulus/a30ab3f9-bf2d-4e43-b3f3-07d11025a5f1",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "391963975060946944",
                    "username": "Xico",
                    "avatar": "1aa98be3545fd03d83dfbd57db0a90e3",
                    "discriminator": "4440",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://jobs.lever.co/Expopulus/a30ab3f9-bf2d-4e43-b3f3-07d11025a5f1",
                        "title": "ExPopulus - Solana Blockchain Developer",
                        "description": "Company Overview: Ex Populus is a cutting-edge gaming and entertainment start-up focused on building the Metaverse by leveraging web3 technology. Founded by notable executives from PC, Console, Mobile, VR, Esports, Crypto, & Animated film, who are partnering with creative rising stars to publish the world's most compelling games and entertainmen...",
                        "thumbnail": {
                            "url": "https://lever-client-logos.s3.us-west-2.amazonaws.com/f8114de3-9cee-45eb-bb1c-a3aef8960795-1633038964613.png",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/5u36crfoT0tfN7V5SScIm-OlAsQzZiXT6PpvMK1jU-0/https/lever-client-logos.s3.us-west-2.amazonaws.com/f8114de3-9cee-45eb-bb1c-a3aef8960795-1633038964613.png",
                            "width": 400,
                            "height": 400
                        }
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-01-09T19:46:36.237000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "0b99c2f72d52df847e8e5beb667786f5"
}