{
    "total_results": 39,
    "messages": [
        [
            {
                "id": "924344520366239745",
                "type": 19,
                "content": "Please post a code snippet/error log.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "721030147871866881",
                    "username": "davidj",
                    "avatar": "bf6752dfe1faaa2f15c98ae66d60601d",
                    "discriminator": "2953",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "725857328150085702",
                        "username": "hawk",
                        "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                        "discriminator": "5203",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T16:55:07.146000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924327445862174800"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924343026707480646",
                "type": 19,
                "content": "I think one problem might be that `user` is defined as a Signer type, but then client-side in the rpc you're only including the postAccount keypair in the signers array.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "721030147871866881",
                    "username": "davidj",
                    "avatar": "bf6752dfe1faaa2f15c98ae66d60601d",
                    "discriminator": "2953",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "354755190949281795",
                        "username": "zendevil.eth",
                        "avatar": "79a4167486f4734daaad1f50376e33ec",
                        "discriminator": "3320",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T16:49:11.030000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924280637244985364"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924327445862174800",
                "type": 0,
                "content": "In a program, is it possible to read the state of a PDA  `Loader`  with `load_mut` while in the same instruction signing a CPI with the same PDA by using its `AccountInfo` (accessed via  `to_account_info` ) as the signing authority?\n\nI noticed that when I call both `load_mut` (to access state) and `to_account_info` (used for the PDA authorized CPI) on the same PDA, I keep getting the runtime error: `instruction tries to borrow reference for an account which is already borrowed`\n\nWould appreciate any guidance here \ud83d\ude42\n\nI've also searched for this error message within this server and haven't found anything related to my issue.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "725857328150085702",
                    "username": "hawk",
                    "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                    "discriminator": "5203",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T15:47:16.267000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924302751134015548",
                "type": 0,
                "content": "is there an nft standard for solana that I can copy and extend?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "354755190949281795",
                    "username": "zendevil.eth",
                    "avatar": "79a4167486f4734daaad1f50376e33ec",
                    "discriminator": "3320",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T14:09:08.585000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924300602513707069",
                "type": 19,
                "content": "No. Absolute max is 10mb (and it'll cost you 70 sol to rent-exempt!)",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "354755190949281795",
                        "username": "zendevil.eth",
                        "avatar": "79a4167486f4734daaad1f50376e33ec",
                        "discriminator": "3320",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T14:00:36.314000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924300257150525460"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924300257150525460",
                "type": 0,
                "content": "is it possible to create an account with unlimited size?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "354755190949281795",
                    "username": "zendevil.eth",
                    "avatar": "79a4167486f4734daaad1f50376e33ec",
                    "discriminator": "3320",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T13:59:13.973000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924297960769064970",
                "type": 0,
                "content": "Yeah, I guess I just call them \"caller\" and \"callee\"",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T13:50:06.473000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924297810776588348",
                "type": 19,
                "content": "got it, thx! \ud83d\ude42 is there a name for the program that is being CPI called, and the program that does the CPI call? i.e. CPI callee and CPI caller I guess?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T13:49:30.712000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924293337471647784"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924297550889103390",
                "type": 0,
                "content": "My guess though is that your `declare_id!` is wrong (take a look at the program log and see if you see 3Hu85D1dwvdXobYuN6A8A4Xe6joKFVw5QYK9fNFDN2Jc being printed for you program)",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T13:48:28.750000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924297429279465532",
                "type": 19,
                "content": "Can you post the full program log? Much easier to debug that way",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "354755190949281795",
                        "username": "zendevil.eth",
                        "avatar": "79a4167486f4734daaad1f50376e33ec",
                        "discriminator": "3320",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T13:47:59.756000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924280637244985364"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924293337471647784",
                "type": 19,
                "content": "Not totally sure I'm following your question... I think it will depend on context. The only hard rule about ownership is the one about how only the owning program can mutate one of its accounts, or spends one of its account's money.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "350632015852208140",
                        "username": "David | qPools",
                        "avatar": "19a8155e98df3f78d7a10548bc202b78",
                        "discriminator": "3335",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T13:31:44.193000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924268297288048641"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924282267327684679",
                "type": 0,
                "content": "```\nuse anchor_lang::prelude::*;\n\ndeclare_id!(\"3Hu85D1dwvdXobYuN6A8A4Xe6joKFVw5QYK9fNFDN2Jc\");\n\n#[program]\npub mod mibexy {\n    use super::*;\n\n    pub fn post(ctx: Context<Initialize>, data: String) -> ProgramResult {\n        let post_account = &mut ctx.accounts.post_account; \n        post_account.post = data;\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\npub struct Initialize<'info> {\n    #[account(init, payer = user, space = 128)]\n    pub post_account: Account<'info, Post>,\n    #[account(mut)]\n    pub user: Signer<'info>,\n    pub system_program: Program <'info, System>,\n}\n\n#[account]\npub struct Post {\n    pub post: String\n}\n```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "354755190949281795",
                    "username": "zendevil.eth",
                    "avatar": "79a4167486f4734daaad1f50376e33ec",
                    "discriminator": "3320",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T12:47:44.865000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924282207546269746",
                "type": 0,
                "content": "<@!350632015852208140> I posted the whole test. You want the lib.rs code?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "354755190949281795",
                    "username": "zendevil.eth",
                    "avatar": "79a4167486f4734daaad1f50376e33ec",
                    "discriminator": "3320",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "350632015852208140",
                        "username": "David | qPools",
                        "avatar": "19a8155e98df3f78d7a10548bc202b78",
                        "discriminator": "3335",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T12:47:30.612000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924281836136460359",
                "type": 0,
                "content": "one of the PDAs youre passing over are not generated by the program would be my first guess. what are the RPC calls doing? can you post minimal code?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T12:46:02.061000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924280733558771812",
                "type": 0,
                "content": "How to fix this?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "354755190949281795",
                    "username": "zendevil.eth",
                    "avatar": "79a4167486f4734daaad1f50376e33ec",
                    "discriminator": "3320",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T12:41:39.186000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924280721097523280",
                "type": 0,
                "content": "But I'm getting this error on anchor test:\n```\nError: 167: The given account is not owned by the executing program\n```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "354755190949281795",
                    "username": "zendevil.eth",
                    "avatar": "79a4167486f4734daaad1f50376e33ec",
                    "discriminator": "3320",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T12:41:36.215000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924280637244985364",
                "type": 0,
                "content": "I have the following test:\n```\nimport * as anchor from '@project-serum/anchor';\nimport { Program } from '@project-serum/anchor';\nimport { Mibexy } from '../target/types/mibexy';\n\ndescribe('mibexy', () => {\n\n  // Configure the client to use the local cluster.\n  anchor.setProvider(anchor.Provider.env());\n\n  const program = anchor.workspace.Mibexy as Program<Mibexy>;\n\n  it('Is initialized!', async () => {\n    // Add your test here.\n    const postAccount0 = anchor.web3.Keypair.generate();\n    const tx0 = await program.rpc.post(\"Hello World!\", {\n                 accounts: {\n                     postAccount: postAccount0.publicKey,\n                     user: program.provider.wallet.publicKey,\n                     systemProgram: anchor.web3.SystemProgram.programId\n                 },\n                 signers: [postAccount0]\n             });\n    console.log(\"tx0: \" + tx0);\n    const postAccount1 = anchor.web3.Keypair.generate();\n    const tx1 = await program.rpc.post(\"Great stuff!\", {\n                 accounts: {\n                     postAccount: postAccount1.publicKey,\n                     user: program.provider.wallet.publicKey,\n                     systemProgram: anchor.web3.SystemProgram.programId\n                 },\n                 signers: [postAccount1]\n             });\n    console.log(\"tx1: \" + tx1);\n  });\n});\n```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "354755190949281795",
                    "username": "zendevil.eth",
                    "avatar": "79a4167486f4734daaad1f50376e33ec",
                    "discriminator": "3320",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T12:41:16.223000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924277028197392414",
                "type": 19,
                "content": "can you post some code? of the context, and the logic?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "194280119710253068",
                        "username": "MinatoTW",
                        "avatar": "558459eb7c113a70373eb53b0218d687",
                        "discriminator": "9698",
                        "public_flags": 64
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T12:26:55.759000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924177873563156480"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924268297288048641",
                "type": 0,
                "content": "whenever I execute a CPI call, and I initialize an account within that CPI call, I have the following question:\nshould the program that executed the CPI call  own this account, or should the program that is being called own this account? or does this depend on the context? \n\nI am playing around with a program right now, and it is the latter (bcs the underlying CPI program has to further process this..)",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T11:52:14.148000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924177873563156480",
                "type": 0,
                "content": "any idea why my state account data isn't updating ? <:thonk1:801847763527925821> even though they're mutable",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "194280119710253068",
                    "username": "MinatoTW",
                    "avatar": "558459eb7c113a70373eb53b0218d687",
                    "discriminator": "9698",
                    "public_flags": 64
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T05:52:55.452000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924101026800349184",
                "type": 0,
                "content": "Ahh okay thanks!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "203259322573127690",
                    "username": "VEWilliam",
                    "avatar": "5dcdde95e85e299eb07df11e96912b48",
                    "discriminator": "7840",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T00:47:33.756000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924100109619314699",
                "type": 19,
                "content": "Mm, as written you don't have a choice, since `zero_copy` doesn't support heap allocations (Strings in rust live on the heap).",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "203259322573127690",
                        "username": "VEWilliam",
                        "avatar": "5dcdde95e85e299eb07df11e96912b48",
                        "discriminator": "7840",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T00:43:55.083000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924096108400091137"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924096170198962196",
                "type": 0,
                "content": "Or just a \"stylistic\" choice?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "203259322573127690",
                    "username": "VEWilliam",
                    "avatar": "5dcdde95e85e299eb07df11e96912b48",
                    "discriminator": "7840",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T00:28:15.852000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924096108400091137",
                "type": 0,
                "content": "In this example we are usint a array of u8's to store something that could be stored in a String (ie. the name prop on ChatRoom). Is there a reason to use a u8 array instead of a String?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "203259322573127690",
                    "username": "VEWilliam",
                    "avatar": "5dcdde95e85e299eb07df11e96912b48",
                    "discriminator": "7840",
                    "public_flags": 0
                },
                "attachments": [
                    {
                        "id": "924096108110704680",
                        "filename": "unknown.png",
                        "size": 31083,
                        "url": "https://cdn.discordapp.com/attachments/889577399308656662/924096108110704680/unknown.png",
                        "proxy_url": "https://media.discordapp.net/attachments/889577399308656662/924096108110704680/unknown.png",
                        "width": 707,
                        "height": 336,
                        "content_type": "image/png"
                    }
                ],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-25T00:28:01.118000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924088155240534016",
                "type": 0,
                "content": "well, anything that changes the account but without `account(mut)` attached will silently keep the account data intact.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "469776019784466442",
                    "username": "dovahcrow",
                    "avatar": "65b53804e1e9d53412c95e075c9390dc",
                    "discriminator": "3442",
                    "public_flags": 256
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T23:56:24.937000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924087969248346153",
                "type": 19,
                "content": "Can you post some example code?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "469776019784466442",
                        "username": "dovahcrow",
                        "avatar": "65b53804e1e9d53412c95e075c9390dc",
                        "discriminator": "3442",
                        "public_flags": 256
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T23:55:40.593000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924086520892235816"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924086520892235816",
                "type": 19,
                "content": "The problem is that previously Solana would throw me a write violation but not anymore these days.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "469776019784466442",
                    "username": "dovahcrow",
                    "avatar": "65b53804e1e9d53412c95e075c9390dc",
                    "discriminator": "3442",
                    "public_flags": 256
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "134416332509675520",
                        "username": "cqfd",
                        "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                        "discriminator": "6977",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T23:49:55.278000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "923932244127666217"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924077137412104233",
                "type": 19,
                "content": "Correct, no problem. Associated token account is still initialized via spl token program's `initialize_account`, so ata accounts and generic token accounts are the same.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "721030147871866881",
                    "username": "davidj",
                    "avatar": "bf6752dfe1faaa2f15c98ae66d60601d",
                    "discriminator": "2953",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "350632015852208140",
                        "username": "David | qPools",
                        "avatar": "19a8155e98df3f78d7a10548bc202b78",
                        "discriminator": "3335",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T23:12:38.082000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924071939079819304"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924071939079819304",
                "type": 0,
                "content": "also, is there any issue with the token address being off-curve? the owner still has exclusive control over it in any case, right?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T22:51:58.703000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924029450360868945",
                "type": 0,
                "content": "thanks! \ud83d\ude42",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T20:03:08.603000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924029442530111579",
                "type": 0,
                "content": "lololol",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T20:03:06.736000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924029421172699157",
                "type": 0,
                "content": "Yep.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T20:03:01.644000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924029399857238037",
                "type": 0,
                "content": "so you can have multiple token accounts that have the same mint authority, and same owners?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T20:02:56.562000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924029373676413059",
                "type": 0,
                "content": "So yeah, Token.createAccount makes a token account that lives at a random address, whereas associated token account addresses are program-derived from the associated token program, with seeds based on the mint and the owner (so deterministic)",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T20:02:50.320000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924029202058084413",
                "type": 19,
                "content": "An associated token account is a token account that lives at a special kind of address (whereas a token account in general could live at any address you want)",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "350632015852208140",
                        "username": "David | qPools",
                        "avatar": "19a8155e98df3f78d7a10548bc202b78",
                        "discriminator": "3335",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T20:02:09.403000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924028838822936626"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "924028838822936626",
                "type": 0,
                "content": "quick question, what is the difference between `Token.createAccount` and `Token.createAssociatedTokenAccount`? I just realized I had this huge bug in my code where I used the former instead of the latter, so I am now confused about what `Token.createAccount` is used for? \n\nCalling `Token.createAccount` twice generates two different addresses. Probably a really simple stupid bug form my side",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T20:00:42.801000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924017565246849045",
                "type": 0,
                "content": "Yes, init_if_needed implies mut and I can get away without specifying space since my account has Default.\nCheers!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "263230286274232320",
                    "username": "Egemen",
                    "avatar": null,
                    "discriminator": "5105",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T19:15:54.971000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924017053944406076",
                "type": 0,
                "content": "First of all, I cannot appreciate you guys more. This was my first time getting this kind of response from a community, thanks so much \ud83d\ude42\n\nOn the other hand, I was trying to recreate the same situation on the tutorial codes, they worked wonderfully \ud83d\ude04\nAfter that tried to gut the working code until the point of no fat except the error, failed.\n\nRealized I have the error on the missed \"overly simplified\" parts. \ud83e\udd26\u200d\u2642\ufe0f \n\nThanks to you guys so much again. Sorry for inconvenience.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "263230286274232320",
                    "username": "Egemen",
                    "avatar": null,
                    "discriminator": "5105",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T19:13:53.067000+00:00",
                "edited_timestamp": "2021-12-24T19:14:46.371000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "924008170479829004",
                "type": 19,
                "content": "youre definitely missing the `payer` constraint and the `space` constraint on the `pub staked: Account<'info, Staked>`. An alternative to adding the `space` constraint is adding  `#[derive(Default)]` to the `Staked` struct",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "263230286274232320",
                        "username": "Egemen",
                        "avatar": null,
                        "discriminator": "5105",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2021-12-24T18:38:35.084000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "924000342587359272"
                },
                "hit": true
            }
        ]
    ],
    "analytics_id": "a748841d2ea25374dbd3c4c45f04dc30"
}