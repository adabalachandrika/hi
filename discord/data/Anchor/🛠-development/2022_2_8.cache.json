{
    "total_results": 57,
    "messages": [
        [
            {
                "id": "940673632148025405",
                "type": 19,
                "content": "it's weird that the error is `writable privilege escalated` though, it makes it look like it's a mutability problem and not a signature problem",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "917687988266352640",
                    "username": "Agent Fubar (robin)",
                    "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                    "discriminator": "3510",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "474851811422109701",
                        "username": "Doomdoom",
                        "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                        "discriminator": "7145",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T18:21:10.775000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940669706048774184"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940672922845069322",
                "type": 19,
                "content": "noted - thanks a lot!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "917687988266352640",
                    "username": "Agent Fubar (robin)",
                    "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                    "discriminator": "3510",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "474851811422109701",
                        "username": "Doomdoom",
                        "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                        "discriminator": "7145",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T18:18:21.664000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940672823427481672"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940672823427481672",
                "type": 19,
                "content": "I believe no. The program can only sign for PDAs",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "474851811422109701",
                    "username": "Doomdoom",
                    "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                    "discriminator": "7145",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "917687988266352640",
                        "username": "Agent Fubar (robin)",
                        "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                        "discriminator": "3510",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T18:17:57.961000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940671852534202418"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940671852534202418",
                "type": 19,
                "content": "oh that makes a lot of sense. is there no way to get the user to directly sign the CPI then?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "917687988266352640",
                    "username": "Agent Fubar (robin)",
                    "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                    "discriminator": "3510",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "474851811422109701",
                        "username": "Doomdoom",
                        "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                        "discriminator": "7145",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T18:14:06.482000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940669706048774184"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940669706048774184",
                "type": 19,
                "content": "the user is signing for the tx being sent to your program but not for the CPI. I think the way you have to implement this is: 1. mint the NFT to a PDA 2. then trasnfer the NFT from your PDA to the signer",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "474851811422109701",
                    "username": "Doomdoom",
                    "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                    "discriminator": "7145",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "917687988266352640",
                        "username": "Agent Fubar (robin)",
                        "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                        "discriminator": "3510",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T18:05:34.720000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940662685861818390"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940666538418118666",
                "type": 0,
                "content": "Hello everyone, I have run into a unique problem. I am working with an account that holds an array of structs in the following form.\n\n```#[account(zero_copy)]\npub struct Account {\n    pub structs: [Struct; 255], \n}\n\n#[zero_copy]\n#[derive(Default)]\npub struct Struct {\n    pub some_pubkey: Pubkey, \n    pub some_other_pubkey: Pubkey,\n}```\n\n\nWhen I run the following instruction on my client to set some_pubkey at index 0\u2026\n\n```await program.rpc.setPubkey({\n      accounts: {\n        someAccount: Account.publicKey,\n      },\n});```\n\nI then print out both Account.structs[0].some_pubkey and Account.structs[0].some_other_pubkey and get the following\u2026\n\nsome_pubkey\nPublicKey {\n  _bn: <BN: 54588872aa701a7c5c673831a1db1629879c6f8742256339ba5a>\n}\nsome_other_pubkey\nPublicKey {\n  _bn: <BN: 90cad83349090000000000000000000000000000000000000000000000000000>\n}\n\nThe initial Account.publicKey was\u2026\n \nPublicKey {\n  _bn: <BN: 54588872aa701a7c5c673831a1db1629879c6f8742256339ba5a90cad8334909>\n}\n\nAny idea why this overflow is occurring?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "899395555170586685",
                    "username": "bengals1915",
                    "avatar": null,
                    "discriminator": "8335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:52:59.498000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940662852283420682",
                "type": 0,
                "content": "thanks <@!474851811422109701>!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "917687988266352640",
                    "username": "Agent Fubar (robin)",
                    "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                    "discriminator": "3510",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "474851811422109701",
                        "username": "Doomdoom",
                        "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                        "discriminator": "7145",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:38:20.655000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940662685861818390",
                "type": 0,
                "content": "```\n\n#[derive(Accounts)]\n#[instruction(creator_bump: u8)]\npub struct Mint<'info> {\n  // With the following accounts we aren't using anchor macros because they are CPI'd\n  // through to candy-machine which will do all the validations we need on them.\n  #[account(mut)]\n  candy_machine: AccountInfo<'info>,\n  #[account(mut)]\n  candy_machine_creator: AccountInfo<'info>,\n  #[account(mut)]\n  user: Signer<'info>,\n  #[account(mut)]\n  wallet: AccountInfo<'info>,\n  #[account(mut)]\n  metadata: AccountInfo<'info>,\n  #[account(mut)]\n  mint: AccountInfo<'info>,\n  #[account(mut)]\n  master_edition: AccountInfo<'info>,\n  #[account(address = mpl_candy_machine::id())]\n  candy_machine_program: Program<'info, mpl_candy_machine::program::NftCandyMachineV2>,\n  #[account(address = mpl_token_metadata::id())]\n  token_metadata_program: AccountInfo<'info>,\n  token_program: Program<'info, token::Token>,\n  system_program: Program<'info, System>,\n  rent: Sysvar<'info, Rent>,\n  clock: Sysvar<'info, Clock>,\n  // #[account(address = sysvar::recent_blockhashes::id())]\n  recent_blockhashes: AccountInfo<'info>,\n  #[account(address = sysvar::instructions::id())]\n  instruction_sysvar_account: AccountInfo<'info>,\n}\n```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "917687988266352640",
                    "username": "Agent Fubar (robin)",
                    "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                    "discriminator": "3510",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:37:40.977000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940662655918669895",
                "type": 19,
                "content": "```\nuse anchor_lang::{prelude::*, solana_program::sysvar};\nuse anchor_spl::token;\nuse mpl_token_metadata;\nuse mpl_candy_machine;\nuse mpl_candy_machine::cpi::accounts::MintNFT;\n\n#[program]\npub mod my_program {\n    use super::*;\n\n    pub fn my_mint(ctx: Context<Mint>, creator_bump: u8) -> ProgramResult {\n\n      let user = ctx.accounts.user.to_account_info();\n      msg!(\"pubkey: {:?}, writable: {:?}, signer: {:?}\", user.key(), user.is_writable, user.is_signer);\n\n      let cpi_program = ctx.accounts.candy_machine_program.to_account_info();\n      let cpi_accounts = MintNFT {\n        candy_machine: ctx.accounts.candy_machine.to_account_info(),\n        candy_machine_creator: ctx.accounts.candy_machine_creator.to_account_info(),\n        payer: user.clone(),\n        wallet: ctx.accounts.wallet.to_account_info(),\n        metadata: ctx.accounts.metadata.to_account_info(),\n        mint: ctx.accounts.mint.to_account_info(),\n        mint_authority: user.clone(),\n        update_authority: user.clone(),\n        master_edition: ctx.accounts.master_edition.to_account_info(),\n        token_metadata_program: ctx.accounts.token_metadata_program.to_account_info(),\n        token_program: ctx.accounts.token_program.to_account_info(),\n        system_program: ctx.accounts.system_program.to_account_info(),\n        rent: ctx.accounts.rent.to_account_info(),\n        clock: ctx.accounts.clock.to_account_info(),\n        recent_blockhashes: ctx.accounts.recent_blockhashes.to_account_info(),\n        instruction_sysvar_account: ctx.accounts.instruction_sysvar_account.to_account_info(),\n      };\n\n      let cpi_ctx = CpiContext::new(cpi_program, cpi_accounts);\n      mpl_candy_machine::cpi::mint_nft(cpi_ctx, creator_bump)?;\n      Ok(())\n    }\n}\n```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "917687988266352640",
                    "username": "Agent Fubar (robin)",
                    "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                    "discriminator": "3510",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "474851811422109701",
                        "username": "Doomdoom",
                        "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                        "discriminator": "7145",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:37:33.838000+00:00",
                "edited_timestamp": "2022-02-08T17:42:53.336000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940661785130827847"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940661785130827847",
                "type": 19,
                "content": "can you show us the code where you are making the cpi?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "474851811422109701",
                    "username": "Doomdoom",
                    "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                    "discriminator": "7145",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "917687988266352640",
                        "username": "Agent Fubar (robin)",
                        "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                        "discriminator": "3510",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:34:06.226000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940661032328761484"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940661032328761484",
                "type": 0,
                "content": "Hi everyone! I've been hitting my head against the wall for the past 24 hours, trying to fix this issue. If anyone has encountered the same problem, please let me know \ud83d\ude4f\n\nI'm trying to call the `mint_nft()` instruction from Metaplex's `mpl_candy_machine` program (see https://docs.rs/mpl-candy-machine/2.0.1/src/mpl_candy_machine/lib.rs.html#39) through an Anchor CPI call. It works perfectly if I call `mint_nft()` directly from the js client. But when I do it through my custom program (even though all the accounts are really just passed through), it fails with a `writable privilege escalated` error.\n\nI don't understand why this error occurs, given that the account in question is clearly mutable (see the log just before the call to `cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ` in the screenshot). \n\n(It might very well be a problem on Metaplex' side)\n\nAny help would be greatly appreciated!!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "917687988266352640",
                    "username": "Agent Fubar (robin)",
                    "avatar": "fa650afb398b7fc4e2e3675b5b1c978e",
                    "discriminator": "3510",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://docs.rs/mpl-candy-machine/2.0.1/src/mpl_candy_machine/lib.rs.html",
                        "title": "lib.rs - source",
                        "description": "Source of the Rust file `src/lib.rs`."
                    }
                ],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:31:06.744000+00:00",
                "edited_timestamp": "2022-02-08T18:19:05.951000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940659264106684456",
                "type": 0,
                "content": "seeing a bunch of build errors recently, I suspect from a new anchor version",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "725857328150085702",
                    "username": "hawk",
                    "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                    "discriminator": "5203",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:24:05.167000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940659043784073256",
                "type": 0,
                "content": "Getting the error\n\nfailed to resolve: could not find `ProgramState` in `anchor_lang`",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "725857328150085702",
                    "username": "hawk",
                    "avatar": "8e9a5fe90daca9beb908d171c78967a2",
                    "discriminator": "5203",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T17:23:12.638000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940650052752392272",
                "type": 0,
                "content": "anyone ever seen `method 'exit' not found for this`?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "416694602087530496",
                    "username": "Connor",
                    "avatar": "fc3901d8d32ea2f8a210c42e54d06b43",
                    "discriminator": "9319",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:47:29.009000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940641038777876520",
                "type": 19,
                "content": "what the previous api did is: provide a bump, we check that the given bump matches the found one and then you can use your given bump in your ix if u want. this was confusing because in instruction that dont use init, you could actually provide the bump and the check would use the provided bump",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:11:39.910000+00:00",
                "edited_timestamp": "2022-02-08T16:11:59.125000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940639590379814912"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940640371770273833",
                "type": 0,
                "content": "we didnt deprecate it but we put it behind a feature flag now cause of its dangers",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:09:00.883000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940640253964853288",
                "type": 0,
                "content": "check out th constraints reference for that",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:08:32.796000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940640217516355664",
                "type": 0,
                "content": "<@689817175900291093> <@832140329301311488> the new release also comes with some more init_if_needed docs!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "832140329301311488",
                        "username": "zule",
                        "avatar": null,
                        "discriminator": "4581",
                        "public_flags": 0
                    },
                    {
                        "id": "689817175900291093",
                        "username": "Pouya | qPools",
                        "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                        "discriminator": "0701",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:08:24.106000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940640024058298378",
                "type": 0,
                "content": "yeah okay, thanks",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:07:37.982000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940639946660806657",
                "type": 0,
                "content": "oh well youd have to import anchor-lang. if for some reason you dont wanna do that(?), you can use the underlying invoke syscalls",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:07:19.529000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940639805472112710",
                "type": 0,
                "content": "how if im not even importing anchor? \ud83d\ude04",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:06:45.867000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940639727567143032",
                "type": 19,
                "content": "yes! you can use those in a non-anchor program too",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "557854389935538178",
                        "username": "Watson",
                        "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                        "discriminator": "6287",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:06:27.293000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940639545857290290"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940639590379814912",
                "type": 19,
                "content": "you were never allowed to provide a bump. it just looked like you were. this is why we changed the api so now its clear you cant do it. you cam get the found bump with ctx.bumps.get()",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "474851811422109701",
                        "username": "Doomdoom",
                        "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                        "discriminator": "7145",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:05:54.585000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940517261276508173"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940639545857290290",
                "type": 0,
                "content": "yeah well here we are using codegen cpi methods, and cpi context",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:05:43.970000+00:00",
                "edited_timestamp": "2022-02-08T16:06:14.227000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940639369331638312",
                "type": 19,
                "content": "same as from an anchor program. https://project-serum.github.io/anchor/tutorials/tutorial-3.html#cross-program-invocations-cpi",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://project-serum.github.io/anchor/tutorials/tutorial-3.html",
                        "title": "Cross Program Invocations (CPI) | \u2693 Anchor",
                        "color": 4108156,
                        "reference_id": "940639369331638312"
                    }
                ],
                "mentions": [
                    {
                        "id": "557854389935538178",
                        "username": "Watson",
                        "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                        "discriminator": "6287",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:05:01.883000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940527790091022338"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940639019254054982",
                "type": 19,
                "content": "ctx.program_id",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "347689664855015424",
                    "username": "paulx",
                    "avatar": "f0f52417776819a379ec501b16d461c1",
                    "discriminator": "9059",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "653519450397474846",
                        "username": "Quiark",
                        "avatar": "e483c888b0b4b24b25905f4d987b7c85",
                        "discriminator": "1308",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T16:03:38.418000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940541516093464626"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940616555438428231",
                "type": 19,
                "content": "There's a comment on a GitHub issue which says the following:\n`init_if_needed is dangerous because it requires additional verification code to protect against reinitialization attacks and should therefore be used with care.`\nhttps://github.com/project-serum/anchor/issues/1191",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "127860289570865155",
                    "username": "sudb",
                    "avatar": null,
                    "discriminator": "8969",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [
                    {
                        "type": "link",
                        "url": "https://github.com/project-serum/anchor/issues/1191",
                        "title": "lang: put `init_if_needed` behind feature flag \u00b7 Issue #1191 \u00b7 proj...",
                        "color": 1975079,
                        "reference_id": "940616555438428231",
                        "provider": {
                            "name": "GitHub"
                        },
                        "thumbnail": {
                            "url": "https://opengraph.githubassets.com/ce26ed5d0e769a6211d5ce1797997e9786c6a98f2973d739599f7db18ccc8800/project-serum/anchor/issues/1191",
                            "proxy_url": "https://images-ext-1.discordapp.net/external/synOhzFWdoTQjdi4hI_fIkXhJUPnNEb5aEPQU3OdstA/https/opengraph.githubassets.com/ce26ed5d0e769a6211d5ce1797997e9786c6a98f2973d739599f7db18ccc8800/project-serum/anchor/issues/1191",
                            "width": 1200,
                            "height": 600
                        }
                    }
                ],
                "mentions": [
                    {
                        "id": "689817175900291093",
                        "username": "Pouya | qPools",
                        "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                        "discriminator": "0701",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T14:34:22.627000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940571098238562324"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940601097532342302",
                "type": 0,
                "content": "wow, 3 `init_if_needed`  questions in a row. this must be a new record!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "350632015852208140",
                    "username": "David | qPools",
                    "avatar": "19a8155e98df3f78d7a10548bc202b78",
                    "discriminator": "3335",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T13:32:57.175000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940599409148825700",
                "type": 0,
                "content": "it works in the case where it's a PDA account though",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "276678848404389888",
                    "username": "Lelouch",
                    "avatar": "c258f823f608a0d3d1420b883916c783",
                    "discriminator": "0621",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T13:26:14.633000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940599275509907526",
                "type": 0,
                "content": "or is it not possible to use SPL constraints with `init_if_needed`",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "276678848404389888",
                    "username": "Lelouch",
                    "avatar": "c258f823f608a0d3d1420b883916c783",
                    "discriminator": "0621",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T13:25:42.771000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940597492439986256",
                "type": 0,
                "content": "Hi folks! I'm trying to use the `init_if_needed` constraint on a TokenAccount; however in the case where the token account exists, and I pass in the token account's public key, the signature verification fails (I'm only using the token account authority as the signer). What can I do in this case?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "276678848404389888",
                    "username": "Lelouch",
                    "avatar": "c258f823f608a0d3d1420b883916c783",
                    "discriminator": "0621",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T13:18:37.654000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940586518244888606",
                "type": 19,
                "content": "Was also wondering the same thing. I have heard here its good to create two seperate handler than using init_if_needed. But looking for anyone to chime in and can give appropriate reason what's the problem with that.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "832140329301311488",
                    "username": "zule",
                    "avatar": null,
                    "discriminator": "4581",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "689817175900291093",
                        "username": "Pouya | qPools",
                        "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                        "discriminator": "0701",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T12:35:01.202000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940571033587572736"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940571838931693629",
                "type": 0,
                "content": "hey there, what are the fees on deploying on mainnet? especially for updating a program?\n\nmy initial deploy was around 5-6 SOL and now when i want to do a very small update (add a better error), it wants to charge me ~2,8 SOL\n\nis anywhere an overview on deploy/update fees?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "221877670290522112",
                    "username": "raven",
                    "avatar": "105e701c1bf5edab4b034bc1771c3705",
                    "discriminator": "1111",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T11:36:41.381000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940571098238562324",
                "type": 0,
                "content": "Is init_if_needed safe to use? I remember reading something about it being deprecated",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "689817175900291093",
                    "username": "Pouya | qPools",
                    "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                    "discriminator": "0701",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T11:33:44.786000+00:00",
                "edited_timestamp": "2022-02-08T11:35:13.667000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940571033587572736",
                "type": 19,
                "content": "the problem is that when I re-run the same function, I get an error saying something like ``` Allocate: account Address { address: 5YRmcepTnePenofZJX9uRGCCRWZVmhMrMu3si4XBjVPr, base: None } already in use ```",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "689817175900291093",
                    "username": "Pouya | qPools",
                    "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                    "discriminator": "0701",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "474851811422109701",
                        "username": "Doomdoom",
                        "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                        "discriminator": "7145",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T11:33:29.372000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940367155369762826"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940541516093464626",
                "type": 0,
                "content": "how to get the program id of current program?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "653519450397474846",
                    "username": "Quiark",
                    "avatar": "e483c888b0b4b24b25905f4d987b7c85",
                    "discriminator": "1308",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T09:36:11.853000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940540776897728512",
                "type": 0,
                "content": "Is there any reference for a minting NFT contract written in Anchor?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "912720112828690483",
                    "username": "coolperson101",
                    "avatar": null,
                    "discriminator": "0341",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T09:33:15.615000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940529177025712198",
                "type": 0,
                "content": "which can be invoked from native solana program",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T08:47:09.990000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940529099422703616",
                "type": 0,
                "content": "something like program::cpi::instruction constructor",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T08:46:51.488000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940529051460849666",
                "type": 0,
                "content": "is there a codegen for instructions based on anchor accounts",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T08:46:40.053000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940527790091022338",
                "type": 0,
                "content": "Hi, how can i invoke anchor program from within native solana program?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "557854389935538178",
                    "username": "Watson",
                    "avatar": "9f1508fea709a442e46dd605cfb20ebd",
                    "discriminator": "6287",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T08:41:39.319000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940517261276508173",
                "type": 0,
                "content": "Why is providing the bump target with init not allowed anymore?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "474851811422109701",
                    "username": "Doomdoom",
                    "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                    "discriminator": "7145",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T07:59:49.054000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940474270029598730",
                "type": 0,
                "content": "Thank you \ud83d\ude04",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "364412379599077376",
                    "username": "Berlin | Terra World",
                    "avatar": "606f9f612f17c9854f2126da793a5fb7",
                    "discriminator": "7528",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T05:08:59.142000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940473971386773514",
                "type": 19,
                "content": "Nope, only the program from which the PDA is derived can sign for it. So program A can sign for addresses derived from program A, but not PDAs derived from program B even if you know the seeds+bump.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "134416332509675520",
                    "username": "cqfd",
                    "avatar": "1843b8189caf8a8252ae7c78becad4ba",
                    "discriminator": "6977",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "364412379599077376",
                        "username": "Berlin | Terra World",
                        "avatar": "606f9f612f17c9854f2126da793a5fb7",
                        "discriminator": "7528",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T05:07:47.940000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940462506541985792"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940462506541985792",
                "type": 0,
                "content": "Can I use PDA as signer of invoke_signed in other programs, if seeds and bump are known?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "364412379599077376",
                    "username": "Berlin | Terra World",
                    "avatar": "606f9f612f17c9854f2126da793a5fb7",
                    "discriminator": "7528",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-08T04:22:14.508000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940384180309725184",
                "type": 0,
                "content": "the answer is yes. it won't compile if they are in the same module because the macro expands to the same enum name. if you namespace them separately, the numbers will collide, so you should specify different numbers for each enum. the idl will only get errors from one of the enums",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "764989581124042766",
                    "username": "drew",
                    "avatar": null,
                    "discriminator": "5215",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T23:11:00.079000+00:00",
                "edited_timestamp": "2022-02-07T23:13:33.079000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940379115985457223",
                "type": 0,
                "content": "what happens if you declare multiple enums with #[error]. will the error numbers collide?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "764989581124042766",
                    "username": "drew",
                    "avatar": null,
                    "discriminator": "5215",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T22:50:52.650000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940367155369762826",
                "type": 19,
                "content": "Anchor always assumes accounts are initialized, unless you are initing from the program.",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "474851811422109701",
                    "username": "Doomdoom",
                    "avatar": "bdbc43cbc072753755d1a470d2b6cf06",
                    "discriminator": "7145",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "689817175900291093",
                        "username": "Pouya | qPools",
                        "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                        "discriminator": "0701",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T22:03:21.017000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940318574776582155"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940326013907386388",
                "type": 19,
                "content": "Could be wrong but I think specifying `init` in the account constraints is the canonical (and therefore safest?) way?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "127860289570865155",
                    "username": "sudb",
                    "avatar": null,
                    "discriminator": "8969",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "689817175900291093",
                        "username": "Pouya | qPools",
                        "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                        "discriminator": "0701",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T19:19:52.128000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940318574776582155"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940318574776582155",
                "type": 0,
                "content": "Hi! What's the safest way to check if an account (pda) is already initialized and only allow it if it isn't yet?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "689817175900291093",
                    "username": "Pouya | qPools",
                    "avatar": "54ef4f83e4e74508625fe10a98c8970a",
                    "discriminator": "0701",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:50:18.501000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940318521601167391",
                "type": 0,
                "content": "worked \ud83c\udf89",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "794207168211058719",
                    "username": "bezie",
                    "avatar": "ae4461770351fc824b876b2df0a33e53",
                    "discriminator": "8598",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:50:05.823000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940318324468895834",
                "type": 0,
                "content": "let me try updating, i'm pretty behind!",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "794207168211058719",
                    "username": "bezie",
                    "avatar": "ae4461770351fc824b876b2df0a33e53",
                    "discriminator": "8598",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:49:18.823000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940318132365582336",
                "type": 0,
                "content": "also, thanks \ud83d\udc4d appreciate the help",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "794207168211058719",
                    "username": "bezie",
                    "avatar": "ae4461770351fc824b876b2df0a33e53",
                    "discriminator": "8598",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:48:33.022000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940318030980849674",
                "type": 0,
                "content": "what version of anchor are you on?",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "794207168211058719",
                    "username": "bezie",
                    "avatar": "ae4461770351fc824b876b2df0a33e53",
                    "discriminator": "8598",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:48:08.850000+00:00",
                "edited_timestamp": null,
                "flags": 0,
                "components": [],
                "hit": true
            }
        ],
        [
            {
                "id": "940317401206099969",
                "type": 19,
                "content": "before this line I also have the following:\n```\nimport { Program } from '@project-serum/anchor';\nimport { Bridge } from '../target/types/bridge';\n```\nwhich, looking at it now, feels like a bit of a bodge, but hey it works",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "127860289570865155",
                    "username": "sudb",
                    "avatar": null,
                    "discriminator": "8969",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "794207168211058719",
                        "username": "bezie",
                        "avatar": "ae4461770351fc824b876b2df0a33e53",
                        "discriminator": "8598",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:45:38.700000+00:00",
                "edited_timestamp": "2022-02-07T18:45:57.033000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940316551788240956"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940316551788240956",
                "type": 19,
                "content": "anchor.Program isn't a generic, no? casting to program gets me the basics, but wondering if i can lock down to my idl",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "794207168211058719",
                    "username": "bezie",
                    "avatar": "ae4461770351fc824b876b2df0a33e53",
                    "discriminator": "8598",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [
                    {
                        "id": "127860289570865155",
                        "username": "sudb",
                        "avatar": null,
                        "discriminator": "8969",
                        "public_flags": 0
                    }
                ],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:42:16.183000+00:00",
                "edited_timestamp": "2022-02-07T18:44:52.488000+00:00",
                "flags": 0,
                "components": [],
                "message_reference": {
                    "channel_id": "889577399308656662",
                    "guild_id": "889577356681945098",
                    "message_id": "940312997224644709"
                },
                "hit": true
            }
        ],
        [
            {
                "id": "940314502249975849",
                "type": 0,
                "content": "also slightly tricky thing I'm grappling with: if I want to pass an account to Program 1, which will invoke Program 2 via CPI which is responsible for init-ing the account, do I use UncheckedAccount in Program 1, or Signer? As far as I can tell, I'd ordinarily need the account to sign the instruction to Program 2 if I was invoking it directly, but I can't seem to get it to work via CPI",
                "channel_id": "889577399308656662",
                "author": {
                    "id": "127860289570865155",
                    "username": "sudb",
                    "avatar": null,
                    "discriminator": "8969",
                    "public_flags": 0
                },
                "attachments": [],
                "embeds": [],
                "mentions": [],
                "mention_roles": [],
                "pinned": false,
                "mention_everyone": false,
                "tts": false,
                "timestamp": "2022-02-07T18:34:07.535000+00:00",
                "edited_timestamp": "2022-02-07T18:35:49.376000+00:00",
                "flags": 0,
                "components": [],
                "hit": true
            }
        ]
    ],
    "analytics_id": "06ee70dfbff33d056bb813833f6dc1d5"
}