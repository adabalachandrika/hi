1500 is nuts. Good to know
And yeah, looks like that distant bump is 238â€”so had to do 18 attempts = 18 * (~1500) = 2700 units. Cool!
Yep
Yeah, it's certainly rare but you can get some edge cases on certain PDA's where it takes a lot of iteration to get to a valid address. For example:
```
        let pda_pubkey: Pubkey = pubkey!("Et36LeaAFQcyuuWWTDfDznhZ49VC4jUAJE2AForBzcuf");
        msg!("Bench: FindProgramAddress for close bump");
        solana_program::log::sol_log_compute_units();
        solana_program::pubkey::Pubkey::find_program_address(&[b"qgjnnkdpbjr2o2e7"],&pda_pubkey);
        solana_program::log::sol_log_compute_units();

        msg!("Bench: FindProgramAddress for distant bump");
        solana_program::log::sol_log_compute_units();
        solana_program::pubkey::Pubkey::find_program_address(&[b"qgjnnkdpbjr2o2e4"],&pda_pubkey);
        solana_program::log::sol_log_compute_units();
```

Yields 
`Benchmark: FindProgramAddress for close bump - 1569 compute units` and
`Benchmark: FindProgramAddress for distant bump - 27067 compute units` respectively
Yeah, each call to create_program_address (which gets invoked on each bump attempt in find_program_address) uses 1500 units, so they add up pretty quick: https://github.com/solana-labs/solana/blob/master/program-runtime/src/compute_budget.rs#L29
5k for findProgramAddress is low, but variable. I've got examples that use 22k compute units. Just depends on when it find a valid key/bump
I agree, the only ones I found a bit high were the string conversions to and from Base58, but that's somewhat expected.
These numbers seem really high, particularly 5k for`find program address`
you can and should avoid Pubkey::from_str using the new `pubkey!` macro or using a `declare_id!` macro
https://github.com/solana-labs/solana-program-library/blob/master/libraries/math/tests/instruction_count.rs and spl has one for more number operations
https://github.com/solana-labs/solana/blob/0a3a18744fe575c0cae66cf68abb5d3d12704565/program-runtime/src/compute_budget.rs here
because they keep a close eye on those
there is a crate for very basic operations


///////////////////////////////////////////////////////////////////////////////////////////////

The consequence is that you should always try to use the 1.2 million transaction instruction option if you're going to do a lot of these things
https://github.com/schwarzbi3r/solana_computes/runs/5500313212?check_suite_focus=true
Just fiddling around with it, I was able to get it to ~34500 compute units (bump=233). This would be extremely rare, but not an impossible occurrence. I'd assume a worst case scenario of 35k compute units, which would happen every 1 in 10,000,000 occurrences on average. The problem with non-deterministic code in a Solana contract is that you end up having to do some guesswork on compute unit usage and potential for exhaustion. It's an interesting problem.


///////////////////////////////////////////////////////////////////////////////////////////////

https://github.com/0xPratik/pyth-anchor-example
Here's the Repo
Got it working <@!134416332509675520>  Will share the code here
Got it <@!134416332509675520>  that syntax got depricated and `let price_data = pyth_client::cast::<pyth_client::Price>(&pyth_price_data);` This piece of code does not works. I am trying the new one will create a gist and share it once i get it working. Thanks for the Help <@!134416332509675520>
The extra pyth program thing is just a random testing thing, ignore it
Trust me, they use pyth ðŸ˜›
It does: https://github.com/drift-labs/protocol-v1/blob/master/programs/clearing_house/Cargo.toml#L21
This one does not user pyth-client library. I wanted to look at one that uses pyth-client
Drift uses pyth, can take a look: https://github.com/drift-labs/protocol-v1
Hey <@!134416332509675520>  How can i use pyth in anchor i cannot find any good examples can you refer one please.


///////////////////////////////////////////////////////////////////////////////////////////////

?
whats up
that's my github repo
<@!783002095871066132>
Anyone know of a good tutorial for minting new tokens on anchor


///////////////////////////////////////////////////////////////////////////////////////////////

https://github.com/project-serum/anchor/pull/1636
Nice hope it gets merged
I should have a PR submitted in a few hours I am hoping.
I Need it too ðŸ˜‚
yeah i needed it too lol
That would be very helpful
Just so happens i am in the process of writing an example into the anchor repo as we speak.
Where can i add that Ser
you also need to add security checks to make sure you arent getting a spoofed price account. Have to use the product account for that.


///////////////////////////////////////////////////////////////////////////////////////////////

Nice read about how closing accounts in solana can be tricky/subtle: https://medium.com/@contact_94841/schrodingers-nft-an-incinerator-spl-token-program-and-the-royal-flush-attack-58e4ce4e63dc


///////////////////////////////////////////////////////////////////////////////////////////////

Worst case could always try looking here: https://github.com/project-serum/anchor/tree/v0.13.2/docs
Does anyone know where I can find  the docs for anchor v0.13?
I genuinely thought about the question of why data zeroing ain't present in SPL token program in my initial days of learning Solana (through <@!347689664855015424>'s tut), and then neglected as "meh, I'm noob, they are Solana who am I" lol.


///////////////////////////////////////////////////////////////////////////////////////////////

Hi is there any resource describing how to create escrow and transfer to it some sol? Every code witch I found is outdated. (rust)


///////////////////////////////////////////////////////////////////////////////////////////////

https://github.com/project-serum/anchor/tree/master/tests
anchor test folder
Is there something like a list of open source anchor projects I can use to learn from, or something similar?


///////////////////////////////////////////////////////////////////////////////////////////////

Ty, hurrah!
ack
Can we please get the Docker image for v0.23.0? It's not published yet. https://hub.docker.com/r/projectserum/build/tags


///////////////////////////////////////////////////////////////////////////////////////////////

any one has any recording of it, or any way we can get it back. ðŸ˜¦
F
oof..looks like twitch deletes them after 14 days..which I didnt know
<@!347689664855015424> is there a vod of the anchor twitch stream from a while back somewhere? Appears to no longer be on twitch


///////////////////////////////////////////////////////////////////////////////////////////////

Maybe there is something useful in their code
<https://github.com/cronos-so>
There is some new protocol that is supposed to be able to do cranks as a service
Anyone familiar with creating crank functions (background jobs for solana) or have any documentation/tutorials on doing that?


///////////////////////////////////////////////////////////////////////////////////////////////

Any possible re-attempt to get another video explaining the anchor internals, to replace the now deleted video ðŸ˜”


///////////////////////////////////////////////////////////////////////////////////////////////

Ultimately I'd love to do away with this and get flame graphs

This is me mostly scratching my own itch, but I've been doing some basic benchmarking on compute units for various instructions and I ended up building a simple benchmarking tool to parse Solana logs and make it easier to benchmark stuff - https://github.com/schwarzbi3r/sol_log_bench
Are there any tutorials of how to make payments to an address from anchor?


///////////////////////////////////////////////////////////////////////////////////////////////

